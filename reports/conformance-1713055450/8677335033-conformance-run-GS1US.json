{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fa26c7e7-0a83-4ffe-8c84-1fa042e365cf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c72f803e-8dbf-47c6-9595-290276c9eee6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfc7afd8-09bb-456a-82de-fe40ceb45277",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8c9069e0-533b-4633-8d4d-aef3899d52d1"
                }
              }
            ]
          },
          {
            "id": "a5ae709f-ebd7-4e23-ae86-446d5da44bbe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62a6888c-beaa-4c81-b12b-06c74495c0c9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f9a4527-85ef-4940-ad6d-1c7950e58654"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1b73e08f-bb77-4077-9973-c36e76cf10bb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e61d6975-c5e0-4e4e-8e26-7dc6ad3c4096",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa547f3f-c3ee-4cf9-9720-ccdc989a7054",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8032b9a-6bed-437c-a07b-bed6e785fde8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8324dce-9715-4298-84be-b36375af331e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b94a856-4116-4180-b2d6-ef3881e0b347",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee076cc1-cfbb-41b9-ba11-85c62315ece4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca7b035e-98ed-4005-bdd7-ca622b633386",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec991645-58cd-4682-b746-9607f0484277"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d908df7e-1d62-4bc4-8234-a0c0ef039811",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b9912bf0-a507-431e-9f95-0511cc238592"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4ed3cef-b6bd-480b-ac48-faa12aed31f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a55ac0d-c7f8-42d7-aa4c-de4ef9f83cb8"
            }
          }
        ]
      },
      {
        "id": "82387ab7-5f9d-4be7-b12a-dd1f0a461d49",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "450fd952-636c-4e7d-8100-e7f685008033",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcdbdb68-7e87-4985-96c6-5f7020572f2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cdb88f45-ac42-4282-a66a-49ea381803b8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661ef83a-75b8-485f-b53a-2af537a4adc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dc965ce-933a-4d6d-b7cd-576fe616e4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f91195-b7b2-4ca7-ad9f-0f3bfb3e88fd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6e9bb8-e4a2-4e0c-9b98-8e3d1b2f7242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9958002-a2f0-4887-b07b-c73e66c91769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84baa7d-d8b8-4ae6-898f-65e7b9550da8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9e6d30-9e5b-4afb-9354-ff2072bbca29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b8b0544-f252-44c3-9f61-5c754959f0b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab0b1e63-b38e-47e7-9ef1-493e21731694",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55e4612a-f3e2-4d74-8825-56e913b94a4a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a26ec7-b8f1-429f-ab3c-5fcb40a7db2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "283da97b-ace8-49c9-942a-73d0b14cf1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2997fb-a1a6-4086-9427-ac19aa4f441e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba13e44-3a9a-47bc-b6fb-66ea119d9611"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "439902ab-8653-4693-b915-48337028d3c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "913e0193-84d8-4657-b526-c41dbbfb1956",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cc56412-f8b1-416c-96be-7aea9e616f02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ca6dbd7f-d517-471e-9e59-38848918c4e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebcfe028-3abb-4f9f-b9a3-5a71e9208d50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0e2a0ffe-5979-414b-93e6-f56ad9215983"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33be770e-f8a9-4d88-ab2d-3dac837f5a44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e32d2f7-adbe-4d10-bf76-c8e5d769fcb9"
            }
          }
        ]
      },
      {
        "id": "0f2a00e5-1118-468e-bf07-ac278ec5f490",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3002ccc2-890f-44ab-a4a5-388f7aeee130",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4ff1d6f-8e07-4628-ae99-111c64f776b5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "11f53e0e-f836-4008-a10d-bd7db71c3311",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b26eca-eedc-4cc2-8369-019f84945580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13f7dfd-bc76-455d-b18e-bac13cbc2126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b52b59-7d88-4d56-baa8-fd453d741866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbb700a9-e02e-4c9a-b91a-192017258d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c245d52e-4d9d-42c1-a53f-d7b9c982705f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b93ca8-4360-4a2e-9b6f-5f92cd133232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb97f5d-1c2d-404a-a7af-00df37ca3ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016ee952-89a3-48b3-9477-29bd4e6c1b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34b818f7-7733-41f8-9480-45181c27bcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0693cbf2-3ecf-477f-a8a1-c8fc8273fdf4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6741d1-cdec-47c0-8d95-d77daf0bc25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c947cdf-fd70-4dc2-83fc-7163bfa4cc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8cf915-26e6-4c6f-b538-9c9143e20271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b15494e-5319-428b-85a5-eef7c44050a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff73304-ea62-4ffd-aefd-b85af7813f8d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242fa390-ddb6-465e-b300-3c925dcc9174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e8d5e6-2478-4c7e-8537-ebc22ef18461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd44341-e8a0-486f-b51a-d0dff54b20d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7612c02-19c1-45ab-8775-3976667866ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5d44aa-39b4-4955-8c45-6d48fe0964ca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ba9231-e8da-425e-afd5-d0e6f1de9611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474543f9-55dd-4b66-b79d-b3dac94fc631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fecb6f7-3643-40e8-bcd5-08474e1bff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af41b62b-3b75-48c2-86b6-e48c892a48a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a767f-c3f8-4217-9b19-3c27d06e98f2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64333d39-229d-4c12-a779-1b8c4b73882e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86c18b0-808c-49aa-94c0-5fb5f41ba370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02237f5-3395-49d9-a993-dc78ed4831e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6503924b-2001-47e4-8fcb-8d818e5179c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f0e23b-4036-4356-a303-197704a07ce7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb8e845-78cf-4abe-a864-0c99be2348d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17566a14-63f1-44b5-8a37-db60b8fa9852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130909e8-9d90-445b-8c5a-f76afe6ff37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0223c480-5779-4b7b-b91f-dcb47d05739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b658b437-a6a0-4b75-bd00-a779266d3578",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4441d5-27d4-4954-b39f-c76df66cf759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5f8b7c-7b4b-41fa-9648-d84c166ff000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828d9efb-1c31-47bb-a1e9-0d3241bf0d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82b15070-6e87-44d2-9e21-09cd387a3987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1336df0-60f7-4016-912d-669896daf6b0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c948ca5-52d7-4d5e-9afe-6e1541ff415a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920a17a7-6460-4ef0-88ad-7468960e32ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2090ae6-efce-42f5-94ab-716d7d9c5a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24b88937-cd65-4550-bea5-c614875689c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fa5dd5-5ffe-404c-b5cf-e2c9082a405a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d59366-a32e-4ea0-bf7e-bfd26f40a4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab000993-50a9-4cb2-8cb6-59d5e69a968a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6fd90d-8437-4d3f-a6cc-3e313a2fc879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c425f6cc-dbf3-46cd-b970-f5783d74541d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef18917-6690-4908-91e9-1a3005703309",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8616d4-7a57-4892-be3e-cc1f1e15a1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e8884d-e8c5-428c-a207-1dc030217be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfb8ed2-1468-4658-a160-a183e78021b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a88260f-b9ad-4f1a-8a96-9679c2366a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f716f8fb-c5f7-47bb-a986-d0edf0319fcf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b42b69a-5bd5-4cc5-b30a-656c89fbeeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1ae7f2-4a1e-43db-a2c5-fff897b567fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdc1d29-126b-42c2-b668-a3e5327716d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "609ea486-a599-4ae5-9cd9-9dc68a239ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b296ee41-9880-40fd-b5b0-a4d613b6c56b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6887612-4593-4670-accf-0f3fb5c1799e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50dfdaf9-a9ce-4679-a23a-efb0be67547c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac15b585-aa7f-44bb-abf8-bc6be6ea5459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1634c0ac-5334-4a04-a9b3-64deaa20d31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a4395e-c76f-4ecc-84b9-8616dbd7956a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cccd78-7e03-4a2b-a80a-fcb793b5eab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b37211c-ac43-4b26-957d-4cebe8d9a331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661cb6d4-40b8-4ab8-ab6c-fda1ddecadfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6e1c7be-88d8-4c94-b82b-d4f1e1132c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80f549e-7ce6-47f2-a7b8-75f63c4002ed",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8670cdae-dcfe-4cfe-85ba-1cafc279ee0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec293dc-37a6-46d5-bb4f-d110d57feaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df908ce6-d7ea-4b52-b2e9-b583c489878a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68bd5c96-374d-4551-97f7-8e1a65a8a9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9750621-7fa3-470d-b98b-e1b83aa1dacb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bec283c-580b-4c28-bc4b-3a665ce101d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a4189e-7ba8-48c9-ba01-98250e0a2467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd6590b-ccdb-44d4-a3a0-8a0bc3c1680f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2929afbc-6e51-4635-bda7-c6131d0b08aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82336141-5978-4272-8a7a-d6455f6897f9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9886d8-05c5-4df3-a260-447561966f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca2c5be-c86f-4da9-8e9b-047ae8868c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f404c381-416c-4dd5-b116-dc0403f04ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e5f828a-92fb-4973-b57a-e6b229e92e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06e24e9-e806-4d44-bfeb-752e190d9613",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2798bae-3997-4e65-b486-1c9aaa23bffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78dbd4da-0547-45fa-aa81-358005319fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c63fac0-6889-4e77-9443-1adc70a68dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7074d681-e808-4362-84c0-cb9143a133b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c70770a-5e02-494b-83fd-1582eefebf0e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9409a9b-ce80-412a-82a6-b309c9c612d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23c2235-bded-4480-8b84-3f594fb491c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813f2698-45a3-44e8-9ba6-fafdf4e32960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d6259c-64fb-4796-961d-d0b3a0d50ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9734d95b-0c55-42ff-a06e-667e732c43aa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f591892e-b3bd-4b7b-a80b-9a2147587abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b85598-121a-4f09-bcdd-4eefe04c794e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8f0a75-e6b9-48b6-a283-525f53e2cbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6a84a7-e8e4-4308-8037-92adb96c0cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70327e89-bd02-443c-9933-df8ce33c2eee",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c278ecd8-fffd-4df8-b1b1-22f3968d6baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b642027e-9520-4c0b-b418-211804978101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb53d5e-3988-45a4-9689-17393da25748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffec8971-3cdd-484b-8ba7-c7a7de20c2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08351c4-f605-4dbd-ad8c-00e2e38d315d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05f269e-b10e-433e-a6f5-d04b2c25a419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62073c4f-460c-466d-92dd-bc9af5757f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539870bc-2309-4961-8b5e-10a061510cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "584212c6-0049-421f-a5eb-4192642bfc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b26077-ea7c-4975-bdac-acb3bbe1a6f4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1871bb-693c-49b3-a864-a2410672d5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f3b005-c98b-4e5c-9c7b-9cebbd554c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0a27cb-04aa-45f4-87f0-949d0c5ec44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e41898f-bbb5-4f40-9ff8-82ae612a8d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafa6844-b790-4a70-885e-afd8a5b3f936",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8650df4-6c81-4acd-8538-9dffa02d01f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f35219-adbf-4c6d-a72a-8218348db722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789d01a4-20a3-4464-915d-4a68b705dc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67b9c2b-6513-4a14-9ae2-39761105fb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046e0d0b-d66d-4255-8426-2f28815ed574",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ed9a1f-7d83-4883-bab6-a0df4d810ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbeb3f9-a19e-4170-8aae-d2a26e045f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f021336-97dc-4815-8600-a953fecb5fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "333f7c39-c9cb-4c78-a00b-0a051a2c9dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661779d7-c182-4888-9d1f-ab59164f8f7a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bda4d94-44bc-4662-bdf7-f35575a635e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386b5dee-a20c-4e8d-80f1-55ab6ecf4d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8be8f1-572e-4a19-9211-f093348f174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38d1bf3f-8ea5-42c3-aab6-ccbaf23db967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ed816e-7b56-4dfa-b321-2b493668be4b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8a9c75-b54a-4fe6-a4a0-69e3e2bcb7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafadd4e-0d57-4acc-bce3-632d9a7d0185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07aed395-583a-4835-86e1-fc851f185df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a770788-39ba-4196-835f-21ae34c15b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170046a5-6a7d-42d8-941c-f49f6882ff16",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d24b19-3b79-49cc-ba1f-ffe4121a9e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc814ba-153a-4e26-b2d8-411d23448089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31446786-b380-490c-a167-df29fd0bce72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a66a9ad6-49c2-49d4-8fc7-fdae1d6035d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ed4173-18c4-4fc0-a183-d1a8749adc5c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cb3252-4f8e-4f7c-9f8a-dfb6e1da5069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c0351a-cec3-449e-a43d-e2b66eb851ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23577d5-c555-4c1a-baba-93c16cdc4eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93311b61-05c3-465d-b916-516ef5282e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe655db-5bf6-43d5-bd20-dcc011f0ba2c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be28262-a69c-4c22-ab4c-bc7549b8677a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd7fbaa-38eb-488c-bd7b-6f84314e065c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbf43d0-0c64-4a6e-88fc-1677cd6d8bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bec234-c098-4e1d-969e-373faa6e8355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4050e3b0-9127-4fe0-aa60-164744e69c14",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfb119c-7c00-4a83-8a86-437a3789294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9525056-5ec7-44b9-a9b8-4c6c835af572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a1f24c-0f5a-4891-8b91-8b9f27428dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c006f3-2295-455e-a71d-a6abe16edd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544652c3-c942-4e1d-9b88-1c9b530895f4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa91cd3-ef2c-4891-a44d-41b60d36f63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d59853-a991-421b-a19b-889a13ed3657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f7570d-28dd-48f0-9093-44d3d63b57c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "788dc92f-3f9c-47c3-bb4d-9d71aac3ec44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfe5719-74a8-46e8-8884-4ed0622904e0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdcc761-d0ab-468a-b375-bb20457debaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c163f3c3-6d15-4166-a256-a168e7781af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2fbd99-3afe-404d-b2ff-88ebd0bc3184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f21e0e-a83a-4c30-9851-7a58533e276b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6e435c-0938-4441-92f1-fff438b845e8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b645ff-2973-46f2-a1c3-09fb77249d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbb5b75-bf15-4058-9ac7-b4bb8eab660e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e667f3-6070-411d-b13b-74e46bfe9eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f7f16b-7b6c-46e1-9ba4-7544fecb915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfc89b6-c501-47f6-8592-48a6896c484f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011d913b-d43b-4251-bfbd-956d9299aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cd57b3-3e98-486d-b931-ef8a3f680323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6a5526-f699-44de-ada5-8604caf5aaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "63cc11e6-ad59-4c21-83d0-7adbbb1900e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a356bfa-921b-4d25-a1c9-23304abc0188",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436f7f38-8fd6-4a16-b840-83a4986ac24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e659c76f-7ab7-42e7-8452-1cbb7ea045e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfab30dd-0151-4804-9bf0-9b4a07e375ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81528cbb-9013-4a82-8905-b1e5a81d5166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95983e5-d602-44e8-8d91-ac23e551934c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204e41c7-d3f4-49e0-83e6-4838540966b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39142fe-cc7d-42a0-b3d5-bba4efb97380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f9b29b-abd8-4228-87c6-7560f082b154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc09bee4-572c-4187-bd13-11407a00eab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327e938a-3961-4dc7-aebe-96e39242b337",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6421f57f-569a-4817-9369-f4c9a57c3251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c5c01d-6fa4-47b4-9a50-b73824b25047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc2f345-5721-4bed-917f-aba17b19c164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6567b4d-2666-4e0a-971b-3625435d1bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b889df06-b444-42e0-9c76-5962791fda68",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203e9abc-6a27-4e30-89ca-6d544df8973d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41baf35-5998-4e88-b26f-5d975c8609f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121fa74e-affc-4842-9b71-eef6150015ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d730e7-53e2-4bdd-bc06-e3b544600ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48681cb7-295e-483d-97f4-40b089e30f0c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341abf59-be5c-4f35-a441-a8ee174f9c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd585ee-8b4c-430d-8d38-2d34538df92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904e7d22-4990-4aa6-9f32-b0df9fed25a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9615ef2-e2ba-4945-b3e5-86bfaebc9f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee09b21e-0c49-4198-87d5-ebea4a885f38",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc17ebdd-991e-465c-9c99-0481455ef42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9c38ff-0675-40a7-8ecf-8d77cc092b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1707f8e-bc0a-44ee-8bd2-326a75cf141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef43d8bb-7643-4c36-8ca2-0b2673b5661d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e5eeee-b6c4-4a75-9221-05380e7c5b2e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fff58db-e22b-417c-b02a-897a7a45f05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef9fea7-034e-4afe-9a53-777a47911d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c4f27c-90af-42c3-8a9f-63366daf3aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb5ecb8-fa7e-476d-9c88-79add506081d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71caa439-6de9-465a-9161-0ce1192f3ae0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388332fc-622a-4c98-9321-e3b5b63f0df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c134fd82-25ce-44b3-a6f2-9c404edd05e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8115bdb-d345-4c90-a001-591a1ccb07cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9b65e5-b305-4941-a7ac-548e1271f40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6342481-876f-401a-8c1d-a93e7b730063",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c8a4d3-0b4a-4e55-9f3c-7acc475e1094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fbfe7e-8652-4a75-8c24-4d48e4ba16aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12714b44-307f-4fd3-a422-df78ba27483a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3cb62c-0cb6-4fc6-ab3e-53bb5605bfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4586e9b2-ca15-4f21-85f6-fa9ff83a36a9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0c1729-602c-4137-97e7-9b8d5710b3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5b2eaf-c762-43a0-acbe-1bd36ae91a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dfb27a-e777-453a-afed-bbb1bba0bec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa4bbaf-d7a3-4526-ace6-beae78311efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9503de4-164e-44e7-8d2e-3e337e966e2b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a05f5f-24ac-4e18-9a35-c0e357c07618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a04eca8-3129-4f5e-aa99-0b8a253e1dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1b9099-ca94-4f83-89e2-d59d29fcb17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa587b6d-ad0f-4a83-9797-adba17b50921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c6839b-cc77-4be7-9381-2f77696280f8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291df180-3c7a-4fd2-a4a8-a91a15340d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174dc4f7-9a4e-490a-ab6a-528f561c477a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d516b1fe-48a5-4715-a017-61b6b7d7454f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "922b3abd-563a-4563-acc7-373f8576d8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82ef7d1-716d-40e2-a8c4-afc89f9f1a57",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb55e50-54ec-4d9c-a109-773cffadfff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2ced19-7c80-480a-8d1d-b997a9b4943d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a09f4bb-672e-4a85-ad92-5819ae8c51a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec97908a-1b6f-4ece-921b-07e55b794fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c06067-a789-4cb6-9227-bf1dd6da4200",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b287d2-759c-422c-aa22-db8fe5f1ad0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a630a15-4726-4d4f-87b7-24e0d1aefff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f910462-dea1-4621-a1a2-73e1753b1ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4d00f0-b37a-48fa-8eb1-ec1274edada5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8f5b95-daa2-4bf3-bdf1-c53c2033a3c2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4430ad-cd1a-4a57-a182-cf9627b39031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53066282-e20b-48ba-aa0f-a07958afa809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f8d708-245d-48b4-97c5-3423148b41fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfba8efa-a8e0-4ac2-a753-cfabfbfdd443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623c5ede-e83f-4ca2-afa4-a53a3b0061d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa8a8f4-c19e-453a-8902-8948a7ff14d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b5e442-b711-4e99-9dc3-f607e4d1f050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9516a57-972f-47aa-bbc6-15c1d8798887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f49a1a-da33-4c35-95df-f1020291f26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3921285f-3a0e-42da-a4c8-649cb97a5a46",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cec2029-c173-48ed-b78f-abd79a4f154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161db518-5827-4d15-9ee7-9bc6a822524f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4744c214-5f06-4405-8010-0dfc4de57c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "842774cf-81e3-4ba1-b0f1-0c13f6c924ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c001312-4918-4b44-a8cb-2e38151714ea",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e1a5b7-4158-4ce2-898c-3144fb987b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb9f718-b92d-46c8-a92e-82b9a07804e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b7307a-0869-46d7-8b95-324d4e6c34b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e522d923-674e-4e72-85c9-845b3b01bb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50281168-0efe-4b7e-b07e-726fb1810fa5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d342c87-b097-4443-bd22-8fda741b41dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3283083-bf3f-4f5e-a503-a548306ea0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f6ec7e-5434-4a44-9752-a90ac7dfab90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ba6a08-ad83-417c-a553-69b6163d2c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a36fe6b-a09c-4234-b1dc-92d0a2830082",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65394d32-06d3-41bd-90dd-14656b5507c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d0da1e-27ee-4e90-8730-3e5533d04136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169b14f5-6da1-4a84-92d7-2d9564590d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1743823-c9d5-472c-98eb-1cbf8a3499fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c50a81-05ef-46d7-98d2-f8479e2bfcfe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602c60a8-4893-4d0d-8258-359b37524b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632561ca-b6bf-4019-8b48-6e549f82bc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47082623-cfb4-4f21-a4c3-5ceb5b21837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a9be71-4f39-4f8f-848a-7fe7dfd384c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e08e4f1-d86d-4c49-8fe1-be754c0ffeae",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab95fca6-3ecd-4afb-bdc7-f5ccd2ac1a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada0d055-e89c-4eeb-97f4-29206a8410dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6551e14-2014-4cf6-8ab0-1e85796e2d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "662a83ed-ba8e-43a3-9ab6-b377d67365ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f255aa4-d864-4b1d-a918-d21ffa45e444",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6111c0b-c993-40f2-80ba-4093d2fdc35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d9533e-de6f-4fbc-b115-519901c94db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427d0729-eeba-4d63-b031-9e8f93446f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "398ab173-9fbd-4b73-a4e1-4952256abc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a4c7ef-84c1-4f1f-a026-1d5b4e048752",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96204a21-e018-4528-9f5f-081fb6bd0c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47bdda4-6321-481c-9bf6-d626068bf600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3150ac52-9fc9-47de-8b14-bc15d0e70301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bccf4cbf-8b70-41ac-a2a4-31a0b34e4a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab982a4a-855d-479d-88a2-7218b856efb2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887c243b-84d8-419d-a3ee-edb174ffe633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d35b141-55f3-4761-bf4d-adf17b2fe443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df59b856-efda-40bf-b441-c525ab833f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1b0b9e-efd8-4905-87de-fb8d6f875165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8784b86f-0b58-45f4-985e-e7a470dc4c8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286a508f-c9e6-41ec-a6fe-c1a9b005c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971f519b-98f1-43d9-9eb7-99d9af5a76d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5762a38f-0a54-451a-9c6a-7faff79b8969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "71b54631-c3cb-4d45-a657-7271291215a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa4b721-866a-42ce-8666-8c50711c725c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1f7193-0bbe-4e92-a4bc-b59389c6be83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23320780-e799-4231-9310-1ca676525bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bbd2a3-fe6d-4677-9e80-5f7bc4474e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "562eb5ea-2f41-4f46-ab57-7720a95cfb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac0e4ac-ce62-4db6-9876-bc5009a4c9b7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a28c6f5-6ae6-45e5-b606-26c7f2f609c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1ec2f9-4634-4eef-be5d-32cf477e5f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f870a3ef-9987-4d9e-9668-e2e209d339ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb3e173-fcd3-45cf-acba-cd7f46a2297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1b0c5e-bb27-44f9-b072-cd5fd1269e1b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39b00c5-32c7-4050-8cac-704144b0f651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f3f4c8-7fa4-4a04-97a4-0d38dc9f1032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e87dd94-3fd8-4fcb-9a8f-c9c712ccce34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb95ed1d-926d-4610-922f-b8a2e88fb4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303ee432-81b2-4488-8688-1167d3f671ab",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b471c04-50d6-40bb-8332-27d30c615303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b1b54c-cc9e-4595-b8a4-036c6dfbab53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df96cf4-84f3-422e-b50f-bf1177e35976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e46bf2-291d-490d-a2f5-8905f764ac8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e51295-fa56-4606-a689-195f23527286",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4bcd93-fb1a-4916-9cf9-0aaf04e33713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9692ebe-950b-47cb-a268-fed8fca4114f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109c888d-99d0-4415-8d9d-3411fc5bac01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f466b087-d70a-45af-9595-0864a865de79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816468bf-8943-4d38-a322-1bd282c32acc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1500833-5724-464a-80b8-b08ba937db2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef59a6f-3320-48dd-9a3b-59c8c3226308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4cc8ce-3dfc-4e5a-8780-3baaf0a929fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e06a664e-263d-4902-97ee-e663484589e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad83315-0801-4883-b93b-4131cd0c4f08",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896bdc06-aab4-4e1f-a204-7f4e971e50cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7d7bae-687a-44b4-80a5-53eb8915c94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159ad7d2-bc1a-4194-b022-245cdd5f7daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c7bcaf-7e08-493c-b344-73426a0d5f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486430c1-cd6f-4801-bd57-d802b7a3abd2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617b82ea-b042-4275-afd6-14ed6a7e5b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc73dc0e-91b4-47ef-bfaf-a63426324afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69752305-1b63-41aa-a670-8cb52dda969f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfad9443-52b9-4aac-befb-679bb17a82ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30023701-f745-4e58-b053-8bcd6ebe18dd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10b05b1-ddc5-438b-9b6b-0e3f799c6917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d91c9d2-f80f-4f76-b6c4-149bbbb06c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d02d63-6020-4b16-a2f2-95ce0eb96074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0223f87-95e3-4540-8841-3578af218057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02041e0-e01d-4b06-817c-6cf84963dd5c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483a4660-ed7d-4a9e-9b24-fcd3a4ac0e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd7c955-33a0-48ed-a561-59403e688f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532ca91d-e3e7-4599-9f16-17df04ef26db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "197e6ddd-e16e-46b7-85ac-affe2be54727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81f1edf-0835-4263-a03c-e629764b349a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5167615-c694-4a36-95b8-5c787484ff01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf8b7d7-13a4-452e-85c0-c06016e83672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c15fe2-d746-47c9-8c3b-4b34e139e8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e141f1-8fc9-4923-8b6e-810c30db03d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffd7f9e-ff12-42e1-88b1-afe147f4bc2e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b439a2-170a-4858-b469-7d5e423022c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c865e31d-a021-4226-963e-29a63ba0d8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489ca7be-d53e-434b-bc43-0fd68522e878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f35263e6-6ee7-4f5d-b55a-b4eb00ce9f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3535164-a67e-4b48-bd03-3b39a1c746f5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86433abc-ad63-4b19-a723-d9c7de72a73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b95f8a-c537-4cb7-b1c0-e6748954ec58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02d8cd0-a9d9-4b57-90fd-1a261946b0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd760a3-9c7e-4c93-b0fa-160fed1dbaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bad693-a338-41f0-a35f-88733e4cb717",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3396b660-0561-4168-8048-6e3381fca635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88523506-b53c-4a88-9fa4-1e127ddc1866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278b5018-1ca9-4764-abc2-e0e9c3c4336c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f690f050-1e71-46da-beca-b3f05a3effd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a9f0d4-bcb2-4ffd-976c-28562b20c7b3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d61846d-275c-4ba7-bdec-ba904281a956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5989a95-da93-40dd-8bc6-be98bb5c8fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd15f21-184c-42d0-8c04-683bc6e5dfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a72324b-856a-4b4a-b880-f29fa5ad26d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55809e13-d1a5-4e32-8b7d-80ec09e33f41",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a05697e-b477-4438-83fe-7835fed93d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790a87af-50e2-4ec4-b3e3-bc1c15842e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823f090d-e719-4796-a190-4737b5af489a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f69dc3-26de-4fc3-a549-99654b1b7401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b764b4-eb56-425b-b850-43a2fd2f8fdf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6750bf57-971c-4c97-870d-53363422490f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409b8b65-a109-40d2-8bf1-646aeca4d50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba73b81-a583-4e85-9e4a-00a27f8c79d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a55f6be2-698a-4452-ad75-66626b4d6dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1405f22b-0d90-41a0-8887-7b1aa500fae2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f3bf02-1e9e-4eb0-a8e8-95895ea84604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5799de05-a0cf-4aee-81e1-1a49abe818d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c228ed3-27be-4643-9aaf-f4b8e31745ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49ec1ab3-d8c6-4e0d-a5a3-b54e84a37ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ce179e-4985-4a2a-9edc-6e72f1c3a922",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89f0213-809b-4e0e-b17b-0d4be3ddcb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d45986d-b047-4402-b2f5-0589110d6de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d1240f-efb5-47b1-b6ce-9b8a4315b7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c22de2-ba6b-4daa-90f6-8eb53036fae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5765eedd-de73-4ce1-854f-c526495d483d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a108cd-0e7d-4349-970e-347ae65f81b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6301482-18fd-481a-8d4a-9c224b67b146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c540535a-a71c-4b8b-aa2a-541bba70914e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e743ee-ca89-4523-a310-0f33f440462d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee09e657-c9fa-4b84-be9c-7de0951b8f09",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e601e8f2-1a63-45df-92e4-ff42bbd768d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa3f845-c979-49cd-a280-722884806ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5f2cf3-39ed-4559-8a2d-e801027eea2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8feb6447-5fff-444b-8371-30425620020f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccd567e-bb61-4541-bbdb-47a2d0f7c1bd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f2a88d-d393-4cb9-94a2-250569268779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691000df-dae8-4096-a7f5-4b7891e6914b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbe4c5a-d5e0-4aff-8c16-db8eb2903796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "988e9b02-afa4-4c64-bf65-d520b8975204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b61a3c6-929a-4410-a653-f05551fa6a3f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf097ed-2f3f-4577-8542-818f04076621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719abbc2-79b2-4940-a17d-91b74219659f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a772ff86-93fa-4f53-9705-97af5b93f70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f35eaa3d-07b0-4e07-b8ce-d95f3f184c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed36f449-79e7-4a7e-9ab6-34a5fc5431fc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd32ad10-2a74-44af-8dfb-023e47dd8271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3f1ea7-2971-44d7-bc0c-63151d255f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8507cb26-2636-42ff-8c91-9b69a061a3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b636d60-9e8e-4171-83ef-6c4bc72ee905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c6fee5-0d0b-4de3-8d07-f1805980290a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d010d25e-e224-4e05-b4ad-02e3c366127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c75eb9f-529d-4173-99be-20a07763a594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d917d332-517c-4162-8eb9-f746fbe78e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97034274-b824-473d-8fc5-4f4e475dabaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94229830-b678-4465-9675-42062258976a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51af077-89f2-4c88-aef7-d8beca0a55c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d44b0d-58a8-417f-982b-7b0626753b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faf171e-e670-4523-977b-9f7c4f609d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b76a333-e19c-4e0c-83b7-6033ebc7c4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d57811-e88f-44a3-b4ee-d143a154d2fb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4f5c46-9203-4351-b4b3-b2ecbfbc6378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87aa25c-6543-48be-86be-04b4b1e347a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8f9dcd-7fba-43a7-a635-1a8186fdcbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5abc19f3-5e02-442c-9b45-90ed613c5219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315e29fd-6406-4369-8720-901f5ed52d8a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c14fe97-1d84-44c7-921b-9d5db8050f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035300a1-2f2b-400c-9404-9a3c96da1590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9989479a-b57d-439e-94ab-41e4da20e46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b49658da-d729-4afe-96c9-b46a7650c641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b96f2d3-cdf8-4255-8a0c-be9ff7cb8316",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1cbfbd-24ab-4a2a-a882-da9522ee9d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d134e49-c603-41d9-a297-063e1f3cff5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdf7bc3-9fc9-46f3-81ed-199f71d4ab36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef525c64-77ae-4bd4-aec5-70ff15d337ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e48580-2eae-4cb9-ac51-016813495f50",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3dad03-e78d-41b3-b737-32b874870bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9044b9-b205-4ccc-a0fc-dc62d6cf8eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d1100b-b166-4973-997e-7a5e02d27879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a23b85-5c3a-4eb1-ab73-674bf8e3cbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c04a60-d981-4b7f-8af6-ff35b985eb55",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ca8334-93b5-44c2-a08e-e9b2b385f968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "49048a46-74e5-45c4-88e2-66378da6ea42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943d7e98-8f42-486e-98d0-4caf643db112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2abe6649-0c53-4838-b43c-9319e57484f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61471b6c-8f78-4872-a983-31e1a581be40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01c7b186-79e8-48c6-bc78-9cfabc87f4ff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c601ceaf-8310-4afb-ab69-1aa1ad3e67a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6418c14-fa3d-499d-b186-ecec26374d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822f24e5-9635-47d3-aefd-2585bbba205e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e089f1fc-f17e-42e6-8ea4-dea2ce96143a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9d4f389-622a-403d-afeb-2ac352ba8a52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fe76815-3bd5-441d-a3b2-1bf031bbd27c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7b3584e-44e8-4ff2-abc2-3f0c74679ccd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "020aaf19-2e09-4cdb-99d9-6b9fa98218b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "300458c9-491c-43bc-af8e-6461251faafb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02c1aecf-d766-49ff-b00f-8d31356e4e2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c75e5730-d011-4f95-9359-c15baa8dd456",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d0640bf-d52d-4c4e-b7fb-d09be2166c66"
                }
              }
            ]
          },
          {
            "id": "269b26db-39c5-4bb7-a11f-47c03ec80ad1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9ec51f1-c783-4cfb-89b9-fb645760663f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8e8cb6ee-26b7-4641-8f73-1e256ddd783f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e534cb5-8c00-41d9-a5e9-46568a4e0626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "217f0118-bfd0-4eac-b210-140469c80fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa9a427-cac1-4fcf-bb14-4f15b2ea7b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b62330-2264-498a-90ad-ba91d5e7aa65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07d77cbd-cbad-481f-b8fe-9f7a51fba142",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "399f5ea4-fb07-4be1-b18a-cfafcc122bf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b44aab30-4897-4334-aeee-2b3c48e18c55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6fe0218-3acc-4d13-bfb1-3c5049f7a7d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a4bd5f89-39d9-49ec-9a9a-2d9561961e23"
                    }
                  }
                ]
              },
              {
                "id": "416e13a5-485d-4cec-b3de-19b409562086",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da125274-c440-44ec-9fbc-e40e83d7afa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2987d786-54b6-432f-ae85-a6e5279eaa6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2365f43f-cc8d-49d9-b53b-ebbd576a1652",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62f741a7-24be-4e95-9018-fe407c3b7dd5"
                    }
                  }
                ]
              },
              {
                "id": "ce31047b-f408-4227-b513-e3d9dd6cadfa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e9c399d-a51b-4378-96e5-ba83fc2126bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62c07302-d0a8-4cba-9277-af3eb4563465"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b41c5878-6063-4e81-ab8c-0854a2c3c139",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1dc9cef4-05f4-4943-9654-870f274f7f57"
                    }
                  }
                ]
              },
              {
                "id": "4dee3880-04bf-45d5-8863-2e5bda928328",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5855412b-e459-4529-8e5e-a3f702543e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "549706c0-ca83-4185-b9a9-8123e701aa19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0921a2e8-6869-4422-a241-71e98312631e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a4f0b466-f218-41da-9e36-d07b9b1211ec"
                    }
                  }
                ]
              },
              {
                "id": "4622cacd-cd2e-4a30-8378-e3aeda2c79ad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b41da314-6b66-4d72-b1e6-6ad103696b66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13143128-1dd1-4891-a53e-b82946f3f0bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9794c345-6638-418d-b9d9-efddaec46723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3eade0f0-15d3-45eb-90d4-adf1d56f6800"
                    }
                  }
                ]
              },
              {
                "id": "739e16f8-e53f-469b-bc2b-87825cc156c7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26d4662f-d547-4ebc-84ff-95235da8c343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25e3efb9-e574-4af0-a32b-406c61ed1664"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0c256b3-3fc3-46da-adc7-ee2ad4bd69dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dfa0c34a-c9b9-4af2-89d9-afba01e2a383"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94014692-52c5-4955-bc82-e87c18959336",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2fc08dd0-5c1b-4d1a-a9cb-102f527afb7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abec7e36-ea96-48dd-bedd-287ada0d852d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f53a155b-89df-4d8e-ad6e-7012dee543d9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20a0e295-0d81-41a4-b0f5-91e574ad0bdd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5e265260-72c4-4754-a718-0bb49c463de4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "714d6ea2-03d7-4075-ba05-88bdb8e47fc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90e41b61-2f6c-48f2-bf11-072da16cb1dd"
            }
          }
        ]
      },
      {
        "id": "9ccc3ac2-84bb-4d79-995c-da7ade046d19",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d490b3e6-df8a-4798-b7d1-623c56848313",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a885af25-1d80-44ad-a981-64a0cdbb9f79",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23049de5-3a9c-47de-8f67-87897f3d90e7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cccae58-6a25-4548-80ce-34536cc1e0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39da2b76-b75e-451f-ae41-7eb9bd913bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92be822-3052-4790-89f7-beafaae134a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2ec6bf-13ab-4224-86db-2c0dc2038712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b347e81-ab16-4559-8eb1-7e739c200420",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bcf7a7-4f10-4093-bb73-7fd3c1f1ab3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746bac03-4516-4ecb-9f3f-9bc78c41a48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41756739-b691-4ca9-80fc-e8f4f5f6497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc4ed6a-3e24-410c-a1dc-bd44e51afe08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c1236a-e2c6-4e33-842a-71304ee4229e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d0de1-e4f7-4712-975b-b553b3ce94d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8e2f17-db0d-4e64-a5c2-61141402b464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5a3402-dd4b-4986-8e0e-7cbd53aa2bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43a6c739-dcbd-46f1-ace4-ed2ef234aacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1f67e5-6369-4ad6-b813-8388471ff8c1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68a55dc-1821-4919-a60e-86be2e837e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b41509-3fc7-42bf-809f-e623a41952cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74a7e52-ccfa-443d-85dd-9b13ea5d5227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af65ad53-9496-4420-8eac-e1a00ba8a32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15114710-3975-46a4-9914-001f2daf82c8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3db20ce-c9b6-40ed-97cd-530972a9b1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be45605-738f-4e0e-a501-4261e0725050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e25658-f0fe-40d2-b4ec-44ec7d5514fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "757e2885-53f1-4957-866c-24532334f249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31026b3b-5d8c-4baf-9fe7-0c45a4307d1f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20220314-28d8-4bf4-9176-86f8d3adbfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed143801-0bdd-49cd-9d44-7789d85d1873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af88ae0e-fc3e-4020-9f64-fff0ccc761d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db01cc23-c8f7-44f4-b3e1-1132aa478b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3d1ede-1b16-4b81-9f91-599e5df9f5c6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20ff568-d5c0-489b-bbad-11434a746602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70256b1-3653-42f2-bdc7-dd290a2c24aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d27465-e9e2-4466-bdc5-659216d65876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aaa1b63-0186-45c3-9c31-c5991cbcac45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c744a9-4150-4c27-a60d-77a48f5ff9be",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956e684-274b-4df7-8686-47764889b5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c36e1a-ea7f-4011-96fb-7b55075c4ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0ba210-1529-4469-bb31-48d42882c18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b136fa2-876d-4933-a8bc-2ece9f0ad6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded28c3e-6b59-4869-b95d-db0cd06b204b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81fe1d2-373c-4d1a-b9f1-10fe4669f308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4b1d52-c024-48ea-a2f3-300931d25923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb65a452-1a04-4023-9545-be89499aa60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79eb6e9b-a5a5-4af4-a2ea-0c2256f60b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d139e92-315a-4a78-bd54-fcd2bd89ad6b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbb4474-b91e-4a97-8279-d8ae90d7426b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7444da-9154-4cf9-bf7c-8bf4f61607a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669cbafa-bad0-4423-a27b-52f84ed4ecdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46b7bf4c-1b49-419b-885f-f030715f89a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562bb88a-5409-4b91-8b4b-a548c464fc46",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7ceb75-0d22-461e-8dcf-54e214a4ea41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e0f492-b8a3-459f-9181-83723869ee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af9a233-4ff2-4bd1-aaba-22b6084892ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5186d49e-318c-469f-88ae-f965bac6df6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562256be-56ea-4a17-afd6-803363e448b6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3ed38c-614c-41d0-bcaa-d4ef54f510f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cbaddd-441d-4ffe-aa26-537b951f72fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60abc7d-c4a0-484d-8120-5887be350d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68833ff9-1afb-40c5-a7b4-c92ab26c9455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468a48bd-5dea-4f43-b4ce-ca8a0e920f57",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e04cf3-69e9-461a-b276-ed1c7c053116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09a2181-3cea-4ac8-936f-b6fa48b65cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084ed4e5-04fe-4478-8f51-eccbc92271bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c70287e-869e-439f-8669-b8ef4cb4b112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005c51c4-4d73-491d-90de-fe1ec72a86b9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc15fe4-df00-489b-9c25-1d54fb70984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa9ca46-a899-4c48-81a2-3b5c3791b686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c736949e-3055-4950-9cc5-df4dcf0a6e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b392aa-3dde-4bd0-aae8-4fc55cf015d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b0b016-8968-4fff-a9c3-551c548120ba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c90b23-0be7-4e4e-9d6d-cd78b9eca1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b626c9-9768-4df6-92ca-40d5b6735f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d17470-0f2b-49ce-8b04-a92039b69095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3807dde-d4b9-4c8a-947c-59951f3327f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8189ac8c-b030-4d8e-a4bf-2c4a93d76cdc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c844a7-f04f-436d-9f42-566f831315f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2e3065-530d-450f-b9cd-bd734233b6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d643eab0-6a7b-4063-9826-a73091f9416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a762e427-4f24-43b7-b4b7-3330d7408ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838c7cf8-a420-450b-9bd8-e07438d82852",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0bf57d-c05c-4677-81dd-f58b89c6b0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2a898d-807d-4a95-a8e9-4b1647f600e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecee82ae-20c9-481f-8ed7-5098ff45ab88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a348abe-6e25-42f0-ab9f-aa1a0b43dc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdaaef6-2f2c-46f6-8bf1-a0117add03db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e5ec34-b729-4dce-9e81-35f7bee1b3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2dde165-f1cd-4d17-b8ba-2a3cf0764fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcde8e30-08c2-4c10-99ce-ae08b85cd140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54dddd8d-ad7f-4cd8-878a-cd0096efe039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32d38fc-46cf-4547-8e1a-eced3cee6cb9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4cc145-9b15-41ad-b257-4b76f545a0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3af91e1-2670-45ef-b56b-f10b9880b356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbad659-84af-418b-b0fd-db93755fcc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdb2538-e58a-498d-bf4f-b3e65ba5de26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fe6d56-216c-4048-922d-116e5ede8e5f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368e159f-0968-4016-9ab5-b3562623e357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df27060-e845-4f4a-8e74-37dc288d2d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed6cbf5-0158-43ae-ac7f-1c5d0d7ab8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a23eb2ee-6924-472f-bf80-b7030c3256fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf68742a-1774-4133-add4-f0341b57932c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4068f74-7341-4d9f-9d9c-e937731730d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3757bd4f-53ee-4060-a4ec-1bd5b3aded7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa8d22e-d95c-4fed-864c-9aaecd8625ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e312bf1-f507-4a53-b830-f88e2db8a30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7416010-fff0-492a-9adc-5d74463a2fe1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbcbb7f-b8f3-40ed-aeec-d30f02a3fb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d2268d-dee4-4167-996e-a2dbe522a0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89db3ec7-e6b1-4f75-b8f3-8fc4bf3bc7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de42c474-d7fc-4487-bcd0-63c84e378b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0051f9a9-0a97-437b-92f0-d3052ee63bb2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40743a28-7caa-429f-accc-ddaf35b0b627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa02816b-d9b1-407e-90e7-90ae8b656a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b75241-8934-402c-86f4-245a0356ccfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312a1fdf-d7a3-4da3-b358-19207912a378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ec2a68-52ba-4c12-acf7-06310c6c0d0e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5102a99d-4cf0-409f-ac31-eb9bc6fe3596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d23450-622e-4105-9bcf-741418510b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa12067-c4b0-444e-b5c4-b5e63febc1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb3f566-206c-4900-a7ab-ca82e1b4fd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ae8b7b-d218-4bfe-b44b-00077b3749dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4161f77c-303a-4489-af52-6ef1106e390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741433a7-1ea4-49b0-8b27-1d281c3738c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd2ac1a-7072-4ac4-9236-19190db5062a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c46b85-0575-4cf8-bd2f-0abde8367069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7689d3-fbde-4e1d-a4c0-aaaa1de41646",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08335fc-5707-495c-a729-04a1c236e3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137f0c50-1ac4-4004-8e98-afdd74b7370b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196ec100-1622-43a6-a7c3-c15dd70ea980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "212ee636-b7cb-4dac-9484-88c256821f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e6de8c-17d4-48c0-94bb-b427515c5041",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac479616-8259-4372-9249-e0be15d0a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a860e68-aed6-43ce-a67d-1894ef4b7b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36092335-b231-4cf2-a79e-e248acb2a63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "348cb563-d7ba-48df-8f3d-cfde7c734f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decc4496-04bd-4a77-abb3-c81c38c20d01",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b325917-4489-475f-bb84-99d70594d600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8295bd80-10fb-4c99-a05e-bd1ab34e880f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3446d14e-0a2d-4733-a4e7-4f404e6a2b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a3712b-119e-4a2f-bb7a-aad03d3c8e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e3bd64-8f6d-4039-969e-3bb32618a34f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a15d75e-fb13-419a-b2ce-345454541dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fd9ea8-0759-41a0-a1a6-c19d05ca16f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03cb156-ad7f-46d1-91b1-381ceda61cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c1e9ce-ec31-4922-a69b-734b186946ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698337b5-196b-4e33-9953-5f0babfeae63",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bb1fea-2877-435b-9344-847438de5aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caa9209-e3b8-4e4e-9284-a928873ca67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f100804-719d-449c-8b6a-0c6c7828c645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf18d3db-86eb-4207-ab0c-38634129a287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d53a9a-2dc5-4c0c-b4a4-78ec135e6fcb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228356f8-4019-4a73-9419-47536e9f28bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fcb533-5300-4478-a064-a5df72cc8ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7b3c7c-7dbc-40ca-b866-1ff773339043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21347889-e3ba-4932-971d-a8e8eaa55d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fea391-0931-4299-bdf6-575bae8c24da",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8179672e-5e47-4e1c-b63f-30a1f494727d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ed7f44-76aa-4062-8d06-3ce1beacbd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8591a5b4-20b7-4d25-bb70-26079d4dfe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48f5ed9c-ea5c-48b5-96d0-31fac03a9e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb62842b-0731-4639-acf7-78bd7a4c90a7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cce0bab-6bf8-4317-bf99-695320813369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3628506-a972-43f8-96e7-0c981946129c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e299d9f6-5611-445c-808d-b01e36f0060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "619900aa-dbec-4e9c-bcfe-7a4724e12117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496276db-5eec-42e2-814d-5b9f6a6b5fa9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f954b1-112b-41b8-adc4-3f0380e636a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abcfecb-ab50-448c-a2b9-746978dc667e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2674e4fd-1da4-41a7-9a7f-eece0e7fa29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d071350d-dc79-43c3-982d-90966aaf6a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48facce4-6b4f-4a68-ac7b-16aea5e51543",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478f7070-f300-48b6-8556-7503bf1ec5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d27080d-8fd3-41ef-93a7-af5f5a541d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ec5327-3999-4fac-8efc-79d01c7ec54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d24f4139-b4b1-489a-9edb-ab9797d859d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f21a8e4-e96e-474a-97b3-2462f13e92e3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff7f41a-f2aa-4d7f-ab34-90d1b0387b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678946a9-05bb-41a7-a8f2-105a23248476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1589ab7-a060-4698-9824-9c0df987933e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda5d03c-f693-4c04-985c-978de28b331c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a124d99c-0f0d-4334-8315-287cd85eb7cf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4432012-247a-4763-a2f3-1bab0de79bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1872ccf-acef-4e38-ba69-c6f44a65a5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4496da-1efb-4f79-b6e0-e6cbc62c87c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae2c936-3cca-4762-a756-5e8a4aad2f20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fbe67adf-3dba-45e9-82f4-167ee7df7885",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e3ec6c1-4a6a-428a-b261-d5f48e33119e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9fc4f2-90c1-4c1f-b39c-dc84859da6c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dc10e8de-66d0-4450-b1bb-bb5cebdad0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d995c87a-58f0-41f6-bad8-883854ddbe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a9f37f2-ad11-48f6-960b-2ee876dd526c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c72b5eea-343b-478d-ba64-32ade910fcb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48b3d49b-7ec9-4c51-99db-a29bc2dd6455"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa1fa57a-631a-487a-b9df-b0ec57fdd51d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab7333c4-c9e4-4325-b024-d278aaae2487"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a967a288-3b66-43c7-90e3-38fe715af756",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa6578b0-d232-4045-9ebf-05476088b616"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5682af80-55c3-425b-9d25-54996853c8de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b539702-34b5-4b94-8448-57a554bfe13e"
            }
          }
        ]
      },
      {
        "id": "c34f89e0-fc24-41e4-b349-603909b225d8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "268fc067-20f2-4446-a117-cd7f0d4431dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e77c059-048e-4dc2-8eca-04f60b5291b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc6e3260-93c4-4eac-9cf3-d56237c56f30",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bd632b-73f1-46a1-86ac-7e13b9ff2bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5143326b-b6c4-46a1-82be-0197a2a8e373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aac66a-8f3c-4c4d-b254-36465c604b1b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdb4482-2b19-4c5d-836b-42db4e62598c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8641dc5a-85dc-4bfd-92a7-b1a8cb4d74bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa97fc64-3917-4d6e-a896-c8403bbf5422",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f1c668-3abe-4e8a-a9ea-3d89bca3f411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf1cdfc-06cc-4f7e-9699-d541105b6697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26f171b-1813-468a-9c51-b9ffeab5a03b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0253f726-988c-400a-9e61-922f7d5eafad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09deb782-6b21-4c13-8c3d-e16f2fb494c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ca1946-0773-4ae1-97c6-b421eb5d7cf5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b20d06-2e0e-4684-9b60-bf42984d1dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d074a48b-13ab-4462-91e1-ec565547b6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764031c7-1ce2-4046-95aa-2099c94bad38",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8582b01f-3fc7-45e0-a12d-2d0a15b7eb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c038f3d5-8d6c-4add-9095-518286590c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547b4e69-1614-4c53-94b7-ea785bd5572e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3d3242-ef45-4def-9f8e-bba3427beb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804bfb1f-77fe-41bb-9d05-60ca43dae0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504ff025-5fca-43ab-86fd-ed21ad9234cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbcd038-f2c2-4803-9b82-54b6d21a5507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84fcf5a-cc19-4517-b85d-74db41bd0034",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8b7acb-c7dc-46f5-874b-2a0a267b9b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57180ee3-53f0-4272-9cdc-aa5c826646b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab632e1-6751-415f-8d91-4583bda53897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb01465d-3163-483f-b2a5-a6eae8bc8ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f328273-1e88-4722-b58c-e76d35fe4f36",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf61c11-5d17-4038-97f8-911ada337e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d33e9a-aaac-49e4-bb0a-4f0ae2ad005d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9f7d0c-b430-4ec2-8b4b-764183190f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c698ad79-23cc-413f-8c4b-35cb793f3524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cc80d4-f318-4e16-8277-a2a6e6c11d3e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64025cd-76d9-4fe0-8cde-9b5f0f73fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a14f8f8-640a-437d-bfe9-83d2146a69d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354e6037-d9a6-4e4c-ba45-389bb7f86fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d97abf3-38ca-47fe-96ca-09dba80cb370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd15964-5177-4528-8a95-cf6d836eddf8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a077d5b2-492f-43a5-b160-5faff463baec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3067da61-0a61-4c10-bd6b-8c70d2c0202b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18b83ea-7333-4f8d-9760-2bd3e1997ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2119c12-e5b2-4fcb-a18e-f63110301e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44831ff-b33f-48fa-b5b9-301b9ecdeb2b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db03d9b-e12d-4bff-b6b9-64ddc62946be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7181c9-d098-4842-a3a9-f33746e55c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088223f2-a05f-49a4-80e1-b60e3b83a196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8108505-61fe-4ab8-b4be-d589c9d78f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b37d87-5b25-434e-bd27-0f4be085bbb3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6194a105-695a-4a96-970f-00ebeb19f0d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a938dbe-fcd8-4124-8c9c-c75f14f6250b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77231d22-2935-4c5b-b8b7-c7763e2716a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b965f139-4fad-4ca8-9c6b-e66c8ed9d168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9bf650-83a5-40f8-84f2-037ac7cc215a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3632b1c1-aeb6-4e07-902d-b10a50df5d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2933d4-de5d-45f0-bdf1-8bf40cbfe404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04a9d57-7815-4d55-939b-27d2fc077f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b173e9-c22c-4b44-962f-39eeeea61b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db68f591-c36a-4ca5-a31c-fea948accec7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a20325d-ac86-40f4-b110-6417549ba209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4ad044-c3b7-40dd-8b21-0c0087266147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b60b33-adbb-43e9-9242-77189b2fa0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638e5fd3-c78e-4787-b2fc-66322829404d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa2f406-5078-4731-a337-a9235797677e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc607c1-da0c-4546-92e9-8de01b111c62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9132a315-52fd-4010-adbf-a558e380bc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcaa831-39c9-420a-a4dd-3aeff864f377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84618b5c-2a9f-47f2-810b-21afc0b444c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a889957-96fe-45f5-85c5-82cbea80163d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e70f02-edfa-4f48-8cf2-005ae93c666c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aea84ff-eb5d-4a94-a349-4e72b95ae191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e515b5-d4e3-4220-bb7a-908c8fccd341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7ce2e1-7692-4d1e-a440-3b51c5af8ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21672a5f-ceb5-4376-a955-c2c65412034b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a2d8ef-b531-41e0-a356-9566cb7755c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25500af5-81df-45f5-955b-b0d0d5ee2f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aa18f8-d4e4-42a5-93f0-108e485de1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caa7c09-3cd2-4650-abfd-3edebb6edf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2932784d-8e52-46c0-9792-d96786f5ee3c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b589f48-ca10-49b4-a98f-325edcfb7faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3804404b-07b2-49b9-b87e-56b6c12867c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71a26dc-dfcb-44a0-a5f5-d552fb4a0119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e90dd3-6931-4360-a665-1454231ed64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30a8485-9b19-4ad3-bda8-0c30bc49ec7e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b27504-6f33-4100-b745-45590690d124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d52ea0-2073-4ab8-8766-b672947a8d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87498eee-28fa-44e9-93b2-af42a33ff26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce2a8c3-dfc7-40e2-b793-02a1d61447e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdcc439-f6bd-4d85-921f-dbcfdd0d8d3a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c359033-5b2f-47b3-98dc-f81c019dbad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004cee59-01fd-42a7-815c-0c7f4d54e0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da6e9ff-0151-401a-8a0d-a6fc9c56c07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b49046e-70ec-4ed9-ac32-6a4a287dae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b59a39-6107-43c0-be3f-22faf1848e9a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1105e5ed-adde-45bd-9e47-7bd700aa81d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a37fce-21c3-4166-9f52-345d83aa52e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c7a11e-9781-4c49-95e7-44676c4e22db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8319ed9-0486-4fea-842f-c0d27a6c2d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aec82ed-bcc9-4e18-9210-ffeeeaa9449e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6b382a-3da8-44e2-92ea-c80e450679ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f6f571-826c-4325-9da7-11e1dd1e14b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974b7487-634d-43c5-8c68-5028afb218f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721857a4-a682-45e9-a320-aacb03ffe7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e80ea7-244e-42e2-ab0d-ec9817152f36",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a3ece8-e454-4142-9e60-cd37e529fe52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236c334a-72fd-4d00-8086-10fafe651882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadc9fca-9fee-44dd-a1a6-963443c97c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85940ca6-362e-4b49-8d96-c5f4c2a84d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b894e6a8-2629-45bc-94fd-7e5711b8bde1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb08a91-95b6-434c-aff2-76b3e9875bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28856567-2b8d-4a9f-929e-32c7be37ebe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5f071e-b8f6-4785-9272-4c425f62abf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48314f94-12be-4617-8e90-c98ff739aaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d65706-b1ba-4dab-bdbe-c9f2c2f3fbf5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0b8d70-3885-4b9e-816e-887bdc61f4c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b928e5be-d185-4ffc-a686-48be3d29dfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8334f09-c723-47b0-af92-01484b3cf8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223b3989-113f-4f24-bca0-c0217a628865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cba4bf-9031-47b9-aabc-3080f4137e40",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145b65f2-39f7-4baf-ad9e-fc1670ab0275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffce2bab-a7b3-4976-ab05-85586408d2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7112cfaf-ad42-4248-8f5b-92b5e0f43c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d29547-2071-4af6-a6c0-1202477f5d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55144e8-9cc7-454a-909c-0996a1249113",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f654c3-78d7-4a0a-b6d5-4c89344c027d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92bdd9d-80aa-4125-8e7a-e610d4f549e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9195c490-bb85-4190-a871-6c7d9c6dcbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d16febf-afc6-4cf2-9ee5-31661ba1e890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128c491e-b7ea-4e7b-94ec-09d803e67527",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9059a2fc-b1aa-43ac-82f0-1075349c77df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5644754-245e-438e-9a4e-f3721660707b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f85445-71aa-485c-a47c-f88cd4fa9f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928b58d3-53b0-43b1-9a4b-0f20c08ea461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27185e31-f380-4989-8f38-1ba5b3c0db21",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4531f6c-2f37-4d2b-98a4-79bdba152942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2728aeb-5a0d-42f2-abe4-edb99c8d0f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5858a153-c9c2-42c6-80b7-04769928a2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4a86f1-978e-44e6-9dfc-1e5f8cf3d06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd97ce1-4ca5-4c3e-917d-ec7f07aa630f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1994a06-d9a5-4a5c-9097-9dde0cd4169d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166c64ae-3604-4830-8873-2b0817b739a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5602987-27b5-40f6-82a7-f20d2f79bf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421ef3a7-d7bb-4e4a-b035-67c112a93990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f3d0ac-9dc2-4cd0-b2e3-e118f54b34ae",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95ad5a3-d119-46c3-91e1-478f3317318d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5aafc20-2600-4686-963e-54c3b891cc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10510add-6428-436f-9358-8082de8cad76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2087a18a-a9ab-4c39-be16-977cfe3976bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93523573-6665-4122-b67e-e2ffcca1ed76",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dadef9-0d5b-4cc6-9116-5cadd074c2f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43728dbd-3c06-471c-9570-419935ae8da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1216e3c6-8351-4e36-9bd2-a90c92f0196e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf07355-51a1-45c3-9e73-4d08d02d4c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a58892-6e32-436c-a37b-54355f786481",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ea13e7-83b3-4fc0-8b9d-3f5369aa0f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5fabc2a-ab86-4cd0-9788-8763a61a3150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6d4077-7fb8-41b9-b421-c67e224f0d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6493ae-2248-4efd-a569-f96a25719e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b67887-7797-4b18-a82e-06b7c0fd7e05",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971ba1dc-b3dc-4419-9fea-954d8848dd63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4254c837-37cb-4fb6-8682-37936fe6738c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac3ce85-186b-4bd3-9080-271313057f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dce373c-3b2e-4cc1-8f9c-28913bca089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d146e04b-d861-49f5-bf7c-f8bd81fa8a3d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d3b030-df4d-422d-b75a-25fc1bcb4268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76fc0a2-217b-46dd-a205-e06a28f04644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a909a44-1f69-4143-99d9-499e1d8e568f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab47db8-fafc-4a10-8ba8-ea01b80d314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67270cbf-a818-4a25-b785-031adf9291eb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc38b769-e77d-4030-8af4-4efe0f68561d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae049a54-4d4e-4742-90db-6b380c39681f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebec058-d610-4587-811e-697f74d0b155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a5389a-360b-4d53-a003-2c1ac39b6ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dfcdb0-3b3d-43ef-836e-38490e9f8561",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143ac3b7-48f0-4f28-b6af-70269e7081b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c126dcb-c0d2-49ce-b424-214328c90ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bb1d84-c6d5-46bc-b89e-c2d20c417701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef835958-d69e-4886-8b54-1fa558286589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc594f7-1b96-4853-a147-d28d578eca2b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88af3982-0d3d-432b-81b4-69c9e3d2f7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839fa7fa-262f-45a4-ad7c-114cce48a74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38955f6e-7663-4dd3-81c5-558b13b84d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280ea312-1236-4b07-bac7-69083441aad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45737d02-0de7-49da-be9b-5be47f562863",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8561c3f-d2b0-4420-bab4-b9b33c65b47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbef1b2-de72-4a83-9b20-eec8c56557d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7054e0-5934-4e59-9db8-5d4d0bc50823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a327ce-20a3-47b9-99de-a67e1f52fd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef03497-0d44-446f-bee0-b4b7a13183c1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d5f169-5a83-483a-b0c7-96fec80b84f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0453a374-8ecc-4260-94f8-ebf0798c2785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16d6ab4-4fe4-4230-9cc5-6172cdfc280b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd6dfda-7fd4-4fc5-9781-7af608eac739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d51575b-58ff-42d7-9754-ed4f6e1a91e1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c2cb01-06fe-4d7b-87eb-9cc0b4a931db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b3847e-18d6-4cb6-bfd8-dbc305a0f767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8025e739-796a-449e-96ff-301f506f86a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54725416-272b-46dd-8371-795781fd0ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac989cd4-65fa-4fd7-98eb-328007c773d1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20248c3-4b8c-4ebc-a9be-c37c6d616128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c939d9-4404-44ce-8533-c1a2b1ea8ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42113a11-a635-45f9-8696-2e854c4806c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac186716-9104-46df-b2f4-ab5954b7d700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d66df5-886b-4849-8ed9-000a7ac18869",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b62b7e-f1a0-4661-a85e-e883e676ebf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50785836-a1b2-4d90-98a4-0eff9c3ec756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae400ee-d92f-4b28-9013-e69813e8206b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934ae096-a685-41f0-89e3-e5b33958cfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80056891-5dc6-4202-8619-f572856663c1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecfa6ca-9a8f-4e37-b28d-104c6f91ba8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92f722c-ccb9-40c3-9aca-1b344824711e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1def3ec-749a-4af8-9ed4-f31cc42fb255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5aa34d-4349-42c7-88a5-bdbbb7884f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6984cb1e-c911-4337-86c1-008fd471f20f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e6ad4b-5550-44c1-9e43-73247a4ef6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c926a7b8-60b0-4e04-b03f-2a43f16a3e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9207812c-d0fb-4923-8d10-6b017918ce82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d51c04e-2b66-4d8f-8359-7beda34408d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b75d49-1e83-4272-b78a-05cabab60280",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f0fd67-34b6-4326-ab2e-c163dba2d9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d74c873-0191-469c-9dc8-98c372f9bc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aa1ece-3b4a-404f-b1f8-bad117748a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719f1251-19ca-4434-bdcb-f4068be66862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437f591b-def9-471d-8e1b-1f7dc018b2c7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d81a95-0607-49ec-8802-a52215663dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86bbd1a-c9a5-4a31-92f3-7322c2011d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3104afbf-90f3-40c9-83b9-ffe0dc04fa6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3b10bf-1d24-4e8b-8602-2a2c46263caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dcfadf-a5e7-4977-88ae-79e640752533",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906edbea-bcf4-4a3b-a9e8-6831ced20f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141813ca-74b6-4ff3-951f-eb6e9a06fadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f56cd2-5fc9-4943-8148-8750fec99211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5877913e-b962-4aef-be7b-f62511759290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7b2a0e-6437-486e-8d6d-7ba8dfe52c8a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16be8364-4b4d-42c6-b62c-c2beafed6e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57982c9e-db8c-4d30-b7e3-9c8105d8cbb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9b8932-c2ac-4390-bfee-2a3da8408be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8254f41-030d-4282-8f94-d7efe07c4b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb128d9f-0dfa-4998-81ef-842f54dbc280",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f89b4f-cc70-4f02-877d-711b52ba4c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf7df1c-d767-4e65-ab6e-7b431b1f687f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafca0bb-3b1b-4a80-9491-414c445d9ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc76d6d-fec1-45f4-97e0-c81bb91aa4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ab5235-b284-4030-b530-abfaa95bf83e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443b7352-ffbe-47d2-bc89-9e2bd14ce194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac98373-40ad-4c2f-aad2-b65af19c5c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e32f21-9cc4-451b-af82-a5383e3370de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd7f580-0f53-428d-aa99-37c924e278d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46920830-bd52-465f-843d-7385b5a5843b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6547f136-e1f6-449b-9266-d62caedda1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb74a2e-d7da-48f4-8da4-679ea58562ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db65ab2a-bf82-456a-9617-f07783bdecb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17b90eb-5784-4ce8-8a04-1e33ca7fee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfcb927-75e8-4b2b-b1d0-9ffad03bd69f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73177e6-1138-490f-bf42-38c5318e995a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d779a395-e216-4816-8cbb-06bcf0372d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70bedb8-47d0-4e16-a36f-dbdb17b1b9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f625b4ce-dd08-4920-9c42-d2bdf4ba3b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42073cfd-aa02-4112-9eed-d433fd4bc4b7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96845368-4dde-4205-afa3-ae7ef088d004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b284db-1650-4fde-ba89-1c336ecf2303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a19443-3c33-4498-97e9-b9acb0cb3ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091f956a-fde5-40fb-bcae-5e2ba59c4792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dcfc3c-f794-4422-a030-d5ae6ead729f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2877bba-0c55-4c55-b256-b88075ba356e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff595313-d618-4a3b-9a7b-d61683bcf3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481ba941-92c1-4a5f-a342-bbcbb9acc298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33bcebb-602e-4593-b680-296f5fd04601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f133b884-64ce-48e0-b4fb-40eb289f71e4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5c8cf9-786f-41ff-9d14-81a762740b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e777c6f-9692-4a89-93e9-a198bf19e9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac422a2b-25ac-479a-90f1-3b7ccd1b9ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a090ba62-ca34-474e-9330-5523e26335f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64480b2-9da6-48a4-a9d1-8471181d6eab",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b9f5c6-2162-4198-8686-1ef2d35e2da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52f4b33-b715-4551-a8c0-1645eaff0074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae42cba9-fa70-4fcb-a2fc-15bc591fa78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1919a5e5-207f-4e16-896b-09033d237ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e3b3c6-a187-4c52-ac42-3f5e001bc2bf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30736897-a5ea-4007-aa89-3713359af39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011551e0-bc17-495c-9de9-15ea097c2867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dc1248-446f-411d-8af7-0a2adc2540b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26d36ee-ddd2-4eda-9e20-6f297f6192cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20923225-a248-4dae-ae67-099233a025b6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d02911-22cc-4800-8895-1bbab73ef116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb4439e-de11-4122-b2b5-14eae688c6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaad9d31-a191-419f-85f9-afbb5307dc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edebb3a7-1ebc-4d41-91fe-75f985a9e7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb6b9e7-6851-45c5-9146-b25f7de5d22c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f55b52d-f93d-48b9-946b-c01758a6a08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bf2c05-0fca-4466-83b1-418ed96fe88c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de514a10-ac38-4482-a9b0-3b3dfd51b6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b921a8e5-0cf1-46df-b967-9fbe1cfbeaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2392128-d70b-4080-9b21-1bd5f2be8577",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2310f48f-a04d-4785-9c61-41bd7bd3a89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02be1165-c926-407d-80d1-0bf97ebeaa9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6371b15e-d051-401f-930c-ca0712a2bccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f27542-f753-4338-92c0-656dc6c9ecfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec307e3-be0f-4b78-a70e-a9a4d3882417",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a5764d-de1e-451f-816d-a3fd13400d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd28ac0-6d05-4138-8dd4-b31cb8f09370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ede90e2-b52a-4ea3-b570-673f059e4f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4768cb5-98aa-4289-9197-e235eab3bc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c10202-57b6-44fb-81fb-97c705fa6207",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d293a2-6f4f-4dfd-8bc0-fe0068dbf1e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48aff39-1594-4be4-b4a8-e11e81d650b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd9b711-9550-4884-83eb-a786c1f53135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837a4b2f-2e73-421c-9ca6-46584b61f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c63dc0-b64d-442d-8f74-8ca9bb1d1c25",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c43cb68-5c38-4249-9477-3acda38b0ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8158ca-dfa7-4070-82ba-6f206efb3ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ad72b1-b549-471c-8af6-6b207d3e363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aed6f81-89de-4c1b-ad33-3918653ea664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0614161-3725-4745-bcd2-5e718d65f3ab",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d021d4-8cb3-4edf-9be8-afd68a1724a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6720bc2f-8434-428a-8cb7-bf86c8633a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504c9ac6-0093-4605-b788-a08096aa4370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7754d8fb-fa7e-4127-9bb4-3353c6731b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9160037d-8197-4650-a107-caa739bf83bd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cf069a-5034-4825-bed9-b7e7c3c97d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9420e609-fad5-4076-a184-6b1e32016ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb77009-14f7-4ff9-815c-0de6d9800f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6614292-fc0d-4711-84ec-615df7a5f2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d46c673-423f-4a33-a450-1d72f86cdc4e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2529303-fa72-43d0-9dca-74291edc30b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac83399-33fb-491c-9de5-7ec3eddea0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65031e23-38a7-4bc6-82b9-9f2768b1c85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98c235e-20cd-441d-9154-be8342bdc633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cb0abe-1e5a-4c15-bcaf-15591c9aa527",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba63a5ac-0259-4fd8-91d6-8d96db1c423c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d91dca-e3f8-4af3-be14-73ca1ebe31d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80359eb8-71fd-4cb9-b270-4760e13f3120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef33740-f6e8-4f43-9c3f-245c46298df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefa78d8-8bdc-41aa-83ed-9cad793c487e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b20859d-3a82-41aa-bc58-4643907d635c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a387c7ec-a447-455b-bae2-92ef9140cfe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c85b971-0d41-42c5-b0d4-b5c08cce6d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5ba2d8-fa6b-45f5-b3c6-e5a4b7c8db64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3641484d-464f-4c9b-a4e4-b306e771aff8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2945e170-01b6-4980-867b-e42d5b3c6ee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0179b32d-5d90-4265-a675-06d2d67c5d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61370703-82b2-458f-b79b-0b85dbb5d77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a6a667-9729-4f7e-aee1-e9a3f02dc47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f974a8-1e22-47e1-9bc3-d490bd52575d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6503f35b-96c1-418d-a9c9-fda78869ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b7e5e61-0887-421a-b97f-58fe1566adfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537ef792-a803-45dd-9e16-0c24d57c98c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa7881f-6ea2-46b3-8d24-5adb92edab79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3dfce3-e10b-4896-9e44-5285cbb04365",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a760ab-7ea5-41e1-bd4e-1a4e5f346053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14478247-de95-4883-a77e-4d7bd1bb49ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ebe874-5813-41a7-91dc-a3b70a01cc40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597951a6-b856-471e-ac9f-c9364c6a95bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668baed7-9d3b-4820-8561-01fd0565695e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788e06b7-8d2f-4d7b-a648-8c7a03ca1a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1386ff29-26c0-4df6-a277-bc64c2c24e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd219be6-62d5-4827-aa95-c5bb4533649a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10caa167-375f-4d7f-a848-d8bd5fe552ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6e11a7-cd92-4852-bc02-33411f7a4028",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8f9f80-656d-4d50-a5e0-2d59541dd948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e36692-43f2-4c57-8fa0-65760482de6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3c8364-da50-4fac-8c4f-bc7d91c2f032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8b0ae6-8229-4fa5-bbb3-8e28ac29ebc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c4114e-400b-4f35-a218-422e8bc9ee16",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2025d83-0a87-42a5-8b92-8ddfaa595dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c6f71e-256f-4778-b6e9-89a469203cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853611ef-5fd2-42fc-ad2c-fb7d5bd18b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a608e6-af73-4417-abdd-b09eb09416d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cf1738-9d7b-4a12-878e-d37ac6983949",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4175420-8504-43df-ab56-88257f9ffbca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b757e70-5da4-45b2-8f04-87b6eca4e01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933d0ecd-bcca-4039-bae0-880e59e1de59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c8c32f-2b28-448e-a672-3a93ec13782d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55950491-f921-43db-bfbb-fb90f68a2a7f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb7c345-d0e3-40cf-9d8f-2dd882b16bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64d2e65a-d068-4266-bd5e-745e3d16a296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6d8ed0-2076-42f9-9978-4bbd6fe2560a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d831929f-1f96-4a5c-9320-2a33578aa8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac791089-1e17-48b1-8a13-ba61690a4446",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ae5c70-31ec-4a2c-8d43-582fa50afb46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f315238e-597b-43ae-b537-a0c5a976caa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1002751-2459-479d-8fe9-512353850cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e821b279-76f9-4827-a05f-35960786d0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f90dad8-6347-4a02-9872-811e7311e6ca",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9b5a9b-79b8-4999-affd-4d3dcb6f7347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e122e562-7010-4668-80f3-ef6099e5ea68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdd5bea-3896-43d1-a832-cf5649b0b2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bae43fd-95f1-4adb-8240-ae2a9252a59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4f3875-dadb-41dd-a463-3a9fd794c483",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f2b8d0-2977-4dba-850e-654c62a7c2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5fb10a-329e-4f82-b5e9-5c7636dfbe28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab8b41f-391d-4385-9c6d-d892a5860721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b746699-48c0-4844-bf9d-1df454d5c590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a82f99f-3775-486e-a557-562a8bcb9fe9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e84cf2-087f-42fe-82c0-26254b9fbced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c43a401c-970f-4c03-b477-2b996226c18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cef289-df4c-4b62-8518-9ad0beca9915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42d2ecb-dc34-4d09-9abd-eb3198e439e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca49e39a-947d-4ab6-abb9-82e8a6e1d0e4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fc5138-d596-48c1-a5a2-0e0aa3459c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a041f7-ab1b-4e18-89be-1c6f049ea1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b106d2-59e8-418d-be17-7a39fd64ea81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb8dba4-888d-4df2-a19b-a3881aa95efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ae9315-4fc9-4c35-a59f-5d31d7316b0c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bea01a6-5020-4d43-a9a5-7d1d11bf37a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bef6a19-aec6-4fe0-93c4-1348a0245cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60414d6b-d48c-409e-b381-0dbf0b54299d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e1083e-3b75-4992-9c1b-c070d241218d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1abba1-6e18-4f07-9261-67aec2186d38",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c9e7fd-0ea0-42db-ab61-3af472f8ee58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b4876da-ac20-4457-8af7-56ebb401de36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f2945a-1750-49b4-8f86-17750ed5c902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b78693-1c4d-4542-bc77-8d1b242d0e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4241d28a-1d1f-44e6-a196-a43720d41c45",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13d8d8f-2972-43a7-b858-f5d9cbfb74b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a779b4-e64e-420a-aba8-c9eabfadc50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a5bfd6-9402-44eb-a62e-415bc6dc79a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d41115d-795b-4d00-829d-abacdeab6c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bca1e1-2c2a-4624-8240-aa81dab2adac",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96731dba-6623-4fc7-b963-b608759039d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df852e89-aae6-4a74-b989-eb678922bb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ab3ea3-18e4-4384-bf8a-ddd4b8e5f633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6429df4-f646-430b-81c8-578125f1a831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c890e4-8535-46f9-b4b9-62a9cbcff6c7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd349cf-fa19-44a4-9f92-04ca516710cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b4f922-8177-44f3-8dfa-f4506006abee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40988102-75eb-4bd6-a189-4e3806b1ac07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550c6a17-7091-410d-b68d-21e07ff90e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c454c01b-a0e0-4f10-af0f-92d501cab918",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3ccb2e-67fb-4173-802c-2d0062f87038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82d4692-91b6-4cb2-b341-aab52cbf670b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2710b666-0ce9-46fd-8df9-0a380ef82cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dca5024-bb5b-4d38-8ed4-8fe7c3e5f6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5015908-9304-472b-a6d9-6e5a2f7312fe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960381f5-42e0-4662-917f-c6b41c50fe82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59f360f4-4190-4cd9-bfd2-005b60a3da22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce6fdff-5d07-4de8-876c-231befdbb779",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c08ac59-ec3c-4afc-baa7-366b361968a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb6dbc-43d7-4a4d-99db-ca22067ce2d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2592f690-d90e-42d6-81a0-7842b8c9d30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "472db0b9-bd71-4492-bacc-d0ab6a5233a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329de47c-a0c0-4e37-ab7e-94c4d200aa7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15dde02-a9c1-4d4d-b081-0f9509d7b3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3af1a6e-8c8c-4957-b4bf-3da34438146b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd16cccd-d9e0-4ee8-98e2-f4d19aaf9869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24618cfd-a1b6-4b51-aa52-9abf9ee070b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b18728-c2a2-4deb-ac77-e9e4ab110627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4fb613-2b77-4c5d-9ecb-f37f61088b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ed1a7c-d2ed-4c69-a850-70ff2b8a2dec",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a420a0-c000-4c66-8e8c-dce927b565ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf910cb-567f-4f68-8500-f1c3288309a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb1a466-f8bd-43c8-b46e-4318e53ef241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d6c978-b135-45c5-a06d-0940ff3cdfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6b29d6-f6b8-4a82-a5cd-846370f62430",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df85d141-2d5d-42ab-9c49-265e065d02ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a00809b-5c2c-461d-998d-7d7e631fdb50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c8edf1-b09f-45c4-b698-b33ced3327c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93993445-3d8e-4f7d-a93e-9b16684928ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99278c01-98c4-4344-b15c-946dc3a37c07",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58dc940-8a53-4e6f-9758-6f69073df77b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb053f67-14a4-4e3c-bc11-34ed22f53372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d93a77f-8321-41c3-93b2-ec0e108f3b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d001dc-b320-4cc7-b059-c3710e0059d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe759421-ca46-4ae9-8061-11b0756e326c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6329a5b5-042c-4154-8dfe-9bf7b2a64ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa17541-fd00-47c2-8cf4-cd38f87075b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec48d161-586c-4bbb-ac0c-d526a6856f73",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49b869d-c515-4b4b-b433-5217e6bf54ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ca5375-30c9-4b0f-b15b-93c261b189b2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51882f2-6596-425b-82d3-3e2444a84040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aaac468-86ec-4d79-bc86-088cb44ee73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee6eb13-3a23-4c8b-891f-4f585f0b0039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c96268-f3a0-4f92-8f51-7819c58b7140"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bed03b4-02e4-48cb-842f-7cd8b07de8eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40eca27b-1f60-43c0-aed8-cbfaae1ea240"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1b82fd-2147-4ce9-8952-6192ff3b9b4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64ccc287-a5ff-489b-a956-e79303fc07af"
                    }
                  }
                ]
              },
              {
                "id": "9847bed1-d418-4e12-b251-39ea4772616b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac2e0cc7-128a-4ac2-a79d-b07356bf5c50",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca78cab6-1905-425c-ac5d-533f181a679c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eb4b2698-b13c-4b6b-8873-9e094b2782e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1317a4c7-ab38-43ae-a939-7b9f185ddfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88c23fb0-030a-4d55-94ba-cf92f6e370ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2eba5d9-c67e-4b64-b7f4-5ac4de634151",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d39b3359-9c8c-4f37-ac1f-a73f949b5292"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50ded5f1-89e6-4cb3-b0d6-766f822dec15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86adb3b7-ba6f-4305-975f-5ff53cf8999b"
                    }
                  }
                ]
              },
              {
                "id": "98724e52-f4b7-46c7-8fc2-9e5a41caed55",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "281a1172-31bf-4cbc-8227-19d311d8137d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1c5c98-cd40-41b1-ad98-401536ed9843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8fc1f2d7-00f4-4eb9-a5c5-c5aaa07c11ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2299a563-6894-48b1-9fc9-7b9dd373d19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6836cf26-8f1d-4f75-abbf-67ec9e63b053"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e7dd4c5-d0e8-420a-8f44-8fd8df61369b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1ee0614-740a-48f9-a379-ebcb209108d6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63494830-aad1-4b37-bde1-8ad8e7282116",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "967c4f84-f15a-44b9-9c27-f46998fc367f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf8eb7d6-5ee1-4d60-acb6-99e1175da6d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fff49816-9a1d-48a7-9f81-54835747454f"
                    }
                  }
                ]
              },
              {
                "id": "14149ecd-ce02-4941-bb32-076a7ae97d2e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86280009-c752-4811-9487-601e996ad345",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7b534c9b-b828-4c56-b191-8424a1505473"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca684925-0eee-4b31-9046-6e34ce99952c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41abe6e4-d244-4e2a-8cfd-51219f6730f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "858b768b-1782-45fa-9c30-c77c2c1b4bab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "90d5ed7a-46cb-4c5c-a036-7c60f9af29f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22972a31-6770-4fd9-ac77-d0694cd50254",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c24f03d7-f8ba-4cee-8d2e-c08358acebda"
            }
          }
        ]
      },
      {
        "id": "3d5982c8-3a6d-430e-b62a-7829024e9ac7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "37604d4d-610b-40b8-bce7-f20c7b4ed297",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8b3a588-7cbe-4138-b480-d19dc0d274c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c021d52e-37a4-4f1b-b4ff-ab7e744c5fa7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16774496-3cbb-43f1-94fe-cd9d8be45039",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "df7fd69d-44d8-4551-b9d5-f8b13114dead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34401c3-b725-465f-afc8-0e3e677285b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "603c9e18-b3c7-48ea-8773-30a71f377129"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d71e18c-93fd-4c18-bf47-db9821c902ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88b9eb54-61ed-4bd3-b644-3f2315b3bb11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c44f370-b806-40f6-bf48-91b8db2ec235",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bdcd262-1739-466b-89ae-69a15844501e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21908403-5d27-440e-960e-14061a32f537",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "16d90fbf-7cc1-487e-8b22-2fc98df519f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35ed903a-ced0-4ebc-a3ae-eb0c5321e0e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1245ef51-177d-4eee-ab32-0194edfb373c"
            }
          }
        ]
      },
      {
        "id": "c21c1deb-44ac-4e20-9ba3-3b26b2cc9636",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "94bfede7-081e-4ab3-a923-b1a5d7ac4e72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2f60195-475c-42ee-bb96-9c42b3c2d3ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93d5e9d0-7fee-49b4-a2a5-e9db28a8deb7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40de6ab1-2849-4222-a5b8-d797e1bb3fba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0179200-7dd3-479d-b01e-918a4d527ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcf1bab-d125-4d4d-80de-6a42fa61823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b982ca4-6597-4d5b-98b0-68f432e6b79a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04f9ccef-500d-49f8-9c1f-f740b4e1a3b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a73f23c-3814-4f2a-beaa-0ea13f1920bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "160721bc-2cb4-4610-9181-2dd8194c5172",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff40fe3a-9b9f-45fb-adca-114369cdd383"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1260c257-82f4-48ff-ac04-a8638c10b929",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d785bdf-9c99-4e39-9e96-8df2d03072b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4748bb25-2e45-42e7-912a-385690acc960",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "063e951f-b473-4a1e-abeb-a22c68264a87"
            }
          }
        ]
      },
      {
        "id": "72144fc1-32bf-4f52-a99d-92b6e615e90f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "91b342f0-ef1f-4451-a43c-207371877c9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc39db0b-4a27-4af0-8cae-0364aa6fde9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e7cc08d-5c88-4329-abb8-76917d961bee",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51528555-62d5-4fd0-8ff1-d08e9491a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6e763d4-b6fe-4dff-9166-df3d80c651b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d2caed-36e4-4ea2-a648-21718dfa54d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c00efe34-5271-4e8c-a621-e9621a3f0fe9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "056a336b-4428-4940-b149-33dbe319b00f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b663f945-0357-4543-a8aa-78155de31f6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "448da40a-9bb4-4024-a0c5-a1ac0d25cffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daadf3f4-d616-4906-9c07-faf970e47c8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfbe092c-10ed-4a39-b491-07cf87208fbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c17c873d-c841-4090-b39d-1fa53363bd50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1a12f61-0463-425e-89c7-c75849488bd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a808958-cf81-41bb-aa98-2f47280d5038"
            }
          }
        ]
      },
      {
        "id": "40fb3781-1bc2-4e42-82c2-9ca3b3120cf6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1176bd68-99cd-49c1-9c67-791f2c54ffcc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1569aba5-c03b-4bf6-982a-0055c88c8fb4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "240d5beb-3d39-4835-b713-4d6e427c9422",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e24266c2-e45e-4a9d-8bb1-ba3b67a69ca0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb22f99b-bd1e-414c-8182-02da0693de37",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.98015873015872,
      "responseMin": 9,
      "responseMax": 7256,
      "responseSd": 506.2768821034155,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713055211868,
      "completed": 1713055245513
    },
    "executions": [
      {
        "id": "c72f803e-8dbf-47c6-9595-290276c9eee6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d18bd690-30b3-4c58-bddb-ffc9b5f1653b",
          "httpRequestId": "f3aac318-7961-492f-8f0c-418a8db30989"
        },
        "item": {
          "id": "c72f803e-8dbf-47c6-9595-290276c9eee6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0dfbf70e-1ae7-4722-b542-286132cf0ff2",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "a5ae709f-ebd7-4e23-ae86-446d5da44bbe",
        "cursor": {
          "ref": "ae7502be-6ca0-4ece-8105-7aa64642ce47",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "de6e16d2-34e4-46ab-be05-26acc5001137"
        },
        "item": {
          "id": "a5ae709f-ebd7-4e23-ae86-446d5da44bbe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "76366fb7-74d8-4d95-9a93-acd40d32e7b9",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "fa547f3f-c3ee-4cf9-9720-ccdc989a7054",
        "cursor": {
          "ref": "0dc51c8c-4e28-4fde-a522-b5cff07b9a22",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0d826e88-8245-4555-9163-e7bbfaf2a7cb"
        },
        "item": {
          "id": "fa547f3f-c3ee-4cf9-9720-ccdc989a7054",
          "name": "did_json"
        },
        "response": {
          "id": "a595262a-a362-4591-8235-801e6230a2b0",
          "status": "OK",
          "code": 200,
          "responseTime": 367,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb88f45-ac42-4282-a66a-49ea381803b8",
        "cursor": {
          "ref": "28ca788f-5da6-4106-aee5-494a98d17fcb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4707ee78-9a14-4244-9f7e-5ed2b62459d4"
        },
        "item": {
          "id": "cdb88f45-ac42-4282-a66a-49ea381803b8",
          "name": "did:invalid"
        },
        "response": {
          "id": "1b55023b-1442-49b9-b077-fcc1351a1e6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 435,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb88f45-ac42-4282-a66a-49ea381803b8",
        "cursor": {
          "ref": "28ca788f-5da6-4106-aee5-494a98d17fcb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4707ee78-9a14-4244-9f7e-5ed2b62459d4"
        },
        "item": {
          "id": "cdb88f45-ac42-4282-a66a-49ea381803b8",
          "name": "did:invalid"
        },
        "response": {
          "id": "1b55023b-1442-49b9-b077-fcc1351a1e6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 435,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f91195-b7b2-4ca7-ad9f-0f3bfb3e88fd",
        "cursor": {
          "ref": "d4deb4b8-e9bd-462e-9f59-19f2ecd0ba85",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9e410c8e-84fd-4f35-b1a1-c4e10af47975"
        },
        "item": {
          "id": "d8f91195-b7b2-4ca7-ad9f-0f3bfb3e88fd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d47c2214-58d4-436b-a22b-a01f780300ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84baa7d-d8b8-4ae6-898f-65e7b9550da8",
        "cursor": {
          "ref": "6090b887-2caf-49a6-95e9-31f861b96856",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "27425faa-2ed6-44ab-bbe6-098061cf84cb"
        },
        "item": {
          "id": "e84baa7d-d8b8-4ae6-898f-65e7b9550da8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "89c83b50-7f65-4879-9b5a-d13ce41c50b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e4612a-f3e2-4d74-8825-56e913b94a4a",
        "cursor": {
          "ref": "bce9617d-e364-40b9-a3ae-d2c6fde9b0da",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1129a1e0-2f4d-46f4-a2b0-b88db010a43e"
        },
        "item": {
          "id": "55e4612a-f3e2-4d74-8825-56e913b94a4a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3d0d527a-65a5-4d5e-8d50-a263424f6409",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913e0193-84d8-4657-b526-c41dbbfb1956",
        "cursor": {
          "ref": "c73dc815-2184-4047-858f-43eebf8301a2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "559eae9f-b18e-4059-b440-4bcc749243ec"
        },
        "item": {
          "id": "913e0193-84d8-4657-b526-c41dbbfb1956",
          "name": "identifiers"
        },
        "response": {
          "id": "c087f059-8010-4bb0-98a9-54dcf063d174",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f53e0e-f836-4008-a10d-bd7db71c3311",
        "cursor": {
          "ref": "6a2a1ccb-e22b-4f63-b9f9-bda21cc38ac4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "870b6c36-3049-41db-9dca-364d5bc43cd9"
        },
        "item": {
          "id": "11f53e0e-f836-4008-a10d-bd7db71c3311",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a170ee29-67cc-4bb1-a068-74f02fbb3f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c245d52e-4d9d-42c1-a53f-d7b9c982705f",
        "cursor": {
          "ref": "e37e1840-2cae-4fa1-b13d-01dd8eb54e9d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0233bc2d-a17f-4b49-b5af-72420f77b0c6"
        },
        "item": {
          "id": "c245d52e-4d9d-42c1-a53f-d7b9c982705f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d2e725e8-8aa6-4b4d-ac21-b8eaa6a1571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0693cbf2-3ecf-477f-a8a1-c8fc8273fdf4",
        "cursor": {
          "ref": "a4aecf85-fd44-4f88-8dfe-1aa0786ac410",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "720d15fc-b93b-4d7d-bcba-2779da939d7a"
        },
        "item": {
          "id": "0693cbf2-3ecf-477f-a8a1-c8fc8273fdf4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b0a53da3-ebf6-4aca-b0c3-f3e36ddeb31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff73304-ea62-4ffd-aefd-b85af7813f8d",
        "cursor": {
          "ref": "1c1de52b-460c-4902-b91e-39b7f64fe444",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b94f94a4-0093-4681-8c15-474dfde17060"
        },
        "item": {
          "id": "2ff73304-ea62-4ffd-aefd-b85af7813f8d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "06c61d72-71e9-439c-98a4-880ab4c012ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5d44aa-39b4-4955-8c45-6d48fe0964ca",
        "cursor": {
          "ref": "f64a2c6a-7167-4778-a841-699df7967029",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9c8f74a2-e333-40fa-8a7d-1a199948e6e1"
        },
        "item": {
          "id": "fd5d44aa-39b4-4955-8c45-6d48fe0964ca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c478ef22-9982-41cd-b82a-a0f6a78636fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a767f-c3f8-4217-9b19-3c27d06e98f2",
        "cursor": {
          "ref": "20280a25-b4e4-452c-87d1-a51a3a8f423b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d414c6f1-1906-4a31-83b2-01e39cac863e"
        },
        "item": {
          "id": "404a767f-c3f8-4217-9b19-3c27d06e98f2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eb8a896e-80a0-48f4-919f-261795efcf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f0e23b-4036-4356-a303-197704a07ce7",
        "cursor": {
          "ref": "b15c0db5-12d0-4ecf-ab95-a4121415cafa",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fa2485c1-1bae-4421-9fbb-6f030dabd8c7"
        },
        "item": {
          "id": "34f0e23b-4036-4356-a303-197704a07ce7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "327d87f4-f249-4e92-9bf1-282d7b8a303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b658b437-a6a0-4b75-bd00-a779266d3578",
        "cursor": {
          "ref": "1d651f52-8fe5-4eca-ae0a-87531454c35f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d1dfee3e-9db9-4afa-824c-ea97989d8f1d"
        },
        "item": {
          "id": "b658b437-a6a0-4b75-bd00-a779266d3578",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2e745795-a8e2-4f24-9de9-01e3af3092a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1336df0-60f7-4016-912d-669896daf6b0",
        "cursor": {
          "ref": "2d5412b1-869f-4c4c-b398-8a9c6de3c838",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0b8d409f-fa14-4e41-9469-072a8d30ae9c"
        },
        "item": {
          "id": "b1336df0-60f7-4016-912d-669896daf6b0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "245f5b97-3ba1-4cc5-beb1-62551cfa999f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fa5dd5-5ffe-404c-b5cf-e2c9082a405a",
        "cursor": {
          "ref": "cd2b3f14-2a90-4c91-8eef-cda35214b769",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0b8c7adc-9f3a-40f1-a652-27d4ec6c8a96"
        },
        "item": {
          "id": "e8fa5dd5-5ffe-404c-b5cf-e2c9082a405a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ba49fcf3-b683-4e54-aeee-fd0e8eabccfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef18917-6690-4908-91e9-1a3005703309",
        "cursor": {
          "ref": "ea92925c-d48e-48f1-82ae-1c97d8ed954a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0286a7e2-529a-40cf-b188-b44d27f25792"
        },
        "item": {
          "id": "5ef18917-6690-4908-91e9-1a3005703309",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "33182a77-07ed-45a7-a081-4290bf3c5740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f716f8fb-c5f7-47bb-a986-d0edf0319fcf",
        "cursor": {
          "ref": "a257dcda-659b-4127-8ad0-96c49577f05b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ca967f84-7f6b-4334-82e6-2b346150f11f"
        },
        "item": {
          "id": "f716f8fb-c5f7-47bb-a986-d0edf0319fcf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c830da4a-787a-4552-9637-7c0582ac49be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b296ee41-9880-40fd-b5b0-a4d613b6c56b",
        "cursor": {
          "ref": "a6485374-dbae-419b-a8d9-0d39b42985ac",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "92e4439f-bff9-462e-8084-acf872ac1f95"
        },
        "item": {
          "id": "b296ee41-9880-40fd-b5b0-a4d613b6c56b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "deddaa45-5d47-4529-9d22-1808af814a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a4395e-c76f-4ecc-84b9-8616dbd7956a",
        "cursor": {
          "ref": "27f3f60e-f968-44c2-abe4-4707c0a8aad4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "afa6e044-f3e7-4ab4-af84-d4bf9fcaaa7c"
        },
        "item": {
          "id": "20a4395e-c76f-4ecc-84b9-8616dbd7956a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6da244e2-7f20-4ab0-99b6-fa76cbea5c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80f549e-7ce6-47f2-a7b8-75f63c4002ed",
        "cursor": {
          "ref": "7b6502fb-4ffb-492a-bd41-8fc9fb515e85",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b27aa141-e879-40d6-95bb-fff3995caf7c"
        },
        "item": {
          "id": "a80f549e-7ce6-47f2-a7b8-75f63c4002ed",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3b6cf60c-aeb3-4331-b0c4-0d56cc8f82ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9750621-7fa3-470d-b98b-e1b83aa1dacb",
        "cursor": {
          "ref": "1f6f0b45-0c5d-4e91-a328-50cd488ef3e5",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7d889106-d72e-403c-a34e-6f8af35f3fa8"
        },
        "item": {
          "id": "e9750621-7fa3-470d-b98b-e1b83aa1dacb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "871bef9e-77f6-43fc-a7bd-aff2c97f6a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82336141-5978-4272-8a7a-d6455f6897f9",
        "cursor": {
          "ref": "4c984a99-55c3-4a25-a0c5-1f856a9dce37",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2cc814e5-c231-40b8-bb06-50907973d73f"
        },
        "item": {
          "id": "82336141-5978-4272-8a7a-d6455f6897f9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ece0f0c8-62e1-41ff-bf91-1dcd51e12f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06e24e9-e806-4d44-bfeb-752e190d9613",
        "cursor": {
          "ref": "1302474a-865b-4f49-8496-08037828ba07",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "776a4a18-a13e-401f-86cb-e47dfe796d81"
        },
        "item": {
          "id": "d06e24e9-e806-4d44-bfeb-752e190d9613",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "91fe6c1b-95f6-42f5-b547-8dbe26f9e9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c70770a-5e02-494b-83fd-1582eefebf0e",
        "cursor": {
          "ref": "294707a9-abaa-41cf-bcde-326c845040a7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2ee765b4-e53e-4e1a-9854-0194346778c6"
        },
        "item": {
          "id": "2c70770a-5e02-494b-83fd-1582eefebf0e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b7c318e3-ddde-4e8d-93eb-d9795bb2d33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9734d95b-0c55-42ff-a06e-667e732c43aa",
        "cursor": {
          "ref": "13ea6564-ef3a-4ee6-bc85-ea0c46bacf36",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ded5370a-d1c0-479f-a95f-e390188f7815"
        },
        "item": {
          "id": "9734d95b-0c55-42ff-a06e-667e732c43aa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "39e32a75-5824-4adb-996c-4074d4e26731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70327e89-bd02-443c-9933-df8ce33c2eee",
        "cursor": {
          "ref": "d290e50e-2d2b-48c9-8491-2d5a90cb8958",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d085d3d0-78f9-4726-8018-038a3294aefa"
        },
        "item": {
          "id": "70327e89-bd02-443c-9933-df8ce33c2eee",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3801909b-6e60-46e6-8e7b-3c0a60db8840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08351c4-f605-4dbd-ad8c-00e2e38d315d",
        "cursor": {
          "ref": "ac3a4b9e-c0d4-4a5e-8fa4-d9f5f7dc5971",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "444ab613-52a6-4777-acdf-ab6da6044b8b"
        },
        "item": {
          "id": "c08351c4-f605-4dbd-ad8c-00e2e38d315d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bc96d4fe-abfc-4088-b0cc-93193dcec6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b26077-ea7c-4975-bdac-acb3bbe1a6f4",
        "cursor": {
          "ref": "cb5eee02-6e42-4634-8cd1-ee815957d126",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4297bed9-5626-4be6-865f-927a492f96c2"
        },
        "item": {
          "id": "f1b26077-ea7c-4975-bdac-acb3bbe1a6f4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "11b01021-809c-4b51-83f5-88021b32d79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafa6844-b790-4a70-885e-afd8a5b3f936",
        "cursor": {
          "ref": "3ebae5df-b4fd-4296-a393-07193ca7ddd5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2ec9b115-8852-42d7-aa06-ed45ea358045"
        },
        "item": {
          "id": "eafa6844-b790-4a70-885e-afd8a5b3f936",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0b9696af-cd7d-4403-8c0e-228cf6379bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046e0d0b-d66d-4255-8426-2f28815ed574",
        "cursor": {
          "ref": "9902e50e-1b55-4e1d-9aa9-30a14048f29b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "def5e9a2-83f3-4b20-959c-0871d535a3c5"
        },
        "item": {
          "id": "046e0d0b-d66d-4255-8426-2f28815ed574",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a1c8c9ac-48c6-43d7-99ec-33ff21e0280c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661779d7-c182-4888-9d1f-ab59164f8f7a",
        "cursor": {
          "ref": "86ef89f4-334b-44ed-9c08-899bf77a1e3e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "17124f44-a314-484f-80e0-8c91642dfc75"
        },
        "item": {
          "id": "661779d7-c182-4888-9d1f-ab59164f8f7a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a0a63f7c-d2a7-4b44-8c80-48af279c1858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ed816e-7b56-4dfa-b321-2b493668be4b",
        "cursor": {
          "ref": "6491cbdb-6190-4280-aa5d-2355cb6ff95b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "20b85a5d-3b65-4f52-a8be-9a369220ee11"
        },
        "item": {
          "id": "d4ed816e-7b56-4dfa-b321-2b493668be4b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f311d816-412c-4fdf-8e52-b01fd45dfd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170046a5-6a7d-42d8-941c-f49f6882ff16",
        "cursor": {
          "ref": "2ba311c6-44f8-4a1d-8f9e-8b8be71d21b4",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "74408f2a-e4e3-4b22-ba0f-99113c7701e1"
        },
        "item": {
          "id": "170046a5-6a7d-42d8-941c-f49f6882ff16",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8c501f77-6521-4424-86d7-61fa68405761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ed4173-18c4-4fc0-a183-d1a8749adc5c",
        "cursor": {
          "ref": "3555e1cf-8b3f-4700-adf4-c874c861d148",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a92b4eb8-b73b-4e29-b787-de7b2e6491cf"
        },
        "item": {
          "id": "37ed4173-18c4-4fc0-a183-d1a8749adc5c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1f267cc7-ba40-4111-828b-f55709f82d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe655db-5bf6-43d5-bd20-dcc011f0ba2c",
        "cursor": {
          "ref": "5cc0ab21-c856-4f3f-b242-5c169473cc86",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "12c8bfe5-88d4-46d3-85ab-a7f6e1e034da"
        },
        "item": {
          "id": "1fe655db-5bf6-43d5-bd20-dcc011f0ba2c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a64c620f-d043-489f-b640-289d5c351daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4050e3b0-9127-4fe0-aa60-164744e69c14",
        "cursor": {
          "ref": "32e49b0c-fa66-4232-af87-4a5439ba3991",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "785d457f-1a08-426f-86d1-0af5d13f4bc7"
        },
        "item": {
          "id": "4050e3b0-9127-4fe0-aa60-164744e69c14",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bef82637-7ef5-4097-9f06-c2d194f5752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544652c3-c942-4e1d-9b88-1c9b530895f4",
        "cursor": {
          "ref": "0f4b4726-b77d-4235-b7cd-2e4bff53d6eb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "310efacc-d948-4359-b2a1-ec27f8f38886"
        },
        "item": {
          "id": "544652c3-c942-4e1d-9b88-1c9b530895f4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f8637644-1e2f-4ca7-9e44-2020ee2daabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfe5719-74a8-46e8-8884-4ed0622904e0",
        "cursor": {
          "ref": "20c3dfd2-c829-46e6-9d65-3ecc3628969d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "97caf642-5d4a-4179-8cc4-373697baedc5"
        },
        "item": {
          "id": "7cfe5719-74a8-46e8-8884-4ed0622904e0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c49c6e69-577b-4ef7-8c59-605ca81b0f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6e435c-0938-4441-92f1-fff438b845e8",
        "cursor": {
          "ref": "a2b151d6-7d46-41fa-866e-b06693f031f0",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "593c724c-171e-4b25-9252-2bf32944e90c"
        },
        "item": {
          "id": "ae6e435c-0938-4441-92f1-fff438b845e8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e2ad0ea5-e383-45ba-89c1-cdaa6c4ea9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfc89b6-c501-47f6-8592-48a6896c484f",
        "cursor": {
          "ref": "5eea0c2d-c4a0-46e0-bb0b-f54b1e351aa2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7d9515a1-f025-4a54-9db4-70cd3b83dac9"
        },
        "item": {
          "id": "7bfc89b6-c501-47f6-8592-48a6896c484f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "264497d4-b1cc-4349-ba96-2d534a7a8fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a356bfa-921b-4d25-a1c9-23304abc0188",
        "cursor": {
          "ref": "7e48a9db-76dc-4b60-90fe-80309fcaa77a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8d6e4b0d-460c-4801-9dca-c73b811e057f"
        },
        "item": {
          "id": "8a356bfa-921b-4d25-a1c9-23304abc0188",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "512d80ce-9407-42ed-8f01-d8ac7f591d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95983e5-d602-44e8-8d91-ac23e551934c",
        "cursor": {
          "ref": "d9e832c8-0ec5-4b9c-ab14-6c25c9def9bb",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f551b00b-1dbd-4f7b-b2bc-6dc83b2f1a74"
        },
        "item": {
          "id": "d95983e5-d602-44e8-8d91-ac23e551934c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2adf1bc0-c894-4b9a-a4a2-ad188dc76f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327e938a-3961-4dc7-aebe-96e39242b337",
        "cursor": {
          "ref": "4c88d86d-d339-4deb-9667-f71b5609f0b7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d186d829-3b7c-4b9b-9418-5faddcfce967"
        },
        "item": {
          "id": "327e938a-3961-4dc7-aebe-96e39242b337",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "94212044-2d49-46d3-901b-c1183b30d1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b889df06-b444-42e0-9c76-5962791fda68",
        "cursor": {
          "ref": "a019308d-1ca1-4261-b908-d6d20ad65078",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f3777d1d-b4da-48f0-9535-b2699d443093"
        },
        "item": {
          "id": "b889df06-b444-42e0-9c76-5962791fda68",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dcc66e9d-db06-4418-9104-a4a82826d7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48681cb7-295e-483d-97f4-40b089e30f0c",
        "cursor": {
          "ref": "db0d3f7f-6fd0-4555-b224-e9ab6434c84a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "55bdd7fd-d448-4d75-b974-422e1a2eec14"
        },
        "item": {
          "id": "48681cb7-295e-483d-97f4-40b089e30f0c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "62d492ea-e50b-44ae-82f7-0a8a4ea7bd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee09b21e-0c49-4198-87d5-ebea4a885f38",
        "cursor": {
          "ref": "d478a230-b6bd-4826-bcba-18c4d25673b4",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3a124907-28af-4519-bdc4-8385bb001003"
        },
        "item": {
          "id": "ee09b21e-0c49-4198-87d5-ebea4a885f38",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dc872cf7-1cdc-4850-9ae6-8c20d4f09599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e5eeee-b6c4-4a75-9221-05380e7c5b2e",
        "cursor": {
          "ref": "85ce9053-1ed5-41e1-b4c1-f6fd54545617",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7673e9e6-b15d-40a1-a529-2b92d1d6523f"
        },
        "item": {
          "id": "80e5eeee-b6c4-4a75-9221-05380e7c5b2e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e02cac61-9014-4f12-9a10-f22e048b70ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71caa439-6de9-465a-9161-0ce1192f3ae0",
        "cursor": {
          "ref": "222d7cd6-ebd5-4e20-8c4c-ec4efdb9b8b5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "19fb6a1f-4563-4430-829f-a48bbbf4f750"
        },
        "item": {
          "id": "71caa439-6de9-465a-9161-0ce1192f3ae0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "be7fd52a-5668-45de-980b-bd3772a40ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6342481-876f-401a-8c1d-a93e7b730063",
        "cursor": {
          "ref": "7079323b-c762-469f-b6a5-ac5d4b56f4e4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b23deb42-bd7f-46d6-a92f-b993f8074831"
        },
        "item": {
          "id": "f6342481-876f-401a-8c1d-a93e7b730063",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "34be3624-25f5-473e-b6bd-3b7b4890f5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4586e9b2-ca15-4f21-85f6-fa9ff83a36a9",
        "cursor": {
          "ref": "8d986c82-2246-410f-a6f9-f481ac97b907",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "edefe186-4dbf-489a-86d7-3b3226fb3611"
        },
        "item": {
          "id": "4586e9b2-ca15-4f21-85f6-fa9ff83a36a9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "acc5e871-9ddd-400a-b087-1b4412f928aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9503de4-164e-44e7-8d2e-3e337e966e2b",
        "cursor": {
          "ref": "88e9ceab-2f99-46c2-acc4-aa60f97830d5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8f09213c-ed11-4634-bef7-7cf3d05ffebf"
        },
        "item": {
          "id": "a9503de4-164e-44e7-8d2e-3e337e966e2b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0037c6af-f7a2-4051-b87d-72e23c811aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c6839b-cc77-4be7-9381-2f77696280f8",
        "cursor": {
          "ref": "49950b11-ea2b-41a2-83c8-f7b2772ec471",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0a8df251-ca47-493c-b631-e8e7a84f3076"
        },
        "item": {
          "id": "d0c6839b-cc77-4be7-9381-2f77696280f8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "162d2943-4c9b-4568-970f-00161a484bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82ef7d1-716d-40e2-a8c4-afc89f9f1a57",
        "cursor": {
          "ref": "5cc70f65-9347-46de-bac3-2b059de59f07",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fb532c94-92ac-4e55-921a-a883be69edf9"
        },
        "item": {
          "id": "f82ef7d1-716d-40e2-a8c4-afc89f9f1a57",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4c2fb0b6-7535-4539-b51c-d1349f32ab45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c06067-a789-4cb6-9227-bf1dd6da4200",
        "cursor": {
          "ref": "d74079e3-7914-49a8-9e55-c1ac1dd060ac",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7faa746c-96e1-4b6f-9205-1b4f4cc5a862"
        },
        "item": {
          "id": "89c06067-a789-4cb6-9227-bf1dd6da4200",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "51aa3018-513f-4228-bfea-332530cac7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8f5b95-daa2-4bf3-bdf1-c53c2033a3c2",
        "cursor": {
          "ref": "179fce19-b5cd-41bc-a669-e8205d1d4400",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b5d538dd-3c94-4a78-b75c-041afa02e22d"
        },
        "item": {
          "id": "1a8f5b95-daa2-4bf3-bdf1-c53c2033a3c2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "beaa3467-b9da-41bc-8269-519e079c683e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623c5ede-e83f-4ca2-afa4-a53a3b0061d5",
        "cursor": {
          "ref": "469b989c-66f0-44b0-8025-5c34bb598874",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e903f5c8-604b-4a83-8a51-bebec0ba7462"
        },
        "item": {
          "id": "623c5ede-e83f-4ca2-afa4-a53a3b0061d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c53ee13c-4e40-40cf-8c8f-f88838e1dedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3921285f-3a0e-42da-a4c8-649cb97a5a46",
        "cursor": {
          "ref": "a45ddb22-5b23-4bc2-8063-cc21388bec20",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "26a348af-14bc-4a63-b59f-7a08c080e6b1"
        },
        "item": {
          "id": "3921285f-3a0e-42da-a4c8-649cb97a5a46",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "56924a3f-5f48-48d0-92d6-07d9bf2475c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c001312-4918-4b44-a8cb-2e38151714ea",
        "cursor": {
          "ref": "97425c58-92a3-49dd-8aa7-e0be56c0dd83",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c00acf61-3516-478e-b429-1d8f7e73cf8e"
        },
        "item": {
          "id": "4c001312-4918-4b44-a8cb-2e38151714ea",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3fd8c776-084b-41a8-bf2d-b1acb2a9240e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50281168-0efe-4b7e-b07e-726fb1810fa5",
        "cursor": {
          "ref": "f376e07f-b3f6-43bf-9341-a6f128b8240c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "02f0dce9-71de-4cb4-82e1-53850555a90c"
        },
        "item": {
          "id": "50281168-0efe-4b7e-b07e-726fb1810fa5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0ed71e3f-e4ac-482f-88b6-5aa060307e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a36fe6b-a09c-4234-b1dc-92d0a2830082",
        "cursor": {
          "ref": "4ace7815-abc5-40bf-9a14-4ba96abb5c22",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6a448a44-5b28-4334-ab1f-78b779d254b6"
        },
        "item": {
          "id": "1a36fe6b-a09c-4234-b1dc-92d0a2830082",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4bcccc1b-5aee-42d9-a930-817dd034c52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c50a81-05ef-46d7-98d2-f8479e2bfcfe",
        "cursor": {
          "ref": "a949f1b0-2dbd-4d61-9bb1-b3ac50a60c41",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e17e4a6e-3504-4e71-b26b-468916db9755"
        },
        "item": {
          "id": "b7c50a81-05ef-46d7-98d2-f8479e2bfcfe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b487e999-0f1c-4ff3-9574-488c80024f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e08e4f1-d86d-4c49-8fe1-be754c0ffeae",
        "cursor": {
          "ref": "add219b8-f7f8-4156-bfb1-71608328c0e7",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8213e32c-423f-431d-b225-a27c20db3c4f"
        },
        "item": {
          "id": "6e08e4f1-d86d-4c49-8fe1-be754c0ffeae",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f07a910c-f148-4326-86b0-2dc7f37b80f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f255aa4-d864-4b1d-a918-d21ffa45e444",
        "cursor": {
          "ref": "dcfa1e53-469b-4331-8f19-3a4dfbbb4f20",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f2fba1fc-e2b0-4790-9972-f48e62a44c24"
        },
        "item": {
          "id": "1f255aa4-d864-4b1d-a918-d21ffa45e444",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f7695eca-45a2-4bb1-9986-34272f7f1018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a4c7ef-84c1-4f1f-a026-1d5b4e048752",
        "cursor": {
          "ref": "ca9a8a6c-6126-47c5-ba70-1345d7de2eaa",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "80219fa9-8d0b-4d80-bd06-8a3a2be5f7f8"
        },
        "item": {
          "id": "e6a4c7ef-84c1-4f1f-a026-1d5b4e048752",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a82473fe-3e6a-4a1a-b2e3-10212b27b2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab982a4a-855d-479d-88a2-7218b856efb2",
        "cursor": {
          "ref": "8aaa3272-de4f-4faf-8137-0e471389ee97",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "02ed0925-c60b-45e6-8faa-e58acfacca25"
        },
        "item": {
          "id": "ab982a4a-855d-479d-88a2-7218b856efb2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c8614714-1881-4729-ba45-fe338e289ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8784b86f-0b58-45f4-985e-e7a470dc4c8d",
        "cursor": {
          "ref": "fdade053-075e-4131-88a9-5d67eff2fdbe",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3b0bcaf4-3742-41aa-86f8-074460b294bd"
        },
        "item": {
          "id": "8784b86f-0b58-45f4-985e-e7a470dc4c8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b5fc5380-b96c-45b4-9451-e100aeef9b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa4b721-866a-42ce-8666-8c50711c725c",
        "cursor": {
          "ref": "7c2063a0-a0f3-4f0f-832f-2ae36aed6d65",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "95d79dca-82e5-4f7e-b066-ffe979fb3fbe"
        },
        "item": {
          "id": "1fa4b721-866a-42ce-8666-8c50711c725c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2ed9cb73-fe80-4cf6-9659-3181fd45d901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac0e4ac-ce62-4db6-9876-bc5009a4c9b7",
        "cursor": {
          "ref": "4f8fe1f3-690c-4810-856c-072174b7fc6e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9338cfd0-0306-44ee-849f-4d9c7a50370e"
        },
        "item": {
          "id": "1ac0e4ac-ce62-4db6-9876-bc5009a4c9b7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bfa13b19-8033-4336-89e3-48073aea672f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1b0c5e-bb27-44f9-b072-cd5fd1269e1b",
        "cursor": {
          "ref": "1fe7c668-3268-4063-9341-a00dcae44838",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "12249f4a-cb6b-4fdd-80bc-1c8e1a66e793"
        },
        "item": {
          "id": "8b1b0c5e-bb27-44f9-b072-cd5fd1269e1b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3b039146-137a-403e-ba67-6a5b60792116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303ee432-81b2-4488-8688-1167d3f671ab",
        "cursor": {
          "ref": "03308e47-2c2f-4a70-a227-2f75c322fcd9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0a780483-096b-4369-befe-6d4a6a57097e"
        },
        "item": {
          "id": "303ee432-81b2-4488-8688-1167d3f671ab",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "941f1185-766a-41c7-842a-835466834204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e51295-fa56-4606-a689-195f23527286",
        "cursor": {
          "ref": "77c4c1db-0a57-400c-924d-770713409f5c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "14686eca-80f9-45d3-912b-b48e3c7193d8"
        },
        "item": {
          "id": "e8e51295-fa56-4606-a689-195f23527286",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "27f16c20-f01e-45a4-b725-5404b8a64f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816468bf-8943-4d38-a322-1bd282c32acc",
        "cursor": {
          "ref": "fbf8a590-a8f5-426d-bba7-b826328f0cef",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "95c06fc2-06ee-449e-90b4-17a8a63bf6db"
        },
        "item": {
          "id": "816468bf-8943-4d38-a322-1bd282c32acc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7e8f6347-c258-4f09-9360-fa85f87e2d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad83315-0801-4883-b93b-4131cd0c4f08",
        "cursor": {
          "ref": "05d68240-4727-4c98-8709-c81731dcb497",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "536ca6b2-c6a0-436c-a1eb-12a198ce4a04"
        },
        "item": {
          "id": "6ad83315-0801-4883-b93b-4131cd0c4f08",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0987c3db-ce1d-4cf0-8957-4996e2d48c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486430c1-cd6f-4801-bd57-d802b7a3abd2",
        "cursor": {
          "ref": "a234dad6-3643-442c-b310-17a42ce1b320",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "94efa70b-41c1-4ce4-92fe-3a7a506a074f"
        },
        "item": {
          "id": "486430c1-cd6f-4801-bd57-d802b7a3abd2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c12b4b7c-fa20-479f-8428-a0592bcd5c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30023701-f745-4e58-b053-8bcd6ebe18dd",
        "cursor": {
          "ref": "a5639a22-e889-41ba-9635-10d689adcd4b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a9bf9fe6-eb12-42a5-9f60-8e33253940b2"
        },
        "item": {
          "id": "30023701-f745-4e58-b053-8bcd6ebe18dd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0ae712c1-177a-49c9-8b9a-782b45e9f236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02041e0-e01d-4b06-817c-6cf84963dd5c",
        "cursor": {
          "ref": "1e9faeb0-b9de-478e-b25a-02f5681d5e83",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6794cce1-ed4f-4144-9d7d-3082f8347509"
        },
        "item": {
          "id": "b02041e0-e01d-4b06-817c-6cf84963dd5c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b70d4d2d-037c-4163-889a-0277225e17c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81f1edf-0835-4263-a03c-e629764b349a",
        "cursor": {
          "ref": "4fbebdbe-34e6-4a48-99d2-7a9b92698ec6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "630df158-aeef-43f9-9f51-bcab0d541c8c"
        },
        "item": {
          "id": "a81f1edf-0835-4263-a03c-e629764b349a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e8dba08e-96f4-4fd8-88d1-3968efb4a0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffd7f9e-ff12-42e1-88b1-afe147f4bc2e",
        "cursor": {
          "ref": "9a3859a8-351a-49f6-ba2e-5945ac3f6888",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a23d6340-cb3b-4760-9dc9-41951e55382b"
        },
        "item": {
          "id": "6ffd7f9e-ff12-42e1-88b1-afe147f4bc2e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5169db29-7ead-4ac5-9b21-e6b44fd86e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3535164-a67e-4b48-bd03-3b39a1c746f5",
        "cursor": {
          "ref": "533fb78b-169a-4a17-a7be-54c5686a0311",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "83c6f22f-2776-43f3-b989-5c5adcc98d63"
        },
        "item": {
          "id": "d3535164-a67e-4b48-bd03-3b39a1c746f5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e0cd33ba-b956-4fa4-b02d-3556fac4212b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bad693-a338-41f0-a35f-88733e4cb717",
        "cursor": {
          "ref": "1cf3c295-4448-46df-8357-7f09ed60f132",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e3218a51-e743-4879-b0bf-75b4fc00f3b9"
        },
        "item": {
          "id": "c3bad693-a338-41f0-a35f-88733e4cb717",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "95b6ee9d-4915-42b2-a2e9-e9424fd95cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a9f0d4-bcb2-4ffd-976c-28562b20c7b3",
        "cursor": {
          "ref": "cfc05aee-d124-45ff-a126-45273a343877",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4de1498f-a162-467e-b16b-7c1545106a7b"
        },
        "item": {
          "id": "67a9f0d4-bcb2-4ffd-976c-28562b20c7b3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9055405c-7c97-4626-86f5-1cfa8d84493c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55809e13-d1a5-4e32-8b7d-80ec09e33f41",
        "cursor": {
          "ref": "935e58e1-1ce5-497a-9baa-cdf9cc61fc94",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "afd5572b-8922-4e3a-835b-735386fb2a1b"
        },
        "item": {
          "id": "55809e13-d1a5-4e32-8b7d-80ec09e33f41",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "808e6d10-aebd-407c-a902-ea472732accc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b764b4-eb56-425b-b850-43a2fd2f8fdf",
        "cursor": {
          "ref": "bcb348ed-dcfe-4726-bc1b-819e8f83b6ca",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ee969daf-88b8-47c9-852b-849decf626ec"
        },
        "item": {
          "id": "12b764b4-eb56-425b-b850-43a2fd2f8fdf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "edf3de02-1f5d-43f1-a0d7-48418350667f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1405f22b-0d90-41a0-8887-7b1aa500fae2",
        "cursor": {
          "ref": "a3b326c7-4f62-4807-927e-bd954aadd374",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "790321cb-59e9-46a9-b9a5-fd025bfa30a6"
        },
        "item": {
          "id": "1405f22b-0d90-41a0-8887-7b1aa500fae2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e8c672db-9cfa-4f08-9b2b-6166b292724c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ce179e-4985-4a2a-9edc-6e72f1c3a922",
        "cursor": {
          "ref": "bdbcf3d5-6ad1-4cd5-89be-ed34019e2fed",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "02689e8f-f337-4392-91ff-6021c3864f44"
        },
        "item": {
          "id": "22ce179e-4985-4a2a-9edc-6e72f1c3a922",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ee9d2a21-a278-4d06-ac1e-f617992c86a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5765eedd-de73-4ce1-854f-c526495d483d",
        "cursor": {
          "ref": "7ed4a479-7e81-43e6-9351-06b3d8ccc9fc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1f68ef89-01e5-4d20-b025-e6d7720a6bec"
        },
        "item": {
          "id": "5765eedd-de73-4ce1-854f-c526495d483d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "102d5901-c12e-47d6-b99b-8d7d0b9cab39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee09e657-c9fa-4b84-be9c-7de0951b8f09",
        "cursor": {
          "ref": "08bbb0c2-15fa-4285-9e99-fac165515705",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f1bc1177-bc45-43a6-bae6-e209710e60df"
        },
        "item": {
          "id": "ee09e657-c9fa-4b84-be9c-7de0951b8f09",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a312a47f-bba0-4a94-9e0f-89208155eab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccd567e-bb61-4541-bbdb-47a2d0f7c1bd",
        "cursor": {
          "ref": "aeb7af1d-fc00-4de7-b812-9c57672bb4bd",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "37cb1919-214d-4067-90fa-75ab4eabaff6"
        },
        "item": {
          "id": "5ccd567e-bb61-4541-bbdb-47a2d0f7c1bd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a3d71d1d-f7f3-4b5e-81eb-c5f8026849e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b61a3c6-929a-4410-a653-f05551fa6a3f",
        "cursor": {
          "ref": "b36e2b61-a44e-4c65-84d0-35c0f94d1c5f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "368f7b1d-8422-4c07-aab1-514cc9cfdc08"
        },
        "item": {
          "id": "5b61a3c6-929a-4410-a653-f05551fa6a3f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ae078ab8-a45b-4f68-bfe0-894552710e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed36f449-79e7-4a7e-9ab6-34a5fc5431fc",
        "cursor": {
          "ref": "606070ab-383b-4583-8732-483d53781c67",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f9790c44-6e84-463f-ad1b-a2aea67c0412"
        },
        "item": {
          "id": "ed36f449-79e7-4a7e-9ab6-34a5fc5431fc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "95483284-17c1-4f4c-a2fe-00932d7d9c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c6fee5-0d0b-4de3-8d07-f1805980290a",
        "cursor": {
          "ref": "f7839fd6-4423-45f4-918c-9111121fbc5b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c47dacab-fe19-4e95-9276-c78f9266072b"
        },
        "item": {
          "id": "52c6fee5-0d0b-4de3-8d07-f1805980290a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f0058740-2ec4-4241-b6d7-7cbbd7f3c097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94229830-b678-4465-9675-42062258976a",
        "cursor": {
          "ref": "af61d3a0-4d56-4803-a60d-93d0bf7b8cf1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cb9aa419-1e5d-4391-b722-1bc5e3ed575b"
        },
        "item": {
          "id": "94229830-b678-4465-9675-42062258976a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9cedf225-820b-4320-9e7b-7024c03344af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d57811-e88f-44a3-b4ee-d143a154d2fb",
        "cursor": {
          "ref": "b3a53c70-198d-41b6-9350-e4027eb4c3db",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7789973c-6197-4e9e-a8ec-d1001867e13a"
        },
        "item": {
          "id": "62d57811-e88f-44a3-b4ee-d143a154d2fb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c73c06ca-b126-442d-b66d-0b2570b0d89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315e29fd-6406-4369-8720-901f5ed52d8a",
        "cursor": {
          "ref": "5d57075b-cc53-4787-b18d-f75c8d525808",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2fa0f2cc-ab29-4cad-9bc7-cea9d28b47a3"
        },
        "item": {
          "id": "315e29fd-6406-4369-8720-901f5ed52d8a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0beded6c-c1b7-40ad-a5d4-a8d1f9765002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b96f2d3-cdf8-4255-8a0c-be9ff7cb8316",
        "cursor": {
          "ref": "2169fd97-4120-49c6-a03b-da3793548b55",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3ecac3e1-0ab5-449b-b554-fe7a67d4a749"
        },
        "item": {
          "id": "3b96f2d3-cdf8-4255-8a0c-be9ff7cb8316",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3a50a65f-dfdb-4426-9c4c-e452d246d26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e48580-2eae-4cb9-ac51-016813495f50",
        "cursor": {
          "ref": "32e5fbed-3e71-4521-9146-3b1277894389",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "686707b0-23bb-452d-bbb0-bed5d4f11693"
        },
        "item": {
          "id": "60e48580-2eae-4cb9-ac51-016813495f50",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6e366181-178a-431d-b7b8-360c548d1978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c04a60-d981-4b7f-8af6-ff35b985eb55",
        "cursor": {
          "ref": "0b7e13eb-de10-435f-ac25-4d0c54ef5d09",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0c68c604-72a3-4033-9bbe-bbf9a9c8895c"
        },
        "item": {
          "id": "64c04a60-d981-4b7f-8af6-ff35b985eb55",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f5330861-2026-45e5-b11b-af898eac9440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c7b186-79e8-48c6-bc78-9cfabc87f4ff",
        "cursor": {
          "ref": "d1b302d1-866d-41c0-b362-c8cb4a3fe5f6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0e58dfd3-927a-47b2-9939-0e3d2940fe5b"
        },
        "item": {
          "id": "01c7b186-79e8-48c6-bc78-9cfabc87f4ff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f58fef66-21c7-47c5-8840-5d97a00966e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8cb6ee-26b7-4641-8f73-1e256ddd783f",
        "cursor": {
          "ref": "2d90f26a-79d4-4e37-a745-1a05d8b534e3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ecd90d1a-fc39-401f-906c-042a1bea782e"
        },
        "item": {
          "id": "8e8cb6ee-26b7-4641-8f73-1e256ddd783f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "daa6442a-38c5-43af-923f-614bad23ce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "07d77cbd-cbad-481f-b8fe-9f7a51fba142",
        "cursor": {
          "ref": "3861fb47-7e07-42f6-bdfe-7cfb0671952b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "54d2646a-6922-4658-8460-91d4e737fd19"
        },
        "item": {
          "id": "07d77cbd-cbad-481f-b8fe-9f7a51fba142",
          "name": "credentials_issue"
        },
        "response": {
          "id": "041612d7-b37b-4e1b-bee3-fa52c069a1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "416e13a5-485d-4cec-b3de-19b409562086",
        "cursor": {
          "ref": "8d02732b-0fa3-4c40-8870-4af6bd058b6f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0316e7c6-7b62-4b8c-bd38-e4660ff7ac2e"
        },
        "item": {
          "id": "416e13a5-485d-4cec-b3de-19b409562086",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8c318d07-8d0f-48bb-a24e-514c7cb5a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ce31047b-f408-4227-b513-e3d9dd6cadfa",
        "cursor": {
          "ref": "2ac1221a-daa9-40fc-be6f-9ee2fb483b23",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "308d7583-9c6b-480a-876f-68ad66d05a8b"
        },
        "item": {
          "id": "ce31047b-f408-4227-b513-e3d9dd6cadfa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bce150a9-c3b7-4f74-8279-ae24f51255f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4dee3880-04bf-45d5-8863-2e5bda928328",
        "cursor": {
          "ref": "b3d081da-a30a-41d7-949a-ed6797efd065",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d35a05b4-ab1b-4f50-85a4-a5aa225a4327"
        },
        "item": {
          "id": "4dee3880-04bf-45d5-8863-2e5bda928328",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cac6458e-cb15-4991-82ff-28272d820d76",
          "status": "Created",
          "code": 201,
          "responseTime": 7256,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4622cacd-cd2e-4a30-8378-e3aeda2c79ad",
        "cursor": {
          "ref": "cc3c9b9b-a765-4483-8299-8ec74ff9329e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "46e3d8d6-822b-4116-9bec-623b6b4e0bd3"
        },
        "item": {
          "id": "4622cacd-cd2e-4a30-8378-e3aeda2c79ad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f774c70e-5778-4e42-a94c-b23d5c534e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "739e16f8-e53f-469b-bc2b-87825cc156c7",
        "cursor": {
          "ref": "1101bc28-172e-48b5-8b0a-16b63f5768f8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6cb20601-5fd7-4fc2-b0c9-9abee7c5a348"
        },
        "item": {
          "id": "739e16f8-e53f-469b-bc2b-87825cc156c7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7c3e412e-e800-416e-9759-204ccc954904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "23049de5-3a9c-47de-8f67-87897f3d90e7",
        "cursor": {
          "ref": "e5826ea8-0acd-4470-9baf-6a87409473c2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4459614d-a036-4294-a0a4-b3746ebdabfb"
        },
        "item": {
          "id": "23049de5-3a9c-47de-8f67-87897f3d90e7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec253184-5bca-4198-a13c-d0923424d387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b347e81-ab16-4559-8eb1-7e739c200420",
        "cursor": {
          "ref": "a255c63b-dd46-4b46-aa07-74407f56fd2c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "17ffc420-4676-4d34-a6ba-99a18dae7bd4"
        },
        "item": {
          "id": "3b347e81-ab16-4559-8eb1-7e739c200420",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "466caadb-edf1-46eb-9218-9c1d73e51b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c1236a-e2c6-4e33-842a-71304ee4229e",
        "cursor": {
          "ref": "12b1e279-918d-478a-b832-2deaed8d3f7d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e5eb0462-4273-4b86-b900-f5c2bda22a63"
        },
        "item": {
          "id": "10c1236a-e2c6-4e33-842a-71304ee4229e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8e97d899-aa96-4772-9ff5-3e18116608b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1f67e5-6369-4ad6-b813-8388471ff8c1",
        "cursor": {
          "ref": "382bf4d8-23a3-432e-b2c4-4d1e3b2f75c5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "eb7fd695-577a-49ef-8ee0-ac735546e0d2"
        },
        "item": {
          "id": "5d1f67e5-6369-4ad6-b813-8388471ff8c1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7269ed10-d15d-40ca-b5c5-0a25f0b6dbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15114710-3975-46a4-9914-001f2daf82c8",
        "cursor": {
          "ref": "04f15b3c-f0ba-42ad-9679-d766a3c3ff76",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4f017754-b089-4f6e-a1f4-a33cd0d4a0ae"
        },
        "item": {
          "id": "15114710-3975-46a4-9914-001f2daf82c8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fc8e4c2c-101f-4950-9648-9a9895871568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31026b3b-5d8c-4baf-9fe7-0c45a4307d1f",
        "cursor": {
          "ref": "d1c92711-21a2-4f61-b41d-7d7b8442eea8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7a91da94-40a0-48df-befc-2dd8bb8054a8"
        },
        "item": {
          "id": "31026b3b-5d8c-4baf-9fe7-0c45a4307d1f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3755652a-2737-40eb-b5dc-2208ba0a0692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3d1ede-1b16-4b81-9f91-599e5df9f5c6",
        "cursor": {
          "ref": "bb9e973d-5528-4f20-8e03-969c4a1d7795",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7aebc128-5473-4725-b810-8ec9a17f7986"
        },
        "item": {
          "id": "3b3d1ede-1b16-4b81-9f91-599e5df9f5c6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "47cc464c-4d99-4e0f-aaff-fefc35758fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c744a9-4150-4c27-a60d-77a48f5ff9be",
        "cursor": {
          "ref": "18b5b656-8a2e-4917-b179-290a7bd74f00",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "57086648-8438-4725-a44b-5705eb931ee4"
        },
        "item": {
          "id": "89c744a9-4150-4c27-a60d-77a48f5ff9be",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c420180f-84e8-447f-95cb-8864df823433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded28c3e-6b59-4869-b95d-db0cd06b204b",
        "cursor": {
          "ref": "40e11da8-e8e8-4cf3-8a43-192a919822d1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d40f5d30-e255-4ec2-82d4-d2819f8559db"
        },
        "item": {
          "id": "ded28c3e-6b59-4869-b95d-db0cd06b204b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "114c754f-625f-4ee0-a3e4-471ba77774cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d139e92-315a-4a78-bd54-fcd2bd89ad6b",
        "cursor": {
          "ref": "c4934d93-df09-4fcd-9322-3790a91c595b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0edb69d0-3126-4085-8c7d-068b62893f0e"
        },
        "item": {
          "id": "1d139e92-315a-4a78-bd54-fcd2bd89ad6b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ba205a02-ab57-4c63-8ee4-24c1fc1574fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562bb88a-5409-4b91-8b4b-a548c464fc46",
        "cursor": {
          "ref": "c6064a1a-d4f4-43d0-9c8b-4fee0dbab6c2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "82be02ea-1aba-41a6-96b8-8f0eb2e367c4"
        },
        "item": {
          "id": "562bb88a-5409-4b91-8b4b-a548c464fc46",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a670ac57-6d88-472f-b645-60a60bc6c87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562256be-56ea-4a17-afd6-803363e448b6",
        "cursor": {
          "ref": "04d3828a-d70b-460e-85c5-71cbabac2b5f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "08431c99-a7e1-491a-b214-cf0e15bf4440"
        },
        "item": {
          "id": "562256be-56ea-4a17-afd6-803363e448b6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0ff6a866-cdf5-47cd-913f-29890659d4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468a48bd-5dea-4f43-b4ce-ca8a0e920f57",
        "cursor": {
          "ref": "7f16d0bf-2f6a-4aa7-a910-d080e3666fbc",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "050a32ae-2c27-415f-a483-6bac2a40d657"
        },
        "item": {
          "id": "468a48bd-5dea-4f43-b4ce-ca8a0e920f57",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "633f4a30-3917-4b49-8738-64abf0fd0940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005c51c4-4d73-491d-90de-fe1ec72a86b9",
        "cursor": {
          "ref": "f9a101aa-4c9d-4aa2-977d-401b64ed295d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9622d84e-af0a-4a13-9b0f-f8d4a860d1f8"
        },
        "item": {
          "id": "005c51c4-4d73-491d-90de-fe1ec72a86b9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8bd162b3-90a4-49ac-8f93-634ca27ab693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b0b016-8968-4fff-a9c3-551c548120ba",
        "cursor": {
          "ref": "15c9e5e3-4e89-4936-8100-67b3f5aa9c7c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "76e7c120-ac7e-46a4-a35b-40f47c191df7"
        },
        "item": {
          "id": "84b0b016-8968-4fff-a9c3-551c548120ba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3d421b71-d7d1-4ff6-b085-10e87c577782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8189ac8c-b030-4d8e-a4bf-2c4a93d76cdc",
        "cursor": {
          "ref": "6e7b9463-f00d-4c68-8d43-99b645a9a432",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b93eb49e-5032-4fe4-be8b-1de6e0f56610"
        },
        "item": {
          "id": "8189ac8c-b030-4d8e-a4bf-2c4a93d76cdc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db3f5835-ebf8-446a-9f7d-df7b151e4c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838c7cf8-a420-450b-9bd8-e07438d82852",
        "cursor": {
          "ref": "ac79e9cf-6a5a-4eeb-983e-83086b7a0807",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "933cda4c-3a0a-4b4d-a37e-635d4ab3be0e"
        },
        "item": {
          "id": "838c7cf8-a420-450b-9bd8-e07438d82852",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c6e8d9c4-d1eb-4c16-8b74-661fa9e18db4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "bfdaaef6-2f2c-46f6-8bf1-a0117add03db",
        "cursor": {
          "ref": "5046e56b-4308-441f-a088-a94ca765edb9",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1624690a-0d40-47ce-9c88-bc2b5c50d82d"
        },
        "item": {
          "id": "bfdaaef6-2f2c-46f6-8bf1-a0117add03db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "89edc552-ac53-42ba-ab98-89122dca37bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32d38fc-46cf-4547-8e1a-eced3cee6cb9",
        "cursor": {
          "ref": "ee2d08dd-80a4-4dde-914a-b8d95fdfda59",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b7e637d6-e2ad-4195-a47c-d83d599872fd"
        },
        "item": {
          "id": "e32d38fc-46cf-4547-8e1a-eced3cee6cb9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d01cdaa8-b81f-4af1-987d-9402ed1f7452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fe6d56-216c-4048-922d-116e5ede8e5f",
        "cursor": {
          "ref": "0347982b-c3cd-454c-9a5c-6769cdb34e93",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ba5747e1-bb6a-4a9b-9648-2e592373a981"
        },
        "item": {
          "id": "36fe6d56-216c-4048-922d-116e5ede8e5f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0341099d-3608-4e15-b4b1-b87233098969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf68742a-1774-4133-add4-f0341b57932c",
        "cursor": {
          "ref": "3db19dd5-1152-4391-b0c2-513ca063b43d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "592ab538-c73a-4a9f-87b0-02cc30e18b94"
        },
        "item": {
          "id": "cf68742a-1774-4133-add4-f0341b57932c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f69043a4-53cc-41e0-aab7-2d45e8b78083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7416010-fff0-492a-9adc-5d74463a2fe1",
        "cursor": {
          "ref": "53ff3993-bf6f-4ae1-ae75-fc1d6ea04e6a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "555c433e-21e7-41c5-9ec6-e3c62ba442d0"
        },
        "item": {
          "id": "a7416010-fff0-492a-9adc-5d74463a2fe1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "640b647a-e9f7-4ddd-a842-d29b09ee36ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0051f9a9-0a97-437b-92f0-d3052ee63bb2",
        "cursor": {
          "ref": "474b1ee8-b347-4c40-8280-b1e1dc8434c3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "295f0271-4bc5-4a07-9c21-dee05cb01054"
        },
        "item": {
          "id": "0051f9a9-0a97-437b-92f0-d3052ee63bb2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "baee354b-e9b6-4d99-874f-d684b854050d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ec2a68-52ba-4c12-acf7-06310c6c0d0e",
        "cursor": {
          "ref": "138040bb-6a01-4f31-9e57-213f4a13829d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "15e5b71f-5a9f-4df2-a56f-2fa97f5b4662"
        },
        "item": {
          "id": "d5ec2a68-52ba-4c12-acf7-06310c6c0d0e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3cf0e23-7331-4a93-918b-b6099e1498e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ae8b7b-d218-4bfe-b44b-00077b3749dd",
        "cursor": {
          "ref": "d7fff283-3651-4e64-bdf2-846ab5f7af74",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bd2105de-3d58-4ad1-89bd-4abb33650b9c"
        },
        "item": {
          "id": "39ae8b7b-d218-4bfe-b44b-00077b3749dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "472a05f5-f22c-4c4c-a7ae-6bfa725f9775",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7e7689d3-fbde-4e1d-a4c0-aaaa1de41646",
        "cursor": {
          "ref": "e35cf620-0b8b-41fc-b44d-e5387eda2593",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c750d404-6d90-49a2-b89f-62de672a94cb"
        },
        "item": {
          "id": "7e7689d3-fbde-4e1d-a4c0-aaaa1de41646",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c07901ae-1fb8-436d-9756-359cfa186c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e6de8c-17d4-48c0-94bb-b427515c5041",
        "cursor": {
          "ref": "f44c1319-cbab-4c9b-a53b-c1dc92d9c3c0",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b499995a-16de-4f46-9f3a-981dae790f3b"
        },
        "item": {
          "id": "c9e6de8c-17d4-48c0-94bb-b427515c5041",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "96d32fda-80da-40ac-a63c-1f97c7289c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decc4496-04bd-4a77-abb3-c81c38c20d01",
        "cursor": {
          "ref": "9ab5b102-caf7-4cb5-b49c-009bfba4c083",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "238ac1e3-f062-4d3c-8906-585dea09963d"
        },
        "item": {
          "id": "decc4496-04bd-4a77-abb3-c81c38c20d01",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3775d8de-0f84-4c3e-ae17-72964bf7f9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e3bd64-8f6d-4039-969e-3bb32618a34f",
        "cursor": {
          "ref": "fc95b113-2c2c-4179-9f4a-914028a7f6d6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2597d3d2-eb1f-4aec-9e34-595435498fe8"
        },
        "item": {
          "id": "b8e3bd64-8f6d-4039-969e-3bb32618a34f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86a808d4-ca51-4b62-88b0-101304697521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698337b5-196b-4e33-9953-5f0babfeae63",
        "cursor": {
          "ref": "d067382c-a097-4fcd-9544-0524aa052129",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9449a8cf-45f3-456f-b90f-b38d65c0db4f"
        },
        "item": {
          "id": "698337b5-196b-4e33-9953-5f0babfeae63",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d9d4ff18-1ed1-43e0-8540-cab761d637a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d53a9a-2dc5-4c0c-b4a4-78ec135e6fcb",
        "cursor": {
          "ref": "1c62b4eb-9065-4e21-80b2-7c67d18a0274",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "49d86110-199b-4e4d-bdfb-0b194bd1df67"
        },
        "item": {
          "id": "08d53a9a-2dc5-4c0c-b4a4-78ec135e6fcb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6cc08e3f-063c-4d46-b14b-a987664fdd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fea391-0931-4299-bdf6-575bae8c24da",
        "cursor": {
          "ref": "d480369f-0868-4199-88c9-8455888a26bc",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bc5c8f07-067a-4526-bd46-8da419000aea"
        },
        "item": {
          "id": "f3fea391-0931-4299-bdf6-575bae8c24da",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "42a3257b-ec00-409b-b7df-cb59554f7d85",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "eb62842b-0731-4639-acf7-78bd7a4c90a7",
        "cursor": {
          "ref": "9fef9b8b-23eb-411d-befc-c8e2f5e05059",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "59a421e8-93c4-4333-9610-8b1d979303c5"
        },
        "item": {
          "id": "eb62842b-0731-4639-acf7-78bd7a4c90a7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f5394053-146c-4f57-98a5-c6d229b84190",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "496276db-5eec-42e2-814d-5b9f6a6b5fa9",
        "cursor": {
          "ref": "79772c9c-54ae-4b62-8998-2b82462f35ba",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4cc87d2a-87a9-4c7c-9e99-7094f9a6aec8"
        },
        "item": {
          "id": "496276db-5eec-42e2-814d-5b9f6a6b5fa9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "18102832-7178-47c0-a8d9-850c9e173e07",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "48facce4-6b4f-4a68-ac7b-16aea5e51543",
        "cursor": {
          "ref": "a09eed86-5acd-4f82-aaa5-0e320664667c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "814a8b09-dab8-4bbd-b26f-f83d6574ed96"
        },
        "item": {
          "id": "48facce4-6b4f-4a68-ac7b-16aea5e51543",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2e9492b1-5e6c-4dce-b36a-3e710f0bb502",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "5f21a8e4-e96e-474a-97b3-2462f13e92e3",
        "cursor": {
          "ref": "3e112f75-841e-42a8-a9c4-f22e5aad43c2",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8c9be039-bc68-4cff-9c4d-be38e6f964fc"
        },
        "item": {
          "id": "5f21a8e4-e96e-474a-97b3-2462f13e92e3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d6ce2847-cc25-4426-8d2a-537355e9e573",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "a124d99c-0f0d-4334-8315-287cd85eb7cf",
        "cursor": {
          "ref": "42676960-3f3e-48f8-9ac7-bbcf8bd5c95e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "faa82f41-8a6a-4135-89c5-1bd278df7d4e"
        },
        "item": {
          "id": "a124d99c-0f0d-4334-8315-287cd85eb7cf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3f68a709-b737-4a66-8b6f-448cb2ebbedd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "3e3ec6c1-4a6a-428a-b261-d5f48e33119e",
        "cursor": {
          "ref": "2af3c428-375b-4257-b0ee-ccd6126e731f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d8e1510d-2465-4061-837d-20f7aea8a1a9"
        },
        "item": {
          "id": "3e3ec6c1-4a6a-428a-b261-d5f48e33119e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a75ac24f-e23b-44da-8411-6a4e197aed86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6e3260-93c4-4eac-9cf3-d56237c56f30",
        "cursor": {
          "ref": "a2f7f4ce-2b41-4fc6-9383-37fc4aa425b1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bcbfbadc-7e01-40bc-a6d4-94d37ab9f2ce"
        },
        "item": {
          "id": "cc6e3260-93c4-4eac-9cf3-d56237c56f30",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "af0f29b0-7e90-46e0-a567-7ea8041787d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aac66a-8f3c-4c4d-b254-36465c604b1b",
        "cursor": {
          "ref": "0566c1e5-c1dc-42de-9819-1d70fe1020c2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eeafd317-09ba-435c-8c76-b198dc198661"
        },
        "item": {
          "id": "19aac66a-8f3c-4c4d-b254-36465c604b1b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "577ced8a-8ea0-460c-927b-e01db5e558f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa97fc64-3917-4d6e-a896-c8403bbf5422",
        "cursor": {
          "ref": "80c2e7b2-94b3-4001-91a0-4f00a6f5271d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "65ac91c0-a5c2-40d7-82c7-421e21e96bc3"
        },
        "item": {
          "id": "aa97fc64-3917-4d6e-a896-c8403bbf5422",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c0683c88-1773-4806-8a23-cfe654343ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26f171b-1813-468a-9c51-b9ffeab5a03b",
        "cursor": {
          "ref": "9655d566-64ac-4e46-8559-bc7ee32c4da8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "29bf6d4d-a460-41f7-80b8-0a448d35197f"
        },
        "item": {
          "id": "d26f171b-1813-468a-9c51-b9ffeab5a03b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9dcc8d3a-9dde-499b-be95-0ea0d227dd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ca1946-0773-4ae1-97c6-b421eb5d7cf5",
        "cursor": {
          "ref": "0ab62582-bad5-476f-9c10-c0fe591be66f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6da865dd-6ca4-47af-8d8a-4d224db74b95"
        },
        "item": {
          "id": "25ca1946-0773-4ae1-97c6-b421eb5d7cf5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6063682d-522f-4bee-a202-46a61b15613c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764031c7-1ce2-4046-95aa-2099c94bad38",
        "cursor": {
          "ref": "f8ed2a17-7717-4ba1-9763-ab86bde75d94",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cd5717a8-102b-4da3-b40d-894a225ce93c"
        },
        "item": {
          "id": "764031c7-1ce2-4046-95aa-2099c94bad38",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "aaeae7ea-8574-4c4e-a6ca-8ab44bc5257f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547b4e69-1614-4c53-94b7-ea785bd5572e",
        "cursor": {
          "ref": "81758cfa-abc8-449d-9cc0-70ac6b9e4360",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "791e0258-c743-4254-916f-7d43b4aee060"
        },
        "item": {
          "id": "547b4e69-1614-4c53-94b7-ea785bd5572e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "208784e7-452f-4bc2-b05e-1c9d41f1b313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84fcf5a-cc19-4517-b85d-74db41bd0034",
        "cursor": {
          "ref": "2a6f8b54-356f-41c9-97e1-7dfe13823b37",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e9bcbe3c-41fd-4169-a90b-d1c54d5f1d48"
        },
        "item": {
          "id": "d84fcf5a-cc19-4517-b85d-74db41bd0034",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b8061f46-5296-4b2a-87d5-2df60717e47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f328273-1e88-4722-b58c-e76d35fe4f36",
        "cursor": {
          "ref": "3d4e5faf-6fcd-43af-8993-96deb1f740a4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "85839ed0-cd06-49d4-b8e4-80fa50b3135f"
        },
        "item": {
          "id": "2f328273-1e88-4722-b58c-e76d35fe4f36",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3ada9579-88a1-4cc6-8b82-7594deaf3ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cc80d4-f318-4e16-8277-a2a6e6c11d3e",
        "cursor": {
          "ref": "7663ff76-7b20-4f6a-a170-0d267e8eaf61",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1f0860ab-f6d8-4aa1-970c-bfd9515ee31a"
        },
        "item": {
          "id": "07cc80d4-f318-4e16-8277-a2a6e6c11d3e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9ddf082e-9bea-45d1-87f2-09a2e771b655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd15964-5177-4528-8a95-cf6d836eddf8",
        "cursor": {
          "ref": "8f55d3f1-aca0-4fa3-a171-4ef50f342bde",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "52b541e0-6294-4339-9fda-b19f114d0445"
        },
        "item": {
          "id": "5bd15964-5177-4528-8a95-cf6d836eddf8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "51fd44db-8ae2-42e6-a866-2c420df8ce6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44831ff-b33f-48fa-b5b9-301b9ecdeb2b",
        "cursor": {
          "ref": "e593909f-c392-4688-83af-4140daba1bb3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8581ceaa-50f0-48d9-b678-1e7ebc757644"
        },
        "item": {
          "id": "b44831ff-b33f-48fa-b5b9-301b9ecdeb2b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2d731298-0171-4bad-82c9-f73595cfc14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b37d87-5b25-434e-bd27-0f4be085bbb3",
        "cursor": {
          "ref": "ecbed87a-cc17-4c29-a7a2-28bf9f7968c7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6bf71451-d91d-42f9-9ab8-7493b82ae5ec"
        },
        "item": {
          "id": "00b37d87-5b25-434e-bd27-0f4be085bbb3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6edc0fc8-eef5-4666-9b2c-cdf9e40b0d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9bf650-83a5-40f8-84f2-037ac7cc215a",
        "cursor": {
          "ref": "93a2c3bc-7c4b-4050-92dd-5c4c7a59c60e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "42f8e52d-2f5d-44cd-9c9e-e2e1ce49d17b"
        },
        "item": {
          "id": "5c9bf650-83a5-40f8-84f2-037ac7cc215a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cc8466f9-3619-4e75-8e67-527041970969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db68f591-c36a-4ca5-a31c-fea948accec7",
        "cursor": {
          "ref": "916bf884-83d9-44ce-ab46-6e91590c2341",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e3392ef7-2e57-4345-b83c-da51299eff78"
        },
        "item": {
          "id": "db68f591-c36a-4ca5-a31c-fea948accec7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "43d35101-450c-4b7c-8f53-bcd2d66f12a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa2f406-5078-4731-a337-a9235797677e",
        "cursor": {
          "ref": "2b37d68d-c460-4a36-b9be-a176fc2cad36",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7f5d0423-19d4-451e-b9c0-8b1100b5be7a"
        },
        "item": {
          "id": "8aa2f406-5078-4731-a337-a9235797677e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ebb52e99-f477-4a14-972e-b17e42abe2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a889957-96fe-45f5-85c5-82cbea80163d",
        "cursor": {
          "ref": "69ea0f65-755a-430b-8b79-33d5bc4bc7c6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f669b651-085e-4923-b8b0-1ae9385d33e6"
        },
        "item": {
          "id": "4a889957-96fe-45f5-85c5-82cbea80163d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ce1d4b81-4f9f-4084-a2f6-66137330f491",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "21672a5f-ceb5-4376-a955-c2c65412034b",
        "cursor": {
          "ref": "aabd0dda-fec1-4a3f-9776-207a24ad71d3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ad228470-e658-4e90-bc3e-605922ff68f3"
        },
        "item": {
          "id": "21672a5f-ceb5-4376-a955-c2c65412034b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b365d7cd-18c4-4adf-ad2e-d8ae5c21e3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2932784d-8e52-46c0-9792-d96786f5ee3c",
        "cursor": {
          "ref": "e206f277-511f-40b9-bf34-7177a5f5502f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "160920f0-3e76-4ef2-932e-bce76fae8cb3"
        },
        "item": {
          "id": "2932784d-8e52-46c0-9792-d96786f5ee3c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1e03fdb3-ea07-4b31-90f2-f5df9dd90d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30a8485-9b19-4ad3-bda8-0c30bc49ec7e",
        "cursor": {
          "ref": "ce950c50-62ba-4508-9196-a0bf3058eb03",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fcf337ca-cb5b-4d51-9ca2-9f1462dc0fbc"
        },
        "item": {
          "id": "f30a8485-9b19-4ad3-bda8-0c30bc49ec7e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1d9b02d5-7cdb-493f-9c4e-3f9a8b90bb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdcc439-f6bd-4d85-921f-dbcfdd0d8d3a",
        "cursor": {
          "ref": "8a0f1d7d-0493-403b-a9fc-f3064ddc3f39",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cccf3b9e-d0b5-41f1-8c0c-b9e875091c14"
        },
        "item": {
          "id": "ecdcc439-f6bd-4d85-921f-dbcfdd0d8d3a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e45f4bc7-c149-4afd-bfd8-922f443444a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b59a39-6107-43c0-be3f-22faf1848e9a",
        "cursor": {
          "ref": "a8c1c343-e698-4b7c-ad2f-d602e94f8022",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ca80d890-fc42-43c8-8850-5fa0eb4431d9"
        },
        "item": {
          "id": "82b59a39-6107-43c0-be3f-22faf1848e9a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a6ae4ef1-2826-4ad7-a731-166a48636622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aec82ed-bcc9-4e18-9210-ffeeeaa9449e",
        "cursor": {
          "ref": "0f7737a2-b28e-442d-bde4-064d4e689ce4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b576b297-bbdc-4968-8f1e-f97952e63aaf"
        },
        "item": {
          "id": "0aec82ed-bcc9-4e18-9210-ffeeeaa9449e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "59886bde-e8a6-46ba-8a32-b163805f9339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e80ea7-244e-42e2-ab0d-ec9817152f36",
        "cursor": {
          "ref": "4ee1353a-95f3-424a-82e1-f6da2fcdf255",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6dbe3c6d-f9ea-4b87-8a6f-037fb3f9028a"
        },
        "item": {
          "id": "59e80ea7-244e-42e2-ab0d-ec9817152f36",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba207841-d79b-4e41-a18f-3b275c842d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b894e6a8-2629-45bc-94fd-7e5711b8bde1",
        "cursor": {
          "ref": "1ab5f24f-42fd-449d-9d5c-f5e312fab6d5",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "18393d3a-2436-4f83-ad5f-97a6bac557ec"
        },
        "item": {
          "id": "b894e6a8-2629-45bc-94fd-7e5711b8bde1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3f7d6ba1-67e3-4fa0-a025-8a1a304cfb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d65706-b1ba-4dab-bdbe-c9f2c2f3fbf5",
        "cursor": {
          "ref": "901fc807-376d-4a21-928b-efb57543f692",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "33349237-c150-43fc-8e28-eecb2588f903"
        },
        "item": {
          "id": "90d65706-b1ba-4dab-bdbe-c9f2c2f3fbf5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "eea3e79e-5cb1-4beb-a591-e21d8d3f44dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cba4bf-9031-47b9-aabc-3080f4137e40",
        "cursor": {
          "ref": "625d7994-24b4-41ad-8a60-ea80bfe60c34",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e3d04714-491c-402b-b354-ca21a9e87e35"
        },
        "item": {
          "id": "68cba4bf-9031-47b9-aabc-3080f4137e40",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c27d1a01-d0cc-4b90-99a9-0649f6a0faff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55144e8-9cc7-454a-909c-0996a1249113",
        "cursor": {
          "ref": "4c7c72f4-4579-4337-94e0-edc6bc8ab0b5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8ca498c9-c936-4b99-b13e-14dfdee1f636"
        },
        "item": {
          "id": "c55144e8-9cc7-454a-909c-0996a1249113",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cf956604-4e13-4de2-a4b9-555c50254b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128c491e-b7ea-4e7b-94ec-09d803e67527",
        "cursor": {
          "ref": "99b8ac91-4cf3-4e46-adcb-40c8b698a411",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c1663405-7213-4627-81e6-bb5bc9578dc7"
        },
        "item": {
          "id": "128c491e-b7ea-4e7b-94ec-09d803e67527",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e20d0e60-64cf-4564-8fed-fcc6b321872b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27185e31-f380-4989-8f38-1ba5b3c0db21",
        "cursor": {
          "ref": "5565d45d-f944-4718-badb-0204e9fad733",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7d3bba1f-acf1-47d1-b138-38760f694dda"
        },
        "item": {
          "id": "27185e31-f380-4989-8f38-1ba5b3c0db21",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "525693f0-e800-4181-9084-162fb416cb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd97ce1-4ca5-4c3e-917d-ec7f07aa630f",
        "cursor": {
          "ref": "6cca1958-46bb-4962-bfe3-eba7e49e7981",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5cf845cd-617d-4e1f-872b-61667f4d885e"
        },
        "item": {
          "id": "fbd97ce1-4ca5-4c3e-917d-ec7f07aa630f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6b2f1623-da3b-4a45-8248-948e5ab18a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f3d0ac-9dc2-4cd0-b2e3-e118f54b34ae",
        "cursor": {
          "ref": "9db99da0-fa09-4827-acb0-a58a127142e4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "85172364-aa07-4e98-90d2-371891843ee0"
        },
        "item": {
          "id": "90f3d0ac-9dc2-4cd0-b2e3-e118f54b34ae",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f0b36b1c-f3e4-4e85-b3f0-8eb6528bc5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93523573-6665-4122-b67e-e2ffcca1ed76",
        "cursor": {
          "ref": "d39b7f7c-1535-4775-bbc0-c841e088e776",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "78d3ab72-44ee-4fc9-b01d-89a2ab5e1461"
        },
        "item": {
          "id": "93523573-6665-4122-b67e-e2ffcca1ed76",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fdfe06a8-92b9-4abe-a960-3a048cabfd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a58892-6e32-436c-a37b-54355f786481",
        "cursor": {
          "ref": "9e9c2954-46bc-4a22-b138-7e30f37e97ba",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4ec7ed2f-1d7f-46ee-82e8-7ac0e2c8918d"
        },
        "item": {
          "id": "d1a58892-6e32-436c-a37b-54355f786481",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1387f827-f2cf-4711-80ba-55672122323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b67887-7797-4b18-a82e-06b7c0fd7e05",
        "cursor": {
          "ref": "17c2872e-402b-4784-aadc-76a6b8771ead",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "47d5d385-3651-41a8-b0c4-00304f4bb019"
        },
        "item": {
          "id": "15b67887-7797-4b18-a82e-06b7c0fd7e05",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1434507-16a2-49fe-984f-c1ea4223c28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d146e04b-d861-49f5-bf7c-f8bd81fa8a3d",
        "cursor": {
          "ref": "76046c47-27a1-4c9a-b5fd-df222500b2b4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e1581b15-7589-47aa-b8c5-522c63b6d777"
        },
        "item": {
          "id": "d146e04b-d861-49f5-bf7c-f8bd81fa8a3d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7677e394-fed4-45f3-bf1c-f5e276d2b830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67270cbf-a818-4a25-b785-031adf9291eb",
        "cursor": {
          "ref": "b8392f4b-de52-4479-8c49-e2c33deede4a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "169b8821-8b6e-4c96-affe-5d0034c4bb12"
        },
        "item": {
          "id": "67270cbf-a818-4a25-b785-031adf9291eb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d70c3a58-096b-4fe0-9277-884e86d11da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dfcdb0-3b3d-43ef-836e-38490e9f8561",
        "cursor": {
          "ref": "4def6531-cbf4-43df-86e1-052b73e9b8f6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "588c0dbd-2470-44ee-8e8e-4977067fab92"
        },
        "item": {
          "id": "50dfcdb0-3b3d-43ef-836e-38490e9f8561",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d094f39e-4868-45b7-9ebe-a5109cc30a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc594f7-1b96-4853-a147-d28d578eca2b",
        "cursor": {
          "ref": "8b803e08-51b2-487f-b660-e29ee9ccffcf",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a309e91d-d595-43ff-8dcc-0f88ea94dac3"
        },
        "item": {
          "id": "2cc594f7-1b96-4853-a147-d28d578eca2b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a36b658c-d615-4eca-b261-2d328223d408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45737d02-0de7-49da-be9b-5be47f562863",
        "cursor": {
          "ref": "b8d50e13-933d-443d-9e53-17fb314dd04c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "889068f5-70e3-4834-ab0e-dff91addf103"
        },
        "item": {
          "id": "45737d02-0de7-49da-be9b-5be47f562863",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "253cbf45-4698-4a9a-a95e-1f79e76b3624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef03497-0d44-446f-bee0-b4b7a13183c1",
        "cursor": {
          "ref": "726a0ce2-6689-480a-86c5-1dea54bc9c13",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "283f2d7a-7f72-4e42-a8d5-daa105079cf7"
        },
        "item": {
          "id": "cef03497-0d44-446f-bee0-b4b7a13183c1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9cde5057-c0dc-4067-9a05-6e31fbe480ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d51575b-58ff-42d7-9754-ed4f6e1a91e1",
        "cursor": {
          "ref": "16f1e390-f369-457b-8ff8-3fa3067aa6a7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f9cfc7b3-2ee7-4aaa-aed5-2aaf3e1bf349"
        },
        "item": {
          "id": "4d51575b-58ff-42d7-9754-ed4f6e1a91e1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c98124e2-f98c-4b60-aeca-b1e738522518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac989cd4-65fa-4fd7-98eb-328007c773d1",
        "cursor": {
          "ref": "c6f34cd0-022b-4722-bac5-38ba0a97ef92",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8c6f9153-6187-4d87-bd21-558cc55e51c7"
        },
        "item": {
          "id": "ac989cd4-65fa-4fd7-98eb-328007c773d1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e25f2a2a-77fb-4f9d-8ba8-b08e279bfb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d66df5-886b-4849-8ed9-000a7ac18869",
        "cursor": {
          "ref": "5ca3cec9-7ab6-43a7-83e2-30afc60af1b1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5550ba9b-d8aa-40a2-9025-0b903e331727"
        },
        "item": {
          "id": "d0d66df5-886b-4849-8ed9-000a7ac18869",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f152ff1d-cfd7-4869-9d39-d7fe36fcbbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80056891-5dc6-4202-8619-f572856663c1",
        "cursor": {
          "ref": "050204cc-8f7d-409c-8bb1-124290175660",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "824e39c2-1631-4cbb-ac79-a14ae3024922"
        },
        "item": {
          "id": "80056891-5dc6-4202-8619-f572856663c1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0840b8ec-ec9e-4068-a7af-e55bf1d3a922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6984cb1e-c911-4337-86c1-008fd471f20f",
        "cursor": {
          "ref": "401f41f2-6b51-42bc-8b21-3d43cc77edcb",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "10e52037-7b66-48f3-abd7-fb774194bffa"
        },
        "item": {
          "id": "6984cb1e-c911-4337-86c1-008fd471f20f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6bfd35a0-e829-4067-bcc6-f58e887e6317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b75d49-1e83-4272-b78a-05cabab60280",
        "cursor": {
          "ref": "84034607-61d8-46d7-9043-bd3090e6e751",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "13c81223-12b6-4988-a3aa-c6e0821a9005"
        },
        "item": {
          "id": "c4b75d49-1e83-4272-b78a-05cabab60280",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a76fead5-415f-4e57-a0e6-bcad0aae1483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437f591b-def9-471d-8e1b-1f7dc018b2c7",
        "cursor": {
          "ref": "9599c3db-421b-4cc8-81bd-ffe22edf5067",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f55f286d-e112-406e-b4ee-b9c8957add0e"
        },
        "item": {
          "id": "437f591b-def9-471d-8e1b-1f7dc018b2c7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8405c396-3aca-4eb5-b539-4be489d2d526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dcfadf-a5e7-4977-88ae-79e640752533",
        "cursor": {
          "ref": "4c092580-22b0-484e-95bc-1215e881f9d2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7c7cf696-02e1-4c7b-a254-492c4fe405c8"
        },
        "item": {
          "id": "e6dcfadf-a5e7-4977-88ae-79e640752533",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b9c32099-9e91-4477-82b5-2bfb2a6fe859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7b2a0e-6437-486e-8d6d-7ba8dfe52c8a",
        "cursor": {
          "ref": "0145d0e5-c7e8-43e2-a908-0e021638415b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7b717f81-8439-4c7d-9873-8fd9a139ea3f"
        },
        "item": {
          "id": "1a7b2a0e-6437-486e-8d6d-7ba8dfe52c8a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2204bfe5-0f98-49b2-a3a5-92f702d07db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb128d9f-0dfa-4998-81ef-842f54dbc280",
        "cursor": {
          "ref": "1034e18e-fe54-44c8-8543-beb327a86de4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "49a3c27f-0205-4a2f-80e0-10fe7e44a9a5"
        },
        "item": {
          "id": "bb128d9f-0dfa-4998-81ef-842f54dbc280",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "84476ad3-cf2f-4f62-8e62-2238ecb9ef86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ab5235-b284-4030-b530-abfaa95bf83e",
        "cursor": {
          "ref": "500e9c44-f306-4283-bdbf-00f95de6a2ed",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9cc4fe28-36aa-41a3-9010-ed4a5e1d14a5"
        },
        "item": {
          "id": "f2ab5235-b284-4030-b530-abfaa95bf83e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "78b2337e-1db8-4e5e-95af-ca8d4157774a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46920830-bd52-465f-843d-7385b5a5843b",
        "cursor": {
          "ref": "f9c25d34-8660-41d7-a450-70cea8ed52c4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c60c65de-edba-48b3-b0ec-8fcec6884c21"
        },
        "item": {
          "id": "46920830-bd52-465f-843d-7385b5a5843b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "62018d46-5045-42aa-9943-b3ad1cf7b1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfcb927-75e8-4b2b-b1d0-9ffad03bd69f",
        "cursor": {
          "ref": "73471818-4d2f-4d3c-84c5-4503377202b5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "069f56f5-dd35-476a-baf9-750816a8b051"
        },
        "item": {
          "id": "1dfcb927-75e8-4b2b-b1d0-9ffad03bd69f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fe0e9480-35c1-444e-880f-a15a841e260d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42073cfd-aa02-4112-9eed-d433fd4bc4b7",
        "cursor": {
          "ref": "4c9fc41f-43c7-489c-b670-cc51581e4f20",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "327dbb4e-4fb9-48cc-aca2-47f9fb4d68a4"
        },
        "item": {
          "id": "42073cfd-aa02-4112-9eed-d433fd4bc4b7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f6dd07c5-17f8-4d7a-beb7-c5aa65d8bad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dcfc3c-f794-4422-a030-d5ae6ead729f",
        "cursor": {
          "ref": "82293097-0392-4e32-a717-a7c539d6abf6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1448f62e-bca6-4af6-814c-df177b0202a8"
        },
        "item": {
          "id": "d2dcfc3c-f794-4422-a030-d5ae6ead729f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b00db252-8631-4af6-9a04-ff126145c35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f133b884-64ce-48e0-b4fb-40eb289f71e4",
        "cursor": {
          "ref": "86d8c869-b97d-41eb-8cef-9a001b4a4aa2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6a7ea540-70ec-4a92-85e1-f4e335112054"
        },
        "item": {
          "id": "f133b884-64ce-48e0-b4fb-40eb289f71e4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "61d0938a-d3b4-4088-b947-242c9c3af9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64480b2-9da6-48a4-a9d1-8471181d6eab",
        "cursor": {
          "ref": "74f89bf4-5413-45dd-b300-93bac3778413",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b4edce3e-3adc-4831-a827-2e3cbf7210d8"
        },
        "item": {
          "id": "d64480b2-9da6-48a4-a9d1-8471181d6eab",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f4ef9ff2-46a9-4749-9f3f-eb9ba34d52b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e3b3c6-a187-4c52-ac42-3f5e001bc2bf",
        "cursor": {
          "ref": "05905030-a97a-45ea-a240-24158e1ef345",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2537ae1e-0201-4a89-87a4-22ae4603820d"
        },
        "item": {
          "id": "68e3b3c6-a187-4c52-ac42-3f5e001bc2bf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a61b0af6-93d7-4e61-b3b2-7ec65eea2f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20923225-a248-4dae-ae67-099233a025b6",
        "cursor": {
          "ref": "47918ad3-26c5-4b1b-a89d-c38cf7325afd",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f2f3a4e6-ecbf-4267-9474-f0d2951c9d35"
        },
        "item": {
          "id": "20923225-a248-4dae-ae67-099233a025b6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "42ed17ea-6849-4170-ad47-751c16997e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb6b9e7-6851-45c5-9146-b25f7de5d22c",
        "cursor": {
          "ref": "57f90de3-9cf3-48b4-ad54-bca79deafb9c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4e0cf2d6-6b90-4a85-9fec-2c19a3cb6fb5"
        },
        "item": {
          "id": "5bb6b9e7-6851-45c5-9146-b25f7de5d22c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7f33ef77-664e-4c27-8170-0b82fc653247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2392128-d70b-4080-9b21-1bd5f2be8577",
        "cursor": {
          "ref": "b38da5c0-0c63-4aa9-8b4b-8095746aa79b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3c2ad5cc-b33b-437d-bfd2-f72ae53a7102"
        },
        "item": {
          "id": "d2392128-d70b-4080-9b21-1bd5f2be8577",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "94e2050e-23e8-46dc-8aa8-d677b241e913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec307e3-be0f-4b78-a70e-a9a4d3882417",
        "cursor": {
          "ref": "fec0e8c4-4289-4b63-9634-e931703af78c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "318b609a-4223-4432-b785-97dc7945ef9c"
        },
        "item": {
          "id": "0ec307e3-be0f-4b78-a70e-a9a4d3882417",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ad8fb324-2010-43f8-af51-a987785008dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c10202-57b6-44fb-81fb-97c705fa6207",
        "cursor": {
          "ref": "cde2f5b9-3bab-4a27-8c01-16bdc4dc2b98",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4cb480c4-2957-4661-a7d8-2ddc005ed10e"
        },
        "item": {
          "id": "96c10202-57b6-44fb-81fb-97c705fa6207",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4e26f8cd-6203-4333-aa6c-35b08a989ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c63dc0-b64d-442d-8f74-8ca9bb1d1c25",
        "cursor": {
          "ref": "19b7ecb0-0764-49fd-a546-5d45de588900",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "11902ef6-3458-42c1-9f3c-bd08713b10a5"
        },
        "item": {
          "id": "a3c63dc0-b64d-442d-8f74-8ca9bb1d1c25",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "548abd83-68f1-4bcf-ac0a-3572e7fbdba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0614161-3725-4745-bcd2-5e718d65f3ab",
        "cursor": {
          "ref": "dd2f7517-a614-49d4-9d59-1b5e62841b99",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7a9e588f-c970-40c1-aeb5-63ca8e472c8d"
        },
        "item": {
          "id": "c0614161-3725-4745-bcd2-5e718d65f3ab",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "431eecde-a0cb-4f84-888d-a805240fb070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9160037d-8197-4650-a107-caa739bf83bd",
        "cursor": {
          "ref": "86fd8cd0-f923-4d3a-a1c5-b0a9d8f44653",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2a2a162a-2c47-4de9-9a82-4554d99bcf6c"
        },
        "item": {
          "id": "9160037d-8197-4650-a107-caa739bf83bd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3dbe70a2-b786-40e5-b0b2-09c5d78c51c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d46c673-423f-4a33-a450-1d72f86cdc4e",
        "cursor": {
          "ref": "1f77652a-3875-4e2e-9e90-d74f681ca99e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "eae220a0-3e65-41c0-b580-f58f9284e31e"
        },
        "item": {
          "id": "2d46c673-423f-4a33-a450-1d72f86cdc4e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "101d87c7-45ff-4161-9caf-79804f7d6897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cb0abe-1e5a-4c15-bcaf-15591c9aa527",
        "cursor": {
          "ref": "e973c5c0-0848-4311-8b78-c5d85a99ab97",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dfb9e460-e588-42b4-b4be-863c1fde332a"
        },
        "item": {
          "id": "21cb0abe-1e5a-4c15-bcaf-15591c9aa527",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "955f7760-73bc-42dc-82b7-c11b0d20451c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefa78d8-8bdc-41aa-83ed-9cad793c487e",
        "cursor": {
          "ref": "ee8f72ee-5791-4ab2-adf3-9da41f6adf08",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "61d3a818-ada5-4821-a8a2-aa2f8b8606ae"
        },
        "item": {
          "id": "eefa78d8-8bdc-41aa-83ed-9cad793c487e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a30ca1c8-ca3f-4dc3-abc1-1e333bbcfa16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3641484d-464f-4c9b-a4e4-b306e771aff8",
        "cursor": {
          "ref": "80a6dad4-e8c1-4102-88b1-87bf1578ff69",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "018aef22-379e-423d-84e8-976a0ac8a8ab"
        },
        "item": {
          "id": "3641484d-464f-4c9b-a4e4-b306e771aff8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "365f19f8-c565-4e13-afd5-48200e7d5aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f974a8-1e22-47e1-9bc3-d490bd52575d",
        "cursor": {
          "ref": "995f31c9-bfae-4541-8927-4d1603c0efc6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "513e9cc3-6599-4529-be6b-53bfd086239c"
        },
        "item": {
          "id": "60f974a8-1e22-47e1-9bc3-d490bd52575d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "de7e8545-f24d-40fc-bf5e-c4a935b0359c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3dfce3-e10b-4896-9e44-5285cbb04365",
        "cursor": {
          "ref": "9418765f-1800-4f07-be15-c682249a9ff8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3e3b9f8c-2d50-4bd2-b41f-5cd71123349b"
        },
        "item": {
          "id": "3b3dfce3-e10b-4896-9e44-5285cbb04365",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "72a929e5-3833-4219-a500-72ebec608b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668baed7-9d3b-4820-8561-01fd0565695e",
        "cursor": {
          "ref": "56c2f979-7378-4e5c-b439-c31260fa6886",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "40ce4f57-a471-471f-8192-b7c272719c98"
        },
        "item": {
          "id": "668baed7-9d3b-4820-8561-01fd0565695e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "811def8b-a897-4e77-b6a8-6b3d34339293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6e11a7-cd92-4852-bc02-33411f7a4028",
        "cursor": {
          "ref": "33e5ecd1-90b4-4d7c-bad7-380a61b0a60f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "70b76f98-684c-45bb-99d3-b3679026af04"
        },
        "item": {
          "id": "8a6e11a7-cd92-4852-bc02-33411f7a4028",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "93c93b26-9270-4406-ab75-0a1aaafe42ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c4114e-400b-4f35-a218-422e8bc9ee16",
        "cursor": {
          "ref": "44d28d4f-9176-4168-8de1-d427d8681b7e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5ffe3c15-6a60-4984-9a1f-69f6984dbea9"
        },
        "item": {
          "id": "27c4114e-400b-4f35-a218-422e8bc9ee16",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b6f032ff-c27f-47fa-b74d-6060711c9ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cf1738-9d7b-4a12-878e-d37ac6983949",
        "cursor": {
          "ref": "3482a4c0-01ff-439b-9125-50cb05281f13",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c9e3582b-833b-4814-9106-371ae9c1dcb4"
        },
        "item": {
          "id": "73cf1738-9d7b-4a12-878e-d37ac6983949",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5da2a82d-9735-4fb0-b8ea-4436518176b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55950491-f921-43db-bfbb-fb90f68a2a7f",
        "cursor": {
          "ref": "2a9fa5c6-695b-4b91-9a47-ba911a7f7091",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9b1a6685-e4ba-4e21-81aa-d6689e3cb486"
        },
        "item": {
          "id": "55950491-f921-43db-bfbb-fb90f68a2a7f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "06dfeed5-e55b-42e3-a973-ab2da8942e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac791089-1e17-48b1-8a13-ba61690a4446",
        "cursor": {
          "ref": "9c1e1d19-f892-4531-b627-af656221b3b9",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c0252ac1-0a87-4d08-8c32-ac9e74031f9b"
        },
        "item": {
          "id": "ac791089-1e17-48b1-8a13-ba61690a4446",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4a47929f-e76e-4a9b-b3d2-1b752a620d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f90dad8-6347-4a02-9872-811e7311e6ca",
        "cursor": {
          "ref": "020fe2a2-af9f-49ab-843c-f75d2748acea",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "61d7560f-2128-4b9d-ad37-aab16eec7434"
        },
        "item": {
          "id": "6f90dad8-6347-4a02-9872-811e7311e6ca",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "63d8cd35-2141-4f9d-9348-edcb90167085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4f3875-dadb-41dd-a463-3a9fd794c483",
        "cursor": {
          "ref": "e8513c6a-d7d7-41c1-931b-d9c8decadea9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0ad6eb81-6a75-465e-b8b4-301a4a1730c7"
        },
        "item": {
          "id": "7c4f3875-dadb-41dd-a463-3a9fd794c483",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "804bd87b-2dff-4264-abab-a394b554e7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a82f99f-3775-486e-a557-562a8bcb9fe9",
        "cursor": {
          "ref": "7b5fad7c-ee7e-4255-924a-aee701b22acc",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8ede59cb-df57-4b81-8983-2b51705e2478"
        },
        "item": {
          "id": "1a82f99f-3775-486e-a557-562a8bcb9fe9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bb3a96c1-20d6-42ea-8791-c2cae44997d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca49e39a-947d-4ab6-abb9-82e8a6e1d0e4",
        "cursor": {
          "ref": "3bbd862d-82ea-4610-a8b9-e43a5fc084ca",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7e85d2c3-28d1-4fa0-a867-39da67958242"
        },
        "item": {
          "id": "ca49e39a-947d-4ab6-abb9-82e8a6e1d0e4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "23e32b8a-211f-42b5-83a2-1bdc7f37dfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ae9315-4fc9-4c35-a59f-5d31d7316b0c",
        "cursor": {
          "ref": "4c747ed4-5bae-4daa-8987-df600f56d7d6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c84bac81-c861-4715-9442-0a76be638252"
        },
        "item": {
          "id": "52ae9315-4fc9-4c35-a59f-5d31d7316b0c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ac0f744c-a4bd-43ee-a6ff-fb350765d291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1abba1-6e18-4f07-9261-67aec2186d38",
        "cursor": {
          "ref": "0120f5f2-ecbf-441d-996d-bddedfce4aa9",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cb813e90-adcd-47e8-94b6-2ea1f23f2308"
        },
        "item": {
          "id": "ef1abba1-6e18-4f07-9261-67aec2186d38",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6ad8cb9d-67e5-4211-b0db-2f93f6fa25be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4241d28a-1d1f-44e6-a196-a43720d41c45",
        "cursor": {
          "ref": "c590e03a-2528-4b88-8593-3cfda4c6a9c6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "40c02854-3d7f-4cd3-8e62-e05ffe92cc43"
        },
        "item": {
          "id": "4241d28a-1d1f-44e6-a196-a43720d41c45",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "867ed924-f3c1-4a21-bf47-afd7abe64b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bca1e1-2c2a-4624-8240-aa81dab2adac",
        "cursor": {
          "ref": "1964bbbc-e657-4c9c-870d-da9018bdabad",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b8dc5147-1013-491b-8f3c-48bde99dc03e"
        },
        "item": {
          "id": "67bca1e1-2c2a-4624-8240-aa81dab2adac",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2d2e8d91-1e29-4ce1-8519-f28102b5254e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c890e4-8535-46f9-b4b9-62a9cbcff6c7",
        "cursor": {
          "ref": "11b33c29-6e50-42b2-8290-833d901f0631",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2bc9014e-a721-4e8a-bf60-72ed4c57743c"
        },
        "item": {
          "id": "77c890e4-8535-46f9-b4b9-62a9cbcff6c7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "784efe21-1d27-49c3-897d-8ec31eb3c8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c454c01b-a0e0-4f10-af0f-92d501cab918",
        "cursor": {
          "ref": "ee72d075-ad32-42e8-82fb-3fbd2516ac3b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9048bf99-f1a6-4f19-ab10-1eaeb63d0b75"
        },
        "item": {
          "id": "c454c01b-a0e0-4f10-af0f-92d501cab918",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2422076b-ea8e-4cf3-9f62-705a289b4694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5015908-9304-472b-a6d9-6e5a2f7312fe",
        "cursor": {
          "ref": "c7758833-174a-43ca-8cf3-366dddfd141b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bb7f4058-6b4e-4806-a036-e9b52815b033"
        },
        "item": {
          "id": "b5015908-9304-472b-a6d9-6e5a2f7312fe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0352031f-7c21-424d-9bb2-c97ee365119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb6dbc-43d7-4a4d-99db-ca22067ce2d2",
        "cursor": {
          "ref": "3e85fec7-0b14-4e35-9bcd-1bf7c33318bf",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8b13644b-c772-4e73-916a-95e092c45064"
        },
        "item": {
          "id": "41cb6dbc-43d7-4a4d-99db-ca22067ce2d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9411e303-32e6-4ab7-83c6-8add003493a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3af1a6e-8c8c-4957-b4bf-3da34438146b",
        "cursor": {
          "ref": "ff3389d1-74bf-437d-bc5f-ffdd61d78ec1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1e1da69c-0147-461a-bacf-277b2fcb7831"
        },
        "item": {
          "id": "b3af1a6e-8c8c-4957-b4bf-3da34438146b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "771a14c5-eb9a-4859-991f-68932c67898c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ed1a7c-d2ed-4c69-a850-70ff2b8a2dec",
        "cursor": {
          "ref": "5ff74800-f4b3-4db5-99b0-da96325ef58f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3fd5117b-fbe7-4e84-b911-87ea30905058"
        },
        "item": {
          "id": "e2ed1a7c-d2ed-4c69-a850-70ff2b8a2dec",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4199aa9e-9b89-422f-a950-22b8197afad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6b29d6-f6b8-4a82-a5cd-846370f62430",
        "cursor": {
          "ref": "5b95445b-efb6-40be-9b9b-00a4242a1661",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "010cb9a3-592d-4230-adc8-0ee7ab05f044"
        },
        "item": {
          "id": "2c6b29d6-f6b8-4a82-a5cd-846370f62430",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "556f645c-ad3b-468e-881f-643bee382be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99278c01-98c4-4344-b15c-946dc3a37c07",
        "cursor": {
          "ref": "cf01a6c8-e1d0-4dc7-b7a5-05668852908a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "680c9614-2038-42f3-a5e3-ad24f8e892c3"
        },
        "item": {
          "id": "99278c01-98c4-4344-b15c-946dc3a37c07",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "60696abe-0e28-46a3-bab0-04e03742b609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe759421-ca46-4ae9-8061-11b0756e326c",
        "cursor": {
          "ref": "38632feb-ed96-44f8-9f23-8890480ee4cb",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6d00b0ec-979f-4132-9e44-bf66de27bc49"
        },
        "item": {
          "id": "fe759421-ca46-4ae9-8061-11b0756e326c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5510c942-ba62-47b0-b464-28488e299a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ca5375-30c9-4b0f-b15b-93c261b189b2",
        "cursor": {
          "ref": "24d9e2bc-1755-459d-a4b7-937bb53abefd",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1169f974-94a1-4ca9-8ba2-2dc831c4c382"
        },
        "item": {
          "id": "44ca5375-30c9-4b0f-b15b-93c261b189b2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8684be75-1beb-45ef-9678-b0aca4ec016a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2e0cc7-128a-4ac2-a79d-b07356bf5c50",
        "cursor": {
          "ref": "f339e5a9-b5c3-4b34-be98-4a0862e783f8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "24eaebf6-296b-42b4-a4f4-6e94760cd28d"
        },
        "item": {
          "id": "ac2e0cc7-128a-4ac2-a79d-b07356bf5c50",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "29bce248-8906-4445-96d1-a0222d5723e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a1172-31bf-4cbc-8227-19d311d8137d",
        "cursor": {
          "ref": "9787eb76-df0c-46f1-9399-1827a0a39eef",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "82114ae7-e898-4880-82c1-f87bcb43385f"
        },
        "item": {
          "id": "281a1172-31bf-4cbc-8227-19d311d8137d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "213d4412-eb1d-4b8e-9443-3c99a3a83f60",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ee0614-740a-48f9-a379-ebcb209108d6",
        "cursor": {
          "ref": "9214741d-ece8-4e7f-8fb5-e4d2b61f7c4f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ccb3af1-9dfc-4976-83b2-13eb21b50b65"
        },
        "item": {
          "id": "e1ee0614-740a-48f9-a379-ebcb209108d6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0c3f2c52-7d1a-4038-b72f-df5b078526e5",
          "status": "OK",
          "code": 200,
          "responseTime": 2453,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "14149ecd-ce02-4941-bb32-076a7ae97d2e",
        "cursor": {
          "ref": "77d58ec1-1775-4f80-b1c5-df10e4ef569c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2fd1e1f7-98b7-48e3-a047-9573af90ad52"
        },
        "item": {
          "id": "14149ecd-ce02-4941-bb32-076a7ae97d2e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "70849789-8d6f-4959-812b-9a85acae0ebd",
          "status": "OK",
          "code": 200,
          "responseTime": 2457,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c021d52e-37a4-4f1b-b4ff-ab7e744c5fa7",
        "cursor": {
          "ref": "27c2091a-9d91-4afa-a011-56339da45599",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97c34374-6253-434d-9a5e-5833aae5b307"
        },
        "item": {
          "id": "c021d52e-37a4-4f1b-b4ff-ab7e744c5fa7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "46d0d6ae-13ac-43df-bc7f-ffea558a24bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c021d52e-37a4-4f1b-b4ff-ab7e744c5fa7",
        "cursor": {
          "ref": "27c2091a-9d91-4afa-a011-56339da45599",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97c34374-6253-434d-9a5e-5833aae5b307"
        },
        "item": {
          "id": "c021d52e-37a4-4f1b-b4ff-ab7e744c5fa7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "46d0d6ae-13ac-43df-bc7f-ffea558a24bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d5e9d0-7fee-49b4-a2a5-e9db28a8deb7",
        "cursor": {
          "ref": "3740777c-7d71-45c1-8724-9f06d50f222b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5fb7cd85-2b13-46cf-9d7f-900b1d99d41e"
        },
        "item": {
          "id": "93d5e9d0-7fee-49b4-a2a5-e9db28a8deb7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3d5b27d-0da6-4801-9ee8-85039e0b2ee9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7cc08d-5c88-4329-abb8-76917d961bee",
        "cursor": {
          "ref": "1ccc5c84-d829-4439-84d5-6365a2e285f3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b3b7bcd7-19d9-4212-a710-c5b9630d3fe3"
        },
        "item": {
          "id": "9e7cc08d-5c88-4329-abb8-76917d961bee",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "128ab0bb-100e-41de-8f1e-8483c04bf2cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}