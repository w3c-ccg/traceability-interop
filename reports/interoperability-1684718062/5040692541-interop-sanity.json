{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "42492819-029d-4cf8-87ec-0a1d8986eaaf",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "684111dd-5490-4be3-9021-9574f6183afd",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "80f4b5b3-49cc-4e68-9f07-786812f6e1b5"
            }
          }
        ]
      },
      {
        "id": "fe2103d5-5ac2-4f91-8c9b-0c9682b5722d",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"{{$isoTimestamp}}\",\n    \"credentialSubject\": {\n        \"id\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n    }\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf557a98-139a-40c2-a842-07e7b96425c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee410500-b37c-4d59-9ad2-e4c19eb0bdc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afa76c8c-a51e-4011-bf2b-0c9a417acb99",
              "type": "text/javascript",
              "exec": [
                "const {verifiableCredential} = pm.response.json();",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "64abb7f7-1f5b-4fac-bb6d-129cd3098492"
            }
          }
        ]
      },
      {
        "id": "6c18a86f-458e-4de1-9cad-26b40b5ea3a3",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8f7e7cd9-b185-4ec9-98a8-73b4541ceac8",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "e64aa57d-57ae-45ac-895f-2014fddc6eac"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2240.6666666666665,
      "responseMin": 334,
      "responseMax": 5171,
      "responseSd": 2103.1820864796487,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684717622039,
      "completed": 1684717628846
    },
    "executions": [
      {
        "id": "42492819-029d-4cf8-87ec-0a1d8986eaaf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a5b5f886-92f5-4606-ab98-715cd9ccbe37",
          "httpRequestId": "d00bbfe6-cb75-49e5-a300-f07c33bb7ac0"
        },
        "item": {
          "id": "42492819-029d-4cf8-87ec-0a1d8986eaaf",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "10f7138f-cac2-484b-966f-aca5ebf9abfa",
          "status": "OK",
          "code": 200,
          "responseTime": 5171,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2103d5-5ac2-4f91-8c9b-0c9682b5722d",
        "cursor": {
          "ref": "8afa85ac-8e55-4195-b034-6e420ef92211",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fbde766a-124d-41f0-8b1c-52c4ab01f419"
        },
        "item": {
          "id": "fe2103d5-5ac2-4f91-8c9b-0c9682b5722d",
          "name": "Issue Credential"
        },
        "response": {
          "id": "d97aa340-5adf-4442-a649-9d506a150cbc",
          "status": "Created",
          "code": 201,
          "responseTime": 1217,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have a 'proof'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c18a86f-458e-4de1-9cad-26b40b5ea3a3",
        "cursor": {
          "ref": "3f2ba95c-0d20-4273-ad73-aa6b5b014863",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9588369a-f41d-459d-9de7-f2ece615a983"
        },
        "item": {
          "id": "6c18a86f-458e-4de1-9cad-26b40b5ea3a3",
          "name": "Verify Credential"
        },
        "response": {
          "id": "394b650c-067a-4bee-8398-ab5ec97c56ec",
          "status": "OK",
          "code": 200,
          "responseTime": 334,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have been verified",
            "skipped": false
          }
        ]
      }
    ]
  }
}