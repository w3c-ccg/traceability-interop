{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "219f1ab1-db39-4670-8800-cb042396137e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "31ee83b2-30e0-4b64-af01-ed70a334fbe6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2507767-f49a-4bed-9d6e-eadcb588f245",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "defaeebe-ffb7-45eb-93d8-aaed0694b573"
                }
              }
            ]
          },
          {
            "id": "57545327-a3a2-4c3e-b83a-ef8dbce731b4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d180e585-ecec-44a5-bc32-78f88498ee5d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a3c04fbe-e58b-4e21-b2b9-fd0b44915485"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c837680a-1bcf-4ea2-b9ef-763d65bd83c9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "963cf430-376e-419e-9cdf-bf2b5602dc0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d61881c-7c64-4e7e-9cfb-470a9e919d00",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45ffc63a-3650-4523-aad2-07c41bbc1ee4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e6d3268-62bd-4995-804f-658038f10a4f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c5f8a77-8e66-41b1-90ae-026c9cc50e00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "377dfbdd-84c5-447f-beaa-8218cb805f82"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7fa82425-c403-4838-b1da-9c55192451a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2458ecd-3c31-4324-86c0-3218bf4b7455"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "149439bc-20e7-49c5-a403-9eec7684b941",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "755a083e-700c-4e0f-9351-4ab7a7cf86e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9738470c-b8e8-4de0-a074-5ae462a60ce4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2200d800-a723-46b8-a04d-4b23304420df"
            }
          }
        ]
      },
      {
        "id": "776a2df6-b56e-4649-9d84-8fcd8bcb7a61",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7855de17-b1f3-4eb3-8769-6595727ca0cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cad527a-ad02-4c7f-b38a-8d3dfff11ccf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd0e666d-d8bd-4d24-8c04-44dc0cb26273",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be897f10-b701-4a06-9fee-7f1cd51420c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eac050a-9526-4e83-834c-64fbb776bac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c5bffb-dbd2-46c2-a38e-d2bcc7bab277",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6030ded2-748e-4a2d-9aa7-b10c2de549df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1433c44b-2ecd-459b-baee-cc0661145381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11632ad-dad8-43a0-b0b8-4b6f330e6c77",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3f5098-69a3-4401-a438-93833039c6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a87f3570-3582-4569-8e68-873b3784dfb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21def7db-778c-4d67-98f3-34457716ee6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "343c5695-e5f8-4367-983b-de09f46f69a4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bead007b-b4e9-4fe5-a9c9-425860dcf5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36c3f8bf-46ea-44e0-af65-4de47e3709fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602c9242-8ac5-4619-b1bd-2b291179c2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc8e2b8-107f-4207-b2c4-a07d7c3445c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af4fbd2d-5638-4432-8e29-87c3da1fd730",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a398d7b7-663d-4739-8b43-826907ffbfd8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "792e58cd-0081-44cf-80e9-2f95cb021477",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "52f9a5f9-56bc-4977-930c-4862cd12252e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45991f4a-310e-4d2c-b0fa-834b87c55d2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3ac25f2f-5d20-4897-b8ba-1473c55073ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bc7b79c-feeb-4de0-b914-222af93d33c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ff39473-5f05-4bff-9a16-a7b052890233"
            }
          }
        ]
      },
      {
        "id": "9865b2e2-2593-459a-b520-e65594d94263",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2c371250-3ca8-4874-b3b0-e482a1b3dd3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab3e7917-1b77-4d39-aba4-612afbdccdeb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "77198cbb-56e2-4195-9550-c371f92e58ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4de69f-c05c-4e9d-8866-aee2025326bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f44002a-15dc-4690-94d6-d4b0744a7880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a3d6b8-529f-484e-9d95-89536f7e1702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90bcc6c1-b714-4b8c-b247-684848b93557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7733cdb9-8a9d-4c65-8e6e-a747de90db80",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b58350-6d4c-418c-bc6a-491659e8cc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d151e01-240a-4bd5-94be-5d20c54b1298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe4f27e-eed2-4685-a587-ae27fa0073e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d925da3d-2e0c-4626-90d8-4c1234b8fca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ebaa5f-d3c3-4b6a-9309-f230ff313c47",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f65f57-4220-494a-950d-93c87ea6c58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ca6483-1f40-41e5-8473-234b41bdd7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17298fe6-b08a-4801-81ae-725ddbd25bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "135e5754-284b-48ab-8b77-65fde435d598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149186fc-8b32-4008-9b32-acc74c1ade15",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1804b60d-0239-48f1-ac90-746799d2cf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ade1a2-c04e-4cba-935a-da5ee7b2522b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1eaf0b7-783a-4923-b8ab-786740c5f83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ab2e44e-b7cb-4301-98f9-afe8ddacad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a02c72e-ddfb-4619-a223-597fe4a20d32",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a13ae0-880d-4206-932d-d31700ef1e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9eff82-e8ad-45d0-a541-817b2f26f4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab8fba3-b335-4d1c-91fb-8a94921b917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66f22046-2c0e-4102-947b-c49b4998dfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6e4369-7a28-4f1a-ad77-dcb6df9ab623",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bd531e-6d56-40b1-b624-f8cfc9d15e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a53a5e-0c4c-429e-9181-16d64061ca97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a86174-5a96-4e9d-914c-737cb3913e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f59f3be4-b9bc-431a-9853-99fc993d6643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1f27ee-c688-4cce-99fe-7deb8c822736",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d001d23d-8aed-4719-abfc-66b95e10f959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61707f0d-dce6-44e5-b9c9-e74ff3016ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5142e00-67d1-4ba3-8b6b-11193a6f43b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00c3fb41-3ad8-42f3-97e3-92c603aae4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018b9833-f621-450e-b4d3-ac8745f0dab4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b63f95-f0a4-4ad7-b0b5-0e71f81e58a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73cda09-4b2c-46a1-ac4b-08fd03570103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f223e3-3f95-47f3-9b48-96883f401530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8564da-a07e-49b3-ba2a-106569d79a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a86e600-46a7-48f6-98b3-7790f811bc51",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9563829-cc6b-4bc1-8f22-ec21d75f1ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5edd94-920f-4e76-905f-a495a24f9979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9d1515-06f1-41de-acf5-ec53b6f9545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ddef708-d22f-4e80-8616-1c9091ff1a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3723965d-88a4-4f44-9a49-ec6a3635520d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373b9ce0-b219-462f-98a8-177ca6eee5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1078d5bf-c6af-4077-9324-7ca5ba5d2d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27f70b-9dc4-449e-8ca6-0d041d581d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d984bc94-d6e2-4322-9713-fa4a42595200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dbfb0c-0795-4716-b8df-c18064f8894e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428c2839-a8f5-47dc-8975-9ddb157fbd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8bdb7c-f6d0-459e-bfdf-e30336d695f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db653d0d-ef6e-4f21-a277-0835da981dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaf1e1c3-ad2a-4115-8b0d-efae3e9786a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acfbb04-72a0-459b-95a5-8bfc6751786b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d6a83d-91e9-42fe-b242-27ee067a0e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a42390-e130-49c0-ac90-820cd5a531d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bd245a-9832-450a-a32a-4e6df04700c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75c5c5bf-079d-4301-97df-21ec5529150b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3fe154-9fa4-4c48-967e-1e9f3ae266e5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4e5188-bdab-42d9-bff2-2b3da70baecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53408a84-2fb4-43f1-803e-706182c447b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd146b5f-fbdd-41f1-881e-dd81c95f0e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "877e78be-10c7-432e-96d9-4b4e4bd38491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a25c62a-4e82-4bcc-8155-802809d9c680",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8156006-cc50-4f21-8b40-606adc52c4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab1ecd7-a636-4a91-9cdf-87a5f86ed5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adae1c23-1ac1-414f-bdca-c35f38176af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01860e17-0990-411d-9ac5-a9fd57b3bd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb57f5a4-68a0-4352-9367-bccf71f39091",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e069745-0d99-4e87-868e-495d91d19509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915b71c9-e1b0-4803-8330-2599a66ef396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc7377c-f748-4815-a4a4-ce6ee574a636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f074936-c949-4e47-85aa-c06ec5b4aa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7587c50f-1bb3-4e48-a99b-a88f3650ca1c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca142268-ce55-4d9b-853a-4fca14815aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c973c8d-178e-4f0f-a432-d0bd4166a145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef62e88-fc86-44f1-8543-3384bd0076ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a4fe348-e783-4fe4-9768-05c33ac89347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ae681d-a7dd-447a-9ae4-9ab567139053",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be908a5-2bad-45b9-b166-a239ff7e7e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0854e65-c8a4-4eaa-96b8-86d52cf3e69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebcf89f-8c32-4145-be7e-847ac47204ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48a152b6-44a6-4b30-91fd-956f77c0ff8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13521e58-8d69-4a32-a64c-422e6733ebf8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf21e5a-7a2d-4143-af49-01d50d279d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a76caf2-fc4d-4438-b929-42d071098d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5855b3e-56a3-44de-80e5-1872982c5bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a6cfe1-bc22-4e5f-9051-c4f78e79a15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709a904d-63d0-4ce5-bfc0-ff39b74df1fd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b194c2b-7d33-4a9b-bdb9-387ac7e982c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7fd53e-86f7-4823-86bc-e0557e22c623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0a2dcf-509c-4b1f-b84b-95562616b558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53258e7d-d593-4123-b9d3-503203af0cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f9309a-9794-4794-a8f5-d0ab34e2638e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686c9806-13ef-4e04-8166-6f3cf8472b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e5b190-bbe5-47d7-adbf-00e1a9fcb461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060731e1-354a-46c7-8f4d-b8cebce8c58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1842f8a8-6750-4db2-9aae-7125e4f46a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3f00c3-4070-4acf-9cb2-edaf4e60e336",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1196276-ac1a-4ee6-bb1e-144ab93ad8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94167773-9120-45e5-bb95-a506b223da26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbdee95-e087-4996-8417-3c4b3ececfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17d8f2d-f9b5-43b1-a70b-a929044159ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5473982-0795-44cb-a1bf-032c0864cca1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b2e11f-f899-40c1-8a5d-0a23cc0afb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42491cfd-ff6a-435c-b96e-4a7c46016e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9604b16d-4b8f-440b-967f-997f131febc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2a36ad-99d2-4c10-bc6e-50087cbc5c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea790a88-cc2f-4d2c-946a-7514d13ba701",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cef12d-1b75-4e11-92e8-eb5db93a8ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d575d3a3-1d90-4797-a21f-8d84d6471f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1cdafe-5bbd-425e-9d8c-f5c9df19693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2278a52-e45e-4475-8f3f-c64020aadf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5379b6d7-9692-4ad3-b3dc-c9fdefb9fae3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b826b63-7a4a-479e-9e7c-96f5506ff996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d38059-005e-4715-a644-4bc6cf47a36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755fda09-3ee4-4218-aa8a-3bba55818684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4789f88a-05ed-4abe-ae5d-1a00ff0d2aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd17793-c46c-493a-a66a-fabdfda79872",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ba7bf4-ed64-48ef-ac63-3e7fa3b11be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4346f9c9-cf1a-441b-a6fe-a02cdba710dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baea2f8f-9274-4f38-b7c9-39c2dedeb1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c7cf32-a64b-412f-a34d-5464d41c421b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7447df-a964-4aee-aad3-0363e499a3a0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a948a8df-7c17-40fd-b35b-efbd9867a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea727d2-5376-43b6-9ec3-ed9f5a94f764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2558540-a57e-4e20-8c88-d2424e27bdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2117502d-0270-4f5a-b6e9-2bf20b3a752d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c9d53b-6084-4009-bc31-24cefdb8971b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674010b1-62f5-4cf2-b8bf-b90cf1245208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eb437b-7b40-49ab-a6cb-5474b643e7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae1e994-276b-4f27-8166-b6e2a66cab27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "771b6aba-02a6-458a-afaf-f4aff2ba22ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb08480-a6c0-4495-b95c-1ae8db53ef34",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b1c27e-4a07-4963-ae36-1c30f1308eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9b2c13-c0b7-4f24-a611-d597cd9a7127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75240a5-594e-438c-9d55-ab885463339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "425b4cc2-ac21-4dec-8e97-49d62fdaaf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03091ca5-b6d1-451a-9406-95d519008cf1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e55172-07a5-4197-9dfb-e08c10003629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f87fa4-1fa1-49f9-af36-5f1104ac1414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d0d246-24de-4a99-8c88-59605a9b0f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6facf5-8e43-4643-aad7-497543fbdbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2847c2dd-9ff4-4d1a-89a7-edc8838384e2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba85f4e8-18fb-4958-b34f-caeda6810618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0384677c-7844-4a27-b02f-f66ff6a89252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffe5d8c-5e74-4a09-b34a-ef9fbe5b14a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c356aca5-3c41-4d5c-959f-49d03a383367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299698a5-9aa2-4875-87d1-d86a6d1bc5e7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a6c433-0d4b-472f-aad1-ec3516950bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341b61bf-d296-4971-94f7-c95d22d6fd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b530e623-d093-492f-922c-29cb26bd8765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3df97115-25f2-44c1-9fc3-25ebd54c3cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a115f08c-682c-4038-ae20-5ba2e2feea02",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b358a085-f8db-41aa-a1a7-e431929aeb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfaf75e-36f1-4318-98e0-b2555f6edfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0067273b-8251-4314-b39d-19ab3b6d7a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "545eb364-3e49-43fa-94d4-c64802673b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db9be75-3d6f-4502-8249-8cc8903739d7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615d1752-ce4d-40c6-a537-874b483080c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1878f0c-149a-40db-afb4-d298fb275f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58020960-4d57-4f05-873e-37fa8088c407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9630b9e-6803-4540-8b7c-350c43483990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50180af-c2c5-4beb-b699-3e79aca0ec89",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b53b0ff-3bf3-4ab9-a80d-90b9a1ee53db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e40730-cab1-42ea-b326-5e2210489f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b252cdec-53a2-4b21-a552-afdc655ef226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c73100c9-85d5-4c63-ae62-7d310688b55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455c4e66-17d5-483f-ba51-8247cd49b94d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c432e9-87ab-43a7-b7b4-e509c427c418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96e1c3a-605a-4487-86d8-8a7dee260d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee078c1f-e294-4441-ace3-57bb9b490609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e3174e88-fa24-4dc3-acc5-699692e4fb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79434e47-265a-4edc-bbbb-7331bc611dcf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd434aac-7de3-486e-ab9f-3a3fd34649ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b87f23f6-d5f7-4b49-8460-6da1c01313cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccff5f9-8a60-45d9-b2c0-688bdf5652ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef42bf1-98c5-4d62-9930-0c86f732d585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f607cfa8-5120-42ac-bf3c-b6d78c8c3a85",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dac2bd-ee94-421a-a612-f3cacb140610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e71fda-a3b1-4958-8132-dc6afb54261c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db869c0-bc4a-4632-8734-abeb157b453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02c1423a-f98a-4b58-983e-f6e30423b794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2b2060-43be-4be1-b9b2-cc70d7efee31",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd82578-d165-47b4-8db9-fe1d8b8bef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673cf64e-487c-481a-a47f-5c3e4ef9d76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15837add-59b7-4f16-8dcc-b126d43b1cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93c0c4b6-dd7f-41e0-9bad-1f41d07df26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278c6ea0-45e5-491c-9026-3f1082c819a5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fbbcff-f6fc-45cb-a657-996e7cfa55a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075652fa-ba0a-4da6-b497-2fac6074739e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a264d7f-9375-4114-90c7-03eb11c919ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a393208-17d2-49a9-935c-66ac10272324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74878327-8d7e-4a44-94cc-0c7f536ed66f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b13ffa-5ceb-4ff5-b27d-c94f6c646108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81368fb0-b044-4284-ba2e-c96534fa0863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf601c0c-55f3-4411-a735-b01dc55ecf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "759e7a0b-edd1-4a08-a4b2-3f80086ae06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec749ce-8340-4021-875c-78c7a617e9a0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f63fe61-e109-4569-aca0-644a60453803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3601b2-e49d-458c-92c9-b5ea760fae5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86de1ce-108a-4afd-a170-1629d5a63415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3746cb1-2652-4b83-a609-f15d98681055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac84d7b-4dcb-4e27-ba15-8db3db5b3790",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f577b24f-774a-4435-8697-efb25bbfecec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbc3945-1da4-4e64-bc47-031eb7680143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb259d9-fede-45d6-92c6-c1eb171487a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "96d82b6c-f6c5-42fb-acd7-5a22227c204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d55f26-7df6-44ad-b208-814fceb56bae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93903d0d-c6dc-48b3-a630-4510cc89b3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecb6c28-e9de-494e-a974-2287eab557bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c9dbc4-caa5-49b0-9e03-6d19f88dd6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c76ed7e-bdec-4999-84eb-aa0c1fee1a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e1f170-c011-41ec-8334-e8d9acc8945d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a3e9d9-eaab-4510-89af-dc7df42f35de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa78afc9-dc9a-46f6-a2e4-ba8fae6a916f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e98db5-9762-43d6-a4b2-9243ad3983d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c20d80-4d77-4dd4-996c-4ba30ead401d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cf8312-017b-464e-b911-270694c5ac6b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de5c31-106f-4084-b318-901ceb0d4e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23f94b9-01d0-43c4-9128-f7bb5d34dda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3828dcaa-4ad4-4f05-ae22-0a79e1e8eb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b0c435-68f2-4d74-9dc6-96f33ede5fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c19c9f-890d-4de3-a66a-8b0a432c144b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf11f639-9073-420c-9353-fd7000fa3ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798366ea-54c7-4165-847a-ffa9a92b02c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d9da31-a9db-45e2-84e2-82d9fc60ee89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8519f7-e70f-4526-8ca5-d8c2a0792c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39148ed-7e0f-4c36-97fc-e92f87cd8414",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a52682-950a-496f-904c-272dacba5235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab47ea78-aaa8-4ddc-a996-83ab53998997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d459a92f-42e5-4c54-88ce-4597d053ff31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a093838-798e-4d5f-8745-1a64ec71ebf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcec10d9-ee7f-4e16-910c-fe384133def6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ef4a12-99e7-49ca-8aae-1041e3b17b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce24c8c-05e9-4fb1-91db-280de82949b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b09d36-4d46-4e04-a900-4b3b66225827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f3eaa7-0882-40ab-9c0a-e97cfaf8fb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b88a4bc-6de9-463a-98ed-b8ae38c0bc04",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24117003-2051-4dc5-9f3a-3e5b9bd4e8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f25e11-8212-4d22-bd26-7e3c9c982bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90d6d7a-bdc6-49e5-a4f7-ce79f888f9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd0d4ae-cac9-4ad3-8cbc-814555527c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53c1877-4f9c-4621-9bed-4183ca6ceb23",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5471ef-a50d-42bc-9a5c-123219e8848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d97b62-524f-4dbb-a752-3a2a4d79ccb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b974f500-bcf9-488d-99fa-40b1fa6d4548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "567257d0-4bc3-40b9-ae49-5fe53e697860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068d4738-1dd3-4c1d-91c1-258e48ad5dd0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294e5e69-b33c-4bdb-afc9-548d531c8a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6584a6d-eef5-47ba-9f8a-a24d4585c7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee2644f-8163-4341-af84-0549392d58b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef25652-cb71-4c04-86b5-113c106cc5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a88dc9-893a-48a7-aa95-6436e95ddf58",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e754eef2-edeb-4f59-8f83-a3e812d07892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5853d3-a5aa-4f3e-9478-afed62913d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb38714-12e2-4070-93fe-52ac3b0617dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d60c89d-c178-4ce2-a078-c926abea61c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80839f71-c14a-42ee-a100-2422bfb7bf9d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4010a242-8433-48ed-a36a-7e1a38ef8265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2eb1391-61b6-4e2f-af5b-9fffee3539e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cdedce-5801-4371-8859-f7f05102ed01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2b5a1e-0def-4418-8987-9cffea62985d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4315c23c-57cd-4640-99b8-6e873b298fb7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca06205-0fbb-4672-a17e-c556947d5799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407eda49-bf32-4d3e-98ac-c956ada11728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0436160c-e4fe-4e1c-b284-cc40a5f389f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91cdf921-482b-454e-b561-dc58e9b093ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd36817-03dd-44d1-80b1-5bd90a88ae4d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1060d224-e185-4443-8756-4ff28738373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d597f2-10bc-4e2d-b6cf-92eb54f24ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2421f073-3ec6-4698-b2c8-c6eaa766e534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79364573-6ab6-4f4f-8f3e-f85b9f6d7f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf712727-c98f-4734-ae1e-c3a2b745eabe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff4359e-6d19-445a-a993-c841f166c6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b567c954-e3e7-4d84-b910-0c681bcf96c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91997b83-b931-4d68-a8fc-3d4019b8ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "36faad91-7bd2-4653-81fb-94d7f206fdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7df09ff-9765-4485-8b12-c7f0707caa52",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e273f35-f372-45e5-9881-afd93037a87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff941dc1-9e45-4f27-b49d-e15823cdfd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d87d6e3-0a88-42d7-9602-e085e350b072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "19dcb7e6-0279-4b4d-8acb-6c78761d06e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20baf16c-fbc4-44e2-92d5-97d52b9ab98f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aa901c-56e9-456b-a9c7-c5027edd9825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135e303e-9e99-4f94-9cd1-14af10da2b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca6d3cd-7b6b-4240-a980-fd9180e1c44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc9e184-3120-47ea-9cae-5c4aa2d04852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b384c57-8969-4a91-a98c-f66680b65566",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2798470d-5ab6-46a3-b81e-2f3429186b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0b6b67-b023-4c9e-aa0f-c8cc1a3711c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618f1e8a-9866-4e57-a4e6-00d63e9d10e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95506b0a-b289-4ff9-b0b9-ee311790ce79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fea8d1c-2fe0-4d86-b391-789b87d2d819",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9af6989-0735-46c4-b6a2-213165df7f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7b5712-d240-495f-925e-c0b9680bf2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b58fe87-fefd-4077-a420-be81b30d5af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a88defaa-3a99-4a17-aa5a-91492898d730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4e214d-d591-47d1-80f7-497725d82703",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7489ea4f-1419-4e59-a0b3-95e9711fd10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f4f7d0-93dc-49fd-8fa2-6845ab8c8cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a39b5f-b102-4b8c-8478-d718d0aa6714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4309ca48-1011-40a6-b37e-2334ba6987e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14770dfd-a2ec-44fa-b6f9-3d2628c74f42",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4cdc2c-4999-4c04-85fa-1e58ed4a37bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba68b23-1a79-4864-b24a-f3a1c6853b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94204eb5-96da-402c-bfe3-7bffc01b3075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a429b2a9-6893-4655-b8ac-83b09fea0ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226616ff-d7fc-424d-a3a4-7a67064a413a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed097df-9d4c-45be-898b-7676214a179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a7cb51-bd2f-48e6-92b6-4edf5d793cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f282676-14fb-417b-a4e3-7998f699868c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "29740e99-20df-4a9e-a2a6-5f0e6346a74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c07aec4-0ad6-416f-bc07-65c4897f36ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56bb05e-7da2-4be0-9795-fd728d82fd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77744b39-9985-4b5a-82ee-3b0f53d2a35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ed663f-ed7e-47b2-b1b6-b4714b7aaf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9946dd-6969-4153-9fb6-83ee0a6cd557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298aa602-9064-4153-8fc9-ecb493942606",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf17bb1-1866-4677-b571-c4b5b7d2b7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bac8c9b-2b44-49a4-a9d4-6d573733fab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90933986-03ae-4804-a21b-4e31c473f8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91182eef-7a5e-49a2-9c4e-b6853a36a7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf0e68-b124-4a18-b6db-3ce5fdfc48d6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1066e1b-e434-4aeb-b1b2-39e2d7b1e57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58079e9-7fbe-4b1d-a472-e0e5786df40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46681ec3-4e09-4761-836a-f1c9d46bf90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d88e87-83c8-4597-b35f-ebe98d9eebfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef45ff5-dda5-463b-8874-62cdcb154ddb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2524250b-002f-4f4e-a07a-e2850cfb889d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536a0bc4-aad9-4125-8c6f-a657770507e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a74c3c2-f755-4d7d-b2e5-7db29d3e427d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24c20c19-d65b-487e-ab7e-b9ebb736a903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989a2050-3eae-436f-9c77-855c4e8df6d3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20859cd7-792f-49e6-b6ea-984e89e1d419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28a1355-e87e-409a-a8d4-73ff6bdbd4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5218e4a4-bebd-4de3-93e4-13194e989b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8185d8ab-c75d-4d24-b8fd-1dd46a497074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaa832d-8645-4423-971c-19beafbab7e8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbda0928-25fa-4543-8ad6-56e27d75db7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67772a6c-88ac-45ed-8357-7b824ed372a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05161179-8e62-4346-8304-677927c7e6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "007bf984-95dc-44ea-bdf8-d168b08105ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26be2e0-26cd-4c0f-a320-4ea41cb4dfba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14484233-cacb-4b84-88dd-d5d97f17f211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3490ede0-8eef-4714-97a2-2c79b741e314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ba79c1-5a27-47e5-b69d-907e269d5686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bebae59-cc54-4ac6-b37f-88611d3506b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260e2f2c-3328-4bb2-8ec0-1573e1439b15",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172d254c-56b3-4947-ba84-3ec23d23c4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37117d4a-b007-4e15-ab03-e64a3eb5e4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342ea0e1-b59e-4b5b-ae1e-89c31ec84a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd60cb0-05a5-4a9d-9b4a-2dcad891703c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2a9747-94bb-4835-b47d-6c87fc0dc8df",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7f8364-43ae-446a-bd22-835860cc928e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856ac5d0-b7e8-4dc8-bede-ab305ea31739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebc725e-4c08-460f-93fa-9bd0f5b15c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0453d8-3da5-4c12-b967-28edd15543b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f91206-fe19-4d70-a16a-e07a9dec9a53",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ddb61-c686-4571-9618-61b765a041fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2ce46f-0494-4805-8864-a205f215356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5b4179-2bcd-4dc2-bf2a-874c901baf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fef5cb3a-5bfc-481b-8cb2-c7795bc5408d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd92bb0-ebce-4f25-93cb-925c746158d7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18d27ac-fc86-4ec9-bf4b-651cdfaf7a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fd9334-3e89-4878-8d31-e7963010f1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa9b60d-9683-444c-81bb-6bc6bc8a783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e80c70a-0796-4918-bde9-8f252cb5e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1d49d4-d53a-4d3d-a811-82a163d96012",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f76f9c-d18a-4b74-90d2-e9f66a083456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b313b3-dbd6-45bc-9949-43e50bf22e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420a42d3-5c86-4076-a838-93e714d30fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcfc40b-f61d-46cb-a122-30834b27d2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889f4b0e-9026-40cf-9c2d-8856077a2c4e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16060bc0-e4a0-4d8c-8183-b9d55dbf4213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea874e0-9b6c-4950-9095-a1c463e95a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dd2997-0cab-4fe0-91e8-1e64610961eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61128a0b-a9f3-4292-8c2b-fd7663008dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eca67f8-38c0-462e-ae79-6eb408453f8c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f14ce84-f93d-488e-b47b-2784054da51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7c110b-3a1c-442c-8280-faa24fe15165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cac9815-e70e-47db-8f09-b3928ea72ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0eb103-ef6d-47c3-91da-119a2fcd3d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c048920-93c9-45f5-b365-22f43b6ddc2e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a846173d-6e20-4566-a445-7c31afe7a6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6785a4a4-ebff-4429-9a95-d80d650224cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977f2b6f-0378-49e8-a264-8c8af7993a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8109b4a5-0e17-4a42-9974-4edf65bba7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133714ba-e163-4945-9941-08f945537132",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1880bfa3-87a9-4dee-8ca4-df59c66177ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00e1b43-d574-4035-87f5-80ef14594c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a942d8e-e1ec-47b4-bf82-9dc5743a8927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd6ebd6-a931-4244-a49e-a62eb4a752ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f617df-ce57-431f-82a0-9130fb751f68",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844d3720-a4fd-4f22-8570-3e10f460c305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ee7c4a-db82-488c-b1de-b7c813e5ba54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb7be48-3c7e-43df-bf2d-6543bb0e7720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c21d6986-3197-4ba4-8a39-f127ea4b0e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfb6eab-f16b-4eee-bdc3-1195b784e3d5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b281f5ab-5c0f-4f2c-9294-2e7aa710fcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec71398-c063-4612-9bde-1e87995bc593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9677d24c-0920-4fe0-a650-52ae6bb88c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5041153-b547-477b-9508-49773009f312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae77ab6-9468-4862-969f-9382ba170799",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac58faa6-d33f-4642-aea9-cdcba48cf538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c531d33-5640-46ab-9ad9-c4c733d2774d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31066ca-bf86-4ed0-a495-49ca6dbac361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b27d2b0-1c62-498b-919b-2e534845aaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2502e7-146c-4b00-a639-b5f960b18734",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b059549b-ec00-410b-914d-e9cc5872aee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f806262-40f3-476a-bc79-fc78bd60818b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce011071-78dd-43cc-aa7a-6df0911f37de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e61751b-1a02-42e5-b825-c34e5f644fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9388f4ac-904b-4b62-817c-21065351342b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942c9a4f-c9fa-456d-8bb5-cb9d3462ffda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477044f7-834a-468c-b7ac-15fbad9ece98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3573806-fa29-448d-9914-0941ea8447b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ee71b9-58d2-4f27-bdd1-d450bf7bf0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a24637-171e-4e14-8975-7d4c8de0bd8d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe43573f-33a9-465e-a720-4d62bddcf6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871d797d-a6ef-4b5f-aa3e-be6e368f6547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad025b5-84b2-4caa-9f40-4342ca3e3750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a64a0192-192a-4613-a29c-b6a2e6e41971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c86bb7-bd08-4282-ae3f-0ae8f2ee401f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8da459-c045-4928-94c8-fb079973ec4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b291c837-7c23-47eb-85c0-d0a30e7cecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e719c01d-ffd4-406c-8df0-c3d68781797a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "974b9ff0-4a20-43a9-93d1-34b1b5974dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31b32f7-c140-4724-9514-4dd92a2cb109",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac5e5aa-62ae-4d9b-a9e7-9fd191589331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0588274-c968-4023-923e-e6dcee7b90c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3babdf-44b2-43fa-9e0e-acb1b604ab8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cbd02d-0fe5-4460-85e0-3473a242648a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4818b6b0-0eed-443f-abeb-48057f259245",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679dc853-91cf-4dec-9170-d0ad0ead925a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d23dd39-38ac-4ae3-9ae4-cc3f42f8f4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0896ae-daf0-4c49-a590-7a41a0098958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "065777a7-441b-4aa7-835e-a113f493c507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb72535b-37f6-4e58-bfb8-18565bc1ceb6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f39f817-acea-4cd0-8151-c79b1ccd67e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56175d0-bd8e-42aa-adb6-b5b2596e29ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47177711-52de-4477-a582-3d9c9a26dde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d788351d-46e1-4845-bc37-d7b38f332664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23dd888e-18cb-4a3c-a2cd-45c7984c893b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262cd16f-931d-430d-b84b-5c7e6adb9ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762a1d7b-9107-4cb5-bb5c-d7c2cc6388d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dbb587-3d01-494d-aa75-26084b55aba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2315015c-d499-4afb-a283-d0733e803856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9b30ae-bea5-475c-824e-5f39fc636869",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f96e8e-4dd1-4c0c-8791-f2ede7eb8a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da63f9e-554f-425c-a39b-a8de2c44d557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308f6a58-f2f0-4849-ad52-bdea32d12cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "73f61dbd-fb4c-4db8-9cef-0f20accc3700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c5a847-8fa4-42d9-88bb-4c5ea8f7c30e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c36b4a-2a8d-45cd-a4a4-aee44a23666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6d616224-9507-4b9b-b55c-89bb55631e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3584868d-9407-4ef0-8180-6657d990a2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6e2f2c-0422-4749-9fb8-28b221bcc781"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21474df7-fea7-4bc7-9ba7-3c8beeeefc17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b053157-69cd-4107-ad9d-72afb62638aa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f210792-6f39-47db-9f07-0aaed096c2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaf3c16c-0fd6-44b5-9b03-2dbd3d01e894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232b5cc3-5d42-4d69-8d6d-43470199bf01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f4f201c-a311-4fea-aa0d-796ddbb930d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cafff6b9-b6e0-4b32-b18e-2ffe80d56bf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9debda6a-2783-492f-a2b3-7f73eba0ef9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce9a2716-c9c9-4f2a-8610-688b47516064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fb1d07c-2383-4db6-92f0-5615884df9e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7a98cfa-19f7-41f4-91a5-22900aa72f7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6dc023bd-3886-4ef8-b0f9-bfd5e107510e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddbd9bf5-7d61-441c-aadb-c8ec97a5a4d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a845691-0647-4623-b3b6-ee713b337411"
                }
              }
            ]
          },
          {
            "id": "ec379a85-0ab1-45ec-95df-f7a28cb38d2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72954665-1915-486a-806d-c343c4216f74",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8ee34a6e-41d6-4ec5-826b-77c22d3707cc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9711bf59-5fbf-4965-886f-b8db646295c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c23b1500-303f-4493-af82-9e9affc1c1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6403a0a-7b38-4231-907e-f84d01f940e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abe2bef-a947-45ef-b148-254db5af7aa1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b37d6246-3ecb-4f7b-a56b-9b0890c998ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80f65ea9-83ae-4060-b5d7-66d9bb7f84fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3899336-221c-4926-84c4-0eedeea8c139"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "377037f3-2723-461d-9949-1f2a886eb518",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "833aae8b-2bbb-4b18-96d2-da0f7410c6e0"
                    }
                  }
                ]
              },
              {
                "id": "b7324c7b-8e4a-42cc-8fd3-6d70835f2ec0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aef3e2d3-3a41-46c1-bc24-83e24b2730c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1edae89-e31e-4575-befe-5eed89785b2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f41bac0-6451-402d-9e50-d16f2b54bb6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "798808d4-ff4e-4fdc-bcdd-317be66a7241"
                    }
                  }
                ]
              },
              {
                "id": "cc6acfdf-c924-47c5-b120-508bf370845f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5033d926-ebcc-4e8c-854c-ce52eab0ab00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1edadbb-406a-49d0-9905-42a1f4c2fb3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcb24b05-4d26-4bae-bf49-ac1684a39f73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8dee779c-df71-4908-84a5-6decc36481df"
                    }
                  }
                ]
              },
              {
                "id": "b83ca53f-720c-4075-b8fb-1fa9d5182b5d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52ab4151-9686-48c0-8b4f-256962c8536c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e94f2353-5396-4558-965e-9d9b6854322b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9aa5da03-1365-4da6-8a31-9cd686183181",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "065bf57b-8066-4f8d-be57-8867a73d1b7f"
                    }
                  }
                ]
              },
              {
                "id": "e0499c8b-60e6-4fa9-8580-140e9ab4f422",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9841e3d-e22b-41bb-8e70-f11eb18d59f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "471482bf-83f8-4b32-9b25-4d57887ce8ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32edc768-7402-4483-9bf3-30f80e9bafe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3abcde38-aa17-4fa3-94b0-d28ae41e93b1"
                    }
                  }
                ]
              },
              {
                "id": "71366657-ee61-45a5-a888-e95beffe668c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bb60c75-f242-4a7c-96be-62a681aee473",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "612f6721-abc7-47c2-8750-47bcbfb18207"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015e4e9f-7751-4f4c-b612-bdf1e70bb6a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a721c069-0ff0-4683-9d00-2f88054734b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d928e27c-4b3b-404f-8d88-916043995c5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a798053-b7e6-4723-ab30-b24ec88dc4a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f728597-51f5-4e4f-90aa-b6cbbec4d943",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c5b897c-43e7-4018-a842-e7b5b0e98ebd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be3da5bf-ffce-44ff-a94e-d2ff3f73b91f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1b046bfe-d2b0-4709-8e78-fd478730e7a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b346a89-f960-43e9-b408-9622b2a54933",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0009fad0-0f49-4ca3-8ee4-01b3cf07a21c"
            }
          }
        ]
      },
      {
        "id": "e80bf781-2625-4b1b-b379-47570fec72d3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8f913e34-ee7f-4559-a80b-508116da62da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f0eb75c-b8d9-49a1-bf8f-48349dbd93db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7b950a7-60cf-456c-93f5-e8e02f4132b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762ebe16-978e-4260-a1b7-a9de4bafcd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585ca776-a938-4712-b152-d4682e944614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6941116b-d8c9-447f-9ddb-e276d7a5b815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e85e96b-4403-4769-9893-253b666c04c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838426ba-fd1b-4b36-a4f3-b90591f445c0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38094dfc-b1cb-4747-99d9-8859f092ed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d11063-20f0-4703-9b8a-a8998ce0e9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757561b8-0d76-49f4-8d3f-cfafa9a0e2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "738d8fc7-7cbf-4398-85fc-c652083afc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8469a7c-da8f-4202-8688-7e332c952d1d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280f8ce0-c50c-4ddf-bb93-14b4f6197434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9cb92e-6f8c-4fdb-901a-d769e3db17d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30069782-c535-459f-b81a-cd2610abd4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "467b4d90-95ad-4f1d-881b-f343ef9e3359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82029541-3d0f-4eb4-93e1-b10ac59c934f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf710025-41bb-4475-ad40-8a97e9d26df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da28e2c-3b23-45e5-9fde-5c5a4190c520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e41ce64-d7c1-41ad-afd1-d88f1c12a991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b082e733-d72c-49c5-ba70-bbbd26086400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67723dba-a763-4497-9cba-76edf3f34d6f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04905b8d-f8c0-4e44-9b29-5c41acc540f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f63dd3-f06f-46c6-8c03-9606f1128a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ddd784-0424-4ea6-9212-add7eb6b3db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d94315b-32a7-4030-b5a0-8119f1e591d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f710c2ce-ca47-4fa0-b2de-c02d9dba2838",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f381b75-9379-41a7-97ed-252980a7a39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b86d0e6-b117-4385-9e9f-3cca081b55cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cba87e4-9aee-41be-a2fd-ea68382263a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea27ad99-e1a7-468b-b4aa-be8cee206164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b68091-3fd6-49f0-ab3d-1562230ff181",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1397c0-ca41-41b1-8298-4459b14817e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3aa4a0-c076-4c1a-a7b5-0a7a67161ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33d3bc9-ba55-4ec0-be3b-e0de1fe4501a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7843716e-065f-4256-8845-df497a559362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f4adb7-268f-4e9e-82cb-6837366f607c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fcabcb-24e0-49aa-ad0a-a06588d022c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6285940-470c-4b2a-81df-6966f8d7f5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458fa37a-9d28-4bb3-ab5f-d3a59f615808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0344777a-1641-45a4-8e95-6f61f1acd2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5efa78-ea97-4e2d-8ab9-2237ed73799c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9ce5f0-96a9-4211-8720-5867fbcfb85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b21fdc-a093-43ba-bf30-0a8a945c2e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaa36f0-9436-4829-93f6-c679bf99f802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0df2dd-30cf-4337-9418-1d5c48a00e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661b9fb7-3dfd-4d91-a76e-7a70d35864b6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795ef80f-a9a0-43f1-9de3-dd974f56dbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cd3d24-ec1c-4593-a073-91c9f51ff386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55aa8885-c572-482a-83e4-43ac7fb2dbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aade2f5-7bd7-4889-ad89-a1b44a6e9a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39068fa-2c9a-4db1-90a1-465dbbe7c6e2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa6a691-4a8c-4d45-b29a-7b0b74af1361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3579a2b-0c57-4c3e-8fe0-5ab909bc8041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9999eb29-fdc2-4ff3-abd6-698b99df4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8921d76d-d55c-4c87-ae10-fb937574396b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f4d7f4-2461-4acb-b483-94b5b24c1d24",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3613c203-c587-4d3c-98af-2a884bdecab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0894989-fc1b-4be7-8567-0a664223d865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66d4774-e63c-48b8-88bf-34765b6a9044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f91c4e8-f95e-44fd-a717-effd5534ffe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ffee1-c158-4bda-ac1a-d3f66f9a4ee4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0249cc8-51c1-42f6-bd9e-8cbefcb922d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c366aabd-e9d0-436d-a2e4-ecab95eaf7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5192756-1ed2-4f95-a4b2-4cae17d09519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6850e932-d592-4fca-a9e4-33fc8b2f1ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb294db-e5d0-4d9e-8b2d-55bf3f7da61c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538c1752-c340-4903-9d37-7abd926c9255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1323808-55d7-4529-a258-22d57d76520d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18978463-04f3-4d27-bb7d-13ddfe5454eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a902479-16e7-47db-b5d4-b16a9b32d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe3ae40-fff4-4051-ad2a-0256568ff8ed",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a846c8f-3d1c-46c1-99fe-1a28ecab0b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b494de-2943-42dd-b971-71ce6f05cbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dcb534-a37b-45d9-89b5-c91b79be135a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4964f91f-4d98-486b-be91-559549938185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84037674-504f-4f82-b342-9ed82ece623d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f308b0d5-641e-43c1-8b3a-9ebf32a26e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a648ed-ae01-4df3-9870-0f3adfa284e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6629a523-f8c5-4a7a-89e9-63f2c4a1698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d6dba5-3900-4aaf-9e22-fdc96e689541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b1182f-a02c-41f0-b837-a5d2cabbec3e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12de5269-6de0-4281-8106-c2321d047fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d496ae-a32c-4e66-b504-4555d2775353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47927196-5bb5-4dc2-b9fd-9bfb240c3ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cee9993-9bc8-45e9-b301-6325e6cb7289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea7091-393a-446a-8a10-8c23e956c66a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f349ce70-866b-4d79-8e9c-45a5fe755306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b831eb9-eb68-4b97-bb40-a84aa6fed35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a823f467-2c31-4367-9145-68b1c06619a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "749007bd-d070-4db2-8e47-c7b4922a21cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e4041e-8d5e-4e5a-9340-30f71859ba08",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55c45aa-b8b7-4fc3-8870-762f29d61dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dd6d4d-804c-4346-9d84-a4839aeb6835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cff8592-3422-4c43-9427-131ee51699a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "570de10d-acf6-461e-9772-ac405d52e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a0539f-8dbe-4681-aeb2-f360fdbbf733",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbcd1f0-f7c2-4dd0-955e-b8b55a4f0c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93d8a42-f5c5-448d-86ea-888c5835b317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac814e4-a2d5-4d43-a4f3-4f31ea3e56a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f7cd9d-4a0a-41cc-8691-202431dd2ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b77671-9b66-4b59-8408-221aba434b13",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fe0be9-6e6c-4382-b672-89edb319fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c4c029-0018-4749-9584-1e6f03f9b84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71c4d4b-93b2-43ac-b057-201bf0fa0ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5d8fbe-adad-4675-bcb5-f65f7faff221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d550e4-da13-47fa-959c-b02382354e9f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf8921f-b737-417a-8de2-69f775f3348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70b84e5-1c5c-47b7-9939-d4dca47bc6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989dabbb-56a5-4254-ac98-9fa4ca967862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2389f980-39f6-475b-93de-ebc5868265a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4f45b0-2f15-452d-beee-bdbe4f870d25",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d656a6-b38d-4631-b29a-f071c837109d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b330dca9-4658-44ab-a82f-31b4b022f806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3524d79-f5bb-4603-af5b-9051a2e06905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8e3e25-d4bf-42d6-bfd9-280109f76aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3678f7-d66d-4d6d-9dbc-90e4606e7c00",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a4b0c5-c223-41d7-b6cd-72a282cf7458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c10304-372d-4819-9098-ef5986c36cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637cb7bf-b48c-4fcc-bbbd-74175649b975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa2f410-87a1-4707-a290-71b0222eb2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57efc9fc-711e-445c-9930-1272fb5c4170",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c82abb-3125-44f2-b984-2e93aeb1f9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98e064e-1788-4925-a4e8-908dd29c1867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5742998-f124-4537-b01d-01654e7b8e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7512dd10-3e8a-436f-8e3c-6616fcbf9bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ff3916-4acc-4fc4-9336-39dc202c91de",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3742aaa3-a9e9-4f86-8aec-787330457c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59745679-4482-40df-999f-b6cd4b6271e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81aa843-e39b-45a2-b223-b18a80bcad0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc44b63-c125-4884-9253-ecccce990b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e1cc4b-df71-4fb3-8433-f3c74e6bfb09",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8afeec2-35fd-4a39-a49e-33428245356f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825cef7a-6a91-488f-9506-98e4273b770c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182331d5-fae1-4326-a5ee-11883a9a56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c132db1c-efba-4caf-9b9f-76adb8a6bc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62452a29-89a3-4b20-b864-1b32c633a6eb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7179340b-3f08-4850-a3fe-e815a8980e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38091cb-c785-4e0e-af5c-dd001d5176c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a859c9e0-1fa5-429e-a78c-257af68ad9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81956cab-43f0-43de-a8c6-ccb9d91156f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb0f1a5-ec1e-49df-b3c3-9a2a9672f57e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac593fa-a36c-4bfd-9961-cde9f5b0a224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7357d2e-3a82-44ec-af7a-5c06c3bffb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cbe921-d4da-4ccf-8a47-246aaf41cb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b83c63e-c98e-43fe-92ca-51e7834badcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67196226-6ec4-4809-80ea-4a1aa53b95e9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd636e5a-edde-4e4c-b1a3-8ad08fe966c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6943e71-973f-4eb3-9032-fcdb30b6a6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7927b6b5-d438-4d0c-933a-374c7a2befbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "089a3b01-518c-4b65-a68c-246cc582ab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3155f3d-ab3a-47ca-a24d-547ccccd245a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b13ade-a3bf-43b8-a741-ebe2ed8d2150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75a68fc-1955-4aae-93c8-a365651ca7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef193d4-d015-4f01-a566-11f37ceb3dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77a8c7a-e50f-4046-bf37-0017eaa0bc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6c50c8-66c3-435e-961b-3ca374f4c826",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9e606b-4437-47ce-ab70-03ea321f446e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41071fd4-fa24-45fb-9898-5e2cdaf4c1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8788de15-3ecc-403b-a95b-d3ed56ac1ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77ae5ab-9da8-4686-a91b-0fe522044d67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "33f52105-3032-42c5-889a-12bb769775d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cf0150b-93d4-401a-b681-f865a80e9132",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f279d56f-45b0-438d-bb3b-7bf7e374a0d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb2fb8e-d36f-43f0-bf2c-a0b1697468ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54284c3f-6975-4743-9da5-e5c36b4f3415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de34fb19-e2b9-499e-b2af-56cc18180cea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9e2bea7-38bb-4b0c-a626-19e7140600ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f8fe827-cbe0-4b06-a30d-19c7b78bb4f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8913d39b-7eb0-418b-a9cf-5489819d9323",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ba8e040-ccd1-4c5c-b2f2-96b0b101a033"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b7aa6fc-fd02-4745-89dc-c27305acf9fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "62d92448-df88-4468-8e0d-0fc968fe703b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d15f47f-34cd-40aa-9942-ef37886b4d4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a02b4481-7cd9-401e-9868-e88935a2fcea"
            }
          }
        ]
      },
      {
        "id": "93d8ec0e-b51b-4634-b36f-1553276bbd63",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "93ed84b4-00b4-40c0-aa83-40889b7bcfad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d402371-5193-4914-9502-70ba0ac180ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76395dd2-99bb-4139-a9d2-1a08d95b9248",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a45253-11ad-423a-b599-1fd19bf64216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68c1fe4-c80e-42c5-bcdb-2b1bbc2d34dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f702b079-d0d6-4cea-8d5a-619fef9018ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c641a0cd-6e60-4a1d-be99-59cf524cb20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c6742a-a296-4f80-b9b9-26b9bfeb9aab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6ee1d7-fa53-4982-8cf1-36674f5d6fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a5808e-f426-46eb-9497-53fdf566c729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac7c0e3-6830-4677-88e5-65be46660b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26edc658-bacf-4393-8d2d-05b608fbcad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fe0fc1-7d45-4681-979e-55f395f8a412",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b740a5-fcf8-4921-ad47-c20d9c0b2d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c50a5b2-b8c5-4445-9daf-1bcfecafc370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f16209-491e-4cb0-a2bd-c7e7eb3210d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a226b439-bcc9-44c3-b0af-dfdec693fa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8475e33c-1f98-45bf-b464-797d8d7fc907",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c975629-047d-40ae-8ad8-bed34bc38e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18b1c15-3d72-427d-b14a-e43028e2eca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f99686-15cb-40e5-8649-7aa9e8445b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a963ace-ee0c-45ae-ad8c-57e6269ac648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b42a91f-dac8-44ae-80cb-d7d528d98005",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe60d5e-c3b6-4703-84b1-b3ff805c3e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57eb42e5-66df-4b62-ba29-a0934de1e980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901d9cbc-efbb-47cc-9b7b-6f17569cf526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f366707-3af4-4f51-b43c-14e0dc58e390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8878ed9-ba88-4589-9441-53afc5d56c87",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fcf068-dda9-445c-bb61-cc81f765b247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e33aac7-d959-4bf6-9c4c-ba5bcae59692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cb9a44-8caf-495d-a993-e4809063dc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6462d3e8-89d5-4361-95c7-46c0b51f0ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b19c1ee-94ba-4c22-99c8-c4ffa4622639",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4a2b35-c44a-4cf4-a5b0-d469c2d3f99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9a06ab-4daf-4d75-96a2-7e0353b51212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cb941a-bc16-4235-81b4-5df663d9b13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "223c23f6-6764-41c3-b05a-fdd1d52908d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1e5949-8f36-4b74-8afe-1afc753b7534",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9f14a6-c6bb-4183-aa9d-09755fd15614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f98fe5-532a-42e0-b9a4-a43f20eb314d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92a6ff-bc03-4723-9179-08823a8efbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fccf9ca-be4b-4e2d-89a0-44b7e999aee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2873fa19-9763-4f75-9a9a-9b6fbf8689bf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64ca578-9c83-41c5-9d06-95c8dc47ec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a55364-8f64-40b0-8fe8-168dd63b1c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63dc6c5-95e1-4a2c-b6d6-0381ae798c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "881a5786-6b8a-48dc-bdc4-58920efe0c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e5c01a-0200-4063-953c-e36c3739bdab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302095db-be52-44dc-bd3a-58eaa6c378a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e33afcf-f357-4627-85ad-c5a2cec3eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6143eeb7-0b9e-4a9a-92db-819f9dbacf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d757567-4233-4bb7-8c74-a5be67d43d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ba22fe-086b-4253-a75e-7103ca9d777c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5b8c7f-c1fa-4461-8e47-d4eed7edf667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c32e7ef-2af4-4376-bdbe-6bafe897ab08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010ed3d9-2d76-418b-afb6-43baafcc21c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "36ffab89-dab0-4ae9-9bfc-a782830544e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118ba9b9-1b6f-45aa-94c2-4ebfe38eb224",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc74d726-3944-4beb-980e-f416de47d886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e112ede2-4bb7-45c8-9b22-bbf595b11048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b870f1-2607-4098-aa33-0b46daa71242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "489bf18a-4958-4db0-8a73-0b77e313fdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf45e4cf-f274-4c9d-869a-ec3aa438f389",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c77159-1a85-4ce2-8828-ba4fb838916f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a143db-69bf-4b4e-ac52-885bee61692c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de23706-01c4-4b09-9f20-2b63318617c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed13ac5-3835-4c8f-b017-32816d58894b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d521544-42a5-4cd6-81ce-12f5bf88f664",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d27806-546f-4bfa-9c79-86d5eef14a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7090f4c9-fe47-4232-b39a-9683ae21c7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be3ef52-e52a-4c1f-893f-24cd0970a59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cbae94-9d18-4723-9110-8623044f9301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559412c2-23eb-4fb7-a9e3-1d6c1a9b5070",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73a34b5-57ae-4556-a555-d9c9b6577fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe040b86-e36d-4c26-9793-a9b789adb6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f1dec4-63d3-4cc3-aebe-9393dfc20ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58aaf672-007b-467f-8f9e-4443b4a6fbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe5c708-51a2-483a-970a-ba66653b8789",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0bb4d3-2fa2-474b-8513-5dc4002712da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4d9e86-1835-43c0-9554-6ea8dd117a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ee7b41-b0f9-46b3-be18-81d00cca28c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a695cc86-ad0a-4410-838e-574e171e4718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78424a82-f8ff-41f5-b961-cd66248ca2ff",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e683d7fb-ef8a-4a6e-8b1e-7d9b80b6012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e07e52d-edd0-4c2a-843f-e89153efa798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488b133a-a19d-4f76-b6c6-ce5323642e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "913d2434-15e6-4400-aa68-4169daa88003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5646a7b5-9720-4f39-afa0-3f0e39ae3460",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707d7f7e-4a62-43e8-be3d-1ace0da247d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5484703f-17fb-4aa5-83f4-0c621fbfd3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68c7868-2a8a-4196-9ed7-f5c4e324fbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7da53aa-bf7c-44d7-8609-d6ae980d4643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98841de-8412-4368-a021-b5c2d1209800",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b7e443-887e-4d4f-96fb-d8a4c6740b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff6781b-2ab5-4d7f-9ea6-caf605ef1348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77eb21d-b14d-461f-86ed-7fe087f72292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9945be4c-027b-4abb-a4ac-158df5f11989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae471d1e-4a38-49cc-b616-27eb48fa08e4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcd4430-d394-4f05-b941-c338c8360751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30f2599-7f43-47e2-bac9-e16b30352a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fc5f8a-40d7-4cb2-b48a-963eb4d1313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4872d9-da4f-4ac4-aa92-56a55c8214af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8b98c5-fc4b-40ca-88d4-821f1cb57567",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dee5eec-aa3a-4023-a3ab-1e495f9313b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f42fbb1-7014-416d-8adb-26393babb6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4c391d-4f9a-4ad1-b59d-c9852a12731c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb8a63f-b66a-471f-aaf4-0ed7ed8b3e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0baad9d5-ff04-467e-9793-96ea5889a2a4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d673e5bf-1759-405f-9cba-fa544373ac4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08352f39-a622-460a-a900-a78d4364a0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550603c6-2c23-43fa-ac13-db03d8a91f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbdb381-13dc-4a67-87da-e8f3e3e8f023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1f5362-60f0-4251-bece-8e333a21ac3f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0202fb3c-9e3c-42d1-96c0-a50d653f6b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fc2a78-edfd-42c2-ab30-54be558b3d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b7a71b-56d0-4dd3-98e1-73bd27a86496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ae2223-c4dd-480b-85da-ac91bc6e26df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89c0702-24d2-4bd7-a5fb-3e1b82697d40",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa89dab-fde9-4655-b895-08ad9664d5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c2b2d9-e271-49b2-83cf-cd94526ea0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345dbbc9-38ce-481e-b58c-05cc5255de69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64702b73-8d76-4ae5-b867-b0180aed24e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656fc352-00f8-4175-a61c-b99d658aa93c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db840633-4cb8-4b5c-ae5c-1151345f5088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52a7159-e96a-47ef-bfbf-c40ba2f51301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c29ca78-c003-4edf-97dd-ce3a413c7a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0994301-2a9f-440a-8b4a-1130a8642b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e92dd7a-e7c4-4635-96b6-5bb5ecc2a9fc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a90b304-2ca3-4736-be22-36136b622aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45573f1-9325-431f-b314-fbb010e3bcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6453308c-af77-4f6c-8fa0-dfce1d41a501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0deeb77c-7928-42a5-b5d6-4655c5714e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a6c3ad-561c-41bc-a84f-a738271acb99",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2324400e-ef51-4a02-b93d-130529126570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf9011a-e11d-4bc4-8362-efbe2f5296bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44468f4-72ed-455a-9a17-0eb1c888a138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2596e6b5-6af8-4240-ba25-060549535808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15f1169-7fac-40b6-9d6c-473ac1170076",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4b0f4c-9879-423a-8188-4be8b7a33ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d19e6b3-d4ee-4484-a62b-dc2b351a5bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abfecd3-5beb-4dad-8e51-931625ce053a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aaa7a43-897d-448a-89f2-bbeab94170c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612e0545-9a98-4ef8-bec8-e26d770d1357",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42da704b-1694-4a1b-b270-109e1c494f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4c3dc8-d4ad-4208-adfe-4cfe0d663e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41570669-789e-4e50-8916-2054afde7717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "602a1787-4444-430f-8339-b9d8f0d6f121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dff6e8-1530-4f19-9a32-781f4de2aa03",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25438ca9-ea3a-4f96-8576-0407ed11ec34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fad599-19e6-4e4b-8a6e-211482dcbf54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec13587e-21df-42bc-99a4-ef82690a90c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7a0282-c401-48d7-97a2-125db6a1273f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43f1a67-8906-4123-8b8f-9ec53b877324",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df27c58-f96a-4552-9f8f-6ca4481bab2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b74ca81-c3c1-483c-8aa0-d73ea471b4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b489d823-92e2-472c-ab9b-f3280cab6d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "547575ba-2db0-434e-85fd-6b69774a2179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cd555e-651f-4e64-a282-5165ecbc8264",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d9e062-69ff-4717-ac66-9da41370496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574922e7-729b-47c7-979c-d1a41c5e5d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f605c900-06b1-41c4-8d81-2bdab9cccb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccd7a43-db6d-4665-94e3-c9c080c44871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6405ab04-8082-40cb-bf4f-5e42e3c18943",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9a3192-811b-42ab-830c-1911c2d1db47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a88be6-960c-4d0f-a578-114573fdfae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6d8e17-2229-444f-a4f4-b82632b15be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6791f92d-45dc-4bf9-9e51-636223255743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a308e34d-ebc0-49a7-9fa4-84a5c8e37438",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af8f560-c34b-4f33-9369-f0dba521813c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2135dd7c-80a3-40b5-983b-1b947ca642eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58cb8b4-7da5-432c-b106-3347c8ac4ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8147d2-5ae3-42ee-92a9-c10487b4701e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bd6fb5-95f3-43f3-9031-ae57af519ff6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11631ab0-06ef-4bf9-9c71-1e4b8a7b524d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b12f37-ae42-4874-9b22-7b6a5db1d9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffd0178-db58-463e-89fd-6ed42232f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d30ebb-e2e4-4bcd-8f52-c044f17afd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cb4f61-3089-41ca-8266-c82489295d74",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824e51ec-0881-4fdd-a62b-f362d1c87bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b007f8-9e63-4615-9861-923409d2803c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02a3a7c-f893-4cb6-ac0a-2219d8e249d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5769d8aa-2516-4c71-8a28-2c2a332443b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02201a4a-0176-4d01-a26d-ce36858b5600",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530845b2-450e-43c2-92fe-2ef920d68096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a491549-100f-4ad3-91ad-58d6c12a2f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb93cd2e-c872-44db-b8d7-f3a29b37b768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac72b7f-7cf9-4cf8-be75-7ca7f6f08930"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8273f8ed-d175-475c-849f-2f6cd7dd6278",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59c86305-04fa-48ff-be1d-7cd57ca2b203",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4895e8d-c742-44c1-a732-f9d4a90fc2f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1faf78a0-8a07-4f73-8450-335593c42c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eac9f84-476f-43d3-b004-d46739cdb629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fe03a55-c4ad-4d35-b7c5-ecddb11cfb0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "283f8ec5-f901-47df-bec5-7909ee60db14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c935143f-46a2-4c1e-81ff-16a97d5d62c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "047f130e-3695-44fb-9341-4d82e57b70de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f923623-19ae-4d35-934d-1b0dd9ad6ea5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33af942c-2662-4e4d-9708-b438813e3517",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d37b2c48-11d7-47c5-8141-629172251a41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb4b3016-0e07-469c-bc5b-449572fca9ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0374e5fb-4a89-40a5-b6fe-c7afae8733d8"
            }
          }
        ]
      },
      {
        "id": "749908c7-d30f-4aa0-b9bc-acd5ec37c126",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "817bfc20-6e96-4a18-8d51-a1c4ac7c0466",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5988dd48-b59f-45d6-9218-2ab2f221a679",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a03d5f2-aa74-47e8-bd12-cdf7ff868fd9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbf9852-53c5-4e78-9dd1-171abd8aa4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d243f2-6e8a-4cb8-aa5f-2b8b94c5d430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0277e8-880e-4f63-8574-b2471673ac18",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50a2f46-8d7b-43ce-bced-c25705914128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce9a6d8-a5c9-43d1-b857-626f846c745d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e353cb5c-f6c8-4438-b114-1ed0c1dfaf94",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bbd0db-705a-43e7-82ff-fd3e906f5317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b50121c-d80d-4bd7-9666-91eb99b6b3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea0b101-2895-4d61-9fa2-7f09afaabb43",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29a341c-3c43-4944-bf61-e9bbe3f76875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f36678-8af1-451c-989a-4ca6a5edc9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf495c25-fb60-4503-bd5c-8fc53ae445a4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42e0e50-50d5-4a97-aa5c-10e14814604e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5143168-285d-4360-b13d-3e1019d94770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edaed32-cfe3-4e1a-80bc-b6724e53a5fe",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1f1362-6f12-4b6e-bc77-ce852e94490e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b899ea0-7eb0-4c4d-bcd7-2a300df0549a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5181162-3cce-4e1c-9d24-c3465e6a56de",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a008411-d3db-4217-9bfb-7409edbb80e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdc4130-f742-4406-b47c-8579554a233c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa40cee-8203-4d30-87e8-269e4ef53c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd2ffe1-ae6b-4d3e-bd63-f37fdf8ca346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d347abd-7adf-4ea5-b674-f27f5a6a367b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7296ced3-eef9-4b4a-a31b-8a465610fe86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a63aa3e6-e336-4b0a-9bc0-6d43819092dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43cbb14-2814-49e1-ab43-94de48cd0acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c588c19e-cbcf-4dc6-8905-0a98e782e22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b141e42-0ea5-4314-8b4f-af39a30b627a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c31f55-7d77-40bf-8977-454866e27023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b0b413-1cb8-495a-8ffa-bb916180a6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb48d21-89d5-4dc1-8b56-7cd02b69e357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f75a5c-1438-43b6-a267-2152ed055ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6a51e0-c472-44be-b935-47cc2b50f8d5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6406d59-6f45-4cbe-b29b-9c5b0dfb5286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3debe5-bd23-4a11-a2ac-2f861b21ed33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653338d3-b9c0-4573-a00b-b1e16513c856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633ae4b5-ff5d-4f86-9a2c-0b3d6187fe5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296d0cad-9dbe-400f-8143-b3778907feb8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab147d9-08f4-4259-aff5-287fa7ab39c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc82c16a-27e8-4b12-8a86-6a47fbbe3d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599d32cf-c749-4f91-85cc-e0e812a9c317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018cf81d-e77f-4187-8535-9888c69c1623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1135dba7-0952-41ac-b714-71cc987c9714",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77068ff-5195-4cd2-a751-1975a490da91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7886d80d-6eaa-4a4a-a5a2-e723a7d6abf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d2961b-2d8d-41e7-954b-7fd947161b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31f74fa-9e14-40be-97bf-08f28a5639f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26cd096-b7e8-4a40-b3e2-ca9ea708f6a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d2a0eb-bb08-4ea7-b393-f842d7548910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd822f1-4ffc-4e93-9470-adbfc2570f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdda8b0a-bf29-47b5-ad13-c84739b59706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bef7d4-158d-4950-8d37-7977c520d31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea66be1-e61a-417b-962a-bdfa7e8795f3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c28128-f9a1-4a00-abf7-2281c3d9ba30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc4ceb8-55cf-4430-a915-ada5dadc6279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8791ecad-d723-4a29-828a-78c7db6f25c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415e1e2e-923a-4a95-9d7c-b6301922a885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0833aad-9e4c-44f2-8821-0aba6f62b8d7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c363eee-f14b-4506-bd09-d363e7ec8c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2bf14a7-3496-41ad-b0bf-bdcabac9f762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8661b1b9-25f9-414a-95ef-e4b1c4efcb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb45762-7efb-4ed2-b1a3-b106c306aae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a784b7-444a-42b8-bbb7-5b189a2ce7a2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faf38ee-5c03-414a-8ec0-f2ad67720f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6ce048-5b7b-48ad-a513-8ea7f1412ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bcb312-b110-487b-8d53-04e5dbd85372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6495b97-f27e-4785-a6f0-6269e751fffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e472c6f5-1360-4645-aa3d-580f3654ea9a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd457f96-9b64-4f65-afb5-87675fd9d413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399c1627-a5eb-4d6d-9bfd-7876d3012dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa95698c-3b55-4fc0-b500-429ea1b3fcbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bfcfa6-b9f9-4c75-ad4e-9466ee6169b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cc33f2-7042-4cfc-8169-b9d3ebee6824",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c143b3d-bd0b-4557-9336-3bd87add65db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca71666b-e03e-46d8-9be2-3608ae7960d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5383a6cd-78ce-43d9-8d19-1fc6d22e0960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67e53dc-5d5b-4cb3-8e96-a40f39156989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed82f59-d516-4df0-b6c5-9a97e3772979",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181df98e-9007-469e-946d-6426a9e2d15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c96f4e-453e-4b9b-b88b-298ed32728ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40c9277-8e1e-40e1-b007-0040f6c6825d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3933132-7ecc-4bd2-9c8d-20a0df2de743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90a8023-53e8-4daa-9593-e9575c16938e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cbbcea-c2ca-4da1-8205-32e835fa5ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1867bd99-61b4-4211-b299-ef00fcc61be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9c5c17-b81f-4814-bcd8-1311ee380687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823298df-e4a6-45df-8f83-a74891b8b437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b730822-26f2-4cb1-8c13-598017e8d9be",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2caec6a-0910-47e0-8149-c308cd767526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9807d2cf-58e7-4b06-9888-d9f3ad08c8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6e7228-926c-4087-a513-258fcca19e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d37fe0-6771-42dd-a224-a4824948c758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4102a53d-2b86-4812-8432-2d30b83c8844",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb2854a-7b25-4ec6-bc30-d3e437593dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94cf75a-3196-45db-a4dd-edea7406a81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b06de8-98e6-4501-a204-1a178557ae46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3e5a0d-dbf4-4e8e-aa81-515cf5eaf448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713f988f-5652-4c10-b656-c9bdb8243551",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59555cd3-f359-494e-b7e3-43083ead9f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f882e6-2df8-4f1b-99f8-74abbf64d0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7857750-457c-42f9-845a-d667c730ed78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222a9489-19f4-4c4c-9e6a-6da3232796bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5660335f-c6cc-44f6-b5ce-6cb0fbcb0118",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b40b37d-d3fb-4de7-9da7-b8821a960c17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e5d3bc-a227-4ad9-81c8-a87df38d0a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c24608-e093-4909-ab69-8c61fe41ebbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446c7e7d-1c7c-4bba-bf6b-9fdd5ea8a2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bab841-66b1-48d0-ad0f-c8c4cf3710de",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005f9f2c-536a-44fe-bb72-6a829a3f7798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ba4ea2-bb26-4cfa-9fa0-3e13a6bf9eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc7c1f0-c54b-4858-9a35-98d3bcbe349e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f716b3f-ff07-4f1f-93e5-ad522793689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3519ac8-2652-483b-8499-e62aed8ea001",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807672ab-83b6-4f88-bd2c-41aca9e0b27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52b7a0b-935c-4f7e-be6a-3e7fa6f9c4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0163893-62ae-4ac7-9981-24e94c6ef1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a2676a-527d-49ce-af4d-db4b243d5d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e76990d-c4e6-466f-9c4b-713bb53d4c50",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c6340b-a4b2-49fc-b0f9-d61c822f761e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635e0795-2059-45a4-ad46-3768d2bd733c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6724105f-78e2-476d-8af4-a868067d34aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b214c49-1ad1-47fd-95f8-b4b0008ee606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db64ae-65c2-474b-a5c0-5ce2c23fa620",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a475e69-6bb1-4fb3-b215-c8109674a2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf1ee2f-e6e4-4319-a430-e49c0c81eda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10340e28-0207-41d6-a3bb-a1a5ccb55dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd705976-8952-4f38-8e7f-3d3b55520135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac9b00-cc26-4011-8902-2cfd9bbccb51",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c31c8e-cc1b-420b-821d-58bc17714b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ee4298-4082-490d-8957-0d5b6b50ad0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c769df-b5b7-451a-a1e8-d3ca18a07b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032f9edd-34c8-4c52-8785-c489b0a181c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8763b2-e0d9-41f1-bd02-e08f67e6183d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2620f5-616b-48d1-a61f-09b0c7493c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47349ebe-ca05-4bac-957d-acdd01153e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7574e021-163a-4bfb-97e4-50096c0319af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81894eab-e624-4fa9-8b49-f6b42ff594da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9047e2a2-5911-4706-b79a-39b59074d841",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153930e9-e290-4341-8df0-a24c55cee87f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620ea640-bb9f-4fd3-94cb-1dacd1dfc4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095c5cfa-aed6-4d7c-b094-9008bc73be45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9abe46b-99d6-4910-bf37-250028ad1a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aecbef5-0ce7-46a8-92e7-1dcf26c61ded",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1009e4e6-89fc-40ce-a914-aa791d802f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b19c80-49ef-4c39-9491-f62a535ab86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da670ef-a046-470c-a0e7-8c58e56b7b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e7bda5-aa51-49ad-874c-06477997133b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec6f8e1-b05a-46f1-a1d4-024bf7cb6ae8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbd4fcd-a413-4065-94ba-64a9dd333188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00fc9102-827f-4af0-b902-46d708c324b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fad45c7-d9b5-414d-a41b-7c0794cf2d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5cea5e-6488-48ce-a220-84bcf284286c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d3de39-676a-4f99-9e8f-385a67edefba",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215fa740-43bf-4328-885d-7156ea86d036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a439ab33-ec07-4e39-a377-c0385d03fe81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199cb888-7415-4e8c-a22c-f4307d351a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f78be0c-7537-4d38-9144-6f242bdcbb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06560cad-9d75-4947-ab39-ca9dea4f74cf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9ab897-53e4-41bd-9964-406159d490c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3817932-9b8f-4148-9b78-e14a0eda3a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39d7bc1-8108-43c5-b60d-6cb3154b3c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554e1b40-e04b-41c2-b2d5-b34df4a4bb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60137775-4af4-451a-9e6f-4ffa96436b12",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaa50f4-7421-429a-9b78-edf08622b068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03621f4-7e57-4fd7-ad99-5cd2a8349612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dfe07f-5f17-4cce-a77f-061cd4026547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f8cf5f-30ab-472d-94e7-fec54e790cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b079b63f-4694-48fd-aeab-7935409968ec",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3444f6-af3c-4cbb-9d2b-bc99567852f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8893c670-92a9-4db3-8b15-0a1a007b7602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda8880c-f0ff-4d8e-88f6-220f1252778b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbabb75-abd8-4565-98cb-87d8b5f3934b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77778f6a-db79-415c-ba61-37b25291be50",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae887d9-918f-4031-9c3a-59c7658ed2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167abb5e-002e-4828-a238-29c10e2099f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d94701-ae0c-40a4-8752-4281f2cec202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd76524-1de6-47e8-9faa-b9c61b390c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1da18f6-b692-48cd-9f09-8a44d618553d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d7fa51-b868-495b-8564-a480f10021e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d47dbc6-afc8-4763-9119-f5bd9453a1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48358c30-b2c8-4f7d-b1d2-b7fd9cf62ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97035bf-09fc-4864-8aa5-22d0f98ce46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83c4c33-470f-45c1-8eef-5f61f2836e33",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902044c3-c718-46b8-a058-9cb9fe92f24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8e396c-a8ed-41ea-ae9d-32a560163ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95022aec-7860-4dd5-83fa-45b38aa4c38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595911b0-9a91-4051-bfe7-41261bd9cb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dd3400-122b-4015-8dc0-f6032a28ef78",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864f26e2-7892-443d-8005-4eb56051db4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5dcb8c-af85-4728-9b4e-65ea004ee024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbf5b8b-10d4-4680-a301-e7332a883561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b722969-7ef4-4b72-84d0-1757aa521df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97ed434-6cbf-435e-9398-dd26122d84d9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20c66ed-3a6b-4ee5-948b-56b6fb8cf23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300f87ca-29da-4d34-b7dd-ef5bca6a347c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cae131-d054-4369-9fd3-acc14d6452bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f48c6f-3499-4cd1-9926-a108c11afa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f7ba21-c385-4919-ac37-855d9e349a4f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd80647-c656-4222-b935-24e584c019f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef90af93-0f31-4466-8d36-9d430d336692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512fb8ad-4a95-4b44-adf6-b7d5d165ed2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dcded0-238a-4f45-8828-39b112d3f667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bfad52-b503-4767-a509-a4777b8ca144",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082d8ffd-4d7c-479a-9ae3-4706f9d72482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414d7e5a-6d66-4f9d-9066-312c3fd80301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1401e5b-1399-4567-aff7-479e78d9b3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9b068c-ac73-4189-b78f-52d6705b7642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abbc519-1944-49a2-94c0-1ece35710657",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efcb6b9-bff0-4ce5-9d72-074c172e7343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd4b3c4-7625-4f41-bcec-2af1ed20018f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074c1a18-6b6c-4243-86bd-fa4a4903f1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1c23f1-4d41-4553-9ec1-5f83f9adc2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169d1b28-9271-4649-8737-7a49216b20f4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62e846e-e358-4c2b-9a09-1910bff1feb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44cf6ac7-f423-4491-95ad-c071c00a86ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4347589-5ed6-4815-b2d4-d673c0c02679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc265e44-367e-4e7f-97e2-0a4218a2912b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f6cb57-fa95-4a62-b083-fc29084d7075",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623552a6-3fa4-4dcc-aaee-300135dd5c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c792d31c-1d30-47e3-811a-8ef28531c6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d10cc14-b909-4c88-b108-b97b1c9716d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78445480-be44-4103-89bb-b4dae758f08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c7781f-5e90-4517-aa72-973bc485dbcd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93317cf-3ca0-44d1-8121-a91796c1fe3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8aa475-48ad-4ae4-bc17-6b5e90547166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de334b83-70dd-43b2-86a3-f1bc4336acf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27aabe77-4962-4c97-8556-972ee9cdbaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83d4c1f-3fa0-4c72-8786-6177e97fed9b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db54fa38-f312-4f87-8066-897a49488822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e646b67a-98c7-49fb-87cf-836c2d8ea448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c642c6d-b278-403e-abbf-9a7fd5e42c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2003d2c3-acd0-45cc-99ee-4f1a5f893e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa3f3da-08b9-4642-bf75-ac4c3aa19027",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43da1a53-4fb1-4cab-81ba-81197c118ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c37628-17b8-4318-851d-075a975e133d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba42eec6-2a2d-407a-a259-b155ff577fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9aa0e73-3b8f-49dc-a327-c371d9013f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469904ed-2545-456f-8c20-665c9e16fd1b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84680e7d-7e9d-4a54-82a2-ff627b5c488f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8859ec30-7e8c-4906-9757-2523b9da2be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b919d512-2bd4-4856-8677-e488c4c7fd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bfd75b-5686-403f-ab34-d413ba27b6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79d1d20-eec5-4b4c-bff2-fdd1d1e5e462",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490b0b46-1451-487c-9ca4-59b703aa4755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6697a5df-bb37-425a-b8c6-1c04dc15346f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5933ac-2e21-4f47-8ae2-7eabcfb14313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8391d4-8421-472a-b72e-57a4d621074a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea9bb79-8ee1-4188-8342-f3db0c15b0fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281f125b-20bf-497b-8a92-261e625acfb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f467642-1fc5-42bc-80f0-a59ef5a630fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82d23bd-8af4-42da-8a2a-2fd4a641c1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77df464-a2d1-4164-a638-42146b56e92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfec210-d901-4793-ad4a-f0a14bf6c83d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16293f3-57c5-4433-b85f-d93425ef9d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea71068-5090-450f-adfb-b39c334c76f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b92a25-c202-4aac-a616-78d75f43a930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0521688-3f56-4ec1-9deb-74443572fe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3a4520-b7ba-4889-bc6d-b24b6feea662",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f11d7e-e990-40fa-8767-63767c9794fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec023219-ba77-4a46-afa7-9320b2811a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136d75de-f54c-4f6f-9318-acbc48df5629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06b4f3f-36eb-4f08-ad6c-3172872bb1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b28bbe-a048-48d0-8980-04f05c7a9486",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a425f5be-e39c-4d6a-9950-700f5eab2b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b98ffb9-67b4-4239-a800-fb123bcb514a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645a0793-81d7-47ca-ba96-ae1bf641e823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7dceaf7-4234-4040-86fb-79c1eac864aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8f61e9-68df-4ae4-aeba-6d693c5430a2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290c9f8a-8f40-428f-b445-c508fbcd09c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03308af-8a0d-4fa8-b0a8-f3a3aff6649d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0672e08-41f9-489a-856b-362feb93771a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f51cca9-1967-4fd0-bcb3-1af37a0c1dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c212c7-2c50-437f-ba78-4e5972d2a652",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc86d56-cc59-471e-b2e8-ff05ce7d083e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a5cfd9-54ce-4549-bd6c-6f457159057f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb89a482-4848-445c-bdc5-dd941d30b683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98bbc9b-8394-4c87-8140-584b5d80b9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b23e70-def1-4216-b440-ea6c3f14f378",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233e4e3d-1621-4fe4-8c20-f441039ed047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d19ada5-03ef-4c30-9b8b-eef8124e2f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca72863-412e-4089-9ac4-8d9a1a86dbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa97381-c122-4606-a724-f9c393c38d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ecf01d-9901-4283-ae58-768457291917",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55263b8b-ff3d-4951-b0fe-be254e66f3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bff6d7-6fb8-49e0-af76-e3a990bea337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c77fb2-3f6a-4b08-844d-290c9d9fec7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b15c9c1-344e-4427-b945-2584e40840e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79a8616-5c6b-4ac4-8d49-b4550ddaa228",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aa94ea-f96e-4334-9b13-fb777cc51b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7b7607-bf07-4aab-a6e4-de7466438cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fc9799-2dc5-4e83-a116-9ce5192dd523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c99cd7-d68b-47b9-8fff-3160264d7695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc82d66c-ecc2-4b42-9780-202c981894e6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640d4ffb-dcfb-42e2-a31d-0c906b28da68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b411cd-2621-4fca-96d7-87043f0632af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7ed7e2-ad53-4951-9c0a-14be79fd577b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4d0be2-65e8-4503-b4da-be123a679a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2ee74b-afce-4454-8596-c28741dbd5cd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef545313-f614-4a73-9725-8c4062dffe1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96a8a43-3967-4364-8022-851cb2e2b472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "382926da-5e45-4313-95f3-481331eb40a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029e3a90-cd90-4e98-a0ed-5a2fb0d12fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afeed96-be54-40ec-a716-6907c6cae001",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c019396b-1706-4629-87d7-1e3772fa2ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19a794f-54b4-4d35-9328-496c64b2470a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b1f737-9774-41ab-9dc7-e7d33cfb6880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03acbcc7-43d8-4f98-9776-28796876a236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c5830e-5e7f-48be-b69b-3436882eaf3b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692d5e95-c529-4e89-8b4a-c4954809fdf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f84dbb6-9a21-400d-afab-d4243a6ad35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4131496-4488-42f1-a71a-a91ae9a42209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c29ff6-7e2a-442b-a7da-6fce0868e834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d9d5a5-1a0f-4a13-97dc-3505a40afe4d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8dade4-3218-473d-8ae7-f3f11a98711a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b39703a1-b131-49b6-9307-736f9353c401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dfe0ab-a4ab-4bc0-b1a7-46bd3c2a24bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cb4940-b8cf-4e63-a8c0-93a42cd81e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f16861c-1480-48b5-aee9-deb3460e76fc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3594e1-d741-40d5-917d-b1395438163b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da62a8c-4b78-4893-a17c-2c182d5f25ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0c9d95-3c61-4828-b84e-4eccc6d26f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3dd16b-0d3f-4df8-9508-435b42f744f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230f904c-283c-4047-a66c-b5c0ae82ab2d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7968f941-55ed-422f-a295-31c55ce50e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2243d73b-e38e-41cd-b287-d8a6114d2b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5447c139-03be-4ab8-b638-14ef3c6ede6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a65a56-928b-4d87-b9ae-bac7cc3b06e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4c2b9a-e5b3-46e8-a096-e2ae065e76eb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b45b3ed-0398-4bf5-99bf-2c762ef7aa86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28704137-2ae9-4409-b55a-e53a07d6f675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31245aa8-c1fa-4ff5-97c1-d08cdc2a70dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1195f4-2e08-4488-8e1c-67ab3cbb046a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ae3633-e70b-454d-b066-9d825c3e2a82",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f651f18-9b45-4293-bdeb-f7dd1960857f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e44102c-f5c2-468b-9b2a-fcd050625d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7418b5f8-9bbd-4df6-adca-ac802d9e57d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e23091-aad7-4564-ad30-9ed52f213911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc57aa19-9f6a-4868-b6fd-299675fb6843",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625b3109-2b81-44c5-8b28-f11a9d60f7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeef8605-a42d-4e4e-b3b2-1b207a693e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ed4a80-3833-4480-ad84-5a0d84fdae21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818f973f-60d3-46bb-a8db-57bdc0135f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b1aee8-e613-41e7-b711-4915a0b35eca",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0308ddab-8978-4b95-8ad8-0bdf3666741b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "126e9061-6842-4fda-ae20-f11a32ea73d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c381b43c-e423-4226-97e6-ba984feafcfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede5ea16-d88d-44ce-9bcd-2bf8857a7b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b101bbfe-1b81-4507-ab70-fab0e474023e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a9368c-cb24-4be4-9614-b90cf744caf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d81bb3-81f5-480a-b671-328967a1316f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31c07a3-566b-4443-b420-49a534feb04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0205282-b839-4063-91a3-d0c2b9e4a224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240ee249-5fba-4609-b2f9-eb3ecb261825",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b42f821-351d-41a7-8863-13ca504ed571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04061aa3-6ea1-4ba5-b097-b89432e91acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0ea5f6-ae66-461e-980f-a69d4ad851e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d031135d-7e92-4cdb-b1e4-6cda39c6bb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9a4a92-71d4-4374-9bd1-c5dabf0ab381",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca4c44f-02dd-4ba4-a0a3-3a12ff4641b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e55c800-5d71-4f00-8952-409c55020aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5220e0-6681-4323-ac67-30008f8c0800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862bd2bf-ef2b-4523-b8f2-1a0345eb7e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea3ec3f-d841-4f61-8318-6e08d6610eaf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcba600-57e9-492a-b738-a4e35d37f985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30a6da03-4314-4b05-89fa-b1ac3d1bf561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d00f556-568c-4f89-8a9c-f95608858bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dccf99f-9817-47b8-8d57-a4c544bad1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b9e8a3-5a32-45ab-9ec4-000b1ea0e185",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0c9c61-cdf8-4dfa-b47f-fe49cef9bc60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3caf3c75-3579-44a0-9483-c394545c0ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8640905-0320-4fa3-9000-89c1a5c1bb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f33e6a-b6e2-4729-ab7f-3da100324371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aea2997-cd36-49c6-8737-13051e06e45c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62b20f7-4078-47f2-9b9a-01a0f199c579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34b5cde-802d-4682-a12c-af288e8ad027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742f18c4-13d6-4018-9fa2-53b14ea506bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e016ee-65e8-4671-9a20-b592c9bf7e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9bfe52-834a-49aa-b198-a71c894f82e6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ada8a8-69fd-473e-93ac-fe7f743d8451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd5e19f-7ba9-413c-a8df-923c93dbd400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edc9036-6e77-4dc7-8cef-4578e5045c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f2660c-579f-43c8-8b1d-73b890d53d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafa884a-6a00-4ee6-a15e-6d4eaa802e93",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61247b89-71c1-4bae-99dc-75b451337681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a563dfa3-36c7-463b-8c68-45fe132ba0ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e2edd8-7bc0-4b4f-bbd3-29308f59e096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2076b399-d704-45df-8fa8-8493340f4843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5893631-6343-4dc8-bd4f-692af229459a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c8dfaf-f7ca-4902-91b7-de13efa00704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0ff18c-7e26-4a63-95b4-cb72aba57499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903ec8aa-a6af-44a2-a195-997c636c275f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40db8f7-5380-44e0-8642-2c2da704104e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673cc110-f50b-410e-b276-bfaef778b600",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc93daf1-5abb-4728-81bd-e8790d9fea2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f30b68-68f3-4c55-9d8c-92b0561bf4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0d32c3-c211-4088-a175-4a12aa994cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038fa4e3-d405-432a-8a49-2a7c8247ceaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49862a4a-f1d3-4ac5-a94f-7afd741201b2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39f88ea-15ba-47cf-bbd3-4568f8a0e39d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a3974bd-c0a7-439d-a26c-8be8d7b5aa59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2252aca1-2e69-4128-b8db-48b015aabc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85954744-fd18-4057-b982-0c4910012e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f01d78-43ed-4a50-b89a-9d73035bf747",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8e7683-a96c-447f-ba90-825531291955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b6888f-3850-4882-b1ec-d0880d37d574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77fbe2e-c144-4456-bf42-3a6ae0e2ee11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1915429-6d96-4676-9d97-6d30499cf5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77530f0-8d04-4a72-ac12-c58db5e155e4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c370e7-d25f-4510-b3d4-5dd731d3bf89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80d8dfc-c398-4186-a09d-ea3ba6085485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e329254-a5b7-4b92-a012-8c47836c84a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55971300-d1cc-403f-8518-2e10b5cb0a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0513778-21af-4d4b-bbd5-8e393ad63e8d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea15c66f-05aa-412c-8bac-2243436f65b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ef7a27-5687-4d74-b80a-96ac87bfeefb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3bdf28-237e-4011-a500-61adf5629d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b32bdfa-fd5f-4531-99fb-21602e6238ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ef2d92-3685-40fb-b44a-7bad207f8145",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1c67ed-06e6-48a9-ab2c-3f09ec7ec53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7592c048-627f-4a53-a7da-2b52bfbdead7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7abe50-8a0c-44ea-a3ea-45992156a9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db93fecb-20d3-4c8e-80f8-4122c541480a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13eb410-857e-493d-8340-1babe5626716",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceabf8f3-b2bd-4a55-b74d-fd89d760dbac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d944da3d-782b-4358-94f8-0db0048bfa36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2acaad-f68f-42c0-8d6f-05f2ad68d35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c122f176-288f-4b2b-ae52-3ba8d46e1597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de90399-2277-41cd-bb3e-be0618cb5879",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8700e2-4f80-4916-9421-45344a5ed2f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b445a1-7882-4071-850f-1d4941f2d724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63318d0b-4379-4a4e-a85f-83292bb60932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270f391d-c021-44ea-a00c-c196fcc9e9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed221a58-c4bf-4a11-843a-a182045a46da",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9f1d00-6ce7-44d0-a782-2f1fb8d45586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d50d23-dcb9-4a71-9f51-eebd447cf36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b2ba8d-a926-49fd-8d5f-a3ac37b3e971",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f15129-16d9-48f8-a8e2-bb31a58e18cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28870ca4-f3f4-4dbd-9a8a-52af9e5bead7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02cd4a0-97eb-42f2-8d76-456cf28fd8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80973a7e-0104-4cb6-9554-d4a85efe6bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f346a5e-0563-4f65-8440-843a808013aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f282863a-adb3-47fa-8032-3e47f03696fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be75afc5-90ee-44b5-87a4-ae780d0ccea6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a25bdbb-e44a-4cae-b593-7bd48d36524c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4ff7610-4d35-4f88-ae3e-794bac116c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdafe76-b167-4ccc-bc34-a3ea1d97e317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999413e4-1e9a-4bc9-ba67-092043f3700e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e571fcf5-d7f5-4bca-be37-7d15b6dfff19",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073fe23c-f20c-43ed-a46f-4a5bcaba0905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93443a34-2f37-4cd0-8a6e-535afa8a50c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb77507-a79d-434e-9037-89d834c942a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3c0887-d5d9-4b4e-81de-0cd77157d053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ac1a90-e3e0-413a-b612-3aa8de75977c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d70d119-fd3c-4d6d-aeed-54e030f26306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f38e528-f57f-4a9a-a13e-660ccdbe3ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6b6c1f-879b-45ea-95f1-7c5f8a8284a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc143b0f-0dbc-4027-9db5-2bb5f56c3286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3800a5ae-796e-4f27-b1a5-e2a6314cdb4b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68fa375-f766-4693-a42f-fdb5fa5ac31f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8a49d8-fe49-48f4-abad-e16413acd338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf6cfab-b422-47ca-959e-3a949b60addf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f05b487-c946-4557-a775-eec75042f461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fe278c-d603-4323-9bbf-24db0140afa4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ab70ba-f8b5-4929-b905-5064a7c1ad0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11353c6b-cc9b-408f-b56b-da96fabb9ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd451a1-b002-48db-913f-bf2bdeb3d7d6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0723720-7db2-457d-8f38-fbb944d9160a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57560c14-dd32-4e73-83a7-0e28d0ab77be",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccb9386-0c6a-4006-bf9e-5d9265aabd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d40269f-0c58-4935-b92d-755a3c3d0eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c3b711-19b7-498e-8084-ac22622db311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca6a9a3-9803-44af-919b-9c22cee77972"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afebd1de-7299-4369-be40-2e9cd940275a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ab4577b-c23a-48ab-b479-3bb43601654f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "575b1ac6-beb0-493e-8cf8-5e82a8a7681d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "861f9329-9f52-4c6b-9141-78f000b84218"
                    }
                  }
                ]
              },
              {
                "id": "ec9da1ba-138c-4966-9a56-cddd0c8b7244",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e47ac73b-dbcd-4894-8b3d-07ced40a93f8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b959219c-40b2-480a-a214-413ff485b3d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a9d2122e-fb07-4bef-b080-51d7f6c645e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78aa51f-fd65-4290-9781-dd5a103bde66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cc7e5be-c7a0-4776-85e8-f4276865185a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1d50c29-647b-4a58-947a-67563abae20f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcff5e14-186f-41f3-ac47-a352dc201209"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3148f2be-a525-4cf8-bd88-3d15fd34ce03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79447dd9-a26f-443b-916a-5c26b9f8f8c3"
                    }
                  }
                ]
              },
              {
                "id": "7f46d143-b87f-4970-9b95-32cf781787bc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a0ce2fe1-ab45-4833-bb71-84f95ab4b36f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3b5a62-de21-444a-a296-75d6ad65c97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "65e858a8-b165-4d24-a585-2e0eef9af5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011d4507-a722-4950-abf4-89b3d253abb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9608d6e-4ecb-4f60-bb91-6d0036a18619"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7433469a-a912-4165-92f9-e973435bc4c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dbd4be5e-fded-454b-a127-f810343eba51",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de68d0a7-c30a-48fb-89f5-91aeacb52be1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ae4f058a-161a-41ae-88aa-3f103765a7e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d343816-b82b-4c4c-acef-a8155fcf4659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32335936-7d44-4c24-8850-6183331b4a7a"
                    }
                  }
                ]
              },
              {
                "id": "ad730f53-cd08-43c5-ad36-5a82ed68aa4d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e40d53e5-25ec-4883-9650-abb00522d92e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "09e02d48-acee-40b8-9848-8827d86a97ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43a24b06-12d9-4310-909f-9ede3465888c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "590b1b12-b0e8-478f-a930-41cec57826c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12e6b264-152f-45a2-9521-98d58586c841",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a293c381-e724-46dc-b811-b50c1e2a4e76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ccbc571-89f2-4693-8579-a361101910ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0259e3bc-a610-4be4-a10e-83794fbeda48"
            }
          }
        ]
      },
      {
        "id": "a19e2af0-00a7-4b67-b239-acbfbfa67e70",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "36acd85e-a61f-42ef-87c0-0fcfc9a0e3e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf59b286-a399-453e-bd36-c6da3eeb7c6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a056c78-6e6f-49cd-81a0-58bd861d78d5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3debec5a-2274-4522-a551-7b791a8bc294",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "185beaf3-b9e6-4e05-bccd-f41533ea5830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bc4b9f-3b80-489e-ac5c-678aa6a19837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57aa94f0-fbd6-4497-93e1-c2e34da4eef5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef574fa8-79c9-443f-a85f-02fd37eeed51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e8368d9-0fdc-4b66-8b2f-649bca436e3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "133cd313-f3cd-4021-b051-ae6bd5869a58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b3f3dec-48be-445d-9130-73da6d3c2d29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "943b33c4-d0f5-4fa8-9ea1-573438e9f383",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6e26db4b-ff4d-48b4-a155-73578ba63905"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a68c6595-a448-4482-8c00-2da9c9297d36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f611f94f-8245-47eb-832f-e6eac6d49411"
            }
          }
        ]
      },
      {
        "id": "06ba7167-d1ac-455c-bb7b-1e252486a11e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "857ccf24-6d5a-48e1-b0aa-c6c3c530fb4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9907e125-12d4-4ffc-a86c-f1da424631b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cce195e-88c8-42d9-ae0b-3fdb794d5a24",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffe59d3-9265-436e-9ee1-9f57cb501e52",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de57198f-efa4-49f9-a615-9de092a8bddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189ff740-b8e1-4f9e-9bbc-680d0cc76a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "649a77dd-174e-4b6f-ae4d-6adf1a5cfa05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a074a2a-38ba-40fa-9194-5548b2a2b6cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44de4957-87e9-45f8-8957-bd067b9be857"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8ca66b1-5633-4010-b458-157fe8e58158",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55a41c51-6d79-4683-8275-6eead7a1016f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9be8858e-71ab-4635-afec-94554a85c1a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2acedddb-5b41-4e52-8d63-dbfc53429a4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5c5eac4-52d7-47d7-a17a-5100966f399e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "231e67bd-42b1-4ac7-93d1-9e5be4a165d2"
            }
          }
        ]
      },
      {
        "id": "6e042900-ad68-4939-bbe4-3a83a635f8e2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "aa938e10-a202-4bc5-b9d5-bc9c46c83a9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0d3aa7f-129b-4f52-ab16-4bc8db08afe9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fce6463-ecf1-4ad8-a5e7-cf865eaea838",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58183f06-5b71-4b15-bd58-7dc8be7a2ec2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0462f556-4152-4d69-9596-f914df94c90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b67c10d-46a4-4efd-8659-9648cf294838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bf415bf-cffc-41d9-89fe-5c39d03c53b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad173755-d701-4935-a99e-fa374dca193b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37cb6a1a-3eca-40d2-8603-6747023aadfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a853cf6d-281c-4bc4-b4de-395edfddef6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a0cb10e-6a09-4460-8f61-628cef734c23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2701332-ed2a-4d1c-be49-522598afbf23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64c17b6d-86ba-478b-afc1-17507fd06489"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8071b5f-8bb0-4fe9-84b0-8c9c31ac1c0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5b09d8e-7dec-48f7-8403-25e39a77a084"
            }
          }
        ]
      },
      {
        "id": "54f9c1cf-2bb0-4608-ba46-1e22fc7d844a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d889f4d2-dd2d-4350-bbd7-a7e313666390",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41b468b1-4b58-43ff-bcda-ba85e1668b3a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6e9ddd80-f18a-4b32-b007-319cac0ffca3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d39cb188-b61a-4340-ac8c-4c8b544157d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cab3d93-a02f-4f9b-8863-3ff7f1fe704e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 300.30175438596495,
      "responseMin": 20,
      "responseMax": 12351,
      "responseSd": 1380.3162694401358,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700613439423,
      "completed": 1700613534428
    },
    "executions": [
      {
        "id": "31ee83b2-30e0-4b64-af01-ed70a334fbe6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "440af7c0-681e-465d-8508-bb5d35b03f63",
          "httpRequestId": "a807ea2e-5a54-4bb3-a7c2-67692cf38415"
        },
        "item": {
          "id": "31ee83b2-30e0-4b64-af01-ed70a334fbe6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dbf45aea-ada1-42e8-994b-38151e4c519d",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "57545327-a3a2-4c3e-b83a-ef8dbce731b4",
        "cursor": {
          "ref": "0877739d-ef8a-454b-89a7-b80236e5351a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "409ca6c5-8db2-4144-a1f7-0a1f71847b9c"
        },
        "item": {
          "id": "57545327-a3a2-4c3e-b83a-ef8dbce731b4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aec11347-0451-4560-b33c-1ef5c857871a",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "1d61881c-7c64-4e7e-9cfb-470a9e919d00",
        "cursor": {
          "ref": "2c977b4a-e83f-4d58-8fce-e71c21141713",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c6da610c-f481-402f-be97-9e01deb2111c"
        },
        "item": {
          "id": "1d61881c-7c64-4e7e-9cfb-470a9e919d00",
          "name": "did_json"
        },
        "response": {
          "id": "9276b8d8-ea89-48cc-b739-f8b61b1984fe",
          "status": "OK",
          "code": 200,
          "responseTime": 1530,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e666d-d8bd-4d24-8c04-44dc0cb26273",
        "cursor": {
          "ref": "a9cfca2d-c724-47b9-8e87-53aafbbaf6e5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6c092a00-b4df-4969-845a-b2fcf2d8a4a9"
        },
        "item": {
          "id": "bd0e666d-d8bd-4d24-8c04-44dc0cb26273",
          "name": "did:invalid"
        },
        "response": {
          "id": "7d02f846-a0cc-4bea-95eb-2e1ecc976604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e666d-d8bd-4d24-8c04-44dc0cb26273",
        "cursor": {
          "ref": "a9cfca2d-c724-47b9-8e87-53aafbbaf6e5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6c092a00-b4df-4969-845a-b2fcf2d8a4a9"
        },
        "item": {
          "id": "bd0e666d-d8bd-4d24-8c04-44dc0cb26273",
          "name": "did:invalid"
        },
        "response": {
          "id": "7d02f846-a0cc-4bea-95eb-2e1ecc976604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c5bffb-dbd2-46c2-a38e-d2bcc7bab277",
        "cursor": {
          "ref": "d36d30c9-0e30-4e4b-92df-79914bcc1b73",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "47684223-a349-4529-b973-bf3f3c4617d5"
        },
        "item": {
          "id": "33c5bffb-dbd2-46c2-a38e-d2bcc7bab277",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "abf3633e-5e5c-4173-977b-f5ccd2de3b76",
          "status": "Not Found",
          "code": 404,
          "responseTime": 172,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11632ad-dad8-43a0-b0b8-4b6f330e6c77",
        "cursor": {
          "ref": "b4b80d2a-1c23-49ce-a784-ba7c11ea1d6d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "134a1a77-d656-4f0b-8cae-6fcbd5d188a0"
        },
        "item": {
          "id": "c11632ad-dad8-43a0-b0b8-4b6f330e6c77",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ca5718f7-c0fa-47ab-9da9-86c5fd684f8b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 80,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343c5695-e5f8-4367-983b-de09f46f69a4",
        "cursor": {
          "ref": "07b22f92-fa73-4b9d-8005-47bee71b116b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6ad5399f-ceff-4264-8aa9-f1266c65ef97"
        },
        "item": {
          "id": "343c5695-e5f8-4367-983b-de09f46f69a4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bfbaba84-02c2-4443-b92a-f820e34762e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a398d7b7-663d-4739-8b43-826907ffbfd8",
        "cursor": {
          "ref": "449abaa2-e971-4ff2-b188-86fc94cf59d3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1f69154f-6a62-46c2-ad74-d80840df33d2"
        },
        "item": {
          "id": "a398d7b7-663d-4739-8b43-826907ffbfd8",
          "name": "identifiers"
        },
        "response": {
          "id": "4144af45-9957-4df6-9c04-98b449154aa7",
          "status": "OK",
          "code": 200,
          "responseTime": 1391,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77198cbb-56e2-4195-9550-c371f92e58ba",
        "cursor": {
          "ref": "0a1b6ca8-7807-4525-8c8b-5b8dc8e1c3cb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "064ef45c-6da8-4333-a27a-643a5dc24de9"
        },
        "item": {
          "id": "77198cbb-56e2-4195-9550-c371f92e58ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "20758822-05d2-4054-81a1-55f11220d276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7733cdb9-8a9d-4c65-8e6e-a747de90db80",
        "cursor": {
          "ref": "6dc33147-db2e-40ea-9830-9884f6e4cec7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a7c3b82b-1d6e-49c7-9d38-0f236c8bfee0"
        },
        "item": {
          "id": "7733cdb9-8a9d-4c65-8e6e-a747de90db80",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "05a3713d-aee9-4341-b22e-f625b9c15ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ebaa5f-d3c3-4b6a-9309-f230ff313c47",
        "cursor": {
          "ref": "d7d5fcc3-7647-44e3-b306-509ac8caa022",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ac82234d-4ba2-4402-98a2-1ec46e5e7a5b"
        },
        "item": {
          "id": "83ebaa5f-d3c3-4b6a-9309-f230ff313c47",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "13a0a237-d3fc-49ab-8bd6-deb97ae3fbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149186fc-8b32-4008-9b32-acc74c1ade15",
        "cursor": {
          "ref": "1df8ff08-7faf-482b-a228-2795994c6e67",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "026aaab7-5d72-4a9b-bd86-c598f85920bf"
        },
        "item": {
          "id": "149186fc-8b32-4008-9b32-acc74c1ade15",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9a7fcdf3-9aaf-4a4f-b6c9-8f05d7085635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a02c72e-ddfb-4619-a223-597fe4a20d32",
        "cursor": {
          "ref": "a333edf2-931d-41eb-ba22-f7b2c2de47ed",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2216ffa9-f92c-486e-a4b7-0741ee6edb88"
        },
        "item": {
          "id": "4a02c72e-ddfb-4619-a223-597fe4a20d32",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4044d4c2-d8f3-404f-823f-0535201ddeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6e4369-7a28-4f1a-ad77-dcb6df9ab623",
        "cursor": {
          "ref": "659619a7-1156-42a3-a009-1632f66ef7f8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8bb2c12c-ea2f-4cbf-b1f8-0dceecc3270d"
        },
        "item": {
          "id": "8a6e4369-7a28-4f1a-ad77-dcb6df9ab623",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7985879d-2b0f-4410-9c9f-989e0a9b0994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1f27ee-c688-4cce-99fe-7deb8c822736",
        "cursor": {
          "ref": "9d2a28af-9ae4-46f3-b932-dc22007e5cf6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "64ea7074-0762-428e-8755-612fbe15a965"
        },
        "item": {
          "id": "ec1f27ee-c688-4cce-99fe-7deb8c822736",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6018be8d-0f8e-4af1-88e7-7a61ae0469a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018b9833-f621-450e-b4d3-ac8745f0dab4",
        "cursor": {
          "ref": "9d7fb176-0f08-454a-8d8c-dc93b3be141c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "13f767a9-df4e-4f1a-b97a-05f0d7eee115"
        },
        "item": {
          "id": "018b9833-f621-450e-b4d3-ac8745f0dab4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3cd65049-7761-47dc-bba6-069054422cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a86e600-46a7-48f6-98b3-7790f811bc51",
        "cursor": {
          "ref": "6e68eaa2-a848-41cf-9aed-a6ee7fe2c527",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ad123bf5-892a-41a9-8f29-f908c13556b6"
        },
        "item": {
          "id": "0a86e600-46a7-48f6-98b3-7790f811bc51",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "972ec6cc-f67c-4ae3-9355-c6dfb4c06a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3723965d-88a4-4f44-9a49-ec6a3635520d",
        "cursor": {
          "ref": "c132bd49-caa3-4807-bcc3-41b6a37ac608",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "91b8f38b-1aaa-446a-9d66-b5e6b0bc95cc"
        },
        "item": {
          "id": "3723965d-88a4-4f44-9a49-ec6a3635520d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d68cfb92-721c-4f99-bb79-f47aeca3df7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dbfb0c-0795-4716-b8df-c18064f8894e",
        "cursor": {
          "ref": "4edf7b42-c629-4fb9-bfca-62d461cec3e1",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "21ddb6f5-c608-4411-87c9-a50ecd4c95ef"
        },
        "item": {
          "id": "51dbfb0c-0795-4716-b8df-c18064f8894e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1fffca7b-df7b-4d9a-ada9-0b945c0b4b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acfbb04-72a0-459b-95a5-8bfc6751786b",
        "cursor": {
          "ref": "7eaee1f9-434a-4623-9290-00426669b096",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c015089e-cb61-42bf-ae9f-2f5169ec6419"
        },
        "item": {
          "id": "9acfbb04-72a0-459b-95a5-8bfc6751786b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a91d45b2-b0af-4f18-8b96-12fee1b2aa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3fe154-9fa4-4c48-967e-1e9f3ae266e5",
        "cursor": {
          "ref": "284587b5-747d-44b7-83a8-ed64700d8fc4",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bbecf56d-44e2-4a3c-ba67-6fb01533f678"
        },
        "item": {
          "id": "9c3fe154-9fa4-4c48-967e-1e9f3ae266e5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ef37225e-ca83-46bf-98b5-3a8e6170522b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a25c62a-4e82-4bcc-8155-802809d9c680",
        "cursor": {
          "ref": "e3bcf497-9512-45f1-ab01-77f17fc1832b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bc559447-2216-4f09-8de4-6f74b094a210"
        },
        "item": {
          "id": "3a25c62a-4e82-4bcc-8155-802809d9c680",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b8ad24a3-0129-4e79-8a84-5b0c47bad902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb57f5a4-68a0-4352-9367-bccf71f39091",
        "cursor": {
          "ref": "90d6ecca-02e5-42d4-a7fe-2fb28b610c56",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "91746684-1acf-404f-a384-9fbf92cda9c6"
        },
        "item": {
          "id": "bb57f5a4-68a0-4352-9367-bccf71f39091",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9849c594-be62-48e4-acad-4dee52baff54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7587c50f-1bb3-4e48-a99b-a88f3650ca1c",
        "cursor": {
          "ref": "ca8ff2b2-8485-40f4-bd86-77585fcc033d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bce7bb4f-0a1c-46c5-aa64-98abcbffbcb1"
        },
        "item": {
          "id": "7587c50f-1bb3-4e48-a99b-a88f3650ca1c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0321b15e-079f-4958-b5d1-f0cea2312832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ae681d-a7dd-447a-9ae4-9ab567139053",
        "cursor": {
          "ref": "3e6ed7fd-d83d-400b-8d13-c19c403fb20b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3111f05a-f4d9-4bc6-b964-edff22419f25"
        },
        "item": {
          "id": "41ae681d-a7dd-447a-9ae4-9ab567139053",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "058fb39c-273e-4415-b54f-3c73807192ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13521e58-8d69-4a32-a64c-422e6733ebf8",
        "cursor": {
          "ref": "f566aa8b-c608-40f7-bef0-9f77c84a018a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fd2ceac1-7b77-4c9d-9d01-9f196037229b"
        },
        "item": {
          "id": "13521e58-8d69-4a32-a64c-422e6733ebf8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "033c4a4b-95cf-4077-be4c-671fc449a749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709a904d-63d0-4ce5-bfc0-ff39b74df1fd",
        "cursor": {
          "ref": "4fe1c145-4837-4601-8059-13295f03f6f4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d2371f66-5624-4645-a1d2-5a0723bafca7"
        },
        "item": {
          "id": "709a904d-63d0-4ce5-bfc0-ff39b74df1fd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a4b2192d-7982-4fe2-adf6-de9ad59b9dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f9309a-9794-4794-a8f5-d0ab34e2638e",
        "cursor": {
          "ref": "f823f0ab-1a7c-4304-a44c-a7caee706d9f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a51b1bd1-61b5-4bd2-a72e-faa2a892b97c"
        },
        "item": {
          "id": "e8f9309a-9794-4794-a8f5-d0ab34e2638e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3f0f12d1-60ef-40bf-bcb5-36244360d5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3f00c3-4070-4acf-9cb2-edaf4e60e336",
        "cursor": {
          "ref": "d6416182-94ea-4181-9f72-64898cb3db16",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9065c093-4a1a-4295-89eb-bf2e19348d03"
        },
        "item": {
          "id": "2d3f00c3-4070-4acf-9cb2-edaf4e60e336",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d7f2d2ba-37ec-4c50-ad07-c27aad772f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5473982-0795-44cb-a1bf-032c0864cca1",
        "cursor": {
          "ref": "d9f4a3c2-b7b7-40f0-a6f0-fd2f9155a8cd",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7b6c8b4b-3ba6-499b-8900-b460f9e7c683"
        },
        "item": {
          "id": "d5473982-0795-44cb-a1bf-032c0864cca1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1b6aa58d-b375-42bc-aa02-04a0d00c9c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea790a88-cc2f-4d2c-946a-7514d13ba701",
        "cursor": {
          "ref": "df1392f6-0df7-489a-b208-bfeec375eafa",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bdfb1b52-d532-470b-a63f-ed18bffc8199"
        },
        "item": {
          "id": "ea790a88-cc2f-4d2c-946a-7514d13ba701",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cfc390e4-5eae-444b-8aa0-57b435233e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5379b6d7-9692-4ad3-b3dc-c9fdefb9fae3",
        "cursor": {
          "ref": "a1ef5155-5b95-4eb5-bb59-bff4d25bdda1",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3adf03d7-45bc-4ec2-ad51-018a9c4f9cb0"
        },
        "item": {
          "id": "5379b6d7-9692-4ad3-b3dc-c9fdefb9fae3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a9b4521b-dad9-4a95-b794-09558df51560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd17793-c46c-493a-a66a-fabdfda79872",
        "cursor": {
          "ref": "5e22021d-bfd9-4782-9fe5-cad92e1a2a6d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bf5bc676-a081-400d-aa7a-cf684cc66188"
        },
        "item": {
          "id": "5cd17793-c46c-493a-a66a-fabdfda79872",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5099e5ca-53ec-48e4-87a5-4addc0fe4f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7447df-a964-4aee-aad3-0363e499a3a0",
        "cursor": {
          "ref": "be59eb9b-eb95-41f9-b955-defa072b1980",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b54469fc-94bc-4439-8e47-da9ffd57db62"
        },
        "item": {
          "id": "ba7447df-a964-4aee-aad3-0363e499a3a0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e7bff0eb-6a94-413f-922c-8528c69e82f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c9d53b-6084-4009-bc31-24cefdb8971b",
        "cursor": {
          "ref": "cf4aafba-699c-4563-b8f7-2e992089102e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "aea76dc8-2bda-496d-8c25-9d536edf2277"
        },
        "item": {
          "id": "f7c9d53b-6084-4009-bc31-24cefdb8971b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "db152ece-a113-422d-84e3-393c4c7b849d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb08480-a6c0-4495-b95c-1ae8db53ef34",
        "cursor": {
          "ref": "dd915263-f534-4f47-b43a-b6091d36b639",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "568cf0db-6fa3-4cc2-b769-f69ba610c46c"
        },
        "item": {
          "id": "ccb08480-a6c0-4495-b95c-1ae8db53ef34",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bd9cac33-9450-4259-8506-cc2d11d2f9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03091ca5-b6d1-451a-9406-95d519008cf1",
        "cursor": {
          "ref": "b6901abc-36ca-4825-97f2-fb8f525d218b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a322e5c8-e557-4f4f-af04-c54154dc0423"
        },
        "item": {
          "id": "03091ca5-b6d1-451a-9406-95d519008cf1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e5556b7-7774-43fa-b33d-b6a42d111179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2847c2dd-9ff4-4d1a-89a7-edc8838384e2",
        "cursor": {
          "ref": "68d9b189-9cf7-4896-a6ba-bee90d8133c2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d8428b32-d2d6-45d0-b9fb-835c31cb72d0"
        },
        "item": {
          "id": "2847c2dd-9ff4-4d1a-89a7-edc8838384e2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e72265db-f275-4320-9721-060a857ff944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299698a5-9aa2-4875-87d1-d86a6d1bc5e7",
        "cursor": {
          "ref": "efce648c-147b-4139-9ab6-70d12b5684c0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4f22da8f-783f-4b08-aeb2-adb1370c398e"
        },
        "item": {
          "id": "299698a5-9aa2-4875-87d1-d86a6d1bc5e7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ff5edf65-4ee1-4afc-8a81-dd297a800d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a115f08c-682c-4038-ae20-5ba2e2feea02",
        "cursor": {
          "ref": "f5747c1f-bcc3-445c-ba0a-d4e2a94172db",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d057f53e-c4fe-4968-9db7-99af13677d58"
        },
        "item": {
          "id": "a115f08c-682c-4038-ae20-5ba2e2feea02",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d375840e-3cde-42a2-b4bc-5e7449980528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db9be75-3d6f-4502-8249-8cc8903739d7",
        "cursor": {
          "ref": "026e54ab-4436-4e10-ba22-db422c8abde1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f7ee658a-0b6c-4f8c-bf97-c3036a8b2d95"
        },
        "item": {
          "id": "4db9be75-3d6f-4502-8249-8cc8903739d7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2a810e5e-edb2-4b32-9159-2411dd6814bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50180af-c2c5-4beb-b699-3e79aca0ec89",
        "cursor": {
          "ref": "3357c36f-ab10-4b7e-9fcf-b58a655aca29",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b2e67c6c-b433-4f0a-a460-f58c4a443327"
        },
        "item": {
          "id": "a50180af-c2c5-4beb-b699-3e79aca0ec89",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "95c41cdb-9ab7-4893-80f9-cd63afb4bd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455c4e66-17d5-483f-ba51-8247cd49b94d",
        "cursor": {
          "ref": "d140ceb0-43ce-4b96-abdc-385650cf2a6a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "efa075cc-ca56-4f2b-8d75-bea573a57439"
        },
        "item": {
          "id": "455c4e66-17d5-483f-ba51-8247cd49b94d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e79887a1-d15e-41e1-be86-33276b28445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79434e47-265a-4edc-bbbb-7331bc611dcf",
        "cursor": {
          "ref": "d67759db-68f7-4962-b83b-d56e1756ee7c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b0f61e71-33ea-48d0-a5da-61b51a1241af"
        },
        "item": {
          "id": "79434e47-265a-4edc-bbbb-7331bc611dcf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "21ae3e8b-da30-497e-a9f6-07b103d34091",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1538,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f607cfa8-5120-42ac-bf3c-b6d78c8c3a85",
        "cursor": {
          "ref": "95381aed-b963-4c94-85b9-277fa111ed5b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ea114254-4ee7-4271-9299-293ebc4eedae"
        },
        "item": {
          "id": "f607cfa8-5120-42ac-bf3c-b6d78c8c3a85",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d578059d-dc54-405e-b7ab-1a6b062cfcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2b2060-43be-4be1-b9b2-cc70d7efee31",
        "cursor": {
          "ref": "5f15ff21-8ca0-4ee8-836c-03a17b12176b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e80e62b4-7dbb-494e-8693-a6037acea02f"
        },
        "item": {
          "id": "1b2b2060-43be-4be1-b9b2-cc70d7efee31",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "523038d6-2dbb-4fc9-8fb7-80823b09124d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278c6ea0-45e5-491c-9026-3f1082c819a5",
        "cursor": {
          "ref": "f5a95676-70ea-42c0-b33a-2e1563616e6e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "01689334-3f38-46de-a3d3-cae16715977e"
        },
        "item": {
          "id": "278c6ea0-45e5-491c-9026-3f1082c819a5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "37b6f88b-27e0-4bb4-a6d2-d63f8dc0c00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74878327-8d7e-4a44-94cc-0c7f536ed66f",
        "cursor": {
          "ref": "a205dc4a-6f6d-4cfb-a85f-79d77ce685ad",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "72be4338-0771-4936-a5cd-dba8a07a081c"
        },
        "item": {
          "id": "74878327-8d7e-4a44-94cc-0c7f536ed66f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "402ec4c6-a31b-459f-8eab-5e6289d983cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec749ce-8340-4021-875c-78c7a617e9a0",
        "cursor": {
          "ref": "ba497074-8982-48a9-8b1d-08252d62d284",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1106c992-c4bb-4651-8735-4ac1ac287ad1"
        },
        "item": {
          "id": "fec749ce-8340-4021-875c-78c7a617e9a0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cdeb0762-2e65-4330-9519-9a613f266c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac84d7b-4dcb-4e27-ba15-8db3db5b3790",
        "cursor": {
          "ref": "763cf4b7-ccf4-4f96-991d-a1e9f4ade792",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4be5a226-20fc-4a7e-b088-f60b16700228"
        },
        "item": {
          "id": "8ac84d7b-4dcb-4e27-ba15-8db3db5b3790",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1123016a-877d-412f-84eb-76ed903900bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d55f26-7df6-44ad-b208-814fceb56bae",
        "cursor": {
          "ref": "57768505-8a0d-47e3-b7c8-0064044961da",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f4e1a5a7-7d32-46e1-a859-165323c13705"
        },
        "item": {
          "id": "19d55f26-7df6-44ad-b208-814fceb56bae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d8791851-52cb-4acc-b599-639d4f7e4bb0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1624,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e1f170-c011-41ec-8334-e8d9acc8945d",
        "cursor": {
          "ref": "d0f29dda-d0cb-43ff-9bcb-60591e4b50cd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "710edce5-5995-485c-b8ff-214b2c680637"
        },
        "item": {
          "id": "f1e1f170-c011-41ec-8334-e8d9acc8945d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "091d62f5-8dc3-4404-853d-ab4c7d46a0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cf8312-017b-464e-b911-270694c5ac6b",
        "cursor": {
          "ref": "509c55ba-76a3-44f0-97b2-5594a43908be",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "819fe824-7e1d-43a5-9f46-7fe0b89e1a3b"
        },
        "item": {
          "id": "31cf8312-017b-464e-b911-270694c5ac6b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "73316b5b-3b3b-4dde-b395-036ca28dfb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c19c9f-890d-4de3-a66a-8b0a432c144b",
        "cursor": {
          "ref": "bbeb127b-2763-4eea-8fed-3a33308f27be",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f1f0ea09-9ad4-4bd2-be3f-2e84f8ed04ae"
        },
        "item": {
          "id": "05c19c9f-890d-4de3-a66a-8b0a432c144b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "60fad075-6066-40e0-b974-c8e4ce20d18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39148ed-7e0f-4c36-97fc-e92f87cd8414",
        "cursor": {
          "ref": "075748c6-4421-4497-bbed-575f3008d95f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2ecfb6e9-e748-4191-b12c-671615bcafcc"
        },
        "item": {
          "id": "c39148ed-7e0f-4c36-97fc-e92f87cd8414",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d2d92d8e-85b7-42d3-9f43-e9d43baff22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcec10d9-ee7f-4e16-910c-fe384133def6",
        "cursor": {
          "ref": "d4509f25-9cf0-4165-aedd-06eea19493fd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "41668910-8892-4865-8587-9306d8267184"
        },
        "item": {
          "id": "bcec10d9-ee7f-4e16-910c-fe384133def6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c1c73463-f216-4d0c-b70e-28a58cc4887f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b88a4bc-6de9-463a-98ed-b8ae38c0bc04",
        "cursor": {
          "ref": "28d29cf4-faa5-41cb-ba1e-48838c7140fd",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "071fca1c-081a-4614-99da-5674f58c0215"
        },
        "item": {
          "id": "8b88a4bc-6de9-463a-98ed-b8ae38c0bc04",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2a1df2c2-bae0-42c3-b04e-e628265bc0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53c1877-4f9c-4621-9bed-4183ca6ceb23",
        "cursor": {
          "ref": "49426e74-fe71-429d-bfe4-c97d190019cb",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "99b834ba-5204-4131-97dd-2f4e0750b60a"
        },
        "item": {
          "id": "c53c1877-4f9c-4621-9bed-4183ca6ceb23",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d7bc160e-8ef7-4568-9aa4-1bd2eebad4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068d4738-1dd3-4c1d-91c1-258e48ad5dd0",
        "cursor": {
          "ref": "7f0ab776-4918-49c6-b093-86f196c4acd5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8cc1dc4d-16d3-42a7-b8ad-ceceaf9724c7"
        },
        "item": {
          "id": "068d4738-1dd3-4c1d-91c1-258e48ad5dd0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ca1358de-5461-480e-9b2b-0b739ee56a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a88dc9-893a-48a7-aa95-6436e95ddf58",
        "cursor": {
          "ref": "7721dbab-7978-4186-8b43-99fa7944898d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a770e402-1fa4-4137-8e33-98ab2ad15734"
        },
        "item": {
          "id": "b4a88dc9-893a-48a7-aa95-6436e95ddf58",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "140cd8e0-91ae-4d9a-914a-b400230f7df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80839f71-c14a-42ee-a100-2422bfb7bf9d",
        "cursor": {
          "ref": "3f949e45-e4cf-4c21-b32d-730573c6efbb",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a3ff71ec-a082-4d20-af0e-697f511c3dab"
        },
        "item": {
          "id": "80839f71-c14a-42ee-a100-2422bfb7bf9d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "53265819-d614-43f8-9e4e-a3f8f061e435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4315c23c-57cd-4640-99b8-6e873b298fb7",
        "cursor": {
          "ref": "71ea360f-1a8c-4946-8ef1-35e9a9286118",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a2dbd178-bcd5-475d-b6b0-4d7a567c975b"
        },
        "item": {
          "id": "4315c23c-57cd-4640-99b8-6e873b298fb7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "870b0d87-c8b7-4e3d-b494-39fd2eeb1ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd36817-03dd-44d1-80b1-5bd90a88ae4d",
        "cursor": {
          "ref": "79fce997-badb-432f-9c47-8fc0b8c8125c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "21119fe0-cc5d-4b87-a1db-6b19867ffe66"
        },
        "item": {
          "id": "afd36817-03dd-44d1-80b1-5bd90a88ae4d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f6a7d406-bf4a-4432-bb00-c7de14c8f9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf712727-c98f-4734-ae1e-c3a2b745eabe",
        "cursor": {
          "ref": "ab71d606-ce87-4071-bd12-e28102f3ce16",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0588518d-8f4b-41d6-a42f-4f9c58f7cf14"
        },
        "item": {
          "id": "bf712727-c98f-4734-ae1e-c3a2b745eabe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9ef06746-a9a6-46f0-bd16-3c787fb959dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7df09ff-9765-4485-8b12-c7f0707caa52",
        "cursor": {
          "ref": "26350b5d-e978-477f-88cc-2a84e4637311",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e5d1018d-7400-400d-99e0-085779932de4"
        },
        "item": {
          "id": "b7df09ff-9765-4485-8b12-c7f0707caa52",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b99327b1-579c-4126-ac09-6165fe24e78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20baf16c-fbc4-44e2-92d5-97d52b9ab98f",
        "cursor": {
          "ref": "3ebdb409-f9c4-4f88-94af-96e88a486914",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5a3e299c-7d42-4c26-9bef-7c33242dc9a3"
        },
        "item": {
          "id": "20baf16c-fbc4-44e2-92d5-97d52b9ab98f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8f4d63ee-ad80-44c7-b033-ae6d7119b406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b384c57-8969-4a91-a98c-f66680b65566",
        "cursor": {
          "ref": "934ec81a-6058-40e8-89d1-9be4a789ea13",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "665790bd-83d2-4ce7-ab25-8c28b0787048"
        },
        "item": {
          "id": "2b384c57-8969-4a91-a98c-f66680b65566",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "30ac5d2a-3396-40d3-8e5b-64cc07b1938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fea8d1c-2fe0-4d86-b391-789b87d2d819",
        "cursor": {
          "ref": "7e2b20bf-6133-4c7e-b714-7f51dc730392",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "30845eb1-6bc0-49fa-a6b0-7bc8684f3475"
        },
        "item": {
          "id": "1fea8d1c-2fe0-4d86-b391-789b87d2d819",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d8aac010-726c-461d-aa8d-d96b640eab7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4e214d-d591-47d1-80f7-497725d82703",
        "cursor": {
          "ref": "c444a734-3508-483d-a3c2-35ea78692db5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "85013767-eab4-4692-94ec-a39d97f7a679"
        },
        "item": {
          "id": "8c4e214d-d591-47d1-80f7-497725d82703",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c6054694-b255-43bd-8781-2c81c0bf0a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14770dfd-a2ec-44fa-b6f9-3d2628c74f42",
        "cursor": {
          "ref": "37ee2cc6-20c0-4a5e-8996-9104565ac132",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dc0180bc-9119-43f3-a010-df30039a038b"
        },
        "item": {
          "id": "14770dfd-a2ec-44fa-b6f9-3d2628c74f42",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f70236e9-6331-40cf-8b4c-f727bc9734fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226616ff-d7fc-424d-a3a4-7a67064a413a",
        "cursor": {
          "ref": "64d58402-0aca-477a-b8ff-6bdd1adc6caf",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bbb4fc28-96d7-49d4-8b5b-ac1f2e704fbc"
        },
        "item": {
          "id": "226616ff-d7fc-424d-a3a4-7a67064a413a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "50b6345e-e6ac-4146-a1e6-bf7b608ad9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c07aec4-0ad6-416f-bc07-65c4897f36ae",
        "cursor": {
          "ref": "61a718b5-75ef-4293-9951-de2091da6543",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5815afb7-839d-433f-871c-9c62c0828f77"
        },
        "item": {
          "id": "7c07aec4-0ad6-416f-bc07-65c4897f36ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ae9ca26a-b5e8-4df6-ad19-95725623ae1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298aa602-9064-4153-8fc9-ecb493942606",
        "cursor": {
          "ref": "f2f5e9e9-2ae3-4410-ab9d-92a055918b5a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "990014a8-5a9b-4243-bec0-83da2d5e964f"
        },
        "item": {
          "id": "298aa602-9064-4153-8fc9-ecb493942606",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1d2a5a24-de9e-420a-bb0c-2dcb6b714dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf0e68-b124-4a18-b6db-3ce5fdfc48d6",
        "cursor": {
          "ref": "91040406-1eaa-492c-ac70-8f4b8eb1eaf0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "058de769-7fda-406b-af55-c7d24680168b"
        },
        "item": {
          "id": "2adf0e68-b124-4a18-b6db-3ce5fdfc48d6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "334995e6-41b5-4bdd-af4d-c2eb2d524707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef45ff5-dda5-463b-8874-62cdcb154ddb",
        "cursor": {
          "ref": "7232612e-7e9c-4e47-a1b8-c7683c706619",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9f234948-f759-4594-8c1a-9d1dcc2ad1e4"
        },
        "item": {
          "id": "6ef45ff5-dda5-463b-8874-62cdcb154ddb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "82474994-40e3-4188-8e35-3526b3b88626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989a2050-3eae-436f-9c77-855c4e8df6d3",
        "cursor": {
          "ref": "ebb0a6bb-0f7a-4bea-a263-317b260ebbb4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "709025d1-f5ae-4189-920b-d837eedb97d9"
        },
        "item": {
          "id": "989a2050-3eae-436f-9c77-855c4e8df6d3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "53512097-b916-4011-9b36-5db6f74289e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaa832d-8645-4423-971c-19beafbab7e8",
        "cursor": {
          "ref": "002e506e-b5c8-45c5-b742-38d062111cdc",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b69db85e-4003-49e3-a7ae-7820663e782b"
        },
        "item": {
          "id": "5aaa832d-8645-4423-971c-19beafbab7e8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "eac18dd3-d7df-46fc-b0d2-5088e47e095c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26be2e0-26cd-4c0f-a320-4ea41cb4dfba",
        "cursor": {
          "ref": "ad01980b-1984-4154-a2d7-e75285c3cad6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "645c939a-6cf4-49b1-a674-2d273c7f72ad"
        },
        "item": {
          "id": "c26be2e0-26cd-4c0f-a320-4ea41cb4dfba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "71b4b847-75df-4f1c-8c57-d2608787f8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260e2f2c-3328-4bb2-8ec0-1573e1439b15",
        "cursor": {
          "ref": "ff5cb026-e5d9-4337-919b-8592cc756334",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6508fbe8-d503-4d1b-9907-7eaa7f75a56b"
        },
        "item": {
          "id": "260e2f2c-3328-4bb2-8ec0-1573e1439b15",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d32b050e-b423-49d8-8caf-2534e9950994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2a9747-94bb-4835-b47d-6c87fc0dc8df",
        "cursor": {
          "ref": "c2493ee7-cf30-47ee-9233-81516752528d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "16e7276a-6793-4af7-95ae-ed770594beff"
        },
        "item": {
          "id": "ff2a9747-94bb-4835-b47d-6c87fc0dc8df",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "97978042-4941-497c-8208-926a825337fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f91206-fe19-4d70-a16a-e07a9dec9a53",
        "cursor": {
          "ref": "d7819b89-ad2c-470e-aedb-4aff929bab1d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0394ef4e-0d62-44c2-817a-7b797de4189d"
        },
        "item": {
          "id": "c2f91206-fe19-4d70-a16a-e07a9dec9a53",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0cf87a65-d4ca-414b-aab8-b4e166f41a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd92bb0-ebce-4f25-93cb-925c746158d7",
        "cursor": {
          "ref": "a35080ff-87f6-40ad-b8ad-dd073ea1d059",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e81105f9-e336-457e-8ec1-37c1139304bb"
        },
        "item": {
          "id": "3dd92bb0-ebce-4f25-93cb-925c746158d7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "036e5f70-5f4c-4ced-bcdd-58a57fc1a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1d49d4-d53a-4d3d-a811-82a163d96012",
        "cursor": {
          "ref": "5a97daf9-ad22-4bd1-ae60-cd6d51e2c909",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cc7c4ac6-1fb9-490c-b05e-657b4c7ab89c"
        },
        "item": {
          "id": "fa1d49d4-d53a-4d3d-a811-82a163d96012",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5ee785ba-55be-4e69-88ff-5104e6111923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889f4b0e-9026-40cf-9c2d-8856077a2c4e",
        "cursor": {
          "ref": "3a20b356-1d59-4d51-82fd-de3597886117",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "18329c58-efb8-4c75-8795-ad1ef422c2eb"
        },
        "item": {
          "id": "889f4b0e-9026-40cf-9c2d-8856077a2c4e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "475cd369-393c-467c-8e3a-c3cb6c3a6eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eca67f8-38c0-462e-ae79-6eb408453f8c",
        "cursor": {
          "ref": "40ce235c-9974-4c07-9840-c81ecd3e334e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4ce4931e-c317-4857-8a7a-1aa9d8aca26b"
        },
        "item": {
          "id": "0eca67f8-38c0-462e-ae79-6eb408453f8c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "15a14466-f26a-4f5b-8892-a0ce78cb527f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c048920-93c9-45f5-b365-22f43b6ddc2e",
        "cursor": {
          "ref": "7b0f410a-ab8a-4b02-a844-a3ac9003fd88",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0a6a5408-8fde-489a-919e-90840618831f"
        },
        "item": {
          "id": "6c048920-93c9-45f5-b365-22f43b6ddc2e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c402e7be-3930-463b-8099-31aece4808c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133714ba-e163-4945-9941-08f945537132",
        "cursor": {
          "ref": "770e03e0-3181-4c42-b312-fcbd58d8febb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "df19c79e-4b81-4ef3-a22a-2d072fa74c55"
        },
        "item": {
          "id": "133714ba-e163-4945-9941-08f945537132",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b551be4f-84e9-4bf4-b19b-94cdd1425452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f617df-ce57-431f-82a0-9130fb751f68",
        "cursor": {
          "ref": "66a0cb0a-f0d3-42e6-be45-fe8e68dc882f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c48ea6e0-813d-4344-8a89-7129b4600f77"
        },
        "item": {
          "id": "16f617df-ce57-431f-82a0-9130fb751f68",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e349e0fd-49d5-47b5-9cd3-9aa9f033fefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfb6eab-f16b-4eee-bdc3-1195b784e3d5",
        "cursor": {
          "ref": "b8cc2900-244e-4bad-8add-7268b74db88b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "16c6a71a-cb96-46d9-9421-1188ae0f89f1"
        },
        "item": {
          "id": "1dfb6eab-f16b-4eee-bdc3-1195b784e3d5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "30b6bcc2-dcbc-4392-a03f-4670135ab01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae77ab6-9468-4862-969f-9382ba170799",
        "cursor": {
          "ref": "e83a375e-202b-4d3a-8802-c025f5f5a4c3",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "11a19605-2f65-4f1b-8cc6-fc28fc13197b"
        },
        "item": {
          "id": "eae77ab6-9468-4862-969f-9382ba170799",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "632e26bd-c1c1-4696-a009-e18776cc811f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2502e7-146c-4b00-a639-b5f960b18734",
        "cursor": {
          "ref": "43656620-f94d-4b30-91df-6439a3cc054c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5db90512-928d-4ed0-a10d-37f18efdcf3d"
        },
        "item": {
          "id": "aa2502e7-146c-4b00-a639-b5f960b18734",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fbb048d7-5e6f-4eef-9185-635606b6b31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9388f4ac-904b-4b62-817c-21065351342b",
        "cursor": {
          "ref": "72311f31-b201-4df3-90a9-70be0de9c1f9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2b859e00-b77e-40c2-9cf5-4d011d9c0f6d"
        },
        "item": {
          "id": "9388f4ac-904b-4b62-817c-21065351342b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3642876e-4b8c-4cad-acce-efe947998da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a24637-171e-4e14-8975-7d4c8de0bd8d",
        "cursor": {
          "ref": "5f6747f6-fe9f-422f-8095-d42b73b7a135",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e1399db4-8df5-4466-892e-74f909bbb11e"
        },
        "item": {
          "id": "95a24637-171e-4e14-8975-7d4c8de0bd8d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "819dc9a2-d050-40a9-82b0-64b534b8a1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c86bb7-bd08-4282-ae3f-0ae8f2ee401f",
        "cursor": {
          "ref": "c46f781e-46bf-4645-8491-ea7a6be621aa",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1b6e6bd1-7883-4204-ba8e-604825962cf4"
        },
        "item": {
          "id": "63c86bb7-bd08-4282-ae3f-0ae8f2ee401f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f9d94436-b09f-4411-9fbf-4a2a22199388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31b32f7-c140-4724-9514-4dd92a2cb109",
        "cursor": {
          "ref": "33e9e5a4-da08-486a-8534-fd0123003d01",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f6673181-7cfa-4aec-b2ed-399fb99041fb"
        },
        "item": {
          "id": "f31b32f7-c140-4724-9514-4dd92a2cb109",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "135d23e0-acd5-4ec2-a81f-26e3186ac87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4818b6b0-0eed-443f-abeb-48057f259245",
        "cursor": {
          "ref": "e0e28109-a2ec-45e6-b91c-055ae7d7ec8e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c3bbdcac-afff-48bb-a5ca-99d92b34ff3a"
        },
        "item": {
          "id": "4818b6b0-0eed-443f-abeb-48057f259245",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c148fd47-b6e9-48e0-99d7-92123b07d5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb72535b-37f6-4e58-bfb8-18565bc1ceb6",
        "cursor": {
          "ref": "ac23ceaa-cca5-44d7-a9f3-36c3a5cf7ba7",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f33adda4-ef25-4c67-aa51-dce0a8b5ebd3"
        },
        "item": {
          "id": "eb72535b-37f6-4e58-bfb8-18565bc1ceb6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "83f340ed-9f6e-413c-912c-fc7d6370f326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23dd888e-18cb-4a3c-a2cd-45c7984c893b",
        "cursor": {
          "ref": "2ac39e0d-081c-459e-8841-fc2798cdc757",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9568e55c-ddae-4b88-929e-adb83fa5e238"
        },
        "item": {
          "id": "23dd888e-18cb-4a3c-a2cd-45c7984c893b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5a88f9a2-5afc-426b-a97f-d282d8bde7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9b30ae-bea5-475c-824e-5f39fc636869",
        "cursor": {
          "ref": "20e573dd-e0dd-41bf-a9a8-708104805bd4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bfb6b223-ebce-4ee4-a1b9-e27522e64be1"
        },
        "item": {
          "id": "cf9b30ae-bea5-475c-824e-5f39fc636869",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8eae598d-e946-41aa-9a27-cfdd68c29bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c5a847-8fa4-42d9-88bb-4c5ea8f7c30e",
        "cursor": {
          "ref": "dbd64e11-14ff-4e02-b488-6711e9df6270",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cc00ffec-d513-41e9-8c14-4df96970144f"
        },
        "item": {
          "id": "81c5a847-8fa4-42d9-88bb-4c5ea8f7c30e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cadbbd1e-7096-4777-87d2-d959081162e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b053157-69cd-4107-ad9d-72afb62638aa",
        "cursor": {
          "ref": "15e687de-267f-498a-9185-861202d0e4a2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a04fa0fc-e6bd-4207-8510-db7d06ca5b60"
        },
        "item": {
          "id": "7b053157-69cd-4107-ad9d-72afb62638aa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dfd5fe41-a7ee-426b-8cb8-927e8a8fbb5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee34a6e-41d6-4ec5-826b-77c22d3707cc",
        "cursor": {
          "ref": "9b19b9a4-00f8-42ff-9e56-20268afd9a57",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f171145d-7d53-418d-9992-80e8bd67edac"
        },
        "item": {
          "id": "8ee34a6e-41d6-4ec5-826b-77c22d3707cc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5a0e28c9-83b7-4b02-8601-f81a927ebbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b37d6246-3ecb-4f7b-a56b-9b0890c998ce",
        "cursor": {
          "ref": "d175212f-1dd0-498e-8140-e7954053e080",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2bb48a88-2c89-42c6-8618-a024fbfdde5f"
        },
        "item": {
          "id": "b37d6246-3ecb-4f7b-a56b-9b0890c998ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "852d44a1-2052-4170-93ae-ef4923a6e374",
          "status": "Created",
          "code": 201,
          "responseTime": 9385,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7324c7b-8e4a-42cc-8fd3-6d70835f2ec0",
        "cursor": {
          "ref": "2214fe37-7b86-4c23-85b3-b01f4babcfab",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7c27ab99-6f1a-4df7-91f8-7e5d6dac03f9"
        },
        "item": {
          "id": "b7324c7b-8e4a-42cc-8fd3-6d70835f2ec0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9572693f-cf3b-418b-a793-9530b7b8c957",
          "status": "Created",
          "code": 201,
          "responseTime": 11782,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6acfdf-c924-47c5-b120-508bf370845f",
        "cursor": {
          "ref": "c1c1f5e5-b12e-46ed-8a44-94b5045c5e78",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c108e791-3bb7-461c-98b8-870a20354ca0"
        },
        "item": {
          "id": "cc6acfdf-c924-47c5-b120-508bf370845f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "968b13a0-6aa5-42c2-92cf-9e0757616fda",
          "status": "Created",
          "code": 201,
          "responseTime": 12351,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83ca53f-720c-4075-b8fb-1fa9d5182b5d",
        "cursor": {
          "ref": "aa0460e0-7a9b-470b-8540-36c1fdcc1542",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9efeeab7-6702-44ab-8bc5-38b1fbeb519e"
        },
        "item": {
          "id": "b83ca53f-720c-4075-b8fb-1fa9d5182b5d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bbdef06b-a32c-42f9-8673-cb2b2c74fad5",
          "status": "Created",
          "code": 201,
          "responseTime": 9804,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0499c8b-60e6-4fa9-8580-140e9ab4f422",
        "cursor": {
          "ref": "e0c4bc06-7a96-4064-b68d-928537ec5a1b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2a068e8d-5bfc-40b5-8c14-6a3a7c8ae2c7"
        },
        "item": {
          "id": "e0499c8b-60e6-4fa9-8580-140e9ab4f422",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5e82ed01-81bc-47f8-8819-99c238ad4511",
          "status": "Created",
          "code": 201,
          "responseTime": 8640,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "71366657-ee61-45a5-a888-e95beffe668c",
        "cursor": {
          "ref": "b80494ef-82eb-43dd-b8b4-02d5e20255cd",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1313ea38-0b81-4ba0-858c-16c464e0dac0"
        },
        "item": {
          "id": "71366657-ee61-45a5-a888-e95beffe668c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9907a388-94f5-4606-be43-cbb48bfd3450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c7b950a7-60cf-456c-93f5-e8e02f4132b9",
        "cursor": {
          "ref": "8f08fe1f-f0a3-4111-bc55-63166e5241c5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5d8a7d26-b776-4b29-99ed-53ee08a6587a"
        },
        "item": {
          "id": "c7b950a7-60cf-456c-93f5-e8e02f4132b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "93e46bc3-8152-44e8-bab0-1e59d722645d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838426ba-fd1b-4b36-a4f3-b90591f445c0",
        "cursor": {
          "ref": "c693ba63-86e9-4a78-b1b3-2aaedf4216cc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3c057a08-ded7-4f08-9233-219f3cf6c0ac"
        },
        "item": {
          "id": "838426ba-fd1b-4b36-a4f3-b90591f445c0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99adde32-ccc4-4526-8fd1-00d25175ee23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8469a7c-da8f-4202-8688-7e332c952d1d",
        "cursor": {
          "ref": "3ebe6829-651e-4291-95a7-5d5b15600edf",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a77a38da-f415-4198-a27c-de333ff530b3"
        },
        "item": {
          "id": "b8469a7c-da8f-4202-8688-7e332c952d1d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "acbbf500-234d-4535-8b7b-424d580bca35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82029541-3d0f-4eb4-93e1-b10ac59c934f",
        "cursor": {
          "ref": "f4830b07-5e7b-4fa7-bb12-613e2e81b073",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b435713e-a94c-4e4a-9329-010dfcfc91a1"
        },
        "item": {
          "id": "82029541-3d0f-4eb4-93e1-b10ac59c934f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "184a3fff-6b87-4032-bbd3-0d7862527fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67723dba-a763-4497-9cba-76edf3f34d6f",
        "cursor": {
          "ref": "bcfba9e6-a0a2-406d-928e-2c6671afd1d2",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c6eaa38f-d578-406a-922d-9b8ed3dceda0"
        },
        "item": {
          "id": "67723dba-a763-4497-9cba-76edf3f34d6f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ec753b1c-54fc-4199-af54-627fa4b02644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f710c2ce-ca47-4fa0-b2de-c02d9dba2838",
        "cursor": {
          "ref": "3ba4e174-f8be-4a12-9553-76c179a58b47",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0d706432-9aa9-4448-a33f-25731bfe0f97"
        },
        "item": {
          "id": "f710c2ce-ca47-4fa0-b2de-c02d9dba2838",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5ea4945d-3bf5-44f4-9c02-1953ef1a1438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b68091-3fd6-49f0-ab3d-1562230ff181",
        "cursor": {
          "ref": "37834c78-5907-4dea-8739-8535031edc24",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d4b729f4-c69f-491f-a631-c5b2faf35a60"
        },
        "item": {
          "id": "c0b68091-3fd6-49f0-ab3d-1562230ff181",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "19b78df7-976b-409f-9f31-9c13981f2efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f4adb7-268f-4e9e-82cb-6837366f607c",
        "cursor": {
          "ref": "620165b0-19e7-49f4-bf39-f28db2f5e5a1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6f3f080b-3f04-474f-89b5-fdcd82ee5583"
        },
        "item": {
          "id": "a9f4adb7-268f-4e9e-82cb-6837366f607c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a18a1c1a-f5d1-40ac-82a6-a9ac195ad07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5efa78-ea97-4e2d-8ab9-2237ed73799c",
        "cursor": {
          "ref": "36647cfb-b740-4896-aa52-982922ac5966",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4cecfd6e-30e5-47f5-8025-ac71041f3536"
        },
        "item": {
          "id": "4b5efa78-ea97-4e2d-8ab9-2237ed73799c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "51a858ca-b61c-466b-962a-6ac4a007363e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661b9fb7-3dfd-4d91-a76e-7a70d35864b6",
        "cursor": {
          "ref": "b2d7c4e7-bc61-4a2a-b416-a7262b265eb4",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "01ffa77b-d731-4485-b729-c4f3d948a501"
        },
        "item": {
          "id": "661b9fb7-3dfd-4d91-a76e-7a70d35864b6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c042ccd-2f9f-4ea3-8cde-81c2cfde3cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39068fa-2c9a-4db1-90a1-465dbbe7c6e2",
        "cursor": {
          "ref": "dbb9b25d-f9ba-4a8e-8e9e-66b781f03592",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a25cbe01-761f-4b53-ad53-44c1637873cb"
        },
        "item": {
          "id": "b39068fa-2c9a-4db1-90a1-465dbbe7c6e2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3dad70bc-b93c-4cdf-bceb-08f131c71306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f4d7f4-2461-4acb-b483-94b5b24c1d24",
        "cursor": {
          "ref": "b939b55c-7463-452d-a920-ed4cfd851d95",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "545da685-18ec-41ab-92cc-c3184ad69ec8"
        },
        "item": {
          "id": "56f4d7f4-2461-4acb-b483-94b5b24c1d24",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3f3a24ce-98b2-479f-9030-994eb36de68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ffee1-c158-4bda-ac1a-d3f66f9a4ee4",
        "cursor": {
          "ref": "220772b9-3c1d-439b-9ba5-303745212922",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "45e3eb74-9ede-436b-9e54-b038ab4d723b"
        },
        "item": {
          "id": "ac6ffee1-c158-4bda-ac1a-d3f66f9a4ee4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3c2e6d4d-42db-49c0-99c5-2eb3ff72b63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb294db-e5d0-4d9e-8b2d-55bf3f7da61c",
        "cursor": {
          "ref": "92512e19-de72-433e-a013-8f28df96006f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "95f2f243-99f5-427c-980d-999580c9edca"
        },
        "item": {
          "id": "8cb294db-e5d0-4d9e-8b2d-55bf3f7da61c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "04c63e7f-b3e9-44f4-84a1-cb9102d0d0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe3ae40-fff4-4051-ad2a-0256568ff8ed",
        "cursor": {
          "ref": "dd96c407-a115-4981-89c7-826f11a0a3f4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c8b04f13-716d-49d5-bb18-7836821d0440"
        },
        "item": {
          "id": "ebe3ae40-fff4-4051-ad2a-0256568ff8ed",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f75be11b-c395-49d5-aeb3-a100bffd3613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84037674-504f-4f82-b342-9ed82ece623d",
        "cursor": {
          "ref": "236522c7-9674-46a7-88f9-1bd10607d757",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "85685510-c029-4a77-a16c-32b4bde13a58"
        },
        "item": {
          "id": "84037674-504f-4f82-b342-9ed82ece623d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "af18c420-a66f-4afd-a6e8-cc67713b9c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b1182f-a02c-41f0-b837-a5d2cabbec3e",
        "cursor": {
          "ref": "27ec329c-9ce4-4d37-9f74-3b4e632755ac",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "48a3e22d-37e0-476b-bba7-ca398e949e26"
        },
        "item": {
          "id": "18b1182f-a02c-41f0-b837-a5d2cabbec3e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "74d5767d-f509-40aa-95d3-9c36cfb9a767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea7091-393a-446a-8a10-8c23e956c66a",
        "cursor": {
          "ref": "8528e365-4e1e-4264-947e-58445cb1fed7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "688287bf-4c3f-422d-a9db-805bd8d8675d"
        },
        "item": {
          "id": "b8ea7091-393a-446a-8a10-8c23e956c66a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "66bddd73-2f30-4dab-8b9f-10b4dbd9c551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e4041e-8d5e-4e5a-9340-30f71859ba08",
        "cursor": {
          "ref": "86109968-ec81-4686-bbbf-e9deb050538d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "acaa563a-35eb-421e-9e3a-005156d61c91"
        },
        "item": {
          "id": "47e4041e-8d5e-4e5a-9340-30f71859ba08",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e11cf495-a6ce-42b9-a434-95e4f1f78ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a0539f-8dbe-4681-aeb2-f360fdbbf733",
        "cursor": {
          "ref": "8f033825-0f2e-48da-87d4-18ef58628885",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "21511080-17f6-463c-811a-15fdd2ad5942"
        },
        "item": {
          "id": "a4a0539f-8dbe-4681-aeb2-f360fdbbf733",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dd9cc40b-0166-4f64-8c80-5d182d453880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b77671-9b66-4b59-8408-221aba434b13",
        "cursor": {
          "ref": "91d74706-3928-45a6-bbfa-34ee782d809b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cb2c8670-555d-46b7-9124-66736d4068c2"
        },
        "item": {
          "id": "48b77671-9b66-4b59-8408-221aba434b13",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e39d2a19-5481-48a6-9a6d-9e62b441752d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d550e4-da13-47fa-959c-b02382354e9f",
        "cursor": {
          "ref": "3a1a4378-ac57-43f5-a2da-d9f421bf8620",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3707f8f4-1018-466f-9419-8cefcdc27283"
        },
        "item": {
          "id": "31d550e4-da13-47fa-959c-b02382354e9f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4249727b-4cb7-4983-b78b-867fa2cc6185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4f45b0-2f15-452d-beee-bdbe4f870d25",
        "cursor": {
          "ref": "97e22984-1e93-499a-bca5-bb4f07e431ff",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "04a93490-00e5-4481-92c7-9a05ffdcaaec"
        },
        "item": {
          "id": "cf4f45b0-2f15-452d-beee-bdbe4f870d25",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad9f8a62-1625-4823-bb6c-27dc249ea566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3678f7-d66d-4d6d-9dbc-90e4606e7c00",
        "cursor": {
          "ref": "52766d64-e883-4508-973a-f94ddb043212",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "57b4c3bb-ff3a-482f-ac68-e6bc99d3db3a"
        },
        "item": {
          "id": "0d3678f7-d66d-4d6d-9dbc-90e4606e7c00",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "94ed4328-1c74-45c4-aff5-02aad5186e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57efc9fc-711e-445c-9930-1272fb5c4170",
        "cursor": {
          "ref": "6910ff82-ba2e-4f70-8f22-8478c0b512dc",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "74a4ceda-714c-48d7-86ee-8cb261d393ad"
        },
        "item": {
          "id": "57efc9fc-711e-445c-9930-1272fb5c4170",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "74e59366-566a-44a3-905a-7441006569b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ff3916-4acc-4fc4-9336-39dc202c91de",
        "cursor": {
          "ref": "edf64345-44b8-4e3f-91b7-c5a87d4b3502",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "12bed42a-77e5-43fe-9077-8e0fcc883966"
        },
        "item": {
          "id": "00ff3916-4acc-4fc4-9336-39dc202c91de",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d79a096d-1fe9-4c42-a3e0-b66fb55fa7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e1cc4b-df71-4fb3-8433-f3c74e6bfb09",
        "cursor": {
          "ref": "a1eb6766-834f-43f4-a561-d0c618dcdfc1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "afd74903-0830-4597-b2fd-18ee7a1e905e"
        },
        "item": {
          "id": "63e1cc4b-df71-4fb3-8433-f3c74e6bfb09",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bbb73ba4-0055-4840-b939-5c63b567e0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62452a29-89a3-4b20-b864-1b32c633a6eb",
        "cursor": {
          "ref": "09e99add-51e4-46d2-bd82-8a0e7271fc73",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a2be4788-81e9-4df2-9297-28eea918e97c"
        },
        "item": {
          "id": "62452a29-89a3-4b20-b864-1b32c633a6eb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9001c705-58f0-4483-bd39-7b234cd1a091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb0f1a5-ec1e-49df-b3c3-9a2a9672f57e",
        "cursor": {
          "ref": "3696fc5c-184f-4a29-bddb-55a92ad1d0d1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a33f3632-ba80-46e5-b151-321fed7b40bf"
        },
        "item": {
          "id": "0cb0f1a5-ec1e-49df-b3c3-9a2a9672f57e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "04faa035-a9ab-4119-a717-5ffbbf8c5f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67196226-6ec4-4809-80ea-4a1aa53b95e9",
        "cursor": {
          "ref": "f30dc0eb-d766-45d1-99b3-1df7ecf292ba",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9d164322-9007-4987-8349-bfe82f4835e7"
        },
        "item": {
          "id": "67196226-6ec4-4809-80ea-4a1aa53b95e9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6caf6176-9f4f-421f-ae23-7ddbf291794a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3155f3d-ab3a-47ca-a24d-547ccccd245a",
        "cursor": {
          "ref": "d8816fd3-b0ba-4c30-90a2-2792bfeded3a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "97d183ef-e5ff-4c63-8931-9b4e7f33a2f3"
        },
        "item": {
          "id": "e3155f3d-ab3a-47ca-a24d-547ccccd245a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4814b977-5a06-476f-99ca-32cc3cb5d7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c50c8-66c3-435e-961b-3ca374f4c826",
        "cursor": {
          "ref": "063c618e-535b-4051-8b34-89eb3db417f0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1297ef01-7109-4ab4-afda-39f9efdc23b4"
        },
        "item": {
          "id": "3b6c50c8-66c3-435e-961b-3ca374f4c826",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "741556b9-4e7f-4057-bf74-540e19e10088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf0150b-93d4-401a-b681-f865a80e9132",
        "cursor": {
          "ref": "c6b41a3e-54e7-47a5-9aeb-0cc4070be6af",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f7f2d0bb-e70e-4f75-8a7d-179aeb7a84a4"
        },
        "item": {
          "id": "2cf0150b-93d4-401a-b681-f865a80e9132",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2f04061c-cef6-4889-b11b-4ad2e5268d77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76395dd2-99bb-4139-a9d2-1a08d95b9248",
        "cursor": {
          "ref": "143c6e7c-6a6d-40ce-999e-637fd9789cd1",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e6003614-458f-443f-becf-ab252a828dce"
        },
        "item": {
          "id": "76395dd2-99bb-4139-a9d2-1a08d95b9248",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "960bd4f9-421b-4a33-a7b9-522ba12f225b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c6742a-a296-4f80-b9b9-26b9bfeb9aab",
        "cursor": {
          "ref": "7be97e40-99d2-4619-b91e-c2ca24ae7268",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "df66ff87-95e0-48c8-8956-b9b85fcf27b8"
        },
        "item": {
          "id": "c1c6742a-a296-4f80-b9b9-26b9bfeb9aab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0b5fac30-82db-4df3-94e8-352b31eded4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fe0fc1-7d45-4681-979e-55f395f8a412",
        "cursor": {
          "ref": "aeafe98a-0818-4d95-b874-39c2dffc66a4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a016ba1e-cbb9-4bde-a31b-ce5f63c30e8d"
        },
        "item": {
          "id": "10fe0fc1-7d45-4681-979e-55f395f8a412",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cc73997b-96ee-4616-ba78-c6dd5da2bc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8475e33c-1f98-45bf-b464-797d8d7fc907",
        "cursor": {
          "ref": "20e8a0b1-1652-4738-b3c0-dad6cb8537ff",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f6fb3fe9-f9fa-426d-9c41-3932bd18d72d"
        },
        "item": {
          "id": "8475e33c-1f98-45bf-b464-797d8d7fc907",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f8231eb6-c691-4061-b197-dfcd2b586b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b42a91f-dac8-44ae-80cb-d7d528d98005",
        "cursor": {
          "ref": "baa70b7b-155f-4990-ad64-9a89c4d3d898",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d8db666c-621d-41b4-a0a9-e323866de81f"
        },
        "item": {
          "id": "0b42a91f-dac8-44ae-80cb-d7d528d98005",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7be99deb-be17-48cd-8eac-1f1467393306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8878ed9-ba88-4589-9441-53afc5d56c87",
        "cursor": {
          "ref": "e0c33107-89b5-4f80-a4a2-716de561e49c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "729c32e3-c0b3-498c-9dff-8339d0d800c8"
        },
        "item": {
          "id": "f8878ed9-ba88-4589-9441-53afc5d56c87",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bb3da016-61db-4ed6-b02f-65c0118d02d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b19c1ee-94ba-4c22-99c8-c4ffa4622639",
        "cursor": {
          "ref": "f35f902a-9a97-4225-a503-80a32ecb2c6f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "67011948-b016-4a7e-a8ac-fe8c2b8201e4"
        },
        "item": {
          "id": "0b19c1ee-94ba-4c22-99c8-c4ffa4622639",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dceaffa7-934b-49ea-8e36-0f6fefe1e606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1e5949-8f36-4b74-8afe-1afc753b7534",
        "cursor": {
          "ref": "6a475774-d77a-4ce3-90d0-ae5b7f3c635e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "94d6f262-30d6-4cf8-8ace-e1da3badcc9d"
        },
        "item": {
          "id": "8c1e5949-8f36-4b74-8afe-1afc753b7534",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7d4b7644-6e29-4532-bdc7-53f44210123d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2873fa19-9763-4f75-9a9a-9b6fbf8689bf",
        "cursor": {
          "ref": "20ed0315-603b-4a52-8bbc-c02c4b160197",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d5750e73-9b4e-4d4f-9d5c-49804c4b567b"
        },
        "item": {
          "id": "2873fa19-9763-4f75-9a9a-9b6fbf8689bf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54750beb-80af-409e-a489-7d156e5869e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e5c01a-0200-4063-953c-e36c3739bdab",
        "cursor": {
          "ref": "74987554-5f90-4815-8c63-b73ea77a5d78",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "90ac0328-efce-47aa-bc17-b7f68eea7a9b"
        },
        "item": {
          "id": "06e5c01a-0200-4063-953c-e36c3739bdab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0de4c8be-16d4-4512-8dbd-58ae6164162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ba22fe-086b-4253-a75e-7103ca9d777c",
        "cursor": {
          "ref": "301b4451-319a-4553-a921-aa9629fa8e28",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "02bf8e17-cded-4865-9a72-f8e1db10be2d"
        },
        "item": {
          "id": "78ba22fe-086b-4253-a75e-7103ca9d777c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "66b955ab-b86c-4c26-86e8-0dd78cd31799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118ba9b9-1b6f-45aa-94c2-4ebfe38eb224",
        "cursor": {
          "ref": "fbd1b1be-7c98-4bac-bf0a-e96caff82af6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bd4dd6d1-d476-4de9-9622-e02479c9abe8"
        },
        "item": {
          "id": "118ba9b9-1b6f-45aa-94c2-4ebfe38eb224",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c259004c-5fb0-449c-9e28-3808492bb5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf45e4cf-f274-4c9d-869a-ec3aa438f389",
        "cursor": {
          "ref": "8e8e06e2-3c11-4cc2-b72a-3f8dd87646ae",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9c13de42-2ba4-43b6-9683-a20fad42d7b2"
        },
        "item": {
          "id": "cf45e4cf-f274-4c9d-869a-ec3aa438f389",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "836643ff-b1e7-457a-9415-5ff1cde09792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d521544-42a5-4cd6-81ce-12f5bf88f664",
        "cursor": {
          "ref": "27d75ea9-5655-4b14-958d-d76ed93de16c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f99ef9e6-9c94-455d-8632-d72ca2009523"
        },
        "item": {
          "id": "1d521544-42a5-4cd6-81ce-12f5bf88f664",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e064418b-0311-448c-a13e-625ee7f38fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559412c2-23eb-4fb7-a9e3-1d6c1a9b5070",
        "cursor": {
          "ref": "e929b849-0ee2-476d-b3bb-58df632fadd4",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e0e06370-645e-422d-bc90-5451885ca799"
        },
        "item": {
          "id": "559412c2-23eb-4fb7-a9e3-1d6c1a9b5070",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c1fff5ad-551c-499d-9bfd-a38938fd7937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe5c708-51a2-483a-970a-ba66653b8789",
        "cursor": {
          "ref": "2330ce44-7626-41fc-8ac1-cab55d4728c0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a68f16b4-7e51-4d5c-bac2-d5762aa86cab"
        },
        "item": {
          "id": "bbe5c708-51a2-483a-970a-ba66653b8789",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "41ea781e-26d8-4a31-87d8-9699ab5e8be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78424a82-f8ff-41f5-b961-cd66248ca2ff",
        "cursor": {
          "ref": "dcd68f26-5486-4d5d-96e1-9c1443c6b578",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9fd2e9a2-36b9-49f6-9ca9-60c6b06403f4"
        },
        "item": {
          "id": "78424a82-f8ff-41f5-b961-cd66248ca2ff",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a99b61cb-b283-422a-b423-9b96989592fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5646a7b5-9720-4f39-afa0-3f0e39ae3460",
        "cursor": {
          "ref": "360b10a5-4f2c-433c-b125-c2a929d14ddf",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "72b7c419-9bb6-41b4-8108-f356b62b6244"
        },
        "item": {
          "id": "5646a7b5-9720-4f39-afa0-3f0e39ae3460",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4358e09c-6082-4109-ae65-61048d500789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98841de-8412-4368-a021-b5c2d1209800",
        "cursor": {
          "ref": "aec0945a-d038-4f26-89b0-a04b0d6db6b4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f1fe1233-17fd-41b5-b93f-b4d88f37263a"
        },
        "item": {
          "id": "a98841de-8412-4368-a021-b5c2d1209800",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8b6a1a0b-f6e9-4163-94f8-960340ba665e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae471d1e-4a38-49cc-b616-27eb48fa08e4",
        "cursor": {
          "ref": "076ecdf2-2b1e-4161-af44-3e5c479a6b83",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d1a840cd-367c-47ec-97be-9a323c49ea1f"
        },
        "item": {
          "id": "ae471d1e-4a38-49cc-b616-27eb48fa08e4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f0677a05-561d-4ec6-8737-87943adfeb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8b98c5-fc4b-40ca-88d4-821f1cb57567",
        "cursor": {
          "ref": "3b98e15f-db67-4556-ade2-aa8ef00b3a71",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ee8c9f52-c432-494f-b0ba-3318d114bcc6"
        },
        "item": {
          "id": "ef8b98c5-fc4b-40ca-88d4-821f1cb57567",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6e87d05-2e8d-461b-926a-e41411393103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0baad9d5-ff04-467e-9793-96ea5889a2a4",
        "cursor": {
          "ref": "eaf0e5f6-b7fe-442c-893d-1c7afacb37e8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cdf6cac0-4b3d-49a7-bed4-8999cc6b9005"
        },
        "item": {
          "id": "0baad9d5-ff04-467e-9793-96ea5889a2a4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c115f3f-d74f-4f64-a9d0-9f8953552d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1f5362-60f0-4251-bece-8e333a21ac3f",
        "cursor": {
          "ref": "9c91c184-26b1-47bc-a2dc-f3f2c161f599",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ce93ce79-d2ce-4fd3-82a7-7c4f3297dc6e"
        },
        "item": {
          "id": "5a1f5362-60f0-4251-bece-8e333a21ac3f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d41f0eea-cdfe-4b1a-bd4b-fa35b4f0992b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89c0702-24d2-4bd7-a5fb-3e1b82697d40",
        "cursor": {
          "ref": "3ee0d04e-e91b-49a5-bb0d-e10f7c6022e4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "94e13e5f-0d3f-4a4a-905a-f9962adbab56"
        },
        "item": {
          "id": "d89c0702-24d2-4bd7-a5fb-3e1b82697d40",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5180a3c0-f7f8-41c7-9b99-fdff88f5508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656fc352-00f8-4175-a61c-b99d658aa93c",
        "cursor": {
          "ref": "5a6eb25e-40f6-4d45-8844-098339922147",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4b4a0ab1-0719-4729-88a2-fe5e2b91ea24"
        },
        "item": {
          "id": "656fc352-00f8-4175-a61c-b99d658aa93c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3784e58c-3a2f-4e35-be12-a474b5c79b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e92dd7a-e7c4-4635-96b6-5bb5ecc2a9fc",
        "cursor": {
          "ref": "12eac8db-8ac3-4691-82a0-2580ff7f880a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "87fc1e09-738e-4df6-be59-9bfc127d0ff0"
        },
        "item": {
          "id": "4e92dd7a-e7c4-4635-96b6-5bb5ecc2a9fc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "edc3e211-dcd4-4841-9551-2a5d47961e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a6c3ad-561c-41bc-a84f-a738271acb99",
        "cursor": {
          "ref": "ba625204-7ec0-44fb-98c8-8ed80c41262f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f5ba0f24-943e-491c-977b-a9851f91132e"
        },
        "item": {
          "id": "f0a6c3ad-561c-41bc-a84f-a738271acb99",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f43cc837-253e-4a5d-b682-75b1e68baaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15f1169-7fac-40b6-9d6c-473ac1170076",
        "cursor": {
          "ref": "c26c9436-b1e3-4b0a-a51d-5d346a9dc5dc",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3843dbd5-ecec-485d-8822-82773e42c576"
        },
        "item": {
          "id": "d15f1169-7fac-40b6-9d6c-473ac1170076",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e56e02c2-6696-433a-b4e6-3bcf64af60ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612e0545-9a98-4ef8-bec8-e26d770d1357",
        "cursor": {
          "ref": "7c093a96-affe-4336-809c-b6369bb43238",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "339bb345-1dde-4b5c-9e05-0bc2cfa2e489"
        },
        "item": {
          "id": "612e0545-9a98-4ef8-bec8-e26d770d1357",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2c9580be-baf5-4ed6-8ae7-5c3340445be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dff6e8-1530-4f19-9a32-781f4de2aa03",
        "cursor": {
          "ref": "91cc6581-a13d-49e3-80ad-bdd549a7ee9b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bafa1a20-0ad9-4117-a2dd-e064adb0d06a"
        },
        "item": {
          "id": "79dff6e8-1530-4f19-9a32-781f4de2aa03",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e4ec1169-0730-418c-b73b-896374dd41d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43f1a67-8906-4123-8b8f-9ec53b877324",
        "cursor": {
          "ref": "1a116438-00c2-4d13-9532-d55fabc7f4cd",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "53137f9a-9824-43cf-8d02-8d23f211dd83"
        },
        "item": {
          "id": "e43f1a67-8906-4123-8b8f-9ec53b877324",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ad523f23-0be7-49e3-87ce-27d29823ecba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cd555e-651f-4e64-a282-5165ecbc8264",
        "cursor": {
          "ref": "3325d804-b9b6-4f07-8a67-79afe3c69de7",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3d571a31-6ad5-4067-8de1-2a162b34c56d"
        },
        "item": {
          "id": "03cd555e-651f-4e64-a282-5165ecbc8264",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8afae014-140e-426e-925e-96c35057ca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6405ab04-8082-40cb-bf4f-5e42e3c18943",
        "cursor": {
          "ref": "e1177d2c-2a59-4b2a-afa0-371da483ccae",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3a47d86d-e29f-47a0-8776-22af70c506de"
        },
        "item": {
          "id": "6405ab04-8082-40cb-bf4f-5e42e3c18943",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e889ebbf-8950-4b25-9c3f-01edee441890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308e34d-ebc0-49a7-9fa4-84a5c8e37438",
        "cursor": {
          "ref": "7d10e242-9a7c-409f-9c4d-b3a58f470d9d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e546852c-8459-42d7-89d8-ef08dfb81ba2"
        },
        "item": {
          "id": "a308e34d-ebc0-49a7-9fa4-84a5c8e37438",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d58cb4af-126c-40f1-83ac-e76b6813c6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bd6fb5-95f3-43f3-9031-ae57af519ff6",
        "cursor": {
          "ref": "0263c8d1-cbb5-49fe-ba0b-7b7ab19aed1b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "86393326-86e8-496b-9207-27dba4980a1d"
        },
        "item": {
          "id": "10bd6fb5-95f3-43f3-9031-ae57af519ff6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e73f51da-f280-46d7-a0d5-4351d02cee3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cb4f61-3089-41ca-8266-c82489295d74",
        "cursor": {
          "ref": "09a84105-202d-438f-94f5-55454a134d5b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "54adbc6c-d054-4a04-86ea-f31366748f28"
        },
        "item": {
          "id": "09cb4f61-3089-41ca-8266-c82489295d74",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b7a52b6f-6db9-47cd-8a6b-564a36f368d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02201a4a-0176-4d01-a26d-ce36858b5600",
        "cursor": {
          "ref": "f8ca57e1-239a-4ff8-b041-7cf49f22bca5",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "67234397-9d82-4eec-a296-f4834ed4911c"
        },
        "item": {
          "id": "02201a4a-0176-4d01-a26d-ce36858b5600",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "623d26cf-e12e-428a-a84e-424502330e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c86305-04fa-48ff-be1d-7cd57ca2b203",
        "cursor": {
          "ref": "e080adb4-764e-49e9-9a38-66df280c14c6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0581a339-9a80-476d-b997-d041453894cb"
        },
        "item": {
          "id": "59c86305-04fa-48ff-be1d-7cd57ca2b203",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fc34a88a-725f-47ef-88c6-9f11dfb66d12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a03d5f2-aa74-47e8-bd12-cdf7ff868fd9",
        "cursor": {
          "ref": "c73de3b0-a5eb-425c-887f-3613fafa95dc",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cf7d1236-86e3-4f71-b4a5-70b79c0c91c0"
        },
        "item": {
          "id": "7a03d5f2-aa74-47e8-bd12-cdf7ff868fd9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6122873c-7100-4db7-85ec-8bd01843a60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0277e8-880e-4f63-8574-b2471673ac18",
        "cursor": {
          "ref": "74e17027-735d-43b7-a8aa-4fdfb589f176",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "11fbb557-0cb4-4564-86d9-205380630af3"
        },
        "item": {
          "id": "0c0277e8-880e-4f63-8574-b2471673ac18",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cf185fd1-6693-4f02-9f59-58b8f1535e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e353cb5c-f6c8-4438-b114-1ed0c1dfaf94",
        "cursor": {
          "ref": "2dae9466-8484-4538-874c-6b5144d4365b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e1383904-44f6-4773-b2b4-f3f3caa036a4"
        },
        "item": {
          "id": "e353cb5c-f6c8-4438-b114-1ed0c1dfaf94",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ce621dd9-b8e7-4e89-ba46-ed920005b24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea0b101-2895-4d61-9fa2-7f09afaabb43",
        "cursor": {
          "ref": "14bfcd43-b085-40b7-b02e-a97fd247438c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f889356b-7117-4855-af9d-440969606feb"
        },
        "item": {
          "id": "3ea0b101-2895-4d61-9fa2-7f09afaabb43",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e08ac392-5b31-403a-8154-6d92c4419d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf495c25-fb60-4503-bd5c-8fc53ae445a4",
        "cursor": {
          "ref": "26e83851-17d2-43e1-9b60-24f7410b234b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "45baadb6-b592-4162-8080-d3b4cbeeceff"
        },
        "item": {
          "id": "bf495c25-fb60-4503-bd5c-8fc53ae445a4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0a360d52-78cb-4a97-9896-971443b7992e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edaed32-cfe3-4e1a-80bc-b6724e53a5fe",
        "cursor": {
          "ref": "e5f3f5a4-573b-4423-8528-42a30bf59713",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "77e4ebab-dcfa-48f5-a368-e5d17fabbabb"
        },
        "item": {
          "id": "4edaed32-cfe3-4e1a-80bc-b6724e53a5fe",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "af572777-435f-454d-8a28-574726843f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5181162-3cce-4e1c-9d24-c3465e6a56de",
        "cursor": {
          "ref": "92a44e88-5a57-4ad4-8a6e-289998300378",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "02204af2-14c6-4eab-9cf4-93feb6b1a68d"
        },
        "item": {
          "id": "c5181162-3cce-4e1c-9d24-c3465e6a56de",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0d9b44c0-7507-435d-b5a3-d459237b232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d347abd-7adf-4ea5-b674-f27f5a6a367b",
        "cursor": {
          "ref": "b46c34af-afa8-4784-ad28-54968d3edb9e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f2a71a30-88ba-4469-ac41-1198761e2922"
        },
        "item": {
          "id": "0d347abd-7adf-4ea5-b674-f27f5a6a367b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "52f312c9-dce6-4ad4-b160-69461856a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b141e42-0ea5-4314-8b4f-af39a30b627a",
        "cursor": {
          "ref": "e73899e1-2c4a-49f5-be06-0b2f869dd810",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5d9bacc4-5b46-41ac-9c94-73f82d6f757f"
        },
        "item": {
          "id": "8b141e42-0ea5-4314-8b4f-af39a30b627a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c5668e79-b472-41a5-8942-a430d53281f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6a51e0-c472-44be-b935-47cc2b50f8d5",
        "cursor": {
          "ref": "9973b824-784d-480a-a496-14b6168a6ae5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c5f4cc3a-d5af-49f6-b15d-bd13a2004410"
        },
        "item": {
          "id": "5d6a51e0-c472-44be-b935-47cc2b50f8d5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e50ddc5b-ed72-44c2-a268-237d960e51b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296d0cad-9dbe-400f-8143-b3778907feb8",
        "cursor": {
          "ref": "e16611a3-b308-439b-8dea-b6271e3ef5e6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9f110a48-63e0-4e28-8600-538f109de980"
        },
        "item": {
          "id": "296d0cad-9dbe-400f-8143-b3778907feb8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b2eae1bd-2613-4f87-a315-e8fac65599be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1135dba7-0952-41ac-b714-71cc987c9714",
        "cursor": {
          "ref": "1bd671d1-ae09-46dc-bea5-0009e9e58317",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cb789d57-b619-4596-ae64-2b5279fc80cd"
        },
        "item": {
          "id": "1135dba7-0952-41ac-b714-71cc987c9714",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "36ba7fcd-0893-4aee-8e46-baf929f50fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26cd096-b7e8-4a40-b3e2-ca9ea708f6a6",
        "cursor": {
          "ref": "fc23e370-a96a-4faa-9d8e-da4f2ad8767a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7f10d080-b12e-4e15-8602-553c99d27144"
        },
        "item": {
          "id": "b26cd096-b7e8-4a40-b3e2-ca9ea708f6a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b43b3f20-aeef-489e-9703-47ea8085ba89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea66be1-e61a-417b-962a-bdfa7e8795f3",
        "cursor": {
          "ref": "1974ffd2-9f24-4357-b167-38e5732e5e46",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b36426c7-e091-4d0c-92bd-541df2397a2e"
        },
        "item": {
          "id": "0ea66be1-e61a-417b-962a-bdfa7e8795f3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c43cbac4-222a-473b-8a3e-cdef7284c275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0833aad-9e4c-44f2-8821-0aba6f62b8d7",
        "cursor": {
          "ref": "441e8a55-52c6-4ab0-965b-a72488e0e9e7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dc98115c-bbf8-40d4-b5c0-cb199d15f850"
        },
        "item": {
          "id": "c0833aad-9e4c-44f2-8821-0aba6f62b8d7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d27f8616-735d-408f-822b-a9bd040e2377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a784b7-444a-42b8-bbb7-5b189a2ce7a2",
        "cursor": {
          "ref": "6793927c-b82a-4a07-8b69-a82dd6135074",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "47b1159b-fd57-43a7-91e1-7592ae07246c"
        },
        "item": {
          "id": "b7a784b7-444a-42b8-bbb7-5b189a2ce7a2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e12588c9-1b27-4642-b800-f22430f7c476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e472c6f5-1360-4645-aa3d-580f3654ea9a",
        "cursor": {
          "ref": "c7aa963c-f94f-4c4c-9006-e3c708d102bb",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0b931828-4529-42f9-925e-ba97b30143e7"
        },
        "item": {
          "id": "e472c6f5-1360-4645-aa3d-580f3654ea9a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d268c8a2-4a62-4e36-a54d-3b2c18112c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cc33f2-7042-4cfc-8169-b9d3ebee6824",
        "cursor": {
          "ref": "41d98e90-5e3f-4f36-b1bd-e6812b098be9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a59fae08-db5b-4d4c-9081-90e8f05de194"
        },
        "item": {
          "id": "34cc33f2-7042-4cfc-8169-b9d3ebee6824",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "50c80c88-e8c9-415f-8161-c440eb8ff44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed82f59-d516-4df0-b6c5-9a97e3772979",
        "cursor": {
          "ref": "fd35e244-a2df-4142-9ac4-c9c6213a5768",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7db1550f-6b51-43b7-a88f-4865c3af9957"
        },
        "item": {
          "id": "2ed82f59-d516-4df0-b6c5-9a97e3772979",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3c4715f8-abe2-44b3-a51a-d9d81914fdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90a8023-53e8-4daa-9593-e9575c16938e",
        "cursor": {
          "ref": "9257459e-13aa-40ae-b551-dba5d675e261",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1803dd88-6b87-46cc-99c6-2f0d44adc111"
        },
        "item": {
          "id": "b90a8023-53e8-4daa-9593-e9575c16938e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "517e555e-5121-4149-9d56-1f3387ecadaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b730822-26f2-4cb1-8c13-598017e8d9be",
        "cursor": {
          "ref": "032f7308-64aa-4223-9977-2e04f0cf8cc1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "95474a03-2ef7-472c-af9f-f1e196fa437f"
        },
        "item": {
          "id": "4b730822-26f2-4cb1-8c13-598017e8d9be",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ae008250-b14a-4efb-b9d3-20f8244f492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4102a53d-2b86-4812-8432-2d30b83c8844",
        "cursor": {
          "ref": "a988af03-b5a5-4abf-8ed2-d32a4ecbfd67",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "91376d38-8314-4c41-9518-da2e2cecffcb"
        },
        "item": {
          "id": "4102a53d-2b86-4812-8432-2d30b83c8844",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "41069612-a03e-497f-a454-60ac21c1ef4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713f988f-5652-4c10-b656-c9bdb8243551",
        "cursor": {
          "ref": "171db57e-628a-4ac9-a4ce-000f0a75a920",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b71ee37f-37d1-46a6-8cec-c70d726ade14"
        },
        "item": {
          "id": "713f988f-5652-4c10-b656-c9bdb8243551",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a696717-3121-48e5-9b65-ef8ad30f5e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5660335f-c6cc-44f6-b5ce-6cb0fbcb0118",
        "cursor": {
          "ref": "364fafcd-dac3-4e9e-a311-19feae4240e4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "110b30e7-ba42-41d2-9355-a0af64a71f4e"
        },
        "item": {
          "id": "5660335f-c6cc-44f6-b5ce-6cb0fbcb0118",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e0433107-1182-424b-8956-47901a636432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bab841-66b1-48d0-ad0f-c8c4cf3710de",
        "cursor": {
          "ref": "cd3aa9ef-578f-4229-9bd8-42a561fa7528",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "46143e18-a0f2-4469-a3a9-322b8e11398c"
        },
        "item": {
          "id": "e5bab841-66b1-48d0-ad0f-c8c4cf3710de",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd85ef9b-bdd2-44b7-bf91-8f5e4c7d41b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3519ac8-2652-483b-8499-e62aed8ea001",
        "cursor": {
          "ref": "7e5b23d1-1e39-4f5a-9c7c-faf55c9646bf",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "edab35d3-ead6-4f0d-af04-8b7c5f50a041"
        },
        "item": {
          "id": "b3519ac8-2652-483b-8499-e62aed8ea001",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "78f5e2e2-47f1-40d3-93b6-254a581aee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e76990d-c4e6-466f-9c4b-713bb53d4c50",
        "cursor": {
          "ref": "ad61af9c-3427-4dba-adab-ad6119e8cf72",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ca930787-48d7-4ad1-be14-caf6ebd1879b"
        },
        "item": {
          "id": "7e76990d-c4e6-466f-9c4b-713bb53d4c50",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4434b374-6411-4299-b43d-c2b1ee20e1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db64ae-65c2-474b-a5c0-5ce2c23fa620",
        "cursor": {
          "ref": "a6d53b3a-d9a0-41d0-88ed-19411d5897b7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "11e40a79-1393-430b-a64b-d0dda4e28042"
        },
        "item": {
          "id": "c1db64ae-65c2-474b-a5c0-5ce2c23fa620",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "af525b4e-1c06-4a24-b5e8-afbef8d8acfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac9b00-cc26-4011-8902-2cfd9bbccb51",
        "cursor": {
          "ref": "b942fc2d-605a-4379-a70c-b9925aebc6ea",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "59cc03f1-0a8e-43a1-9b87-2b1676af3913"
        },
        "item": {
          "id": "cbac9b00-cc26-4011-8902-2cfd9bbccb51",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4e016acd-66ab-4c96-be37-51008c490c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8763b2-e0d9-41f1-bd02-e08f67e6183d",
        "cursor": {
          "ref": "7138e54b-2ecd-478b-9f80-0c348d692e0a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "87bf31fb-0214-4786-8fbb-2c4ca807ac67"
        },
        "item": {
          "id": "0a8763b2-e0d9-41f1-bd02-e08f67e6183d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2bed9b42-ecdb-47cc-82d7-d427bbcc0363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9047e2a2-5911-4706-b79a-39b59074d841",
        "cursor": {
          "ref": "39d1ccfe-73c6-4cb4-bf0e-7a070bde916c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b620c258-7587-4eb9-9457-4410b6817282"
        },
        "item": {
          "id": "9047e2a2-5911-4706-b79a-39b59074d841",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8a6bd1fc-97ae-4a53-add7-aa3f2d58f2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aecbef5-0ce7-46a8-92e7-1dcf26c61ded",
        "cursor": {
          "ref": "96f54df0-fc91-4a8d-8e39-008cd26419e9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "09e36694-fce5-4d1a-b8e8-92f81a302637"
        },
        "item": {
          "id": "0aecbef5-0ce7-46a8-92e7-1dcf26c61ded",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0ba350d3-18b3-4889-b056-13fe555d3a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec6f8e1-b05a-46f1-a1d4-024bf7cb6ae8",
        "cursor": {
          "ref": "7ee70160-0095-47b5-a673-cfc16b802556",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ec1f6a3a-c578-4b42-9c90-efe21bd14e47"
        },
        "item": {
          "id": "3ec6f8e1-b05a-46f1-a1d4-024bf7cb6ae8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "12876102-c4e0-4edf-b1b7-6a1a3f8c886f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d3de39-676a-4f99-9e8f-385a67edefba",
        "cursor": {
          "ref": "aee38d55-3ffd-4264-b747-6b3f29ee2e33",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1944e3c9-2a42-43ad-993a-826026cf8a7e"
        },
        "item": {
          "id": "60d3de39-676a-4f99-9e8f-385a67edefba",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "34acf64d-8c53-4888-aaab-eed6eb0962f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06560cad-9d75-4947-ab39-ca9dea4f74cf",
        "cursor": {
          "ref": "cb98bc94-0b46-4842-b1f8-79b7aeeacc23",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fd02f9ed-afd5-4f55-a989-6b2415d2ad24"
        },
        "item": {
          "id": "06560cad-9d75-4947-ab39-ca9dea4f74cf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a878dae3-52d4-412e-b80e-27bc8d7e4b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60137775-4af4-451a-9e6f-4ffa96436b12",
        "cursor": {
          "ref": "70c0503a-985d-4478-9ac0-ee10fe04ccec",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "31e3c273-3814-4830-be7f-36f832863604"
        },
        "item": {
          "id": "60137775-4af4-451a-9e6f-4ffa96436b12",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4faa2274-99fc-4399-b3ad-2a4b8f0abfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079b63f-4694-48fd-aeab-7935409968ec",
        "cursor": {
          "ref": "00cfc44b-c1dd-446f-941b-f52b8d2bcf0f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f23ee191-c527-4d50-9ebc-4d33cd257cc9"
        },
        "item": {
          "id": "b079b63f-4694-48fd-aeab-7935409968ec",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "76f7bc15-1791-4d5f-ad41-e754b9e17018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77778f6a-db79-415c-ba61-37b25291be50",
        "cursor": {
          "ref": "3be4ba65-8f37-4bb1-9cf8-1533cf32af57",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2f08ca5f-40f2-4ac6-947f-f52cc1243ec7"
        },
        "item": {
          "id": "77778f6a-db79-415c-ba61-37b25291be50",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2accd8e2-75a4-417f-9adb-c81531d4391b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1da18f6-b692-48cd-9f09-8a44d618553d",
        "cursor": {
          "ref": "99c1f685-c7f2-45c5-bd05-700459cf5095",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "722913d6-47fc-4094-b4ad-8911360142db"
        },
        "item": {
          "id": "a1da18f6-b692-48cd-9f09-8a44d618553d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d1713349-b9fa-49ac-9dcb-f20d248f77f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83c4c33-470f-45c1-8eef-5f61f2836e33",
        "cursor": {
          "ref": "4fa74f08-7373-46b3-b0c5-354f8a76f4eb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "364e1810-36aa-40a7-b487-51fba44d2c7f"
        },
        "item": {
          "id": "f83c4c33-470f-45c1-8eef-5f61f2836e33",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ee073df7-da12-4d2d-ba6e-4cbd8c76d55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dd3400-122b-4015-8dc0-f6032a28ef78",
        "cursor": {
          "ref": "30ab34e0-2e3e-43cf-a789-a2943c18abf3",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f4223382-2653-4626-bd89-3e0c4c5465e5"
        },
        "item": {
          "id": "75dd3400-122b-4015-8dc0-f6032a28ef78",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1ebafdc9-9caa-4aa1-89f2-9c634483853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97ed434-6cbf-435e-9398-dd26122d84d9",
        "cursor": {
          "ref": "9ac953d6-e954-4272-9519-2c8bd2157ca1",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "745af460-8141-49aa-890a-c1f5cad2fe8b"
        },
        "item": {
          "id": "a97ed434-6cbf-435e-9398-dd26122d84d9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c63039ea-3691-4cff-bfec-b26917e9dece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f7ba21-c385-4919-ac37-855d9e349a4f",
        "cursor": {
          "ref": "5b463896-602b-42f2-8f2b-224798e3df56",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cc77adbf-db79-4b7a-87b4-2c5348eedd15"
        },
        "item": {
          "id": "47f7ba21-c385-4919-ac37-855d9e349a4f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "95908f8a-e8ee-414b-b056-59a0b86d5137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bfad52-b503-4767-a509-a4777b8ca144",
        "cursor": {
          "ref": "929c8c37-3ee7-43d1-86d5-540dbc3c1efc",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d9001dad-244c-42c7-a6d5-fe55055033b3"
        },
        "item": {
          "id": "40bfad52-b503-4767-a509-a4777b8ca144",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0b224a67-5a4a-4be3-b465-5aca74377626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abbc519-1944-49a2-94c0-1ece35710657",
        "cursor": {
          "ref": "9d75411a-f37f-44aa-afe0-73bb5db5fdcc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e1fadcc3-9db3-4d95-9581-bcc1b9fa16c8"
        },
        "item": {
          "id": "3abbc519-1944-49a2-94c0-1ece35710657",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a0ade864-1016-4026-8b84-13e889ef934b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169d1b28-9271-4649-8737-7a49216b20f4",
        "cursor": {
          "ref": "81c42725-ad14-4e93-9f95-f223efe1023a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cdc4eeff-9c9e-40b3-964d-0eb37246410b"
        },
        "item": {
          "id": "169d1b28-9271-4649-8737-7a49216b20f4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5aa49e03-46cd-412e-8bdf-68e9eea4e268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f6cb57-fa95-4a62-b083-fc29084d7075",
        "cursor": {
          "ref": "1dc9de3d-2ce6-424f-ac2c-ee1deadafa15",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "66893329-aa00-4960-bfec-0f643b88d324"
        },
        "item": {
          "id": "67f6cb57-fa95-4a62-b083-fc29084d7075",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c4a7830b-6072-4bb6-9b25-dfd38c652e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c7781f-5e90-4517-aa72-973bc485dbcd",
        "cursor": {
          "ref": "b32fb0be-c574-4ca0-96a0-554a05001cc0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3199e731-7a9e-437e-a604-5602d24d0078"
        },
        "item": {
          "id": "40c7781f-5e90-4517-aa72-973bc485dbcd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b1fc2831-ed9c-431e-91d5-5982e649abe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83d4c1f-3fa0-4c72-8786-6177e97fed9b",
        "cursor": {
          "ref": "61f4a8ed-01cc-418f-8a74-d9411a9a4a0e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4b8d3aeb-cce3-4331-aea8-e55d390443dd"
        },
        "item": {
          "id": "d83d4c1f-3fa0-4c72-8786-6177e97fed9b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "21f6da2c-6889-4f82-8096-a1d1923039b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa3f3da-08b9-4642-bf75-ac4c3aa19027",
        "cursor": {
          "ref": "9c27006b-658d-4154-841d-10b647778a31",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7a572ab6-cf70-4dbb-903f-72c67df85a05"
        },
        "item": {
          "id": "cfa3f3da-08b9-4642-bf75-ac4c3aa19027",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "75ca7738-8dac-42b3-a2bc-7be3407e0fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469904ed-2545-456f-8c20-665c9e16fd1b",
        "cursor": {
          "ref": "17221970-174e-47cf-88c9-b581274eae29",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5a5b856b-9f85-4a73-9daf-552bb338eaca"
        },
        "item": {
          "id": "469904ed-2545-456f-8c20-665c9e16fd1b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c64516fd-a0df-4e69-90cc-1c0b099b28a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79d1d20-eec5-4b4c-bff2-fdd1d1e5e462",
        "cursor": {
          "ref": "28d812d9-1249-42bc-8785-52efbb4cb30f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fa85d28d-1215-4fcb-b342-8d79b2da0671"
        },
        "item": {
          "id": "c79d1d20-eec5-4b4c-bff2-fdd1d1e5e462",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "80292ddb-0941-4f45-9796-a25a1677cf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea9bb79-8ee1-4188-8342-f3db0c15b0fa",
        "cursor": {
          "ref": "6c7cdeec-ab15-42e8-bcb8-db113cabd0e4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a1c9189a-3a08-44c0-a947-86d54c094612"
        },
        "item": {
          "id": "4ea9bb79-8ee1-4188-8342-f3db0c15b0fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d4af9de0-9b2c-4f63-b601-c4607e246f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfec210-d901-4793-ad4a-f0a14bf6c83d",
        "cursor": {
          "ref": "76c0729e-5239-4d78-acfc-1166d17d8266",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2c528733-d49a-4c14-8ebc-b1bfb58c8d8b"
        },
        "item": {
          "id": "dbfec210-d901-4793-ad4a-f0a14bf6c83d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5811f5c4-2243-4c50-8087-42c983418e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3a4520-b7ba-4889-bc6d-b24b6feea662",
        "cursor": {
          "ref": "f68c5ef2-5f67-4de8-9c30-37c86ddc176b",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a971260c-82b1-4ac3-8c11-5554b4a54ac1"
        },
        "item": {
          "id": "2a3a4520-b7ba-4889-bc6d-b24b6feea662",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8c75ba69-fd27-4708-a3a3-8631b07adb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b28bbe-a048-48d0-8980-04f05c7a9486",
        "cursor": {
          "ref": "596157b6-e01f-4904-932b-61ace9fb726e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "01091386-4293-47c0-987b-9e06c4d2458b"
        },
        "item": {
          "id": "a1b28bbe-a048-48d0-8980-04f05c7a9486",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "61460d12-ddde-4824-8864-97234ef32b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8f61e9-68df-4ae4-aeba-6d693c5430a2",
        "cursor": {
          "ref": "e2302235-7507-4e28-9964-15c8394331aa",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4fb35a81-5b19-475f-9637-908d6fcab780"
        },
        "item": {
          "id": "6b8f61e9-68df-4ae4-aeba-6d693c5430a2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d5b7c529-6aae-43e1-96dd-f8a9434ea9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c212c7-2c50-437f-ba78-4e5972d2a652",
        "cursor": {
          "ref": "dea1ee23-659b-4879-8c23-9960bceb61f3",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "abcdbf7a-e409-4d25-8d6a-06261936d847"
        },
        "item": {
          "id": "b9c212c7-2c50-437f-ba78-4e5972d2a652",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b270e430-50f4-4b1f-af6e-ae70544c5110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b23e70-def1-4216-b440-ea6c3f14f378",
        "cursor": {
          "ref": "13cf4fcb-ae42-47d0-a5e8-f15e4ace92ee",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fd203c02-44a9-496b-bb81-e60561f66edc"
        },
        "item": {
          "id": "a8b23e70-def1-4216-b440-ea6c3f14f378",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7f1d0950-82cb-4958-92a5-79656dea1f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ecf01d-9901-4283-ae58-768457291917",
        "cursor": {
          "ref": "16ecab0d-66be-4ea2-90d1-0d9246ba709f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f89a5ade-3432-4228-88e2-3557e092a989"
        },
        "item": {
          "id": "a7ecf01d-9901-4283-ae58-768457291917",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "24ea9e81-7205-429b-94f1-c844cdf5540e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79a8616-5c6b-4ac4-8d49-b4550ddaa228",
        "cursor": {
          "ref": "6a80f239-646f-4847-a6fc-98e7b1a8649c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bb9b71d6-3e98-464c-813f-0e3b81ecd7fc"
        },
        "item": {
          "id": "e79a8616-5c6b-4ac4-8d49-b4550ddaa228",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "452b5dfb-6cbb-4022-b142-9d9681db2227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc82d66c-ecc2-4b42-9780-202c981894e6",
        "cursor": {
          "ref": "6be82c06-25cb-4f09-930f-ddbd05d8b2c0",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0d62a8c8-a780-470c-ac7f-315a0d1e586b"
        },
        "item": {
          "id": "bc82d66c-ecc2-4b42-9780-202c981894e6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b52c2de3-3908-4737-b7ad-8380e9daa0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2ee74b-afce-4454-8596-c28741dbd5cd",
        "cursor": {
          "ref": "d9bcdde9-502e-4a8c-935f-275bf207c453",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "33c5ca31-13f5-47d4-825d-b6480d5e2a70"
        },
        "item": {
          "id": "3e2ee74b-afce-4454-8596-c28741dbd5cd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cbf51f3d-653d-4a91-aa54-4c5fece3c857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afeed96-be54-40ec-a716-6907c6cae001",
        "cursor": {
          "ref": "10f3eca5-35d6-4667-9942-4c5968569340",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e022aa0e-eae0-4d57-b7ec-a3ac9ca59a36"
        },
        "item": {
          "id": "5afeed96-be54-40ec-a716-6907c6cae001",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "230c8674-8445-465f-b1b4-0b5ec5fd143c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c5830e-5e7f-48be-b69b-3436882eaf3b",
        "cursor": {
          "ref": "27ad7030-5589-4fc2-8e2c-b4c9b71e7ca7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c8d330e1-8f30-4309-8c6d-e569ecb5fa29"
        },
        "item": {
          "id": "02c5830e-5e7f-48be-b69b-3436882eaf3b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b9d25bea-34aa-4b69-a2e2-21e8cb6e95ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d9d5a5-1a0f-4a13-97dc-3505a40afe4d",
        "cursor": {
          "ref": "e22ab6fd-04a9-41ad-9bba-e253d9462ba5",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3157ed01-83f9-43a0-991f-286ee5cf1eac"
        },
        "item": {
          "id": "75d9d5a5-1a0f-4a13-97dc-3505a40afe4d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "16278350-0e77-4c02-a01d-53d90ab0177d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f16861c-1480-48b5-aee9-deb3460e76fc",
        "cursor": {
          "ref": "fbad8e70-292a-44ed-9715-b7687f85eaf3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "75ab87c9-5b84-4e52-b6b6-7ac07be9a48b"
        },
        "item": {
          "id": "6f16861c-1480-48b5-aee9-deb3460e76fc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7c535ec0-85b6-437f-9518-7f3be08f492b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230f904c-283c-4047-a66c-b5c0ae82ab2d",
        "cursor": {
          "ref": "f90486d7-3651-4812-9575-87a6ab17da65",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "44a2f002-c491-4610-8667-b554f84d1f3e"
        },
        "item": {
          "id": "230f904c-283c-4047-a66c-b5c0ae82ab2d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "51d2a48e-6a65-452d-8d25-8559eaff2da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4c2b9a-e5b3-46e8-a096-e2ae065e76eb",
        "cursor": {
          "ref": "eb28899c-0d6b-4e50-82c5-b2eabbed7eac",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c6d47951-6167-49d7-ba35-3bf2a0e16845"
        },
        "item": {
          "id": "cf4c2b9a-e5b3-46e8-a096-e2ae065e76eb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0b4909eb-dbfd-4eb5-b2de-97b649d8a9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ae3633-e70b-454d-b066-9d825c3e2a82",
        "cursor": {
          "ref": "fc90e492-bb73-4c32-8a0e-64ad9516995f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d6ff47be-6cb3-489c-9bb8-0265321c89a5"
        },
        "item": {
          "id": "a8ae3633-e70b-454d-b066-9d825c3e2a82",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "da872c80-3e98-481a-84db-5b2706cdb4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc57aa19-9f6a-4868-b6fd-299675fb6843",
        "cursor": {
          "ref": "42f6c967-b4a6-466b-9923-3087ff2539c4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "39544aae-1810-489b-9eb6-abe4b0083a01"
        },
        "item": {
          "id": "bc57aa19-9f6a-4868-b6fd-299675fb6843",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "22c0a705-b7be-46e5-8b4d-2235b23eda28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b1aee8-e613-41e7-b711-4915a0b35eca",
        "cursor": {
          "ref": "96849da8-3f8d-4ffa-ad14-453600ef04e9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "25b02a79-11d6-489c-b52f-845bbd5dfdbd"
        },
        "item": {
          "id": "40b1aee8-e613-41e7-b711-4915a0b35eca",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7a488201-3ef0-4d08-bcb5-253b5cd0ba60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b101bbfe-1b81-4507-ab70-fab0e474023e",
        "cursor": {
          "ref": "53eef66d-8a16-487a-80c0-06ac91d256bc",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fddf8114-9b75-4e0c-9c56-eed4d5f5c299"
        },
        "item": {
          "id": "b101bbfe-1b81-4507-ab70-fab0e474023e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eeb85662-e97e-4978-8ec1-361754d80641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240ee249-5fba-4609-b2f9-eb3ecb261825",
        "cursor": {
          "ref": "fa3c9377-2548-44c0-8fdc-20b5c76f1361",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "475327b3-dee7-46f7-8b15-8613ebf0e1ad"
        },
        "item": {
          "id": "240ee249-5fba-4609-b2f9-eb3ecb261825",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "88846828-ea85-4001-981e-da217407365e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9a4a92-71d4-4374-9bd1-c5dabf0ab381",
        "cursor": {
          "ref": "e0f24930-24b7-4248-86cc-0c2447efa7ce",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b44f8ec4-732f-4091-9f3b-eb2c56951373"
        },
        "item": {
          "id": "da9a4a92-71d4-4374-9bd1-c5dabf0ab381",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "167d4840-ce68-496f-8b60-32538112aeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea3ec3f-d841-4f61-8318-6e08d6610eaf",
        "cursor": {
          "ref": "8e88a1d5-976c-4a8d-998d-514f5359936b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bcb26c00-b54e-40d4-82ba-f431a5553db3"
        },
        "item": {
          "id": "aea3ec3f-d841-4f61-8318-6e08d6610eaf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f0dead8d-5ea8-40a1-a9d9-9b7579d60043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b9e8a3-5a32-45ab-9ec4-000b1ea0e185",
        "cursor": {
          "ref": "310696ac-2e11-4b40-b0cc-925774fc2be6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e914e334-d39a-46f5-9f0d-b112a0ed3aa9"
        },
        "item": {
          "id": "c3b9e8a3-5a32-45ab-9ec4-000b1ea0e185",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "69663b5a-0433-47e1-bd53-cb519766c9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aea2997-cd36-49c6-8737-13051e06e45c",
        "cursor": {
          "ref": "b778edff-4728-4e58-b687-f586f1bc77a1",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5834afc6-6bc7-4030-97f5-4b4dce2acd8e"
        },
        "item": {
          "id": "2aea2997-cd36-49c6-8737-13051e06e45c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "25fcb113-7f78-4d22-82b7-faad08aa7f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9bfe52-834a-49aa-b198-a71c894f82e6",
        "cursor": {
          "ref": "5484c377-8fdf-4fff-a17a-e62f644ab12f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "94dfd559-91a5-47e5-a007-51e52997cb51"
        },
        "item": {
          "id": "9d9bfe52-834a-49aa-b198-a71c894f82e6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7e93eb0e-ce3f-4f50-ad8e-6c2937f29cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafa884a-6a00-4ee6-a15e-6d4eaa802e93",
        "cursor": {
          "ref": "60fb63b0-1253-4873-b9c2-18d2aa68b241",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b269aec6-56c6-45de-ba2c-d6e37d78c3cd"
        },
        "item": {
          "id": "bafa884a-6a00-4ee6-a15e-6d4eaa802e93",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "97462dde-b818-4d24-a2b1-9a5cb3118438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5893631-6343-4dc8-bd4f-692af229459a",
        "cursor": {
          "ref": "146e77c9-d8b9-45cf-be63-c833e4ea377c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "94574841-3353-4f66-96ec-819b6af1ded3"
        },
        "item": {
          "id": "c5893631-6343-4dc8-bd4f-692af229459a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "43d08fe1-a3c0-445d-bf0d-8b9b422cc6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673cc110-f50b-410e-b276-bfaef778b600",
        "cursor": {
          "ref": "9a761fb3-22d6-460a-a2b9-fd372b6372e1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d87fa8f9-3be7-4bed-9550-529b2c70217f"
        },
        "item": {
          "id": "673cc110-f50b-410e-b276-bfaef778b600",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "afbda8a4-f137-4d41-b1c9-46f5a63f4d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49862a4a-f1d3-4ac5-a94f-7afd741201b2",
        "cursor": {
          "ref": "2b25ed6b-a570-421e-9b48-7cec441e7e57",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c7f36fc4-5076-458c-b293-b4421afe6c43"
        },
        "item": {
          "id": "49862a4a-f1d3-4ac5-a94f-7afd741201b2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1b254752-68c5-4a2c-9003-f4077c328fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f01d78-43ed-4a50-b89a-9d73035bf747",
        "cursor": {
          "ref": "d41c0931-195e-4ee6-98f5-4205da0e6805",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7f5e9bc5-9f70-4f08-be42-5342e96c14db"
        },
        "item": {
          "id": "66f01d78-43ed-4a50-b89a-9d73035bf747",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "50ad35e4-05bf-485b-a928-ba9b02c29131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77530f0-8d04-4a72-ac12-c58db5e155e4",
        "cursor": {
          "ref": "e5c38906-7da9-4f39-a30b-4600f34c643f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "29fdba6c-3472-452f-b6fc-367fc4bcf413"
        },
        "item": {
          "id": "d77530f0-8d04-4a72-ac12-c58db5e155e4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "219e61c1-eade-4ce3-91b9-6dd9432d4ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0513778-21af-4d4b-bbd5-8e393ad63e8d",
        "cursor": {
          "ref": "d19930a8-27c7-482b-937e-04b32abf0ccc",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3aade49d-d3ec-4268-bfbb-7a9e28928a66"
        },
        "item": {
          "id": "a0513778-21af-4d4b-bbd5-8e393ad63e8d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "23f600d2-9d45-4710-82b4-4c9052cecd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ef2d92-3685-40fb-b44a-7bad207f8145",
        "cursor": {
          "ref": "05947295-f319-4e82-b510-0478c0b0797f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a1d47652-4ed3-4b55-8846-00f4a09c44e7"
        },
        "item": {
          "id": "a7ef2d92-3685-40fb-b44a-7bad207f8145",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f97d4928-eead-40e0-ae50-43abc2146694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13eb410-857e-493d-8340-1babe5626716",
        "cursor": {
          "ref": "1ed5dc7a-7aa7-4596-8b66-bf85ce60c550",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a03d34f1-3461-4eb4-9554-055983db07bd"
        },
        "item": {
          "id": "a13eb410-857e-493d-8340-1babe5626716",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "80ee1c40-745d-41c2-b30a-92e2e526a808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de90399-2277-41cd-bb3e-be0618cb5879",
        "cursor": {
          "ref": "8926a9b8-70ab-43bd-bbd8-9833838c90c5",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "da49a4d8-cd14-4ef8-9d9e-ede8532345ea"
        },
        "item": {
          "id": "8de90399-2277-41cd-bb3e-be0618cb5879",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1f06cebb-beb4-498d-a502-60e3878b98ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed221a58-c4bf-4a11-843a-a182045a46da",
        "cursor": {
          "ref": "d05ceca6-77c0-4cdd-9513-8828d1425221",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f50e8884-9948-4ae3-9b1e-fec4f19f2b08"
        },
        "item": {
          "id": "ed221a58-c4bf-4a11-843a-a182045a46da",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bba85e69-0d9e-4bb2-a490-b06d10fd119c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28870ca4-f3f4-4dbd-9a8a-52af9e5bead7",
        "cursor": {
          "ref": "afb3e0a5-af6d-44bb-81db-3b34ec64d785",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7e14b3fd-c13c-46c7-a8b0-8c42e27d69be"
        },
        "item": {
          "id": "28870ca4-f3f4-4dbd-9a8a-52af9e5bead7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e3af5ad3-72a0-41f6-bed1-3eacfc4f5ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be75afc5-90ee-44b5-87a4-ae780d0ccea6",
        "cursor": {
          "ref": "af22accc-67d5-40d2-bc71-7694e6967e7a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "554da8d5-2e17-405c-b7c1-e48fa91984c3"
        },
        "item": {
          "id": "be75afc5-90ee-44b5-87a4-ae780d0ccea6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6a624a93-4708-4340-9458-5bacdc7a6ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e571fcf5-d7f5-4bca-be37-7d15b6dfff19",
        "cursor": {
          "ref": "9410a482-4830-42da-809e-21cf907907d6",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0ada476c-1e98-4d51-a9c7-7d85ed077fb2"
        },
        "item": {
          "id": "e571fcf5-d7f5-4bca-be37-7d15b6dfff19",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "78d16c11-4d7a-4ff5-a3be-8e44de51bba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ac1a90-e3e0-413a-b612-3aa8de75977c",
        "cursor": {
          "ref": "e1d0da3a-ea12-4885-842d-202eb5d1b7cf",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a3815956-d950-4b4a-ba51-51d2c274a88d"
        },
        "item": {
          "id": "e4ac1a90-e3e0-413a-b612-3aa8de75977c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5280baa8-a232-427d-a856-bc9dd3b59f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3800a5ae-796e-4f27-b1a5-e2a6314cdb4b",
        "cursor": {
          "ref": "9a637fd5-2cd6-4a59-8383-6bc988db4962",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8d61c830-bf45-4bf3-a391-7737f6b403c8"
        },
        "item": {
          "id": "3800a5ae-796e-4f27-b1a5-e2a6314cdb4b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2e4f1fe5-3e7f-44db-8c2a-24574bc7b02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fe278c-d603-4323-9bbf-24db0140afa4",
        "cursor": {
          "ref": "4bcc5d07-1565-4c37-bf88-c818d96de875",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6344acbe-3588-4267-bbeb-46078049ba0a"
        },
        "item": {
          "id": "81fe278c-d603-4323-9bbf-24db0140afa4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b0da2597-009c-46c5-8ca8-4fc8b11f6df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57560c14-dd32-4e73-83a7-0e28d0ab77be",
        "cursor": {
          "ref": "97dbcab8-e13d-4041-8e09-8498accb73e3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b02fa683-f675-4637-9787-de5b7a03cfc5"
        },
        "item": {
          "id": "57560c14-dd32-4e73-83a7-0e28d0ab77be",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7262fb55-ca2c-41d1-b1a9-ec07cd83a8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47ac73b-dbcd-4894-8b3d-07ced40a93f8",
        "cursor": {
          "ref": "6a3c68a4-e421-471f-aaa1-1a6d46691687",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d2182ad7-d416-4ce4-9ce2-39ae83eb5bdd"
        },
        "item": {
          "id": "e47ac73b-dbcd-4894-8b3d-07ced40a93f8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "91a5c48a-f24e-4521-983a-963d27235634",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ce2fe1-ab45-4833-bb71-84f95ab4b36f",
        "cursor": {
          "ref": "6294eab9-5e07-42a7-9dbd-279783b7952f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2a6f0d3e-f6b0-4063-b025-1fe269521411"
        },
        "item": {
          "id": "a0ce2fe1-ab45-4833-bb71-84f95ab4b36f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0e60d6ee-0cc9-4eb6-bfcb-2d1e39c8ac32",
          "status": "OK",
          "code": 200,
          "responseTime": 138,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd4be5e-fded-454b-a127-f810343eba51",
        "cursor": {
          "ref": "31777950-c3b5-419f-8745-d501b8b9d4df",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "90afb0eb-98c1-498e-bc0f-7fa22ad60de4"
        },
        "item": {
          "id": "dbd4be5e-fded-454b-a127-f810343eba51",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cfd983d6-6857-443c-9c6b-4be7930d0e84",
          "status": "OK",
          "code": 200,
          "responseTime": 1400,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad730f53-cd08-43c5-ad36-5a82ed68aa4d",
        "cursor": {
          "ref": "008b5161-d01e-4538-acfa-192b00e40f22",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6fc3509c-c2ff-4349-bd28-3b62e4e833b3"
        },
        "item": {
          "id": "ad730f53-cd08-43c5-ad36-5a82ed68aa4d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b26b177d-2d82-40ce-9295-6fc2bb6d7d62",
          "status": "OK",
          "code": 200,
          "responseTime": 1566,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a056c78-6e6f-49cd-81a0-58bd861d78d5",
        "cursor": {
          "ref": "8acb63fd-39a9-49aa-9361-5743186875ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a20bcedd-5660-47d6-bfa4-13a64b57b2b8"
        },
        "item": {
          "id": "3a056c78-6e6f-49cd-81a0-58bd861d78d5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ea4f61c-0ecd-48b0-9105-e39ec4503bbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a056c78-6e6f-49cd-81a0-58bd861d78d5",
        "cursor": {
          "ref": "8acb63fd-39a9-49aa-9361-5743186875ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a20bcedd-5660-47d6-bfa4-13a64b57b2b8"
        },
        "item": {
          "id": "3a056c78-6e6f-49cd-81a0-58bd861d78d5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ea4f61c-0ecd-48b0-9105-e39ec4503bbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cce195e-88c8-42d9-ae0b-3fdb794d5a24",
        "cursor": {
          "ref": "5e81bac0-95aa-464e-a95d-4353a5d1d611",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "45ad97d1-98f9-409b-9e20-44bd929d6a70"
        },
        "item": {
          "id": "5cce195e-88c8-42d9-ae0b-3fdb794d5a24",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c45f766e-f376-4082-a69f-558b75a82ccb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 92,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fce6463-ecf1-4ad8-a5e7-cf865eaea838",
        "cursor": {
          "ref": "9d427e68-ea4f-4510-98b1-4c8f4c62bd2e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c6c179e5-abfb-4cc2-a39f-f5484faa243e"
        },
        "item": {
          "id": "2fce6463-ecf1-4ad8-a5e7-cf865eaea838",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2956f9e7-f58e-4070-89a2-01fe668851c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}