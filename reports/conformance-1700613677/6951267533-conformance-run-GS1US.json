{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f3f2bf8d-3bad-4956-893f-99fc77f435ec",
        "name": "Clear Cache",
        "item": [
          {
            "id": "60b0fa85-9964-4c2a-82fd-ad42b58595df",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d0289e5-21e0-4dca-adb4-5382d9b53827",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "30b8364c-0534-42d8-b6b7-260244e3921e"
                }
              }
            ]
          },
          {
            "id": "d414adfa-a7a4-4eb4-a27a-3e1fddb9a607",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b02ccd8-708d-4a27-971f-45b193e6dbb1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9c7e4c91-48b1-42cd-b99f-e9e5d6af763d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3a27c62f-f5a0-455c-9326-08c00ae90db9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e7a7d3bc-cd32-4e2d-b8e1-2603ea1ebe4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee3d4634-3cf6-408c-a05a-59dd01e24825",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcc7c72c-8447-41ab-ab21-daa85d35a4b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "693fb08d-5c36-4382-af5c-42474a66981e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea51d68e-f502-4e1b-9b31-ea73780a3af7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16527d3d-86a9-4d8d-937e-9c16597eb7b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "97a269a4-e66f-4945-acc6-a88e3511e311",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a950a8a3-1633-4f2e-b08e-44f58f67caa4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b6ec6e9-8c7d-49e3-9d6c-973206e97f41",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e30cfbe4-3a0a-4194-b5d8-2ec97f78626f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "241c10c8-7a56-4f26-b1cd-a4f1c08c5eef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf867802-6d17-4570-9723-19cb2f39e435"
            }
          }
        ]
      },
      {
        "id": "5267dfa1-c23e-49b2-9403-c65d9cc0d434",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "58dadf06-1abf-4fcf-a237-f136d66c2cf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "735c25c5-8e0a-4931-8133-6b7a9abbc507",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2fd4ac9d-48ec-4f29-9290-7f6645993844",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b575e197-c169-4fde-9d25-9da711c154be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7d9c8a7-d750-494e-a7e1-9bd90a19f673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb77af66-52b3-46c3-9eaf-62a678c9c516",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb25d7f-edbb-4f6f-b8d9-a74458e4b9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f840090-d8ec-42f8-bd64-755b854dfc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d76088-1552-4206-b4b0-c5a3e8dc3613",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88ac952-9032-400a-aea7-1a74046f2379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2eab931d-4650-4f18-8cd4-33ae5acf4cb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72e91036-9bc0-4bf8-b1f4-b47a221b3142",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b553c460-d344-42d3-9557-57aea84f6426",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75ece5c-af4b-4b63-8e20-133172e01242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1547eac-8f2a-46cf-8a41-91916cf29cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf91c1a-d903-4028-bff2-473abdc1a326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685c3995-68e0-49a6-a9cb-2893ebe44d76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a51d83b-b932-4f29-9955-c5dd07cbc2b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18e0ec83-3691-4fb1-97e2-d804ff17ca23",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06f83737-2a6d-4793-89d4-2b81689c4022",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bace46e6-dd42-4f52-ba97-d1c9b94bcc9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "206d049a-9a21-40c1-93bd-342b4763caad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "289eb880-6e80-45ca-b7c3-e4276c4226c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c029ad9-edcd-46f0-b8e2-64fa4506baff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ba230db-3878-49c3-a5f6-af3d382d64ac"
            }
          }
        ]
      },
      {
        "id": "b7ee6750-2f49-445e-b9c3-38b43bac9b7a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b78fabfc-7077-4d29-9585-566a26a3483b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39f0b7da-3333-461c-b023-72e6d2352b90",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6499e3c0-a5d7-456d-877d-98762e7b0b58",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352c7e0d-228c-4109-bb87-993607751ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119b94bf-c221-4b4a-ab5c-797c3a612df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283632d-cba0-43fe-b3c8-889790f5bf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeb449ac-213e-4f31-99b6-4a17fe1f6b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f3d311-f191-4abe-9d1b-ad3c83ded93e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d61fce-2515-4ca8-be99-708304787e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cca209-f033-4664-a5b2-5ac2a4af5aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d59fa3-73c3-44e5-a15d-8fe938a282c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4421aa54-770f-4051-bea9-32c7a23cf29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1770aed-1140-4aa7-aa05-dca4064b71a3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7652b6d2-b08a-4fc9-8978-56fbb277f797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fde5b2-8c7c-4877-925b-92aac17bb754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0946539a-a5df-4ec4-ae77-7392513a965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d144269f-1080-4a92-baeb-f94f3542fc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916eaaf9-06ed-42d8-a18a-e8a477e2d465",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59557e3f-b3b6-4504-a8a9-50781a82b148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adee9736-470a-4c40-b87d-f26bf3998468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744ab842-1574-4ee6-b224-d0fed19c15a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10d7442b-4828-423c-8cdf-64765b5881ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4462259b-1807-4bd7-b241-81c522f2088d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049c3c30-5b0a-4cde-a8c7-282e8f7e6eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251f0ed0-7325-4235-828b-e2125bf372a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415a4c7d-1bd0-4511-80ba-5845f3cd1c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16eae5a8-4572-429b-a9bb-1d3223cabbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7a30b4-3013-49d1-81dd-d5a4a781e40e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60de15f-99c2-4109-903b-b792b49a01d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64575e4b-950f-4df8-ae3c-0a63301b0198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d3b438-d452-4e57-80bf-80d5f7664702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e494c573-4fed-4838-b9e4-74a64fa49f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0606df04-3bb8-47ae-841e-c403c548a478",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b67d54e-a0e5-4c8b-97db-ff26b7e35acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e008d19-cbda-4537-ab7d-e40684e1446c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150bd563-997c-4efa-b9a5-e70e5a9c9aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c938705a-9375-44a5-b501-e19c7d1d2bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32752209-34d2-48e2-8a1a-b15ccbff922d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfde8f8-227e-4a56-b512-279e1b47d9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8520182-5e08-406d-90c3-73c6e18dba6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa634ca3-7816-4da4-902f-b304b43eb2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4995871-70f5-44ac-9f4d-3d9a4982b553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50246e4-a0cc-41cf-b9d0-9e786af94ffb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0201b682-90cd-4c96-9aed-d5f0c2298b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4043cb3c-c1d0-444a-917d-a01c3ff6fa37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09c013b-2d00-4c79-b525-dd031f0dd0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d50c1db5-5eb8-4bb3-aa2b-bf1e293b4c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b531cca6-5e86-4137-80fa-dbd201928581",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e5884c-4f90-43f6-907a-9e7a9845cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939e939a-5c35-4d3c-9be7-c3cf13db6e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fca08f-8849-4815-95c8-294b377a277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d12a7c53-38a8-4715-8923-2d3a400ec251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff244f0-0c84-420d-ab2a-6508efd0a090",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72fd6aa-4785-4e36-8fd5-4f703890895c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8139581-eb51-4c3d-8cd6-faac6fee0d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bd7bc4-8b31-475d-a25b-8380f7cd0eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f8227ce-3b57-4c31-8fc4-bf38b8ecf0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddb8a53-cc5a-420c-931e-16a36787bb99",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774c150f-64a0-4cd6-aba7-08530b031813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb3182b-d1eb-41ff-8a83-abf7ef8bf984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47182ad-2bac-4d5e-8140-38f868366469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c83682a-9bac-4c90-8c94-bf20421322cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ea6432-3bfb-4a6c-8162-361b9fe3bdc8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006f0b8b-c202-4d7b-bfd0-598b3036d176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0a8bcc-6502-4234-a24a-6b754b6093c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a12181-8d3d-4634-9f60-81d81eca9942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8511a38c-9bd4-4699-b377-d04aa2efda9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574d1c66-789f-408f-ad3e-7e191801aabd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac390af9-8b70-4b8e-bb6d-8880adb5bfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af9fbe5-a594-4992-9125-dcfe5e3f04df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f0012a-066f-43a6-a48e-99bd6e6d24e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a0b3a55-ff72-44fa-9aab-a49ff6b4e0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be44a013-ccca-432b-9f46-dbb38e40ee02",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce03fa5-4dde-4799-8dc7-10a8927dd61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908ff81b-58a4-4f07-b135-ac85179ba915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e24544b-dbfd-4ee1-bc6a-d6f13f4139bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eafd8bac-c1d7-463a-ac7f-8f7f545a93b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4636e9-d7f1-4fa9-add2-d1d04eb02fbc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298dee6a-7c99-4f33-b49d-19ad9a65a275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341a8bd5-ef06-412d-8a64-a03cd34786bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6ad9ba-ed7e-49db-92c9-a38770243a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b795d623-082a-4b09-94cf-ae7169a81849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa037d2-bdd6-4981-a9d4-ae2896bc5b7d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ddcf65-9bac-4b7f-8a65-8a6e5c6cd847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afef3faa-0fa7-4c15-b6df-d2f93617f021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc9069b-0ef0-4698-adea-08a72afa8f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "556d619c-c093-4990-a931-2fc4bfd812c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb94a044-a643-4d87-8e88-b12bb449a006",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb4063c-35e8-45ef-b0e1-1a9a9eb68832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83209bc7-5761-4ce4-ac42-6ed664405ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0836e043-cbec-4075-ae52-5da8c9c10351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "012d2b10-c65e-4aa7-b03c-1f0c69b6abd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2d1f4f-7ddf-48b9-8e08-ca4acd21fdb0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60092680-5af4-4982-99a7-78d69e4d16d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0b850d-5e1b-46d1-8f31-2acb94c90d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a927e51-d10c-4eb1-ad6d-c719cf0a3669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "228cbdfe-fdd5-472f-806f-a097656a6651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05fb0e1-a152-4af5-8f53-007c517cc6a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f03735-2bc1-44cb-b481-c00071095415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18251b8f-b341-4429-b4c2-c3aed3be6c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d6db8a-6c07-4998-90bd-8863da47d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94deaaaa-4d78-486e-826d-e50729a369b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a2422-ec11-45fb-9aea-aff7863fd2fa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb03f0c9-01d8-4b24-bf2a-3e6e4bd2214b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8a528d-ff0f-4a3c-856f-226d1ca7f841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891fbf57-bb29-4e46-89b0-a88b6d01d5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f67cd98-086a-4a24-a828-593e099086b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4619b99-d9fc-4747-bfb4-e57e0ea42748",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a7dd33-ac0d-47d1-ad2f-687589744fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81ce5b0-570b-4780-9f9a-dd622a10ea82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6406ed41-fe5a-4e94-b6a5-0fe173172b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78d7e827-aaa9-4de8-ae43-9abbc7d3810f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac61de48-6e99-408c-ba39-0860966a2780",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f436b872-905a-4c46-a6bf-20b408f62822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4c8ad8-1fad-4fa8-aa12-075f18a58523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fe89e9-4570-4ccf-8a2b-0fba8377e896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce737074-ecca-45e5-93e6-4fc18cbdf2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1270a8f1-f2cb-47b8-9c9a-6884811fa94e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02161b5-41d4-4bd5-936b-c9770a5a1cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c1c45b-ad6e-413e-9ffa-2573ea2199aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140c774d-a793-42ad-a0dd-72baa8fdc469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28fcf09c-403c-4942-b1a8-d244088c0c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffb939f-b333-4cd0-8d59-10582895d58d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512c1511-bc91-4b19-abe3-ae8214f675a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf520e5-711c-4ff5-8972-15f7ebc2a71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc711c8-625f-42bb-80c7-6ffd8924d47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e86b997-50a4-48e7-9332-5c9ef5cd1ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a502dac-2b2c-4754-b773-ff22bc1bd484",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3213dcf0-6129-49e5-b46c-087bab0bc8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6deb4f6f-e503-4ca0-bfe6-e81902508f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763df8f8-89e3-4c47-b964-917807bd4957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f46d348-76e0-4110-a5e1-4a8595b9ff4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c36aefc-8337-4aca-91ac-183c9755f528",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ef8d4e-afac-4bfe-a1b7-d4e711c49e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19aa23c8-1e9f-4173-9a3d-b948cffd89c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12520e6d-b622-4e4a-8bfa-433c4fe8fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde57d53-1ef9-449d-9137-ae7c269b75f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2d14c3-ffe8-4698-a1f9-e92ea2b5cc5e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec23856d-2e57-4cbf-8d43-025e748507b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1160d38a-ee4b-4c5c-972c-0e8c4a916e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ac8051-8fa1-445d-b85d-dc87925dbaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0dd8b5-093e-49d0-9bca-e685b4a98ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d758f908-0776-4c72-93fc-c624decf6e0d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b757ef-4802-45e9-ab80-212c5c17a7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fc2f4f-506f-40dd-bf4a-32b41e06c796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be843de5-3b94-4ff4-a0f5-3c0bfa5af72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9892ff84-c53c-445c-954d-052beb33f000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5776b557-97d0-452c-8a1b-2d290003d5e2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5796632-19e6-4e33-84ad-5280bada0013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b311e221-3010-4a35-a6b8-43598cc21dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec292ff-5500-496f-9798-79e224e66200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "221c5bc8-c59c-4e54-97a4-f560d7d8fbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad2bda2-9a41-4196-91ab-945167d64e0c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a10b7e3-22ae-49b0-802d-6ce192cfd1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577b9f05-0638-4ecb-8f75-bf5672d60dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cf4d4e-c5a6-4d24-851a-504e0d88bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc42308-aa9e-4d53-a985-12f57761f4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982be0d4-22dd-412e-9777-dcca5af30e71",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a4e769-ddca-46a2-a745-cf2b3a049b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3619da31-0f65-4c7b-9ac6-e2db3a43abf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cec7ad0-45f7-450c-bae7-58ca72c6a895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c9eded-e719-4969-a6be-a32ac24433cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777e80de-2fec-4ecd-84ec-6c389a4b471a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1398124e-5802-4244-9824-8e32a02e6699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8686f3a6-aad7-40e5-bc42-7cee16322ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1ad8b0-d514-49e1-800a-5e6235f1f9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61279fd6-e8f4-4091-9364-f61fb2014b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2795cb89-d29e-4dd3-93bf-59bff8d4ff13",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6120cd08-37c7-43ea-9368-c009c112fc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9613f756-75b2-4bc9-8848-f499ab00a30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c47841-4653-48d7-b90b-b0cc19891b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d68940-b9de-4973-9795-6d0d1a5ecd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0f4a1c-04b9-4f94-a117-e99c07a0546e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b49e42-7040-4c85-88b8-c7b4084db116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55213003-d13f-4f84-bfb2-75b52bbe229b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bf13ee-c646-4d1c-b1b8-699cbed59dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b8456d-cb4c-44b1-81a6-39014c041742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabff8e2-05a4-46b4-ac16-d0b8cc2a5e91",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d3137e-7f92-4e74-be4c-a95102a56cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a53e444-0114-4774-97da-d01e3b58d1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebffd500-37d6-413d-9c14-2e306665e288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b79bd35-8049-4205-b64e-25a6bb442c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e12781-401e-47a4-b25d-897eda198f65",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8360de4b-14c4-41c4-9a04-b985a21b9837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cfe7e1-1656-4f29-904a-4cc8b408a697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0830b42-9030-4312-b441-ee0ef8fb3ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90e683e0-1107-4695-a07b-09f2bdc94787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a387a813-61af-4a07-b4b3-6b484e5edfc7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27e016c-dde2-4fdb-bd6e-2262c53b12f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c741a88d-9344-4881-8fff-9e692134ca76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac245f6-f602-4d95-99bd-6fe8f518bb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6df383e-3de3-4dfb-afc4-f8485c254363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd5e0ca-90c2-403f-a9c8-3dad577823f5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8975f7-b1fc-4430-a1aa-922f9354c064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda8cb67-586c-49f9-ba21-3ee8ee720a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8231994-7fec-4dbb-99ca-7a22f1e57d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "53d89b20-2fa5-4e07-8b9c-3e216d490965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a503ba85-ea26-4e8b-810f-5c7ea9b06f6e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a49066-271a-49fd-ab90-9892ba7e2976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b553b925-4a80-45a3-8b5e-cf7858451c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853f7c90-4f5d-4fe6-8363-5b7ac3494da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b27a727a-8bd2-4d10-9b44-0c74983dd246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30846fc-272b-4d42-a4a6-0e9707d08e3a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930c45fd-56ff-409d-8fea-535938ccb36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a15d08-65fa-44ef-a963-75d53700b1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929a86d0-6455-457e-9f6e-2fd6596de0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80393dbb-303c-4d0f-9e47-84f82c85ce59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a05dc6-7d87-4a9d-9a4b-f7c0c7be8a1d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae37deb-6f8a-44e5-94e3-b14392a303fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d078e67e-155a-4cc9-83a5-bdcbc74b0e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a11ac8-3ccf-4711-b012-6c9932f3d927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "99449e68-03b7-4d1d-ae5b-ddf8921d18cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede965a8-29b5-4e3e-9ebe-1d23bcf2489a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ac6c88-159d-4ab8-ba1d-bf36664a9dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21140533-e3e2-4402-9cd0-d2649804ab1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90c9df5-b6c8-46e5-9020-2c83a12eb21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "95d17990-cc5e-4283-a3d2-1e8bfc02a827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9e51b9-2f00-4055-a71d-98f303d0c58e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d15b0f2-759f-4502-bf99-3f3747a300ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39898506-f9b9-46f8-8463-602dfe073eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96202f3-d5d6-4c2a-8f65-f953a36b7791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f089ec0-b6c1-4357-86c7-16883e164a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfd4e04-7f91-4766-85b8-281499e2db93",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a0228d-9085-4f51-987b-d1a7ccc14eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd12d63-7a1d-4e89-bcaf-144ff31586ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a993cb83-e9f1-4682-8ba6-d5ed37c8f157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da191eb-b864-4016-8663-524a25f35cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132e9a16-f741-4c0d-adea-bd255223c95a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cd2c7a-5744-488c-927e-a9da4a810b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7dcb4f-a3c0-42c0-9191-9be9be5067e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ac75b0-89cf-4ff0-8c56-1409397924c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3982a1-fd90-4e39-a0d6-98d464c98769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165841b3-a441-4d95-87b5-e9e74def332f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee0d72b-d51e-45c9-bd14-a9e090c86867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef058dd6-d1b4-4119-a028-c21df3f113dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ae1859-433d-403c-be4c-689d0b5525d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc4bb0e-cb4e-48a3-83d3-3b17a168bb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181cf117-dce2-4df5-9ec4-21f9314e7786",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6434837-31cc-4770-8022-51c48ae59876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a84508-9bbf-48e3-b205-f1532add6d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e6afda-28d6-43a9-a3bf-13a0f70188f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ba5d6e-1d42-4565-9cdc-ec73ed1878a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45338348-66ed-41cb-b72c-d2c591e4d567",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e78af32-86ad-4d98-85de-ba5b1d94f13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cb9e2b-e86e-49ad-97ad-d7c23b8268a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac3eae2-8f6f-4ea2-ab6c-351b99826018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29af073b-5f48-405d-8006-2c3db3786af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c4b3a5-56a0-47c2-b12b-e9f1718fb4df",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf1d2b-985a-402e-8807-70320c9c07fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79382315-f34f-40c7-954c-82215bdbfbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2c550a-0929-4a63-bdb0-f9e9a5796922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "968580c4-8647-4095-b302-087486dd4fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a01d8ce-e9c2-4067-b4cd-8fa265a65903",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55c9bf6-6ded-4b45-b507-8ec84f41f748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1d94e8-e6c8-48f7-9bb6-d3f0039ec128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404ae940-88f8-42c6-9113-c8682f3ea60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f98c5fa-871e-4420-9e70-ae5263a5f666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819297eb-5f15-4192-ab7f-6c11299dbfb7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9655f7a9-75f2-4e7f-8f97-46ec94eb008c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241ac2c0-ac4a-498e-b56d-cfbf205538c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d891a6-6bf2-4036-a5ac-7171480875f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc286ac4-8e55-4d3c-b1b3-de18a0e05176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04c5325-0254-43f3-8ead-c7df1136df64",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b60053-5e65-4804-8c66-dc3a70d031a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103fc6c9-64e8-4894-b85d-21ef56beccb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80a61b-33ba-4c8a-9b20-f7c8a0f6c426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eff92f3-2865-4bf6-a393-b970f059f1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc81d4e-e5bc-4e0c-ae58-f6d43c5aff93",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45e6484-941b-4c6c-b0be-3d6a28dab7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59134b4-f981-4ddc-bd73-617f5dfe542c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166327e1-d08b-4c07-b232-266138000b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c704f32a-5fbf-413b-9924-21b13f91b0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dbea22-f0a1-48b2-8c4f-04625f76340f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8359852-96f7-4128-b5a6-5ed4c73af48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b79bf2-81e4-4c3c-9431-4cf37c0d8ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb66b0f-66c0-4b7b-b7e1-cfdf4dc85358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ec3c66-b430-4f12-a8df-5b438a21dde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63360823-531c-49b0-8af0-5dc623e2d77f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb595963-38bc-444b-b1db-c30084f975c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6977a546-e044-4749-888d-a4e0aa7226d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8726065c-8f8d-4805-923a-e036ed206272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c47afc0a-4b6b-472f-9508-05fb331ab184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f2e2ac-b5ff-4b31-972e-d7248506d792",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cb44be-7461-48aa-bcbd-71cdd092c947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba93b1f6-3464-4b33-aadf-f0c99569acbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3200150d-0f70-431a-90ed-c9fd4ce51ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdac1974-fb97-44ca-976c-57780abf2b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b510455-6dda-46c5-a395-96cd0a1731de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91de42ff-d3c6-43bc-bb8e-cf4f8d171467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b81895-bc71-4737-9f58-cc00b7b680d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f18c5b-ddee-4cc1-be8e-025febdfc7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8294726-3820-4516-be98-7d268a438d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aa5f80-5c5c-4bc4-8814-09cf753f41a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed55f3f-382c-4418-aba8-24ee3ff863dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a589a2ef-2e82-48bb-a58d-2a38ba4ce02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90b762c-6024-4e71-baad-77bac01f3e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "066b9965-6ed1-4fdd-bb24-adf8d5b7dbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9115fe8-4ab3-4090-b424-9fc67941e66b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ba222a-8903-478a-b3d0-f920722dbc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90ac949-5cdb-4c58-80e9-09a26dad0f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1bafd4-e25f-4ce4-b151-5f9fe8c6edb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee75789-0b6f-4167-9768-89ee053f65b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b018562b-a33d-4430-bf89-a9e0edd28d6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454812ed-30b0-4caf-972d-8e0e9cf67459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819b0858-05e7-4925-a170-85108205c776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67d16c9-bec8-47f0-9101-396b72ad60e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b27d8146-f886-45d5-8b09-ff411d4e5c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0023a98c-e250-4b36-a06a-df2ebaa857e4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7730a53-8ff2-4bc1-be08-65c1c83bc33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f46ad9-59ff-4bba-8cd5-d163f3dd21f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9558814-826e-4b8b-a349-59f116c8ce69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e52e6b-9ff5-4473-bdd7-4525dd6a4c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9706a8c9-3f3a-47e7-ba91-032d6588b088",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3e4cb5-b199-4308-8248-8fa49f251445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3562a43-87ee-48b0-83f2-5ee735a7b55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2eac44-3841-4bca-9767-11fe7c15200c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdccdb2c-a2fe-470b-b479-29a8c5ad34bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0918fc58-1050-4c07-a178-b4dea0ee17a9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be7dd5a-17e2-4e78-a7f3-099f9bac6b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd2eae6-2ab3-4603-8b08-35447eac329b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a07401-ef7b-4294-8ed3-08d8ff806d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9198b6-9b9e-4405-adf1-1a9d7c031c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df65ce36-cf9b-47ac-90a3-7f0a40a6987c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86296161-ab94-42d8-ba73-392f48604a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670d8c52-843c-478e-b59c-3e3b177e8635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcff9cca-9c37-470e-bae9-2126a36fe01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b23cf48-d7fc-46b2-a91f-3fb7fd97dd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb65f2b8-1d93-41fb-be99-1a442d8fdad0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ff7a6c-60d2-4cd1-a5e6-2748b44d575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9659596d-3ae2-47a5-a1c3-7d11bfd5a097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a075a1f-0ec9-4aa8-bab0-41edee5bc11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be49743e-dbc2-4ba1-8e72-152db361dfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f569358c-be85-49e1-af19-3b374df75c0d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9335711-3b8d-4c7d-951b-427acd34b701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b7a796-e18c-4899-ade8-24db93866c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03edaba-06af-44d3-8657-60a05ab9db1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9ea1cf-8a5f-4fb6-9f6f-54989a617dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52373d62-41a9-4528-9b16-341b982494d5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b656976-12a9-49ad-8e92-1e0013a2eaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46138f09-b7f6-4236-b9c6-541c20a356ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e339d0-f08d-446f-a567-eff8536a5cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8cbb5c-39e3-4ef2-aa98-39c451983f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b43dbb2-e7a6-47a1-9aa8-cd8fd2c95b9f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a77a36-3efb-4a03-93e3-2c76753cf89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad9f713-5982-4510-8df5-6ec302606f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab3a38a-5063-44d4-9199-a96ee0b7cea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb74aa3b-7de1-446d-b2de-3b78a0f11018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70877b7-8adb-4051-86a6-ab3ffd96940e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947619f3-0be7-4e9c-82c5-3ea608cb7b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2726c145-0085-40a7-a694-13cb639da4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45d749e-19ee-46fd-a1f3-9b6b02480b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddfd878-1ab1-4150-a38b-90abb235b6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1281ddad-b917-4e9e-a3b3-6edece79d6f7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e2de69-d319-484b-8c4e-8447f4e0874b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84152ea-2a8c-473b-999d-974bc8a5229b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61af510-226d-479e-8444-461658a8393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7ec673-c522-4c93-93f6-79dee486d2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fac01d-4006-4810-8a93-bdb5de78570a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a746ad12-34a8-4db5-a306-2160dcfa3c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd35f802-5dc2-4bb8-b4d8-eae17f9443be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751764fe-02c0-48fd-88a7-80f4d223fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df04f7f3-6d15-4197-ae42-44459fc9124f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b260021-c5b4-4ae5-a9a8-f0ce29098011",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6833ba1-e967-4b44-9196-de5bed88896b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d286317-20dd-4d20-8dac-441fe0d52d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a406fd-d292-4698-8600-0688a60ab407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9635b29-f781-4f92-a1d9-f6dc1bdad258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056e2463-7450-4713-8dd4-e38a9a10d147",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade8a564-0437-40da-b9d8-b0eb430de666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05803a9-f465-4486-a468-3395442eb9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fec51a3-5fa5-47e4-91fa-c10dd0b7708b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79c0c8d3-a65c-49f3-9faa-51898cf1d6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40082cfb-42ec-419d-a85f-4a1a5fcc08f5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e810131d-df46-4f13-81b2-857925f7efd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01974b7-4b5a-4c63-a113-b37a5af43ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2f4f87-2c33-4ca9-af7e-e421e6989ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d92fb78c-022d-470d-be04-2f487c018fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcce23d-11cf-40a3-9ec4-e9d9e589a087",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba4364c-d402-45b1-9329-0a2a41d92d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb27178d-e92c-404b-ba05-a35452d4b534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47222e9-4130-4424-ae6c-8d50dad0df3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "101da409-6978-45e7-b8fc-e76b15ca7178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9533d9a4-49f9-48e0-92f0-9996ec40f3d6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8a14d9-0008-4562-9594-5b427a0ed324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8994d208-352e-4a83-b18b-13d5e021d58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf977dd9-aa55-4ea8-934d-8bbb2cec4f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0090b3dd-1846-4abd-a6a9-b52bfa58fbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d03b127-201b-4801-9871-ab4917d49fe2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e06d8ac-d49f-4416-9843-a54ed23e334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262daa26-e92e-4167-8323-0689a90a5741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e0ffa6-6479-4a9a-a7f8-bbfd0d424159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f25cc9ba-d420-4bb6-9a97-5ad45bb95736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9671fe1c-f3d7-4664-a8f8-57813dad7f6f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11516495-8ff2-4afe-9ca2-34988106fa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2950bc-4fb4-41e7-aa95-fec0124e07e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31d52ac-f5e3-40af-a432-095d753da9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c04816e-60d8-456e-b835-7e17da10d3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da6dc2c-9c5e-43df-8a26-a6d3187f08c0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a899080-d95f-436c-8f8f-1e719f62d649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb681190-b1ad-4d7e-9c29-f9990f23e2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f07bd8a-1825-4c9f-9816-c3109b3d4305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe85abfd-13d3-4e31-828a-e4460c88279e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c93449-e842-4ebc-b860-a23ea6762f4d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d105b363-03bd-4001-8d18-e5ce11e54a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981878f0-750b-4694-a1de-94cbc14fa0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cccbc0-db5f-43d1-a872-e76a47782eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3855cd-0e2c-40b2-8e3e-f62df7812f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc346e76-f216-4f0f-9fc2-1e5770f68512",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ace0f1-6471-46ac-af81-1aa98624320b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df4698d-89c9-4c67-805c-dd2d18b25b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbeed90f-845f-4b4a-b160-a13c4236445a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ab53fe-06ea-41a6-be56-662d222ae9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23ad037-035d-49a6-8387-8a29d62338f5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89cb721-6fbf-4b1c-a357-34f905bc45be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f1f9bc-7d7c-4c28-99ec-41c0d85d03af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53c9a8b-0e7f-489e-b1d5-2b8ecb2b87d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10bcc4dc-1d71-49dd-af08-5b698d5a2cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a2970d-49e6-4a79-bdca-117c651b5c5e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f784a7-2109-43f9-8139-e21c97899911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72031be1-0d91-4584-8497-99d5722b01b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1422a1-198f-4827-9f5e-0f17b4a95cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ba8523-00ff-4202-81c0-0c392b58740b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c64764-a266-46d7-a4ca-3c2c3e7ef95d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3422a8d5-d20f-4a1f-8dfb-d3f1650ce60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e589e23-6589-4a7e-a1e5-cd9d1d01cbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2848401d-5574-4f6b-b91c-a4012f2249c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85ad9c32-9831-4d21-a46d-93d0a46f9990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bddded-dcc6-473e-835c-d94eb406015f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f2c7b2-9362-49c6-bc85-577bb7ffe5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa6136c-1fe6-42f9-95bb-b99b15bbbf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc401efb-dcac-4438-b7c4-fe5d6764273c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc36739-d6ad-4845-ad61-fe32a1bfca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ed5097-0495-4716-ab5a-8af64910e14b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fccb8b-eb80-4223-bb7c-0e046488a71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6ccf42-d4fb-461e-930a-6342fc651f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccb0d5e-ebf5-485a-ad92-c60691153d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b17a4841-49f8-4415-ab44-d9dfb1501991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2513f9-e3e1-4b95-a261-deaee3b9dad9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967af895-ee83-4d5c-9824-20b80b915e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dca86d-09ce-4f0e-add3-ef2a280219cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57767b9-3f82-4ab0-aa16-3fb58bc0043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d44ecb-cc22-4a0c-8d59-e7c0a6808b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22914194-0192-42d1-bb7b-65ce5e386b61",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec1ff22-c6e0-4e82-a822-e03b037e4d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2f18c9-ee65-420e-a0fd-8f1c80523669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce327672-9fde-4f31-bdf3-61404e1e2643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "091a0c99-1963-4ab0-b563-e3bcbe2bbdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83d8cd4-63e0-4f09-993f-8ed0e2ebd119",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b28a93-6cfb-475f-bba5-9285d2bc773c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7ecc06-6807-4b89-a946-c6336f056515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a0657a-9125-4f55-a931-617f171343fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "936c829e-de9a-4905-90ce-fa5ca8fcb0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d192e082-7e82-4fd0-b51e-3886e1deb58c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7da1353-47e4-440f-a741-4eda200d8057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d395e22-f87e-4d4e-b846-b7c1c53afddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f3d6f4-7bf2-4ebe-af30-ef276e984f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "101111da-3f83-4a69-b5b0-b4cbcdab19a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39257dae-2394-4753-8657-9d9b66b1d9c6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20263741-297d-41c1-a01f-c089a8b53711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b135cbe8-b256-452b-aebd-fb27334ac9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d015c2f-445d-4d50-8dc7-e5fcb53bc5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "20e81cd3-b068-46a1-ae53-afa958826640"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5adec832-22c7-475b-a66d-3302788fccb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9e1cf8d-fa9e-4e04-915d-76edba4e4dd2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6815bb-fb87-438b-832a-1eb36970734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c70e020-d87c-40c8-95b4-79751b42faf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2239726c-eb39-4b63-ac99-c0f36cca4dbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc9d778d-4e44-4417-8664-f89982e13bcb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d06c2949-5598-4ab4-bb5d-39e77520d98e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26343496-2428-4df3-ac2f-9d92f2be184e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "028bbe9d-8515-48e9-9d89-6522d16a097e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2943e60-d3e6-4589-83e3-86cde287e785"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86057670-65f2-43b5-973b-60cfa35fd8e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2b24cc8-735e-4587-bd31-9936c2d8738c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d43c7355-1262-463f-be4b-15b2d180d1ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7dc09d3a-2a8e-4a50-8c25-78cb56b5e115"
                }
              }
            ]
          },
          {
            "id": "e734df10-d16c-4e8b-add1-26acc608fcd4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f67a4f43-8404-48c9-bb20-0cf9f985cb7e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dcfb17a6-4b34-4807-97f9-241b45f873a5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3438aba0-6683-4434-a067-aab449f9733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "02349557-250a-4139-ac13-e0cf91f7b427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f200e08-cd4c-4ce5-81e6-9d47fd4d6e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1723c7a6-609c-4b74-9fbb-320c3b48f53f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94b579e9-6af0-455d-8224-1291ce5f5420",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6be3aef-82fb-432e-8f18-e7a1991d9e33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "451764f8-6d33-4ec8-9ebc-61af3eaba537"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5ea1d51-a493-41a4-a128-c41043613aee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36153ca0-e932-4931-8f29-dc9ca48ced09"
                    }
                  }
                ]
              },
              {
                "id": "fa618b0e-9715-4c8d-b6fc-05924675d16f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f3f0d5e-c3be-465a-acb8-7e09001acd59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42919dd6-be3d-4028-b3e4-a43e8f3d457f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97cb3329-0bfa-42f4-b88c-8aede1e75007",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9439cb70-3ece-4466-89f0-b47d121723e5"
                    }
                  }
                ]
              },
              {
                "id": "f6c4549e-a670-4f57-b8f2-58f232d9ba4c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "825decb7-7207-452a-bb1f-c3e7ab932346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a2c536d-304c-499c-8097-948350481c88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e35e05b-c4b1-48f5-9715-9a69ded4615e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1fa56808-f4dc-478c-b4b7-77883a9059df"
                    }
                  }
                ]
              },
              {
                "id": "7888a357-144a-4cb1-82ab-1feda2feba1a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e852f14-b80f-42ae-9b2f-4901f7f51a7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da09dc1d-dcbc-4ec7-9fd5-d86f6aa732b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85f34cc9-4ee2-4667-91af-1fdd52d51fdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fdbd6bce-949c-45e9-96a3-88cda189ab46"
                    }
                  }
                ]
              },
              {
                "id": "63f65162-d98c-46d0-9c9e-76f98aadb2e6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9fb62cb-068b-4300-a6e9-86fd6865feb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28facb77-696b-4084-bd80-6afe29c25f73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14e4c91a-73a0-4968-80f4-57dab4e88102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9ea2fd00-c44d-4c4d-9dd8-b76221ddf579"
                    }
                  }
                ]
              },
              {
                "id": "e79ba351-08a3-43fd-befc-b8e12bba04f0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a29ec60-1088-4b09-92d6-c0ba7c7eea07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f818e65-4596-46b1-ae65-13ed35102e03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3aedfb5-0351-4ecd-8a9c-70d655521a82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c30c671-ce2b-408f-b09f-5bce58dacc7a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97e0bb34-adc3-4aa0-9cf8-cb827f5dc17c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5167ec16-2491-46b3-bda4-b0c24bfb7efc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3297a6f-529c-4bff-a737-5a85896e85a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "364003b7-0e94-4dd2-81eb-f32b8509bc72"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20f487a0-a91c-4e9d-9f2a-cafe2605dca3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f15f19e-623e-43d5-a748-55ae20059e06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c31ff692-a9e6-4853-b6b0-9ae4c77117a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bee678ef-b105-4a2a-af45-f2c269ab6ac8"
            }
          }
        ]
      },
      {
        "id": "48c1f83d-1c62-49c9-bb2f-1d6ed2c3547b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eac9a42a-3466-4156-adec-a9c5768d554a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc0d3201-aeaa-48e0-81b5-2b715c0d5de0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c957472-06a5-4702-af0e-bfa84baf00fd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee14d56-2f67-42bd-91fe-2c1b1cb541fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fbc00e-b43c-45a2-98d4-d6866d507ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a867b479-5786-4e42-b6ed-5863c442b98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "077750d3-a635-41fe-8aaa-7e65b220eaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c71c7ff-01dd-408e-ad3b-dbbf438a684c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be14cae7-beef-4883-b596-393a259e2c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eb38a9-177a-48f2-bb20-37cdaa2b5094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caf462a-e12f-43f6-b5a9-e2a9fdc38145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9503ffe3-8f91-443c-ab6f-55bdc0d94b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4aed25-40f0-4ad6-964a-7f886760040e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56703dfd-b922-47f0-8c46-a88eafb51df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3575e182-b80d-42ed-99d9-3af9d0b0c1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c693d9-be88-48ef-bfda-c94be19505b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7f0f5d-996a-4726-a6bc-c372d5dff338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01ef7d5-53fe-4355-ac08-5adc7934e288",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890b73dd-4280-4038-a28a-e83c0314e391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ceefea-8365-4714-803c-e1cdee4e8b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbe8122-de06-49ed-8897-6f31e67e1f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfb4560-1ff3-438d-9fa5-b60355c823e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bd4cf4-505b-44fa-8c3c-827f7ea2fee7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33363aa8-4bdf-43b6-bb8b-bf5ecb22bf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b395b1-62b1-42c2-9318-2e10b4db26cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387f31d7-e29e-455e-a849-b9a5d5601d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb3905a-56f5-4f5b-bc83-72e4d58ba6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51cd9d6-8c39-4ac5-b52e-24330b07f958",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23160e04-ff57-4012-aaa5-73b5dec7e93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c48543f-4ddd-4722-9f18-175739cfb569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b8363a-4016-42a0-8f11-5e2e9c423d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2c8303-8f42-4332-9d8d-f6aa86786df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072e4885-73c0-402f-b861-87f9fe8b4660",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aae82c-b0f0-4d7a-af2b-910029b5e95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f85cb74-4d5c-4d4b-b2ba-4cf4637127ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8edcf0d-6bcc-42cc-884a-1314c6ff4885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d40dd90a-a3d7-480e-9313-f2062c983d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155313b4-407a-41bf-ac5e-e27585e8a748",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104a6a99-b3c0-4338-9fe9-a9805529c3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46fc20f-d980-468d-92fd-374c65bf82ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166d40d6-4717-4753-b4fd-f07ba9b4b7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4137af79-23f9-4c27-bf9d-7d8182ffee9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ae0372-3740-480b-aad0-bba39b9d1b12",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c3a828-196d-4086-b606-eb151d0af1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7107cb72-b964-4586-a1b4-fc5470292b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55836d2-72b7-4501-b1ba-b3bf1fd3cbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7db836a0-ba55-4a8f-b303-f1c2661e7031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fba8156-57a9-4676-a411-e3b11d90025b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4594d376-1173-4668-b048-cd74978bd142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76112d0f-09bb-4e31-b197-dca8531e2609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f002ff8-6df8-4aa3-a66b-1075cef5853e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6c11fe-bdd6-44dc-af52-1aefb6641dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a775dd8-e1a3-43db-bc1b-ffd2eee602a6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c68b437-e975-4b4b-a849-49e77324adf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30e1c85-11cf-4da6-83f4-a52fe65c53a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87570ced-5c8d-4a4a-8d90-5b7cb62db92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "76576465-20fc-4d1a-ba3a-794f3ab15a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c882bfcb-e608-4853-b489-77deca64bd69",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22517426-d3cc-4c05-86ad-d66a569d894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cad65d-6486-46d1-812a-8aa9a9160e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d68cb1-4f12-440b-8af3-ab7ac9b91abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d140f0c-4327-4150-ac4f-215c69057ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245ab604-678d-4216-b47c-6a950fcd5959",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c054fa8-1f63-4f1f-9224-9efcb4a7b48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7c9491-e4d6-43aa-8da0-8dc971c47f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfe25b1-8065-4e1a-b776-bd43c791e197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51fbb619-fb67-4281-a6e6-ee960f934866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd35da8-827b-4d2c-b07c-a1978cacedab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09321932-0433-4b07-b446-9e91053cb46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0d9b97-2751-45a7-9094-7a7eb336468e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b31b091-dbd4-403b-ab7c-2a2cf1e05f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b574a5-fca3-4848-8e2a-749ed439447d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192c172d-420c-4d12-b996-72f62d06a04a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80d0796-ab71-442f-b425-041b4ae98493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797ec68f-d661-49ab-bfee-6f383d2bdaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62db87ff-35c6-4b48-ada3-5bb9e25a9eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aaa8f21-b276-4731-bd4f-73698437d21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1117f3ab-7b08-4b3d-b798-c758cf39f14e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0a114b-c2c8-41e4-92f0-2691730f4037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c4679f-e28d-423f-b7e8-6e40cb009b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb3da16-7814-443b-8422-d4b2a9532705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf30c54-9bea-4f31-82e8-f29a905b260d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55120cb-939e-4561-8b30-18e1e4e5f658",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e799aba-706d-4edd-8976-117bae42bc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab54d348-b863-4693-a434-0f553ce7ca54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dcca0d-0920-44b6-a3ca-473324cc5208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d2982f-00f6-459a-9f01-861487bc1b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72966a8e-c284-4902-8f48-cef84eafb69c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e14b59-2cd9-4ae3-bee8-4f069bfef456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f3a079-1e67-4dc4-9c55-016bb61432a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ff2870-553d-4ac9-b89a-06b479844cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad4c7a8-62e4-456f-bf55-fa17cb303676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515d1148-d1b0-48cf-8f28-62a6754c9f86",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b164b6-dda0-4efb-8ba4-b698448313a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8be881-2c97-4e87-aca3-70d2267cd2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187ffe7d-d7aa-4157-ba37-21c01b241c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0419d30-4a1c-4a89-ae6f-ec49e3ae0446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3c0ca5-c496-4a47-adf4-0758e3ed6e0e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb5ab59-bbcc-4957-b978-8ee8fd887867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562778b8-284f-4ae6-86c5-03bbdda0afb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ac62a2-f78b-4dee-b98c-d5d3079bcc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbb7cbf-b827-4068-aef6-96abf97b197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f6d40a-fa2d-40f7-a475-2da607107402",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50854dc-d183-44f5-b4c0-73627aa304e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3483ded-92da-47b9-bea6-484cf722e671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa96d61-d5dc-40a2-9199-d2cfacdbb19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e77b13a-8917-4586-be40-9053ca688c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6a0e30-88fc-4af2-8b58-dc7a34a11072",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b4b05e-c735-46eb-8049-ff0cf1d24755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5080951b-bbe3-4003-a4de-c5837c38bba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032b7801-a6c3-4b94-837e-f94de3e8168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b76a2ca7-e6d4-4607-8d61-0b0ab2634140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e47ee2-6068-4980-ab50-f04a7630311e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a43a23-64e9-4e74-ac89-f5fa72b989b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe386d4-cb71-4822-962c-640836e9170c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c2280-db39-46c6-b9ea-64c654ee684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7aeeaa1-45ac-4a8d-b243-149e49a44acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7e1639-c434-4e54-8e71-c244ca1879a0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f38b26a-8b19-490c-a53a-bd76be9dca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42df0c77-e8c7-4914-a67f-bf694a373a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82712d78-9e5a-47b6-82a6-fc6de81d1079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a408cd0d-1d7b-47a5-86e1-e2d6dadf5009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a46037-3fb5-4e5a-8916-8849515717f7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59ce562-f91a-48e9-b886-eed2ffe64f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c462119-7cd7-4adb-8745-7c770630635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68636fac-7ba4-4726-bd79-a46087e35e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9924f5-a157-4308-a2c6-a58f2646ab26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ab5568-6cb1-4891-95f5-1cbbf33f68c1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ab5246-8fa1-4fb7-973e-bfec15fa7020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4861a41-7eea-46c4-9a9e-d2065d22c9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98453e16-50e5-4afa-a3ff-6a7e4ca61d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b7137b-bc36-42fb-90e7-487b0e8e9d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0728e821-19fe-4e33-a04f-98fbb4799f3d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27b1611-a4ef-4560-8e59-09f267e4dfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dda252-b982-43c9-b7a6-1b7b44ff30ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b415fe3-3dbf-427c-9779-e3b188be42d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a51ae48b-e1e3-4889-beb4-148de5c5b326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e181e449-60c6-4cd5-96e5-1e500362fec5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f1fe09-7cc3-49b9-9b53-46045f361dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e5502a-cc56-4fb5-a83f-d7867587c473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442f9533-287f-4a3e-98bb-c669c161deed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ecea76-4617-49e5-9e3b-ef92fcf0921a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64431f20-b21f-48be-b4bb-4544d3d69b87",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2523433c-8781-4724-97a4-1fa48adfa0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49197e6d-5fe5-4b7b-aa11-890e08202a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3071392b-3d2c-4a17-b78b-0363335e0727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f39e342-b831-448b-b314-26fe13176013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364fdf0b-48ff-4997-8bb6-52df12202be0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c91929-a607-4c5e-8a02-5c6b86e1bfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e5e346-0726-4aba-82d1-4dadf29e5473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be7c999-c009-4876-a680-a2207b1428ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e2fa46-1a2b-4d6b-b682-b79d4c811d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6a28bf-7436-483a-8e20-cbdb2c7faa6e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cd1f49-6a1e-4eb2-847d-2a171b095dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29e8905-67f5-4d03-9caa-19765db90c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cca45c7-0d20-43ad-8eb0-15f9b1326598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "501759f6-ca44-4a76-837c-958ccfc06908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e9f164-77c7-43ea-a373-de77cde161c6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d187dd4a-24de-45e6-af75-56cd15e0c40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a151ea02-848d-493e-a425-2d3464a59215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315ac486-3deb-4c0d-8cd9-f7fbee53afd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6998c22b-6d3f-4ab8-a9d2-421954442ce8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a53ec0f2-1bb9-4789-8226-066c04273bb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c36133af-a0cc-4ca3-ad53-9c245878a1e3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7caef78-c471-4945-8888-410e309559a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8183a952-3387-4c7f-93e2-76c78853fba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc252606-f9f9-4db5-a7aa-7606c49afd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d2f3f9c-22b1-41e7-b948-4372959ed6c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a04882b-e364-41ea-914d-ac7a9c297209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76f1acdc-24e3-4095-a840-34b96e1c21e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddc4b6bf-cc49-497c-a9ed-67b52c6595a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d151cc4-e6c4-4744-adc4-0d5ff2cf261d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30a7c62c-8c76-4207-8144-4e8704dc3b47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79fca044-5725-478b-b0ec-31922221d115"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d264a0ed-985a-4d75-9118-e161f25418b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b63d07f-077d-4fb8-b82d-a5bb8810bd55"
            }
          }
        ]
      },
      {
        "id": "a9e63a59-27ec-44cc-b56c-e8aa8895a7ab",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9ce71f07-09e6-4a0e-83b6-583c66a80f23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7dcf2ae6-482f-4a96-bf92-7e4051c49cc9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7570a2c0-5d8b-4c6b-b1e9-3f9edf5eebda",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a556a8a5-5ce3-485b-aeeb-ff0c7418c495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d096ea-211b-4325-a6fa-4efee58bc103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a059f0dd-88bb-4867-a8d1-cdc606db7c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba2f74c-ad3a-437f-b2a6-37a5dd061aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dbe678-2f33-4e0e-a21d-add22e8161c7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3cd799-02d3-425f-8c11-eea6d2bc2bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9a3af6-b0ea-4b78-9102-ed237fc23c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dcfb90-bb67-45de-87fd-23d2623eaa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f104fb3-6a9e-4873-8f98-0bacf91f2b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ceac25-6165-4ed3-8f3d-b22911998bfe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48bf336-9975-425a-85f1-d688fa949a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f51c53-86fd-4a7c-bbc7-071e9b52952b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e1010d-3b79-47e3-a051-40d17c378b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf88c7f-cf4c-4e75-896b-b58a718fa3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3825a4a1-74d5-49ee-b275-55a280ca1f0c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3c43bd-257a-4435-b983-6088c6b6e744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dd5b67-3993-4edd-8365-ea4b73290a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344ea52f-6c36-4da3-9ca0-f1867ab1d7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf01e7be-d5c4-4cbf-81c3-a729dd0db489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8417ff68-bc44-49c6-8c1e-ea4a1e0baa9f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14a5a7f-f062-456f-a81d-ded1bfcbcf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b81801-d11f-4e98-add7-f3941d286ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6332b5-0160-4305-b790-f0a618eda147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "541fdea3-d712-431e-b5ad-500dbfc3ffae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76cee60-5cfa-4b56-b06b-bb5fa07811d3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada72d8c-3d48-4fed-9a82-d6cd55160f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809429a1-1c87-4433-b56b-3788f960a670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ab4104-df64-48e3-a0d9-7ecc0caa314a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dabe2e-df83-4ac6-acf5-e368d0eacbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f0b45f-8b43-421e-9d2b-fb942554ed1d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3f6b75-e6e9-4937-b3ca-4233fd61cb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3d0e88-ca54-4b9c-9952-418ba3f7ca36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deed5ce4-e18a-4c86-838a-5f3245243b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab0e60f-411f-4696-9e28-16bc175e1f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f39711-3ec5-4045-868d-3b1968a6c4c9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c71263-3bff-441f-898b-c542b3f5c43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d52a4cc-88de-4ab0-929c-1df155ecc9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6dce40-cfb0-4534-828a-6b70186bfb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0623b8b1-6eb1-43ab-ad56-57f5262a6c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f5685b-47e4-406f-afc9-43aeed014bfa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811f9f78-d7a9-4472-941a-4efa2a58afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a128f22f-ccc1-4c37-b9f9-77cc9dffd6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cbfb88-554d-4e7d-b9f7-1d32aad4bce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e06307-a9c4-4bda-bb79-ccc8ee110852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af116414-6c00-491c-bad6-6db30e3f5e40",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a101cf-c88a-48a1-a14f-57424209312b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e53a33b-7422-48a3-8c7c-5c374056448b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d004ff-d56c-48bd-8f3e-1700b08cdbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be92b508-a44d-4a61-8296-e3575c898e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4775132-9c2c-4551-850f-83396c902ee3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc960ee-f839-4c61-8bc0-866395f486d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cb59a7-b8fd-466d-ad3b-373a52c64f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402ca81e-d5fe-4292-a328-685488d9704e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fb824ba9-a274-4157-84d2-8fbf376452f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53055c3e-af10-44a8-ab47-201dbedf76ef",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad366ff-2640-4f54-b94e-ab876294c62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd823919-0cda-4e2b-9bf2-99aecc290fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9335ea08-6beb-4b66-9af2-cb104e4b27d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50351a14-bdac-4ebf-bdd1-c6f0cd73f327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8c1ca2-d1ae-462d-8bfd-df9de61ba62c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0181cf03-00c1-4c5e-bbeb-4831075b29f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec5dbd7-d647-4488-a918-6587325a4b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d7e915-8a77-4adb-8ba1-7dddb91e367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d270814b-197d-44c7-845b-a2ae734bbdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287ec999-1f41-4026-bab1-b645047c8a75",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666e5e65-c7c9-410f-9624-d57debd1f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c12f680-ba76-4ee3-aace-28d25a8ddbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b7be28-3424-465b-91dd-f2d615a7a1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "29181f4e-f0d2-4825-919f-de2e7811d602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487f8ac5-1e66-4a67-a197-077183106ca3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141065d3-7ef7-4d39-a530-17a0eac6343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a76862-f53f-4b86-bbdb-890c0f8fac4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abcc0ef-f537-47b8-bfa7-4f646db0e06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7712d83-3970-43ca-8aba-821b3bdfe99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154d2e33-4622-41e6-8be9-5a59f23ff675",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9837cfec-b482-4916-9e60-b9d34f3302f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2336b15b-db5c-4334-a27f-ee5b4686fbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5c8d59-5d58-442f-a070-4b0ff6dcc4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "08f95cff-07e9-496b-8e4e-25b7d76d305e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06e0dc9-5c2c-4b78-aa05-6c996a0edaf5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f7ada0-4f07-4b54-b436-7d6558106e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6e7b8f-532d-474a-bab3-d74ba32983e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd92f75a-f7b8-475a-903d-9a9e44b8a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee454af-52ad-4d54-ab19-6659ab43731c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e8ed48-6921-453d-bf25-c4ce2edfb6e1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33ed71b-8dfd-4745-8650-3263d98ec1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7e2cc2-8ed8-427a-9f79-8699f123253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349d5961-ef62-45d3-8cea-d94adab71fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc72231-ad3b-4be3-b493-1df86806fe0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fb5250-9c2f-43f1-9df7-027a788acbc9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e42bbad-5008-46b4-a78a-ca79eee0994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e9d485-3c89-4236-bc59-525238215022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791dd302-6208-4e67-ae7a-ca1223c36629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9096fac0-7bdc-4844-af00-af2e957f8022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f666206-a140-4a5f-9bac-244168048b2a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0b6fb5-1770-4a3f-986e-4eafae52c4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530dd8dc-7a20-45ac-914d-74d3acb20d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0895c58-792b-4276-9064-e358908d325c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4c2a9e-929c-447e-b804-dbf094949a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec525e76-a96c-4d32-9a67-7d85ac4e5e7d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abf13e0-b9f9-410f-abd6-9fbf9d09d772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f3f774-e904-4b6b-b0d4-04585ffd3e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802deb01-3a32-4448-9b21-855e0ded6a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdab14bb-e9c2-4cbb-ba31-7e5ab38188e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429b8fc1-796f-46de-84d3-f8d41e23b6c9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b7a091-1859-4b8a-9982-b04c495e9ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30084593-2802-4b11-98c5-c9a19201591a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a884bdde-c11d-428e-982e-e84d8692b64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbf884b-a06a-4e9c-8590-da5106ab0851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7387bdf6-fb4f-4942-8963-25712c6f16c6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca03d1d6-812f-492b-af3d-aaa836b855b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4a0995-ca6c-4902-a4c0-58aac3c1cc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18146bbb-92d3-41d8-9c6f-9b725ee7b904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baaceb5b-f91f-4388-a5c0-e469d989872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c8cf45-b1f6-4ef8-b95f-018f41a53bf9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968c25e8-265f-4c62-85db-0f967546aa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d49b93e-46fa-4bfb-aef6-6ad3055bd8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f63dd21-c804-4fe5-bb6a-4ee066938247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf31909-312a-4713-addc-6e40f05e0879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb88da78-bcc0-46ec-b089-24b2853a06db",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cb5f0b-06e9-4869-adff-5d7a91051d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2822430e-171b-4116-96f8-9fc7c92a8745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7558e2c5-70e0-4d8b-9f7e-42802bab80f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ddbd4d-1944-4150-893d-2233b130c4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663af4cc-aa4e-4fa5-ac95-ca2296629969",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa9f20d-693a-4cd0-a4ee-a42f2102c6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8232620-399f-441e-880f-9a3c2f23d1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1555cf74-3ab3-43ad-bac4-68cde9d6441c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c937c9ef-4af8-4d49-9f21-fc0f65c0db23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c072b84-f753-4f65-ab76-e28f104f7d14",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515fb3c9-1542-4648-82bb-9504251aca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2e6122-1400-4a4e-98b0-040b14cd7a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae72f38a-5814-46b7-88ae-17ec57031889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd7ca4b-2022-4d01-92ed-3268101236e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006a96b6-13d1-437a-a3e4-521a070ebe9b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7151cb9f-c849-4de7-aab8-a51fe8d4c99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c359d6e-98e7-4540-bd98-c45e87193ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ed98b4-417a-477f-b454-8f13f87d4682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e45b12-ee63-4420-95ef-16f5419fe4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9f9def-4df0-4b3c-95b1-9dbd79c060b5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dbd7e5-9124-43f3-9d7f-9faa0c1587a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ba5cf0-4ad2-4c6c-9e59-23fafdde4f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a6065a-6d91-485d-9993-f21f9f89406b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0afcaf9e-561c-4758-aadc-87a30cd969d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f364d-5380-49d4-822c-f28f4821a997",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1283b6-2f59-4625-bbcd-f8d5242fe1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58ae94a-49c1-4f90-a1b2-1e8f099ba7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ad5b03-e0e3-47ce-9aed-114f5490fb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff03e69d-bba5-47d9-956e-c26de0f4087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42006a72-88ad-46dc-98f8-bb8ec574960a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b0f6ae-dfe0-45d8-b78a-a0b1ed7ded13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50234b1-3bdb-41f2-b4ef-83c87e9fb6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8fba2c-31fc-47a6-9ff9-63e4f22bb923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "339b9cf6-8986-4ee4-8076-b1ac5d612b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4ecf02-d879-4933-8f01-5c76430d6ba9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4c3ca6-4380-4167-9408-c5ba4e70443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661f2c7c-7dbc-4f4b-8422-3352a411693c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572b68fe-d89f-4173-9619-178011f4ec91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2388ba-f28e-462c-8d2c-e92833e697eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc55ebc-7365-4613-a6a3-4f1b32bed4d3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac8d5d4-1074-46e1-9b96-3dd6da18030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561b34c4-5314-4137-8a49-1d00e2d58e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237ce5d6-c7b0-4933-88b0-7dd39ac32150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e656f5f5-2bd2-4765-afb3-6512e8b91a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b289222c-cc6b-4d96-b895-304351c5f4b7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd44919-f528-424b-a50f-1fa4d8b0f048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f533a3-d682-449b-8f82-f7621e6d7209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd8c11f-91f0-4f5e-a3ce-a2865a7fc4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c6c506-5af4-4267-88a6-3ee91e73de2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a7da4a-5b43-44a8-aff6-ad242642a4ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2a0bfb-7731-4d7b-ad9f-8e194351c95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4cbc31-dbf1-44da-ab1b-4c1369890d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dac555e-ce4f-4327-ad28-3d6f45e1798a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "509d48e9-e159-48b2-ba42-ef2f4a577b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea85295-917f-435f-9c32-045751c4c2b9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf194e79-a8d4-4206-9c98-057c100785d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdac7f5e-c9ca-467f-817c-8126feba9d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467fb233-d39c-4575-b0c3-3d46044fe59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e767ae-21a5-41a6-b79f-addb94afd627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9008f0b7-aaf3-4f39-aeb9-76148737660d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963dd3d3-26dc-45f6-bd53-51896e209e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240c8b26-14c6-455e-bbfe-bab75141e69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8eeaf5-20aa-4b58-8a29-ccd14b22cdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75498378-32e4-48fa-9b64-c0559d7de74e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3b0379e-c848-4c9d-8fd2-ff67833edaf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fa9500f-5215-40f9-abab-d62eece532f7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a78e8c-e971-4e40-a74b-c2bd7b235f10",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "426223cd-80b6-4472-86f2-3965ac33947e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ec7d6f-b59d-4e30-8fe2-36181fb4e576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdf3b53c-c581-486b-974d-4e59710f8e47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c7692b7-4e26-416f-8909-ec12d3978929",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6db05232-050d-40e0-a679-5ce9fc2c1321"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd91c19c-1591-4031-bd13-c72b32df925a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "223236f5-149a-4d55-9b72-b037108d9ff9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96875ecd-f1a5-4a26-8d92-ac22cfe877f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a530d478-6644-4a89-8f63-8b9f0446737f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc7e4485-57e7-4765-acc8-e9900f02bf44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cec55a52-4c74-4050-b13a-cb2ca0e061e8"
            }
          }
        ]
      },
      {
        "id": "76433577-c901-4574-bcde-e459181574ac",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9bb87d58-d2ca-487d-b179-1fe3c4fdc76b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "009d9631-b3b2-40d2-9aad-69d559e7ff81",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f575b6b9-f3b9-4d06-8a7e-7f4503e7014f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c60ead-1ae2-49b8-826d-36072cf0d3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2942a952-7a4e-4b2a-a96f-4ee5339723f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21cf068-fb4c-418e-b1f3-ea9daa362e4d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58ac283-b69e-4ff2-9c53-4b08bbc5c39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20e7b81-ee52-4d66-bbc2-d0ecf8fd6eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0205886-6b91-4d6f-b91b-0c5ff301486f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbea1cd0-8021-4394-a39e-a4ee88d8abbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d52e9cc-8410-4e46-bdf2-686ca0009698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4597933b-aef6-460b-8d76-aef45eef601e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b09df2-61ae-4176-b2b3-56d90442f365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce669f19-1609-4492-a68b-cbc800e4fce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f14d87b-e4f5-4c20-b3f5-d355693961c4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a90a15-e752-443f-84ff-4f4d2eebdd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388fa00f-8d6e-4baf-b230-fd8b2d33844a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa0dc4d-482f-47ac-ba62-0baf4af87317",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89362b0a-2e47-4dc1-b82d-d5871358164d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b1a4b1-0003-438c-9286-32500f3e400f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca10701-1c92-40ac-9194-9cb8010dde8c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a08141-a546-4e9a-9f55-a1eb60fded22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd311e27-f233-40c1-af20-30c099afc891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198fc0a6-7f84-45bb-9d4d-ef4ee47cc33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3a0a7a-1cb0-4f4d-a076-be80fe0aca48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73612b95-9a35-495c-aaa0-deb57bf89476",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4549e107-5471-43b0-b0f8-1b99ae36c8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29217430-788d-41f8-9910-e061a684700a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b9d07e-a613-456b-87cc-9a6da9ee038e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec82e65-90f2-4732-b343-a392937b0342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7df2f0-01a7-4046-8adb-4a5f0f471429",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4eb30b-b480-47ca-a1bc-5d484e86d567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312e0b49-49c1-4289-8b81-616804b8ce91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58781184-19ae-4af4-b4e2-01d4997f32a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d993761-48cc-41e4-bf9e-0222e1ead040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad693455-b424-4852-a320-43fa0c622bb3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75ad8b9-18d9-4df4-9d13-66a638ab7faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca543951-ba7f-49a6-977c-f1d29d249de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cd8e81-3c33-4f48-a176-6a439e0aff4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24d50f5-7eb8-48ee-81e5-94f500b40a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72caf221-8635-461f-ac43-00896e7fcfae",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60116662-9ee1-48b5-8474-0ca00420b019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72312c3-2c90-4eb9-8b94-201ef94555a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77c32b7-97a5-4cef-8157-dfa05a990a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c59278-aa9b-4524-aa06-b802756c6372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b480669-280a-47cc-89be-b56e45f2d4c4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc11f07-2658-4c88-8525-56692d8a73ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498f0879-f725-4f56-b4f1-80f4abf56e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce09c5d-3ebe-4397-8923-74499b4c1785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7012af8b-29c4-4287-8a1e-f0ae214a41df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bec4d1-f1f2-439e-af94-32c5aac28094",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0db7ca0-03c1-463a-a765-dd8667e3b25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4025edea-8523-4ab8-a7eb-10bd66c586bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaf14c7-f8e1-4bb8-b7c0-27aec2b4c98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1180501-4819-4dab-bd26-8330e3817ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2618c627-aa17-4b65-bece-7909089742da",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf4ab57-68c2-44ee-8897-92e299a6b537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b291d5-380e-4826-9045-f653433795ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf796573-0bfb-4733-b9e0-7632685c40b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e00d405-a627-4668-9b2a-e4583aa48313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc4f20f-243d-455d-a322-a8c5ce5459da",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173ace38-12d1-47c8-8bc2-c9594a12b273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d74d70e-62bc-44da-a552-ba8e024c8751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c029a4e-f7ee-425a-a960-225f13e64283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f28a51-90e3-4206-b812-e7fa75978802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62c8a4e-385e-4a64-89a6-4131af1f361b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19d1a80-8277-4fae-9238-f52fc7496dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6260a8-f391-4f75-95d0-7717278f5c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84137c55-6cee-4092-940b-796b0a863661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9961d05-a724-4b7a-b960-8841a0aa54f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644150d9-e76b-4505-bdde-339c292889a7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673fad75-3a6f-4cba-964d-94d2119817fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19506dc5-7ba0-467e-bc80-74abeae5c547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d8c369-c44e-4b2b-ac96-2e43e05ab3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd61c3b3-2016-4268-b3c7-6b69cefd8f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded7a80d-8ab0-42e6-aae0-b12591b9ba82",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e53162-0b7d-4639-86cd-3c2b192e0401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae79cc4-ddf7-4880-bee9-7d47a1851c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5ade54-bddf-467e-a3f4-11ae3077fa28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1f884a-4bd8-4175-a940-d2742183511d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8117eed-2b14-4df8-91f4-11328a3e42d0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9a4324-0118-45ea-ab3a-79e6d3ba2d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ddaae8-bda3-4bb0-ae82-0d118a783113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0420a1f5-1c91-4a7b-8fc4-91cc873ddf02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f648a18d-46dd-4e81-b579-9bc02f5a03b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8310b763-82d0-49e7-87d4-4219a7cd9ed2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3a44f2-5507-4a5d-92c1-5a8d79154f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cca907-1628-4c3f-83a1-e96567cf8b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9522b00d-2338-4b73-abce-d2f1a80a60cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f033e695-4240-4541-9c32-75b8836fd866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16148ee2-9393-490e-ab38-b4e1bb02be90",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02f2d2b-3094-4c18-907e-2057cddeae01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee67135-d9f3-4b96-a324-df10ecf831aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a805fe86-6970-4379-a6c5-2ce1b30206d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09061e39-1f28-421e-82bd-d848391e33dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f51bc7-bdb6-491c-a0f3-eb226391c6c8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4e31d6-34e4-485e-875c-636b77daf994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f756f8c5-0c34-41f9-8695-2f2eb662d5e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d8d892-c2eb-4334-a52a-df89665a4da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e29c1a-025a-4ae4-8f3d-bc1d0ca3ad65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025a82bb-81a5-4f23-b4fe-a19ef2849302",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ea06b7-fa72-4732-b569-deb6b577c94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300e54ce-2b1c-4399-b14c-32724a1a6732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27591a86-10a1-4597-94b6-3e7c88d6477e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544e9340-26a9-43e2-940c-9de9b29c8a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01e7537-6522-47d2-b6d3-46efb545d28b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3f405b-04a3-45cd-8e68-f7775b681e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516ea1cb-996f-4b0d-a332-c943005b66d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8822ca-29e8-40df-a49b-be6a3d292a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a816f2b6-7aa5-42ea-8bb3-795ed7ea956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7c11eb-ed7b-4e4b-bf2f-e88327ec1f99",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb0f640-5219-407c-92d3-47dc2f905599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2928edcc-b1e1-444d-bddc-6e74e2c3ddf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f320491-5ada-47ea-9fa5-5d3e6e005d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b83704-8d9a-402b-be73-13a2d8a10695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae847a1-6f2b-41cb-b992-657e26a0c766",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1568dd03-0330-4cef-ad50-60b58b4cb97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35881fb0-e266-4662-9f42-3b77291d9f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864b153f-c27e-4f54-a77e-34cd043431e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66be730-a3ce-4c59-9697-037cd52a6edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd2dc89-03f9-48f1-8393-d4b719c6d1dc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1679e4-8cc1-4b5e-9248-67e016526d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f980fdfd-8fc4-401f-a802-6d14252ea492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bf9f73-0cf3-49c5-aeba-d1796c15945f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81ed3b4-81f6-4f78-89d3-82338ce26d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04163c6b-93ab-454b-9cfa-a42a93644b9f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374a5f58-c30a-4bed-918d-0225ff7123b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9682b58e-3338-4a3e-bee1-d139d89e0469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fbea25-e9c2-4f0c-9419-14ff2b7bbf36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bc540b-cd63-42e5-bfba-2d2711948dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fba49b9-082b-4f06-9961-d0467ba16aad",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f662feb-a818-4669-b249-ad1f2b28099d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426a09fd-54eb-4625-8352-6bdce09feccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1230013-2450-4a66-b38a-5c742480328c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746144fb-392e-456f-9e0e-86756e799f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd72a35-f7c7-48d2-a2fa-f477d7f391c1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e6bc2d-6d5f-468f-97ff-1a79c94bfa26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d5ef3a1-c368-4ca4-8b7e-bcba81d3f008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baf432e-7458-432f-84d5-d09cb4f893b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31c65f3-f8aa-439c-9232-f6c8ae026604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34511506-166e-4560-ab34-4450c13cb212",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527baaab-d47f-4b4e-8fd8-031a0be755c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a468ef1-fbb0-46df-adf7-1a6fcf361bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f013f78-f7c1-480c-bc35-edf9174cf23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851f2176-23a0-43e2-8fc6-5e3ef29d33c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74d31d8-e282-4c78-a9f4-8f9330918f51",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af422f4-920e-4d0e-b8e4-2035e6964ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3754b7-75d7-4cef-9fec-b6021a514aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30269886-fcc5-42d9-8fb0-eab2e7550926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4651493-dfcb-4b2e-a5ad-faed98db6c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ded7641-13d3-4412-9d3e-647f0ca39dd3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158ca4ee-4750-4691-a5ab-974c461fa776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5ce253-76e7-48b7-ba7b-c1e063525a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c12e61-4447-49be-b856-5448f8712566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157327ff-046a-4cd6-a8e3-b06dbec695d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fd966d-2600-4a63-9494-25c867086fd9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f63bc6-1559-4e09-abdb-4641069e25e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7addf34-612c-47d7-9c76-b485436d9dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cd7aee-6fbf-424b-92c5-0b12abe4f51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7244ae74-a783-4115-9b0a-619be3596633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fd4fb8-9a80-475f-b33b-7edbfe3b8d9c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886c5f36-150c-46bf-82f6-8a32062e2d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960385d3-aec4-40c3-a549-552c2dee98a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34566878-88c8-4635-aa4e-01414bcb7e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf51cd6b-1dff-413e-a279-ffac6e708e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4922f481-b224-4759-b5a7-ce293cb9a253",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b29ba3-9aa2-4203-9606-cebeca3ec7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294c09ab-8a66-4e03-84b8-47da6b498821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdeac43-783f-40d5-8cff-00b609a91055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f2671a-001c-406a-82b4-c1f5e009caa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b61f00a-0adf-4434-b472-c8db6f044d16",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e34371c-b2c4-4c52-8573-c723024adb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c814bd7f-d20a-4f97-8498-1f07e9d705fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a544f34-bf8b-433f-8db8-252f3a33828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9c459b-3a21-4b13-a001-c11665b5ee47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fd9aff-7ac0-41cd-8d79-72d206a095df",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc33838-39bb-4ccb-8c89-abbf9893cc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb4b459-13b1-4346-b2a6-49d5a310ed90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e672926-2ac9-47e1-8175-e83dc323dd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78873ec-d329-4709-b9f6-1e1c0d44bb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09270b9-dbe5-4c36-add0-3b5b13edb54f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1637f74-5790-49d0-9e7f-6a762f78ced6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac426e6b-fa65-4c2f-a212-46bf06135520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a52ed75-2ac6-476c-b1f3-6ead40baa66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74845cd2-e68e-45f2-8be7-2d6dd1fbeadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e1bbf3-2b78-49fb-9956-52ad163bd8e4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce172d7f-48a8-4b54-9bb2-3cbd71fe2f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6da5627-cc84-4311-a755-d0f289a44529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7a71d4-6f5c-4723-8dfe-53045d752b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0000a2e9-8c83-44fa-9143-d1490f77547d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659cc3fe-04fa-46a8-bfdb-91e7eb5af0ee",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd699f1c-de5b-49cb-89d6-fc6c16cbc503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ea79b1-f501-404b-bf42-0974a35ed8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511a649b-e64c-4256-9c62-804785804935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd18456-bad3-4aa4-9f73-4b61caaf5843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526fb15e-a36b-463b-b9c2-ca26bcd1576f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97b150c-cb8e-4296-a589-19e94bebdb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1de271-86ce-4fb1-876b-b7b65ccde547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4063b59-8187-41ef-9d4e-f88cd4ed5407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63af610a-77a3-4758-9654-dbbc2930a3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8f6a67-e300-4a69-95e7-216a1e9edbc5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d183cb4-d39d-4d1f-8af9-222cfe2890b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7154369a-02b4-4245-85c6-ceb223b2a3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93a079a-7d9d-444b-9da6-8b8b9d8488f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810d9ed4-ada0-463f-bc17-999860c09eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a2f768-d260-461d-8b51-73239843754a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46d5f97-095a-49f2-8950-78aa99fdf4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c59a17-7d39-4f06-8620-cd70352fb395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de30f2-e012-4e40-8f5e-bf1ddecdebbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f1191d-c463-4859-98a5-79b6c0c3781d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f146a6b4-3458-4056-9807-921bf5afe599",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5088c4-a7c5-4f41-ad59-3e48bb8ec040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef3eea2-84cf-4640-982e-0ae0936244fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b752dddc-6578-4f38-b043-7473f95889d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993ab644-422f-452f-a0cb-1df05f7e19fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ab1ffb-0e47-4f85-8202-7b2b97a73031",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb41bbb-e7ef-449f-93e3-bdc25a105123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183236d9-5275-40d5-aefd-bbeff9b95dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36923db-7dd1-4335-a05b-1b47923007d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b69bc3-526d-4d3c-8fb0-6317d83eb971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beab22a3-a2f0-42bb-b0f2-422e553f6957",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d912c87-f3d6-4e10-8663-b76d3afefbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4917deff-2693-4dfb-8204-fb8227bf4ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb286d4a-8a80-40e5-b250-51e90f77a486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b25dc6a-506e-4a0e-a157-2244b98545c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6c6dc3-bec0-454f-82f1-3ab31474940e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9108798-f28b-4734-ba02-58b747476804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3e8542-ced8-4c6d-98ed-4876e20e3122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05f9942-943b-4f85-a189-1d7ad12cc4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2df23c-a373-4727-b730-007e6b669403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1476747c-69d6-47d8-bc69-8b8b051b961f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8ca6e0-87af-4d10-a52a-0eabbf57f018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e1d67d-5e01-4874-b600-273f19e16651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a314eb7b-00e9-48e9-ac2b-4d402ba2136c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299df7be-42a1-4475-8a79-abb2cb020bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc41713b-045e-4338-bd2f-ce77c04dce9d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a23dea0-74fd-4e8d-8d7d-32d5dc4275dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d000000-f3ab-43c1-8dd5-caaad3815f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508f376e-9d59-4c21-93ff-9d3d0e41d779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689ee1da-ec65-4cf3-9999-73463b2bcf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6709fa74-a90a-4c19-b6f5-6168386d45f1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70b14e7-7827-4589-880c-589b2e3bd000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87711da3-3a8f-4f7f-b2b8-46deae780f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4c55f6-a2b6-4a7e-889a-d865227c485c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c2d5b9-df3e-48d0-9fdd-e90adc3fe693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fa06ee-c0e5-4449-ac8c-bf6bfe912409",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7147d262-bfce-4fb7-9e92-da73200b24fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b786fa-7016-45e9-8a5f-87748c3bca00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01fd191-283e-4999-9d41-7fceb4e3dd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8ccbd9-5c50-4eb8-a77b-c8efc69263a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdf07c9-bb3e-4932-b5c5-ad9a3efb3caf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05596125-204a-4035-a668-bb64d2a35d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e9703b-6188-4883-aa3c-78c5c45d8b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b4b912-02d2-466d-94cc-f7733a3a7703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d21b31-b31c-410e-bd58-cd32f1e7ada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c996f15a-cbcb-4ed3-937e-c0df7b677c3c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be5e5f0-91c2-4f0c-b7b3-798fe640724e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72912ff1-e1b8-4980-a51c-f7aca5cce76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f8bf9b-ef59-4772-8b51-04e30e5e0a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be133a7-3474-4753-bcdd-2b76606d6357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85a04a8-2bc2-431f-bb97-3407fd6d7b28",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1771c98f-3175-4c86-a839-8de3c5e7a928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b8e026-ba21-4637-b708-fcb97e02397c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75d4e44-384f-43c9-9479-5743e77903b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199c22a1-f1fa-4e2a-bb5e-2db58c69fe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9024a2b-fc47-473a-8d31-4f761038b4ba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0767d0fe-c6f2-41a7-8b69-536dd8ad1769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc689cb1-0b0a-4349-b7b3-5c56ea829b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f2a86-c7c2-414b-8bd6-a6ce8be644e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37df53f1-f1c0-4302-8a95-57f66e5c9de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053fd38a-639c-4b1a-80ca-74d43037abec",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56a6fb8-bb91-414f-8e10-9d72e2cb90da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc46a36-d998-4c5a-83b1-593ef52fc128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923e2b07-9a04-4133-a1e2-8e0f68e4aefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fcb8c0-61f4-4512-89ab-8a4d5cd3061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350603ea-de41-4553-b1b7-52aabc863f1e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b63588f-46bf-447e-a428-f33de0cf78d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3c5635-a1b9-4fce-923b-2a520b41487b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7116c9-06df-4c95-be8d-33cb6f2bb33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596b7d58-a303-4ad0-9148-a8a76378017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0326a95-acb2-4aac-a3f8-5a9868792551",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f000d06-35e9-4d61-a6e8-29f1a4b78346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0ed1d0-338f-402d-a76e-c6ac64b46b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac28a837-2381-4631-8eb3-3c152c1777b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fab490-d942-45af-bf54-4b94ed39416f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192c4715-e14f-4764-a9f7-7eb7b535bc7c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684ace9c-1acf-4953-aea0-89efbea4dd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde71507-a40b-4a8a-8a1f-8b615f89ae2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e78810-0aff-4f16-8772-14557015f968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc2b133-5670-43d2-a9cd-9ec8feedacd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc34151f-87a3-45d1-a01a-2e5de10edac7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb409412-0d96-4e0b-a22c-34f2c77d2efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3cdca1-85e2-4cea-93ba-38886083d7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c84403-d079-444d-a748-2a1c970bbaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799e2a9b-6f8d-4b6d-988c-e9074be5a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b3eb79-daae-42be-98e2-634d361fb9a3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bcc4f8-ce83-49de-b827-cd1a3c0b2764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071433b0-d0ff-4cb7-b724-8e190c8c23c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4603fdcb-b1cf-40d0-8f87-a3112f7bb47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5cbd778-2519-4fb6-bd98-9032c77df92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5289d4-1edf-4d53-8891-45a9640cb1fe",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427d412c-2339-499f-86d9-4aa16dc42c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c588d39-064a-4899-b1e5-5dd00ef73892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dba33d-8c92-4a32-81cd-ce95ad97d6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495db9cb-eff4-4054-9cc7-5dfa46ed2692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eb5229-4d09-4e87-9084-abc95ecb4da5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9f263-5194-4a89-bc8a-f3e1727cdc4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c22738-fd11-42f4-86de-e4da3ea35461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584e6e3c-427f-40a8-9bd1-2ca517655fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52610046-5946-4a15-8fbd-1f4299e3c841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a7ce12-3a4c-44e5-8f07-9f0dd9b4e51f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a177270-f7e6-4340-99b7-0a97575f0491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70c8fc10-5e8d-4650-9699-4258398becdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c96c75-b2ca-40d7-9269-cda3f5f6d5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8925fa-a233-4352-8142-9df4363a8cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2284bd-8f96-49eb-a040-9b1afb49c87e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211be61b-ec75-49b0-962f-73d1e82cd4b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecd5c851-06d9-417e-af26-96cc814edf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b13bd2-914f-4398-84eb-92eafdb90c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e780f56-81c1-40f5-8868-8e7e6894f5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557363ce-d1d4-465c-a93a-24835a11608b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7849437-f5cc-420b-83d1-289f1bf131d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d6208e-728e-4663-9781-0a7c776ae1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e39a21-738a-481c-a0c0-aa2917701e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe83423-e9c8-411c-b8df-09e5d78b074c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07144e73-5ef5-4a08-bbdb-aa0a6ef11a03",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072439f4-aec5-48dc-bf11-e310d92e34a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8933de1-5888-4e61-8fc9-939282a715cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a803491-4d1e-47db-90ff-c34c53cc804d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6c89f5-0fe8-4047-85f0-b4697ae51d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533c548c-5049-4684-85f4-282fb2de1d31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56512c5e-0a59-4e7c-9d61-9833a5da3591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96273c74-744f-41f7-b7fe-c2bf991ccdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271709b0-00af-40c3-b5f8-8e318eb73756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832aa91d-6fe6-4ee1-ae62-fc3f6ec36761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117ac12e-0c51-4dfb-8dac-5a0537cde354",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5894e2a8-c643-4ed9-8074-c5c82cb37c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7939c9-3a6d-4494-9169-6370b8dba524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8612ab75-0e3f-464c-9c82-d371666f31cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cda9e43-653c-4d1e-8bb9-d6bf98c58bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c1b7fc-fa9b-4d4c-b634-56939d94bbc9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fb19dc-403f-4dc1-a0e7-6fd584101812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "714e1952-7b38-445d-9818-f8c0a1f96ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2169dd9d-d32e-4967-bb1d-6ae5524691ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f8e859-f590-49b9-ae05-66b8c93f6dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89654aa-5b76-48e3-9ff0-0b1dc4848b2f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d9a85a-12a9-410b-b7bd-34b1cc58835e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6543fb10-b5d6-4d6a-ad4e-e4bf81b27cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a2f942-472d-4d45-9977-e85b55be997d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c1bf50-3f0b-46d7-abcb-9f011b194140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b0409b-475b-4129-a048-9aef3403081b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea7955a-666e-497b-9439-3582378b8180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf128c4-be43-412b-999d-fa106998b662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec0912c-606e-4759-819e-6d9351afdd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f572c0-bb03-4d4f-b6af-225501c10c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dcbe35-4cf1-4009-9aa7-2041850b88fd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde3aa0d-ff0e-42ef-962a-a3a154a3c2b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6062fa1c-d4a3-4c16-9e59-e229803bcd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef7b49c-def1-4083-9945-5941f60a5333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfa4dc7-9081-43ad-8720-70621eb2953c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cb37c7-9fbe-4bb4-bd54-0840cddf4aa0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877326ea-d19a-45e9-80f3-74617107a100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b4cb758-9a86-45b2-b4a3-43cc56e968c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af69952f-3a07-4b2a-9731-03f6d0677c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c249e0-927f-4886-8ada-bdc93ef67e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4a7c94-9928-43d8-be7f-240971547cbe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060d4e56-30d6-40ed-89df-273151dc2370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88013884-f35c-49b7-9346-84ebe0caea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec62bcd1-846c-48d0-8303-95c8621a3f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813b93a7-d243-4466-afec-b56b81436490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbfb42f-8748-4e36-93a0-c1ea474eb8ac",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b52edda-e3ba-4364-8c32-397ad0c404de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00bfe548-fbc3-4c15-88c8-ebc39fa44901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eb8be3-4641-45c1-8161-34aa37be663f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93f354b-f2a6-4c78-96d3-b2f9383dd66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0526ba-a14d-4e34-bcbc-88cb7bc33d62",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae38e57-48c8-4d6d-afe1-29be9719ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edfe71f3-2050-4b9a-a82e-8f50e30fe77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b2ca62-dcd7-4602-9dd0-2f037f76a85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048418c7-529f-490d-8a94-7c5572e46e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3cf014-4ee3-4649-aaed-573273ec4a05",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804cfef2-c6aa-4a45-a5c9-3880a65d79f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25b031f-367f-4b2c-81e9-e8b93708fb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cd5ae9-1455-46d2-ab28-45eb506d1155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b88efa-b935-4abd-b4c8-0f52bdc77ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86a6a2c-7972-4f07-b533-676f984a109b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c420753-9bbe-44c9-9c6c-9f03819a8e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1c08324-7891-4cd6-9cea-62f51e472ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0307d225-4921-4692-88d8-4b4a1e3e50c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf90b74-6900-4f4f-8af4-27f5c0b6fc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9fca98-ca14-4bfc-b91b-87dc5293896d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a238b840-d250-4849-a9fe-d6ce23f19898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52962df-a317-46b2-be65-eae21c25f52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7f23f8-9201-471a-b47f-849a25eda94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff3d113-3370-4b4d-8b1b-0b579e6dda22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adcda4e-dced-4c6f-a591-6aafd9802ceb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a793840c-eb5a-4cb3-8bf5-d568c71431b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ceeb047-a899-440e-9b1c-00a9323d59ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684da071-1139-49aa-800a-b6d4caccd489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6b135f-b86f-478e-9263-72b17bea7421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732840c9-fa44-4d52-a0e3-f6c53aac2470",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19eeea3-b9f1-403d-baa4-7f569147290d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53d9804-c2eb-43a7-a8f7-e363ab8a5f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d07e01d-d0f4-4ba3-aaa8-29afc59fb33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfddd15-47bf-4c7c-8f47-10cf01044637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a7f6a9-62da-4171-89f2-84a5c2380a39",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba6a11f-8648-4635-b257-9f3be8aad57c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db6439d-412e-4f18-9719-bd20fe2c73f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f5acc2-1852-49cb-bb1e-c61bc6f16432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f70364-0fed-4c80-af83-d87af222b021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7449f74e-809e-4d0e-8b1b-af5052e9d83a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7064cef9-eca4-4793-b578-142fc9897aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94889eff-d86f-4257-8062-53c3250aa349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236b7b8a-aea8-44f3-97a2-80e8bc39e1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8be4d3b-e491-4e88-824f-b0cebdc4da98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe89b36b-ed99-482d-9b25-6e71b93e2d05",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fd4f88-e0fc-4d39-93d6-c8543152ee7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d003347c-9f1e-446c-9e03-788851be092b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f7a88a-20c7-45aa-8b16-3e8fcece448e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcec0796-284c-4a8b-9a63-d7d5b4d924bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea03c89-643f-4c47-996d-1a34e570d8b3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cdd896-8bc6-4505-9b02-0c9cfb652428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98aeb2c-0624-4ecd-8602-537e97743b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616507e9-581c-467a-9a5a-884a54aef5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cef9d5c-c39c-43a6-be2e-41fcd284de70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7064970-b7fb-4e48-a29f-f737c24bc887",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a320a81-989c-4bf5-a41a-a45008ded7ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb76f62-c9b2-46d6-8551-1dd743c098c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261e75cd-578d-4a1e-8b86-cd5fbe865cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16711022-9f85-4159-b560-d0a75778636b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65a95cc-3fe7-476f-9469-e57aea14012e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82c16f5-b10a-46bc-a9fd-eef553d75543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d27b300-fd09-48d4-bd21-94c9a027d3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63992587-1fc7-4745-97e7-6da4e8595739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41510544-1285-4f0f-ba71-c63d35688775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ca06dd-7144-4017-9e78-83c64a3c5f1a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7be6af-13e8-41b8-807a-23521b542e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855c6c2d-fe7c-48c2-ae95-199e26b10a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b70a25-1613-49f5-a19e-1f5fb05365f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef3394d-b22d-4ae8-a0ce-4b90c32a8354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee464fc-9ddb-465e-86be-f5ad98a42457",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72803194-d02a-4f93-a1ed-8214f1c14755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4912ec0c-0f67-4015-9f41-b3d9cb24a3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2802db-0132-4ff1-bbe6-2aec1b8d9254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9ab3e0-0919-4fb4-b816-de1f53a423fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc6a40c-6ce8-4426-86f2-cee21a5e4dc4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4495b3-1fc2-4815-9927-b6aa05a4d748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d69b16e-8819-499d-9fc7-2ee2739d9faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53902c72-b4b7-4258-a894-77e4993530fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa907a4-7f02-4be8-bb09-716d2e419fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec4c0bb-9a96-49ef-ae06-1690e5068547",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2014b2-b1df-4281-a18b-44a6e8d6a566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f904608f-9f62-4bf8-9632-fdb91eaae78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181fdcba-271f-4fe2-8e2e-9acd97262933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fb37e6-b7bb-4ba2-80e2-03ae25fa5809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752f07bb-0108-4a57-b8f4-261c930b0d71",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a2d6b4-b36f-4b7c-8f09-262813bcabb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28f887a-f1b8-4eae-8632-23d74f503d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f2b0c0-8d2a-4d5e-836e-4e486bdd7fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c4449d-79be-4209-aa1d-1261305c039b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13768f3d-1632-4aa3-98a5-968153f45bf2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ec5417-b813-4749-b083-8cfe4ab9fed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59ea7d3-6e27-428f-b332-019c80bc4875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733466f6-3d8f-4577-a1a2-29007f8de859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13de6a68-5294-4f81-a877-dd90c4b01934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c081d08c-834e-4876-8ac1-0d07ef7bd6d5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e56ab9f-6066-4367-98df-bc675d8df6ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0ab544-73ba-4b26-a69c-9f7cf9fc1261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b5c26-8d5b-4bff-ab76-58dd616ffe43",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6138bd0-37a0-4f35-9b1a-6a2505d92192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32294240-376c-488c-8a3f-b8f85996bdc0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bfa90a-1499-4a1e-acd4-050fb632c174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024491a0-3888-4cf9-8db7-b25d179e1fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5b5509-c99b-4e42-b537-bc01108c3788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e9c150-0ccc-4d07-851e-c7848f341869"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "236e2a1e-9dbf-40b1-91b9-f3a447992cc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28fc1c47-fbe4-4f16-8dd5-d0a62ed562d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b94d28a2-1c2d-4a70-b437-94f4840f1b08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19c71421-ea15-4a5c-a1f2-1948b5fdfedf"
                    }
                  }
                ]
              },
              {
                "id": "a723a925-a88d-42bd-9b64-b97ea164616a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "361111cd-1c9f-4e5a-b955-f7c96d62ac05",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176195a6-70a4-4430-b603-9c05ff8d2694",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "52a964dc-94c8-4025-bbc8-460ffd85c770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6d6f15-2e8a-4e57-9df2-002a505e1e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "476668c9-180b-4e86-80d7-1a6857de7adf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b3b3926-64b0-4379-a1bc-80dd48e0f78e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "774a977c-39eb-48a5-84cd-6d14c816af42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d8ce44-9192-4199-92c5-14539cd4cd32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e09b94a-f1ab-4d7a-a141-b70735575a7e"
                    }
                  }
                ]
              },
              {
                "id": "cdbb0398-182d-4de0-af33-af9c1e8ca064",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "927bb04c-a983-408b-8703-fb34fc555344",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9512642f-deb1-41f5-b9d3-4cfb3d2500f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f8fd336a-2458-43a6-8193-fe7c0ffd46d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dec0bff-ff70-49d2-afa5-28d0e0281d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ac85b7-951b-47f0-9fb7-19c6ef9c95d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e0791b8a-facd-4dce-9fe1-793e65b6ceb4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08c2d988-a2c1-48b4-8b5a-2c99c294760e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d96e69f4-b0db-4d60-b9f4-3a919e7b963f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "990b2353-0349-4602-9596-8be9684f1d1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d09214d-72bc-42e5-a653-2ac39f0edd73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce0c6854-9de8-45f9-9656-e98ad04d6894"
                    }
                  }
                ]
              },
              {
                "id": "2d062a33-e349-4c78-9323-f4487f5d91fd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcec3a4e-265e-4ebd-ac22-42658cc13231",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70a9a582-f573-4e19-ad72-dc482f1aaddf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b6fc183-2d96-4074-b834-3e5d5092fcfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c37f070-b81f-4a45-acb2-7f097ce48acc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7770718-cc12-4359-a1b2-39ae8dbff348",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6c1e95e3-af8a-46d2-b2ba-51c3a5e2ba04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0557f98-4c4d-4c3f-a231-7b2b3af11019",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcf12456-f207-4426-83fd-f674d7005a29"
            }
          }
        ]
      },
      {
        "id": "2e6b8c99-57a9-4fa8-bd1a-5e875eb39475",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f02e4121-001c-4dd5-963a-4d45d320990e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c229b4fe-cebe-4e0d-8a2b-bb7536338c6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c09b8ed1-45c0-4334-86b0-d88074cb053f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b80e9e-84d4-4051-8f67-fd5f638acd06",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9b292565-2221-4343-ad0e-470ec95fbf6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c0c218-a3d8-4b9e-9b5c-12ed0fd0009e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15ac5855-38a0-46fc-b94a-70f43c75e52f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b769590d-ad2b-40d6-80d2-934720cdd56a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb03d66f-4995-4f97-902a-a795279fd7b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efca7557-9fc5-4039-96e0-f444803cbe6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c1c0b0f-6964-47be-81b7-3ff00d21b291"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4853285b-24e6-4305-9a04-b63dff0a5513",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0e89e288-1bc2-4f6d-9d68-a09b38293163"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "311d4e79-79ef-4d93-933f-3fe3ce8bc486",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78078eed-bdd4-4490-8440-043c68717f7d"
            }
          }
        ]
      },
      {
        "id": "c60c4895-3f76-43f6-b9ee-51559a098313",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a2d4a797-5ea3-4624-8a80-90723f3ced20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b77c28ca-d71f-4e09-afdf-7db13c9a49fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63e274b1-1a08-49e6-8740-3d1bab921bdb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389ac64c-eaf8-47b6-9628-d9227cb71fd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac945ec8-2b19-431a-b92e-544b10a94ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e73e3b-2fde-4bc1-874e-b4503fb8a390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45b85a4e-0623-4b30-aa97-a08ffceef8a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91f160eb-851f-452d-b8fc-71de8979d6c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bd1ea61-70f0-4098-84a8-f53cdcd5d5e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8821b68-275e-443d-a320-97504617f409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ce57bf0-6d6d-43f5-b73e-1f4609070f91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57649575-6c25-4f11-ba35-4b606baff3a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03063ecc-a00f-49f6-94fd-507a99716f8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5edefe1f-61ca-455a-a36b-67737625fb1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "670d2cc6-a42b-4f6d-8286-d703cbcb9bf8"
            }
          }
        ]
      },
      {
        "id": "15dfc9bf-c537-45fe-b8c2-ec1fc616cf8e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4d6f5f16-2ca3-4cad-916b-5ac6c123a9ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27cc12b9-cd79-44e0-91d6-d550b1735637",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "592c49a1-1c2b-46e7-86d4-f1f5bdf083f2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecd0b9d-7fc7-43bf-9cc6-5b06a67c3030",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65e2f34f-c46a-4e3c-a20e-f7a2a4fa6f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a19cf8-5f17-4501-af3e-3b7e9102a9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1f47b4c-3be5-488b-9505-9b741951ac15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9411b129-a331-4909-bafc-20ec33ee8f44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff3020aa-3eda-498b-b53b-9450913713ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c249d5b7-f058-4494-81ab-aa81a0f1eb02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "888b3a74-9be3-4fa0-8f86-871009ffb95d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c40731a1-3944-4852-ba57-f141cb22c427",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd7f64b1-a229-4948-93b4-a37d09796140"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a3a93fa-7ceb-4d48-a0f3-0154024cd536",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d28edcb-f0bc-407c-abe0-36371010817b"
            }
          }
        ]
      },
      {
        "id": "9492bf41-0ec9-4ef1-bc5f-ea728748e9c0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82b4f803-49a0-4538-aca2-232e144d5bdd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7997eaa1-5fba-404b-bd03-28c49d695f08",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "97bc6536-0067-4bf2-acef-c9bdf7f47ff6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38b54b93-5851-435b-be38-33f403db6474",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bac39d63-843d-41b1-9b68-eb78153bfa6f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.46315789473685,
      "responseMin": 6,
      "responseMax": 13358,
      "responseSd": 824.2383722302026,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700613440026,
      "completed": 1700613481500
    },
    "executions": [
      {
        "id": "60b0fa85-9964-4c2a-82fd-ad42b58595df",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1833cc29-fd8d-40f8-872f-f03871872dfe",
          "httpRequestId": "0e771722-f609-46fe-a53e-e58c651f19b3"
        },
        "item": {
          "id": "60b0fa85-9964-4c2a-82fd-ad42b58595df",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9dc0f358-1304-4a55-b589-2ebf4d04c758",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "d414adfa-a7a4-4eb4-a27a-3e1fddb9a607",
        "cursor": {
          "ref": "d0696740-b41f-4104-90ec-ce2ca2600b3f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ee56f8ae-2a6e-4c92-9449-8b8f3577396b"
        },
        "item": {
          "id": "d414adfa-a7a4-4eb4-a27a-3e1fddb9a607",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea78c014-0af6-4011-93eb-223bee9573d4",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ee3d4634-3cf6-408c-a05a-59dd01e24825",
        "cursor": {
          "ref": "6f4de59e-32be-4393-b112-95966eefc2a0",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "903bee2c-1de2-495c-99bd-28007e2601cd"
        },
        "item": {
          "id": "ee3d4634-3cf6-408c-a05a-59dd01e24825",
          "name": "did_json"
        },
        "response": {
          "id": "ac37d024-58d2-46af-9a38-4a1fcb6d3117",
          "status": "OK",
          "code": 200,
          "responseTime": 270,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd4ac9d-48ec-4f29-9290-7f6645993844",
        "cursor": {
          "ref": "0824d4ed-43ab-44a0-b9d1-1f48a2a273eb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e0c37a3d-a402-4573-b0ee-cd6de1736d3d"
        },
        "item": {
          "id": "2fd4ac9d-48ec-4f29-9290-7f6645993844",
          "name": "did:invalid"
        },
        "response": {
          "id": "426638c9-9f36-4ab0-b476-d1891fa2912a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 590,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd4ac9d-48ec-4f29-9290-7f6645993844",
        "cursor": {
          "ref": "0824d4ed-43ab-44a0-b9d1-1f48a2a273eb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e0c37a3d-a402-4573-b0ee-cd6de1736d3d"
        },
        "item": {
          "id": "2fd4ac9d-48ec-4f29-9290-7f6645993844",
          "name": "did:invalid"
        },
        "response": {
          "id": "426638c9-9f36-4ab0-b476-d1891fa2912a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 590,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb77af66-52b3-46c3-9eaf-62a678c9c516",
        "cursor": {
          "ref": "184636df-537b-41e8-8618-968cb515ba06",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "abe63bd1-82ab-4bd4-8447-9ab8218cb2bf"
        },
        "item": {
          "id": "bb77af66-52b3-46c3-9eaf-62a678c9c516",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a6adaaa9-d599-4c44-81a6-6fd24ffd6f70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d76088-1552-4206-b4b0-c5a3e8dc3613",
        "cursor": {
          "ref": "2f1587c6-dcef-4aa6-b178-83e0df6765dc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8d0718b2-d511-41d3-916d-96c7d9470bcb"
        },
        "item": {
          "id": "e3d76088-1552-4206-b4b0-c5a3e8dc3613",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "39ca1100-9730-4355-b1ab-631569741cab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b553c460-d344-42d3-9557-57aea84f6426",
        "cursor": {
          "ref": "ac2a9ba8-e881-4ee5-91af-1574eddccc50",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f5971c7f-89e2-4034-90aa-92d1619c3049"
        },
        "item": {
          "id": "b553c460-d344-42d3-9557-57aea84f6426",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bcf1201b-f89c-46c8-becc-298e8ecc8e49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e0ec83-3691-4fb1-97e2-d804ff17ca23",
        "cursor": {
          "ref": "78bda683-9f60-4569-bdce-cb4f8e4b5853",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "41f12c3d-b06f-47c9-a252-4a8ece068c64"
        },
        "item": {
          "id": "18e0ec83-3691-4fb1-97e2-d804ff17ca23",
          "name": "identifiers"
        },
        "response": {
          "id": "e5f38a1e-420f-466d-b9f7-4404b6652261",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6499e3c0-a5d7-456d-877d-98762e7b0b58",
        "cursor": {
          "ref": "269f82d6-b143-49a1-b722-469e12be11fe",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "737fddf8-52b7-421e-8963-04431583f61b"
        },
        "item": {
          "id": "6499e3c0-a5d7-456d-877d-98762e7b0b58",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f857d707-bb28-4ad7-a15b-02a73f9019ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f3d311-f191-4abe-9d1b-ad3c83ded93e",
        "cursor": {
          "ref": "97d8448a-f7dd-408b-9589-326644abda63",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c8dd408c-5afa-4ea0-9481-25d0c9aff0cc"
        },
        "item": {
          "id": "58f3d311-f191-4abe-9d1b-ad3c83ded93e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "77ee7bbf-28ee-4cab-b655-0cffb057af9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1770aed-1140-4aa7-aa05-dca4064b71a3",
        "cursor": {
          "ref": "0ad63dce-bc6d-4d50-b152-dda2030ad7ef",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "740fde57-8a90-42ac-b076-24d3d27226a2"
        },
        "item": {
          "id": "e1770aed-1140-4aa7-aa05-dca4064b71a3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bb740156-156d-452b-a009-79c69b100763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916eaaf9-06ed-42d8-a18a-e8a477e2d465",
        "cursor": {
          "ref": "77852a5b-1489-4060-be17-9c9e06d71fdc",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "22b341ee-18af-4841-b5e5-339f40d52397"
        },
        "item": {
          "id": "916eaaf9-06ed-42d8-a18a-e8a477e2d465",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bdf609ea-5e46-4856-93ab-ee3c503c9440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4462259b-1807-4bd7-b241-81c522f2088d",
        "cursor": {
          "ref": "9c3c5dd0-bdcb-4b91-900e-8364eb30f136",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "590038f1-6a76-473f-8a48-e53360e69b0a"
        },
        "item": {
          "id": "4462259b-1807-4bd7-b241-81c522f2088d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c545b6c7-066f-4257-b5aa-8f3edd6b8b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7a30b4-3013-49d1-81dd-d5a4a781e40e",
        "cursor": {
          "ref": "85199ca9-31f8-496e-8e9b-444bafdc195e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7686f1a9-a515-46ea-b4f2-d9aafd4a1a5c"
        },
        "item": {
          "id": "8a7a30b4-3013-49d1-81dd-d5a4a781e40e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9a9f197d-e875-46c2-aa84-b2c3479b2823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0606df04-3bb8-47ae-841e-c403c548a478",
        "cursor": {
          "ref": "560fbf96-0b26-41ef-bf73-95bd07622b42",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fa1b5688-0f2e-427f-a4c8-8b100bd211a0"
        },
        "item": {
          "id": "0606df04-3bb8-47ae-841e-c403c548a478",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b657f3f4-ff38-426c-83dd-53ee725f193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32752209-34d2-48e2-8a1a-b15ccbff922d",
        "cursor": {
          "ref": "93956019-beff-4c77-904e-02f20fb69133",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d350dbd1-5166-43a8-b792-9e56a464e1c3"
        },
        "item": {
          "id": "32752209-34d2-48e2-8a1a-b15ccbff922d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2de1bb05-6654-4dfd-aeed-4a213d7d942d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50246e4-a0cc-41cf-b9d0-9e786af94ffb",
        "cursor": {
          "ref": "f1b8a5d7-510e-41a1-add9-42f19eee623c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "10ab2600-55a1-4c57-997e-5ec9c0f77d86"
        },
        "item": {
          "id": "a50246e4-a0cc-41cf-b9d0-9e786af94ffb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f5c098d6-da23-40a2-a067-0db73ab313ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b531cca6-5e86-4137-80fa-dbd201928581",
        "cursor": {
          "ref": "cde10584-5c05-4c83-8094-ed2e9e64c87c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "486e146d-a0cd-42b7-b3ac-77ca11b82c21"
        },
        "item": {
          "id": "b531cca6-5e86-4137-80fa-dbd201928581",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fdadaa8b-a014-412b-932c-9874b38d8c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff244f0-0c84-420d-ab2a-6508efd0a090",
        "cursor": {
          "ref": "db0794fd-fabf-4137-81f3-ff90bd3ac7b2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "228c58ed-5124-4541-bebf-20544d2aecf1"
        },
        "item": {
          "id": "eff244f0-0c84-420d-ab2a-6508efd0a090",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0481282c-b480-427e-a602-15b4ef28ec46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddb8a53-cc5a-420c-931e-16a36787bb99",
        "cursor": {
          "ref": "b782a2c4-eb23-4d37-a732-e08baf3a64ec",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9e882844-c222-431c-b9bc-daa88d910eda"
        },
        "item": {
          "id": "2ddb8a53-cc5a-420c-931e-16a36787bb99",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "080fcba1-7c74-48f7-a129-ce4d31055346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ea6432-3bfb-4a6c-8162-361b9fe3bdc8",
        "cursor": {
          "ref": "172ec862-916c-47e2-aec5-07621f7132cd",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "54d54546-caba-453f-b26e-fe80c2f7f9c9"
        },
        "item": {
          "id": "c4ea6432-3bfb-4a6c-8162-361b9fe3bdc8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1d78336e-e242-4775-93b1-972abc189f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574d1c66-789f-408f-ad3e-7e191801aabd",
        "cursor": {
          "ref": "6f1ddd3f-3752-4d7b-8dd7-3677aa321be3",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7d359244-3e01-41d5-bcc5-ad2216c7eeb2"
        },
        "item": {
          "id": "574d1c66-789f-408f-ad3e-7e191801aabd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6634ffd7-9d8d-4fc4-8d48-efe4a68d360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be44a013-ccca-432b-9f46-dbb38e40ee02",
        "cursor": {
          "ref": "e30a361b-b542-47b1-8ba3-81bbf3140289",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "301e0795-ed70-488f-99af-2f99bd037ed7"
        },
        "item": {
          "id": "be44a013-ccca-432b-9f46-dbb38e40ee02",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2e4e7d93-ffce-4c9e-b818-f86318c6d24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4636e9-d7f1-4fa9-add2-d1d04eb02fbc",
        "cursor": {
          "ref": "07f5f9b5-0a97-4bf5-814f-598b429e378f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2083e6ca-660f-4c18-a3d5-6234c23da600"
        },
        "item": {
          "id": "ae4636e9-d7f1-4fa9-add2-d1d04eb02fbc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "98acd09d-6017-4266-97d8-21d2952b5e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa037d2-bdd6-4981-a9d4-ae2896bc5b7d",
        "cursor": {
          "ref": "3b668577-53ff-4a0f-8461-a0a82d963164",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2102e515-9042-4ae1-9a70-42478c596292"
        },
        "item": {
          "id": "6aa037d2-bdd6-4981-a9d4-ae2896bc5b7d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c74a3984-178f-4081-b55a-ceab5940fe37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb94a044-a643-4d87-8e88-b12bb449a006",
        "cursor": {
          "ref": "dd295dee-119a-4174-b33e-d9e41a195c0e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "adf6feac-f2df-41b1-b29c-86540d6fa4bd"
        },
        "item": {
          "id": "bb94a044-a643-4d87-8e88-b12bb449a006",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "17e0e8f9-b273-4dfb-8426-71228cd6d780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2d1f4f-7ddf-48b9-8e08-ca4acd21fdb0",
        "cursor": {
          "ref": "6a270745-5a88-4088-9cae-b8cfc528e782",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7d7d6009-b902-403d-a181-832be56391c4"
        },
        "item": {
          "id": "bc2d1f4f-7ddf-48b9-8e08-ca4acd21fdb0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fedb1840-ffef-4780-a4d4-8c294863bc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05fb0e1-a152-4af5-8f53-007c517cc6a7",
        "cursor": {
          "ref": "24bb54c3-ad87-42c3-9826-c1112bb1a768",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b97b2d9f-64c9-4915-8c79-f668617eda4d"
        },
        "item": {
          "id": "d05fb0e1-a152-4af5-8f53-007c517cc6a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "118fe1d3-af1b-4aa9-b134-fc1635b5598f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a2422-ec11-45fb-9aea-aff7863fd2fa",
        "cursor": {
          "ref": "b9942970-6b31-48e5-b1e3-8a3cb8ec6cb6",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47d172a6-737e-4107-a549-5a7cb112a89d"
        },
        "item": {
          "id": "7f3a2422-ec11-45fb-9aea-aff7863fd2fa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cf7a077b-7b4f-4b0f-bcf1-483ea40927ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4619b99-d9fc-4747-bfb4-e57e0ea42748",
        "cursor": {
          "ref": "9795adcf-0b05-4b92-8026-9c1ee84fad2f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ac865e49-45ea-4c91-8d8f-a838f09cc580"
        },
        "item": {
          "id": "f4619b99-d9fc-4747-bfb4-e57e0ea42748",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8badaa63-c875-44c1-88a7-9531c3cd6164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac61de48-6e99-408c-ba39-0860966a2780",
        "cursor": {
          "ref": "46b08df5-64df-410f-9c06-06896895e595",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0ab79746-1a11-4806-a885-4334a358eced"
        },
        "item": {
          "id": "ac61de48-6e99-408c-ba39-0860966a2780",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "336c1670-9fbf-452b-9a3b-168f1d7bd513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1270a8f1-f2cb-47b8-9c9a-6884811fa94e",
        "cursor": {
          "ref": "e055f81d-f611-413e-918b-8868bfb3940f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "38c11d7f-29a5-4f37-9983-26c198c8807e"
        },
        "item": {
          "id": "1270a8f1-f2cb-47b8-9c9a-6884811fa94e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6b98b49f-6237-46e7-a5d5-2be90ae68a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffb939f-b333-4cd0-8d59-10582895d58d",
        "cursor": {
          "ref": "c3ac1d33-2f9a-47ba-8cbc-e787b29c58ae",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8a529ba9-d2fb-4ef9-9c65-d2a66130a7ac"
        },
        "item": {
          "id": "5ffb939f-b333-4cd0-8d59-10582895d58d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b397d0f1-3160-4ea2-9fbf-744f7e49d673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a502dac-2b2c-4754-b773-ff22bc1bd484",
        "cursor": {
          "ref": "2e95ed1c-d487-4d85-a71a-8641f196b9ba",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7d6dc343-4cc5-4c9a-bd50-7dcec3d1b024"
        },
        "item": {
          "id": "6a502dac-2b2c-4754-b773-ff22bc1bd484",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1fdb10cc-fd1a-4b76-99a9-2ebcf0f0482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c36aefc-8337-4aca-91ac-183c9755f528",
        "cursor": {
          "ref": "8d2ad8b4-9516-417a-b661-1e53fb44fc8f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ef927f6f-83d3-40b8-93c9-53a9192fed8a"
        },
        "item": {
          "id": "6c36aefc-8337-4aca-91ac-183c9755f528",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8578cf83-c939-4b15-8341-e146750c7dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2d14c3-ffe8-4698-a1f9-e92ea2b5cc5e",
        "cursor": {
          "ref": "3af15db3-7bd7-4e1f-b32f-2862c830046e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4460fa80-8beb-4522-a1b4-a5310f91d009"
        },
        "item": {
          "id": "8b2d14c3-ffe8-4698-a1f9-e92ea2b5cc5e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "74fa9daf-558a-4512-8643-5e8b03854087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d758f908-0776-4c72-93fc-c624decf6e0d",
        "cursor": {
          "ref": "a4939659-c5d0-4cdd-880e-162866d14e64",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "719bfd73-32f1-49b5-a46e-2eee749f6e15"
        },
        "item": {
          "id": "d758f908-0776-4c72-93fc-c624decf6e0d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c3228a4b-acd7-41de-848f-d9adb2ed9f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5776b557-97d0-452c-8a1b-2d290003d5e2",
        "cursor": {
          "ref": "73d46d16-3b48-4aa8-993e-83dc306bbce8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "483a161b-bab8-43be-af49-f2a28af8b954"
        },
        "item": {
          "id": "5776b557-97d0-452c-8a1b-2d290003d5e2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a29c53fe-5fff-4b0b-9e85-3b71a9955a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2bda2-9a41-4196-91ab-945167d64e0c",
        "cursor": {
          "ref": "68118157-926d-40a3-a132-d33c8b6956d5",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "94044458-226c-48a2-9e7a-364babfe75d7"
        },
        "item": {
          "id": "5ad2bda2-9a41-4196-91ab-945167d64e0c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "08cdac34-a162-4d18-aa23-eef26c0cd1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982be0d4-22dd-412e-9777-dcca5af30e71",
        "cursor": {
          "ref": "664844df-5380-4dcd-aaa9-e4fc607d701f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3f90063d-f73c-4842-94f4-e186989a2711"
        },
        "item": {
          "id": "982be0d4-22dd-412e-9777-dcca5af30e71",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "648114d8-c8ed-404a-bc27-4a53f3798005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777e80de-2fec-4ecd-84ec-6c389a4b471a",
        "cursor": {
          "ref": "55fa7fe0-7a97-4a86-b4b8-b340021c2d1e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "31fc5308-88d1-46e7-b275-b0a1aa2f1879"
        },
        "item": {
          "id": "777e80de-2fec-4ecd-84ec-6c389a4b471a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "36424283-9d53-4b51-b7ac-9c95a34ccfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2795cb89-d29e-4dd3-93bf-59bff8d4ff13",
        "cursor": {
          "ref": "97ec97cf-4420-4163-86ac-10464a02e8d1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "76d0fa3e-9900-4f21-af57-ab5604eb7019"
        },
        "item": {
          "id": "2795cb89-d29e-4dd3-93bf-59bff8d4ff13",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "923b311a-7600-4b44-9e37-60a9ac1305c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0f4a1c-04b9-4f94-a117-e99c07a0546e",
        "cursor": {
          "ref": "602b92e2-8d8b-4fdb-813a-a1a5fd4e41ca",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "640108da-04ac-4a14-ba72-a7d9746e6994"
        },
        "item": {
          "id": "ab0f4a1c-04b9-4f94-a117-e99c07a0546e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "af2fdb60-fd8d-442a-b009-42bdf81e8340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabff8e2-05a4-46b4-ac16-d0b8cc2a5e91",
        "cursor": {
          "ref": "43554c93-41ca-4442-8088-2e9b06b205b6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ea975616-d46a-4bfd-b36d-b83142f5e9e6"
        },
        "item": {
          "id": "fabff8e2-05a4-46b4-ac16-d0b8cc2a5e91",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a4521726-f50b-4cf6-baf3-185a007499f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e12781-401e-47a4-b25d-897eda198f65",
        "cursor": {
          "ref": "51cc73f2-c85c-44e9-a876-4620d2ba33d9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "14f8185f-bf08-49ff-b2fd-6c685bbd89ab"
        },
        "item": {
          "id": "12e12781-401e-47a4-b25d-897eda198f65",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8e99e78d-df19-438c-8600-cfdef5742453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a387a813-61af-4a07-b4b3-6b484e5edfc7",
        "cursor": {
          "ref": "2b1e7e4e-bd22-4364-8dce-da7e27fe2b4b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2458733a-2afa-437b-b964-7f62b7d36dfa"
        },
        "item": {
          "id": "a387a813-61af-4a07-b4b3-6b484e5edfc7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "94dcced1-95af-4588-a56e-b35de9b33373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd5e0ca-90c2-403f-a9c8-3dad577823f5",
        "cursor": {
          "ref": "fdda54ac-0ea2-44e1-beaf-0fa6e4fe0f1d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1c7a4cbc-9136-446d-85a7-2c0b225424e4"
        },
        "item": {
          "id": "cdd5e0ca-90c2-403f-a9c8-3dad577823f5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4c2dd475-4f90-4c75-877f-3ac379a612ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a503ba85-ea26-4e8b-810f-5c7ea9b06f6e",
        "cursor": {
          "ref": "3d83f10d-d776-4a59-8098-0d11f3b19199",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e9b83bac-ea13-4fd6-a4b8-26a8b03b05d9"
        },
        "item": {
          "id": "a503ba85-ea26-4e8b-810f-5c7ea9b06f6e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d4b98f05-d4e4-4e42-81b6-dcca1e1b7454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30846fc-272b-4d42-a4a6-0e9707d08e3a",
        "cursor": {
          "ref": "4a4ff856-88a2-419d-9a5b-016ff8f81d05",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "efbdf798-dae6-4b18-9ae1-3e286369b561"
        },
        "item": {
          "id": "d30846fc-272b-4d42-a4a6-0e9707d08e3a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "25a59a8e-ada8-45e1-8df2-7bed7f57c46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a05dc6-7d87-4a9d-9a4b-f7c0c7be8a1d",
        "cursor": {
          "ref": "10898882-29be-4660-8ee8-b9421f3faf26",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "611a8869-e90e-4987-9659-25350c5b1196"
        },
        "item": {
          "id": "24a05dc6-7d87-4a9d-9a4b-f7c0c7be8a1d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "974f6285-a7bc-4a24-abf1-3eb96c14940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede965a8-29b5-4e3e-9ebe-1d23bcf2489a",
        "cursor": {
          "ref": "e6483196-acf9-4bb0-85d0-82e5fe2581bb",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "973664bd-78a8-4af5-8b98-c8069aed58cb"
        },
        "item": {
          "id": "ede965a8-29b5-4e3e-9ebe-1d23bcf2489a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "89515e97-bd75-4df0-9f64-629042f359ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9e51b9-2f00-4055-a71d-98f303d0c58e",
        "cursor": {
          "ref": "b9096d1e-3e8e-44a5-9bea-24d4dcce5020",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9ceabc75-26a2-4e5d-9e55-8e78e500e93d"
        },
        "item": {
          "id": "3a9e51b9-2f00-4055-a71d-98f303d0c58e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9d000228-556e-46d6-975a-428b856d54b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfd4e04-7f91-4766-85b8-281499e2db93",
        "cursor": {
          "ref": "2e1c5868-10eb-49ba-af04-1583560c4933",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fe67317f-00b8-47e2-9abc-ce705df31a3b"
        },
        "item": {
          "id": "0dfd4e04-7f91-4766-85b8-281499e2db93",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae4cd432-4c9e-4a49-aff3-9a078ac8a79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132e9a16-f741-4c0d-adea-bd255223c95a",
        "cursor": {
          "ref": "637fcefa-c156-40ec-9a50-a71df1c90cc9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f8a18555-4d0f-48aa-aa27-bf52fde852f0"
        },
        "item": {
          "id": "132e9a16-f741-4c0d-adea-bd255223c95a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ae791ca-16a6-4db6-94d0-09bfe2b85ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165841b3-a441-4d95-87b5-e9e74def332f",
        "cursor": {
          "ref": "8123554a-4373-41ef-bafc-1dfa492b1fef",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f78ad78b-5d48-4afc-8a38-0a17f9164317"
        },
        "item": {
          "id": "165841b3-a441-4d95-87b5-e9e74def332f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "af4fa785-ed74-451c-a0b1-21a33b15ccc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181cf117-dce2-4df5-9ec4-21f9314e7786",
        "cursor": {
          "ref": "dc696ddd-68de-4d35-85c1-5465409b8a2c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ef36f5f5-57e2-4deb-b76e-3a94a67fc957"
        },
        "item": {
          "id": "181cf117-dce2-4df5-9ec4-21f9314e7786",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0d5d91d1-014a-48e9-bc0d-acf5a13b38e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45338348-66ed-41cb-b72c-d2c591e4d567",
        "cursor": {
          "ref": "c257eae0-ce03-453a-b221-893de57b83a4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ff34f8ba-de4e-43c4-9e7d-500c3104acd0"
        },
        "item": {
          "id": "45338348-66ed-41cb-b72c-d2c591e4d567",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5da79e2b-cefe-4a9e-874a-8063fa9de970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c4b3a5-56a0-47c2-b12b-e9f1718fb4df",
        "cursor": {
          "ref": "f3a21106-d112-4338-9daa-7ca82ffc57f1",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "90a9577b-51ba-4397-942b-6c61add0bcc6"
        },
        "item": {
          "id": "f6c4b3a5-56a0-47c2-b12b-e9f1718fb4df",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3f56b661-d641-4407-b523-34322b27a561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a01d8ce-e9c2-4067-b4cd-8fa265a65903",
        "cursor": {
          "ref": "86d4718c-c333-4bde-aaae-b487f28a6892",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dd3a3bb0-cd8d-4bfb-a098-bcddeb0871f8"
        },
        "item": {
          "id": "5a01d8ce-e9c2-4067-b4cd-8fa265a65903",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f0bbf8aa-fc2b-4750-83e5-37ceb3db7be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819297eb-5f15-4192-ab7f-6c11299dbfb7",
        "cursor": {
          "ref": "7b2039f8-5c16-406a-a332-503c9ef44aa8",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a16a6608-0f39-4553-af6c-3cb5b0c96926"
        },
        "item": {
          "id": "819297eb-5f15-4192-ab7f-6c11299dbfb7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "186b51fc-132f-4f74-b9d8-51ae7f8a5c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c5325-0254-43f3-8ead-c7df1136df64",
        "cursor": {
          "ref": "906a9106-cc68-4397-96cd-152b9e43ac88",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "75692f6a-1e5e-4d11-910b-4b1339961c69"
        },
        "item": {
          "id": "f04c5325-0254-43f3-8ead-c7df1136df64",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "761bdfb3-e983-4783-9170-445325a9fd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc81d4e-e5bc-4e0c-ae58-f6d43c5aff93",
        "cursor": {
          "ref": "bcd6b3d8-9f06-41b0-a31b-73477846580b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "efc7e48f-b646-4cb1-bef2-b953a1075eae"
        },
        "item": {
          "id": "0cc81d4e-e5bc-4e0c-ae58-f6d43c5aff93",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d166f205-27e6-4192-a41e-2a3d345b4a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dbea22-f0a1-48b2-8c4f-04625f76340f",
        "cursor": {
          "ref": "122d9158-5bac-4ee6-9c6b-0188c4e8eae0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "78f38be5-3f07-45a0-ad2d-d7a67cf2b7d0"
        },
        "item": {
          "id": "36dbea22-f0a1-48b2-8c4f-04625f76340f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "57e6ea4d-ae1d-4c01-9214-8c55bd79259e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63360823-531c-49b0-8af0-5dc623e2d77f",
        "cursor": {
          "ref": "b9c7f3d1-508d-4c6a-a1e7-df0300f25094",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2ffd4b72-c6dd-4225-91cf-e2538c67aa4a"
        },
        "item": {
          "id": "63360823-531c-49b0-8af0-5dc623e2d77f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2a97558a-7f2d-4eb6-914f-2b32c45e730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f2e2ac-b5ff-4b31-972e-d7248506d792",
        "cursor": {
          "ref": "24a1b0bd-a5ae-4aa9-b7b1-ac2f0883dd09",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9722c5fe-70e8-48b5-80c2-3fbacc0108af"
        },
        "item": {
          "id": "e2f2e2ac-b5ff-4b31-972e-d7248506d792",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "52f1ce00-85b2-4de1-9d17-536ce39702b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b510455-6dda-46c5-a395-96cd0a1731de",
        "cursor": {
          "ref": "380844ee-1e6c-47c2-95b4-01775749afd6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b413081f-7c39-4420-9d09-9240c26d01fb"
        },
        "item": {
          "id": "9b510455-6dda-46c5-a395-96cd0a1731de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "723639d1-f12d-4390-bcef-771afe0cacf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aa5f80-5c5c-4bc4-8814-09cf753f41a5",
        "cursor": {
          "ref": "5075055b-677a-4402-be0e-884e08113380",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f665ae49-2a59-49bb-b6fa-848679a218c3"
        },
        "item": {
          "id": "63aa5f80-5c5c-4bc4-8814-09cf753f41a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "22b59040-3b2d-4e09-a149-658d802fef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9115fe8-4ab3-4090-b424-9fc67941e66b",
        "cursor": {
          "ref": "518d9a07-3d85-49bf-ae2c-35e7ec6e3884",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d895615e-65df-4a3e-b7fb-549accde3a8e"
        },
        "item": {
          "id": "c9115fe8-4ab3-4090-b424-9fc67941e66b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "67b9f94e-1367-40d6-8f65-48ef6d1554fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b018562b-a33d-4430-bf89-a9e0edd28d6e",
        "cursor": {
          "ref": "c88f3fd5-403e-4ba5-9570-af2183914542",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "adab4949-b8a1-4913-a891-e066e508e3e2"
        },
        "item": {
          "id": "b018562b-a33d-4430-bf89-a9e0edd28d6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f51d89f1-543f-48b6-a99e-0a1c1b6451e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0023a98c-e250-4b36-a06a-df2ebaa857e4",
        "cursor": {
          "ref": "62100fd8-6e8e-4479-a77c-46fd4fbaca26",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4cb6a744-6ba4-4f78-aff3-1468812951bb"
        },
        "item": {
          "id": "0023a98c-e250-4b36-a06a-df2ebaa857e4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5a72d3ec-52ac-4f3b-8863-cdc43b870718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9706a8c9-3f3a-47e7-ba91-032d6588b088",
        "cursor": {
          "ref": "e8090429-13ea-4278-bec7-b51f8844dcf0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "82f4212e-8687-4d0a-ba57-5c19e0fb598d"
        },
        "item": {
          "id": "9706a8c9-3f3a-47e7-ba91-032d6588b088",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d8988471-a294-4cf0-b4f2-754922fe8e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0918fc58-1050-4c07-a178-b4dea0ee17a9",
        "cursor": {
          "ref": "de355e5e-6295-4d6b-ab2d-6932d380f159",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "952fa4d2-66bc-433b-bebc-3c359224d207"
        },
        "item": {
          "id": "0918fc58-1050-4c07-a178-b4dea0ee17a9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7662c55a-6a2d-4751-b00f-38ca8b5a78f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df65ce36-cf9b-47ac-90a3-7f0a40a6987c",
        "cursor": {
          "ref": "fb734450-7056-4843-bc22-b190bffb1d44",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aa3aef04-d4f8-4ad7-b4e7-d3bba4b8c6ef"
        },
        "item": {
          "id": "df65ce36-cf9b-47ac-90a3-7f0a40a6987c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "300081d9-b01c-4276-888e-d5b2429fce35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb65f2b8-1d93-41fb-be99-1a442d8fdad0",
        "cursor": {
          "ref": "b44aa03e-82c2-459a-ad1f-e0bb6252b82d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9c2e3ee9-8f5f-4392-848a-b92e43dfd8b9"
        },
        "item": {
          "id": "bb65f2b8-1d93-41fb-be99-1a442d8fdad0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f895ebd0-4b98-48f1-9605-c8f503e731a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f569358c-be85-49e1-af19-3b374df75c0d",
        "cursor": {
          "ref": "a4fbd0a2-f9ed-4615-a1ca-34a37b0f5a17",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3ff2be08-44e6-45e1-9447-781313d4e41a"
        },
        "item": {
          "id": "f569358c-be85-49e1-af19-3b374df75c0d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "75cf5a64-6204-4c6c-98ca-b51739adb9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52373d62-41a9-4528-9b16-341b982494d5",
        "cursor": {
          "ref": "d400b0b8-2229-4ff8-ab2f-d51ac1769778",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d255d139-db26-4c73-a72b-807310c1acd2"
        },
        "item": {
          "id": "52373d62-41a9-4528-9b16-341b982494d5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1e9989bd-b054-4994-9683-245c3f69ae65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b43dbb2-e7a6-47a1-9aa8-cd8fd2c95b9f",
        "cursor": {
          "ref": "30a3f136-7f58-44b5-9714-6775cd623b42",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "493605f7-fc36-44ff-b670-a85bc1ce44fa"
        },
        "item": {
          "id": "6b43dbb2-e7a6-47a1-9aa8-cd8fd2c95b9f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c2931ce5-554a-4e23-86b7-ded95780b53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70877b7-8adb-4051-86a6-ab3ffd96940e",
        "cursor": {
          "ref": "7fbbb87d-68e9-4109-85ee-ca7ccf47f708",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9e5d57bb-23e1-49ba-b276-2bd40e6d9b7d"
        },
        "item": {
          "id": "d70877b7-8adb-4051-86a6-ab3ffd96940e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6791bcd9-bafc-4f8f-960c-bb94d0b6409f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1281ddad-b917-4e9e-a3b3-6edece79d6f7",
        "cursor": {
          "ref": "efb107b1-903d-44bc-972c-e7802b6b9464",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cbabe124-05f7-4e6a-aea3-51c5970e8f21"
        },
        "item": {
          "id": "1281ddad-b917-4e9e-a3b3-6edece79d6f7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "32d84ec9-ccbb-4937-b076-603e138ea859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fac01d-4006-4810-8a93-bdb5de78570a",
        "cursor": {
          "ref": "023a6d65-b756-42dc-b10c-5ee0b58edd72",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cf85c308-7b53-479c-b8d8-d15a8ce346f6"
        },
        "item": {
          "id": "f4fac01d-4006-4810-8a93-bdb5de78570a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f851784e-f95a-41a2-9015-bfdba366a4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b260021-c5b4-4ae5-a9a8-f0ce29098011",
        "cursor": {
          "ref": "88f465e4-8a64-4dd8-83df-459424d0e78c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5d91b2f9-aa03-4789-95c4-dc000db29341"
        },
        "item": {
          "id": "1b260021-c5b4-4ae5-a9a8-f0ce29098011",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0c5eaf52-739a-4ebd-aab6-cf0e5734978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056e2463-7450-4713-8dd4-e38a9a10d147",
        "cursor": {
          "ref": "fd55a5e3-df7d-442c-94bd-5c6bffac2396",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "26d7e7a7-da6a-41b1-aefb-6af68be655a6"
        },
        "item": {
          "id": "056e2463-7450-4713-8dd4-e38a9a10d147",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ace51b74-2dbe-4bba-bb62-9fa19b54cf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40082cfb-42ec-419d-a85f-4a1a5fcc08f5",
        "cursor": {
          "ref": "cdb420dc-052b-45ee-8745-435cf210040c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fc5df941-e9d5-436f-917f-cf580e3a3c9c"
        },
        "item": {
          "id": "40082cfb-42ec-419d-a85f-4a1a5fcc08f5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0b1b829c-5202-4bb9-b06d-fdd74614f9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcce23d-11cf-40a3-9ec4-e9d9e589a087",
        "cursor": {
          "ref": "74ecacfe-5d02-4f8f-aced-e29e9f0b6062",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "715b73ed-e686-424a-9c26-aee42dd323dd"
        },
        "item": {
          "id": "ddcce23d-11cf-40a3-9ec4-e9d9e589a087",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dc1b2a67-960c-4cb8-92be-05f89d98c443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9533d9a4-49f9-48e0-92f0-9996ec40f3d6",
        "cursor": {
          "ref": "d0c19d10-132a-4233-924d-f68e29f9296f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9592523a-6bf2-4433-abb2-3a6c19b81ba5"
        },
        "item": {
          "id": "9533d9a4-49f9-48e0-92f0-9996ec40f3d6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "96a4ccb3-6f9f-45b8-b26c-0aa0afa489a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d03b127-201b-4801-9871-ab4917d49fe2",
        "cursor": {
          "ref": "597dd89d-96a8-444c-b140-06123c3f709b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "566a1b94-d019-491e-b269-6d36711de12f"
        },
        "item": {
          "id": "6d03b127-201b-4801-9871-ab4917d49fe2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e9763ab0-0006-4763-822b-db445bb020df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9671fe1c-f3d7-4664-a8f8-57813dad7f6f",
        "cursor": {
          "ref": "f1d0fd73-82e1-4ee7-b5f7-16c9e0de6817",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cab20357-bcc6-4d15-859c-6027cbb2ddf0"
        },
        "item": {
          "id": "9671fe1c-f3d7-4664-a8f8-57813dad7f6f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "482ff22a-d763-4760-92ad-08a50da2506d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da6dc2c-9c5e-43df-8a26-a6d3187f08c0",
        "cursor": {
          "ref": "68e948f9-1ee9-40a7-a4de-ce85923d6eba",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "30513d7f-b5f4-45cf-8903-24ff5fed4528"
        },
        "item": {
          "id": "6da6dc2c-9c5e-43df-8a26-a6d3187f08c0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c848401c-9376-41cc-af64-fe394ea031f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c93449-e842-4ebc-b860-a23ea6762f4d",
        "cursor": {
          "ref": "61a19531-ac1c-4813-ac0e-881877c800ac",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dd01577c-ff9a-4af0-ab22-6d3b3d604dbe"
        },
        "item": {
          "id": "38c93449-e842-4ebc-b860-a23ea6762f4d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6e24e578-4fa1-4252-9152-4378d8f40cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc346e76-f216-4f0f-9fc2-1e5770f68512",
        "cursor": {
          "ref": "a1aa05d0-68be-43fc-826a-71f6d481f436",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ad77b802-f6a4-467a-8dc0-374ea46fdf54"
        },
        "item": {
          "id": "dc346e76-f216-4f0f-9fc2-1e5770f68512",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5674b680-d34d-4820-8fae-d6c94596baa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23ad037-035d-49a6-8387-8a29d62338f5",
        "cursor": {
          "ref": "e596f3a2-fab9-4a0d-90be-1c31409d0232",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2befb88d-0a15-4797-85c5-a87c161b2f53"
        },
        "item": {
          "id": "a23ad037-035d-49a6-8387-8a29d62338f5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "95665de3-a0f2-41b5-895c-9620d6405334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a2970d-49e6-4a79-bdca-117c651b5c5e",
        "cursor": {
          "ref": "2f8990d2-29a5-4c0c-8589-6e63ede15704",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "14ebc4bb-1d07-4b84-8104-854c3ce7915b"
        },
        "item": {
          "id": "f9a2970d-49e6-4a79-bdca-117c651b5c5e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e3b854f1-2547-4cef-93a5-6251886260cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c64764-a266-46d7-a4ca-3c2c3e7ef95d",
        "cursor": {
          "ref": "1ff4a0d1-3977-4879-a5a1-a54f7e37555f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7121e2a9-3665-4175-8c5e-5a8519732d1b"
        },
        "item": {
          "id": "e1c64764-a266-46d7-a4ca-3c2c3e7ef95d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "34630360-70cb-4fe4-93df-6287130a3427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bddded-dcc6-473e-835c-d94eb406015f",
        "cursor": {
          "ref": "d860f881-f100-4503-ad4b-cc712678e6e6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d0600835-0b53-44a6-8233-704ee496a208"
        },
        "item": {
          "id": "10bddded-dcc6-473e-835c-d94eb406015f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b2ebb674-2829-47fc-ae8b-b1e2d8e6d088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ed5097-0495-4716-ab5a-8af64910e14b",
        "cursor": {
          "ref": "6df8f20b-b05f-4992-97f5-4ce75687670b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "88038387-426e-43d1-9e2a-295bcc6df21c"
        },
        "item": {
          "id": "b1ed5097-0495-4716-ab5a-8af64910e14b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "14280bc6-83a5-4299-b092-f4bf6453925a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2513f9-e3e1-4b95-a261-deaee3b9dad9",
        "cursor": {
          "ref": "83cfd64c-d292-4ead-9b29-791eb522eae5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0bf384bc-7294-49fb-8145-caf7637b28eb"
        },
        "item": {
          "id": "ec2513f9-e3e1-4b95-a261-deaee3b9dad9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ace9c836-c33f-40ba-9b03-1451617b2cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22914194-0192-42d1-bb7b-65ce5e386b61",
        "cursor": {
          "ref": "085889eb-c196-43bf-a704-aea0284a107b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1772d363-2d58-4765-8d5f-c860f493a22b"
        },
        "item": {
          "id": "22914194-0192-42d1-bb7b-65ce5e386b61",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "695af61d-ddd0-4483-98bd-b99957403350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83d8cd4-63e0-4f09-993f-8ed0e2ebd119",
        "cursor": {
          "ref": "dd2c3dfe-2af1-4749-b46f-a380e11357f6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a1da9160-854a-46c6-948e-a4ce4ad6c9cf"
        },
        "item": {
          "id": "e83d8cd4-63e0-4f09-993f-8ed0e2ebd119",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d40bc27d-3ef5-487b-8a0a-63f17e9ad766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d192e082-7e82-4fd0-b51e-3886e1deb58c",
        "cursor": {
          "ref": "3fa0b651-5e9b-428a-a2e3-ff3719d88b7b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "43e81245-0a19-4373-a1a8-4cba8f9b9079"
        },
        "item": {
          "id": "d192e082-7e82-4fd0-b51e-3886e1deb58c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4ef476fe-1b74-4448-acaa-57362db6ba8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39257dae-2394-4753-8657-9d9b66b1d9c6",
        "cursor": {
          "ref": "a38b3aab-fbd3-4d1c-a0bc-57cf43a0e64c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4001afae-711d-457a-ab06-9ff126507ff1"
        },
        "item": {
          "id": "39257dae-2394-4753-8657-9d9b66b1d9c6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "74ab3f35-ec1c-4e98-a1dd-06cabf21b7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e1cf8d-fa9e-4e04-915d-76edba4e4dd2",
        "cursor": {
          "ref": "573a4503-95dd-4751-a33c-47cb260f7388",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dcc1ed7b-02df-4d3a-846b-3d9d38521551"
        },
        "item": {
          "id": "b9e1cf8d-fa9e-4e04-915d-76edba4e4dd2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e315ab23-3acc-4f10-b50c-dd03b4f2ad26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfb17a6-4b34-4807-97f9-241b45f873a5",
        "cursor": {
          "ref": "6b6c2334-0883-42b9-b64c-33d0cbbfe049",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1d6719b9-81c1-465c-93a5-cd726498dc17"
        },
        "item": {
          "id": "dcfb17a6-4b34-4807-97f9-241b45f873a5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e812b2ab-9d3c-4d94-bb0d-31e31409216c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "94b579e9-6af0-455d-8224-1291ce5f5420",
        "cursor": {
          "ref": "55210d47-7e21-4d4d-b83f-2afb578008f8",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e3f10dda-48c5-475b-8afb-ad0382b86ef2"
        },
        "item": {
          "id": "94b579e9-6af0-455d-8224-1291ce5f5420",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9bce40a9-fdcf-4f35-a705-09400cef1fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fa618b0e-9715-4c8d-b6fc-05924675d16f",
        "cursor": {
          "ref": "617005ac-a500-4e46-959b-35626186bf86",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7e3cacbe-5227-4de6-841c-a953666ac76e"
        },
        "item": {
          "id": "fa618b0e-9715-4c8d-b6fc-05924675d16f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "43b9141c-49da-4dfe-a50f-eacf052c3b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f6c4549e-a670-4f57-b8f2-58f232d9ba4c",
        "cursor": {
          "ref": "657fe17c-a21b-4777-8ad8-574b00854e88",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "52128f0b-dc3c-4fd8-bf71-bbf3b69a5e46"
        },
        "item": {
          "id": "f6c4549e-a670-4f57-b8f2-58f232d9ba4c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "086787d2-deff-427e-a710-3b4f32e4b837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7888a357-144a-4cb1-82ab-1feda2feba1a",
        "cursor": {
          "ref": "4ce6b949-8832-4ea4-a5f3-e8e9ebfd85c6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e186e4a9-5c8f-4b7d-ada9-2695f0415b04"
        },
        "item": {
          "id": "7888a357-144a-4cb1-82ab-1feda2feba1a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c6b15469-5073-463f-ba87-251f81b4fa10",
          "status": "Created",
          "code": 201,
          "responseTime": 13358,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f65162-d98c-46d0-9c9e-76f98aadb2e6",
        "cursor": {
          "ref": "aee0da7f-776d-4ead-9867-afcff46b7c90",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "85f8c3c4-2abe-4a5d-9fbd-5bd1c23e432c"
        },
        "item": {
          "id": "63f65162-d98c-46d0-9c9e-76f98aadb2e6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b7604f83-6ff7-4d70-a560-0a71bded7166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e79ba351-08a3-43fd-befc-b8e12bba04f0",
        "cursor": {
          "ref": "18522cf4-c231-4cc8-bc14-3029ce16d164",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d73523c1-31aa-4c1d-91d7-0433afe0621c"
        },
        "item": {
          "id": "e79ba351-08a3-43fd-befc-b8e12bba04f0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6e8af918-6751-44ce-91d2-0a785a34bb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3c957472-06a5-4702-af0e-bfa84baf00fd",
        "cursor": {
          "ref": "8158e48d-d2d0-4591-8f3e-7f1dc659ad3e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "237fe49a-6867-4310-8bb9-d277f1f5eeee"
        },
        "item": {
          "id": "3c957472-06a5-4702-af0e-bfa84baf00fd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7e641a2-0734-4425-a0a3-85ee6eae4a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c71c7ff-01dd-408e-ad3b-dbbf438a684c",
        "cursor": {
          "ref": "4d190f47-3443-432e-89b3-03e9520ce8bf",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4a253481-23c6-40ef-9996-4bff0f4be044"
        },
        "item": {
          "id": "6c71c7ff-01dd-408e-ad3b-dbbf438a684c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a2cf8e4c-38f6-43d2-8484-0ffc6cdd2f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4aed25-40f0-4ad6-964a-7f886760040e",
        "cursor": {
          "ref": "ffc58a75-4a43-49c9-8f6b-2bf7830167ae",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1d7dfb77-b390-4e2a-8a93-7bf2665d5923"
        },
        "item": {
          "id": "aa4aed25-40f0-4ad6-964a-7f886760040e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bfda0cdf-5501-4392-8e70-4033c01febbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01ef7d5-53fe-4355-ac08-5adc7934e288",
        "cursor": {
          "ref": "c243cbb3-c18a-405f-85ba-fd9b16665e7a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bdc3198f-b89c-421f-b06b-a537f86d55de"
        },
        "item": {
          "id": "e01ef7d5-53fe-4355-ac08-5adc7934e288",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f9716e19-80b1-4fc4-9738-15ca60c1db4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bd4cf4-505b-44fa-8c3c-827f7ea2fee7",
        "cursor": {
          "ref": "30057c8a-4a1d-423d-9f63-4af0c13efcf1",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "50b8df3d-79f8-441a-8786-c3cd452c58c2"
        },
        "item": {
          "id": "b2bd4cf4-505b-44fa-8c3c-827f7ea2fee7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "158065f3-691b-4d9d-8a90-0dde5c912527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51cd9d6-8c39-4ac5-b52e-24330b07f958",
        "cursor": {
          "ref": "c670682f-aec2-4a62-b23e-d903e67f43b3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "032a4ba6-2499-458b-a494-3da50fbc95f2"
        },
        "item": {
          "id": "c51cd9d6-8c39-4ac5-b52e-24330b07f958",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8dbf62e0-eff0-400d-9a0c-ad26a3527348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072e4885-73c0-402f-b861-87f9fe8b4660",
        "cursor": {
          "ref": "ee15df47-a70f-40ad-816f-f791c93d5973",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b5e5b679-c3b0-4bf9-bca5-dcb38edaa947"
        },
        "item": {
          "id": "072e4885-73c0-402f-b861-87f9fe8b4660",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "52c53233-a490-4f08-92a7-0e7c6b933de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155313b4-407a-41bf-ac5e-e27585e8a748",
        "cursor": {
          "ref": "e0cc65d3-6ed0-435d-a05b-4cab857b5fea",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "18379208-280f-46c3-802f-89611d19edae"
        },
        "item": {
          "id": "155313b4-407a-41bf-ac5e-e27585e8a748",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2c642b97-cd31-4baa-bf5b-d66f5b5a6978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ae0372-3740-480b-aad0-bba39b9d1b12",
        "cursor": {
          "ref": "a6b24972-458b-489a-9795-8389698ddbcd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4a64cb6b-8149-4d31-942d-040d7e1e1192"
        },
        "item": {
          "id": "d4ae0372-3740-480b-aad0-bba39b9d1b12",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "804ee518-d66e-4ba9-bd0a-bf52fc938d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fba8156-57a9-4676-a411-e3b11d90025b",
        "cursor": {
          "ref": "51273d8b-356b-4eee-bb74-b9b65f79d59c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b0678a88-76a4-432c-ba93-3281f1e973d8"
        },
        "item": {
          "id": "4fba8156-57a9-4676-a411-e3b11d90025b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "735443be-90e6-46db-a2c2-34d6e9bcf6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a775dd8-e1a3-43db-bc1b-ffd2eee602a6",
        "cursor": {
          "ref": "9b267e7b-864b-4391-a749-b71971355288",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7a182c1a-26b2-4a4d-a9cc-7f438d429727"
        },
        "item": {
          "id": "9a775dd8-e1a3-43db-bc1b-ffd2eee602a6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bc37534c-1633-4163-a508-6b7c66d8301e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c882bfcb-e608-4853-b489-77deca64bd69",
        "cursor": {
          "ref": "87454a65-e5ac-484e-bcad-afa80310012d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "61a7a66c-daee-4033-bf28-46598ac4c8eb"
        },
        "item": {
          "id": "c882bfcb-e608-4853-b489-77deca64bd69",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "98cdd92c-c9ff-4191-83bf-6545303ac153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245ab604-678d-4216-b47c-6a950fcd5959",
        "cursor": {
          "ref": "28682e11-0920-44f7-bf26-f43cd5201fd4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6b75ceee-8753-4e99-b243-8671e39d340c"
        },
        "item": {
          "id": "245ab604-678d-4216-b47c-6a950fcd5959",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "08796daa-5d56-4f3d-85fc-b77d5c840cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd35da8-827b-4d2c-b07c-a1978cacedab",
        "cursor": {
          "ref": "f1b9454a-b44c-4217-a904-f77d7fc7c4d7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "205ead62-07a3-4fd9-a79d-b37b80a5a5b3"
        },
        "item": {
          "id": "6bd35da8-827b-4d2c-b07c-a1978cacedab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1de38978-31d5-4068-b961-9510512c099b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192c172d-420c-4d12-b996-72f62d06a04a",
        "cursor": {
          "ref": "7d9fc224-4e2f-438c-a642-31a7733625c3",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "905e4960-a05c-43ce-8cfc-66dcd020335f"
        },
        "item": {
          "id": "192c172d-420c-4d12-b996-72f62d06a04a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0490712c-9e8a-43b0-b4c9-f9f342b291ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1117f3ab-7b08-4b3d-b798-c758cf39f14e",
        "cursor": {
          "ref": "07537635-63e0-4687-96f2-fadbb0198673",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8383c758-aa95-4280-ac90-c1e417749ffd"
        },
        "item": {
          "id": "1117f3ab-7b08-4b3d-b798-c758cf39f14e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "10f43563-ae99-4537-87d8-b39ece6165ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55120cb-939e-4561-8b30-18e1e4e5f658",
        "cursor": {
          "ref": "984e7bbe-767f-4d85-ab3c-6517480649b8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "457fa29e-83ad-4d6b-ad36-760f87e08faf"
        },
        "item": {
          "id": "b55120cb-939e-4561-8b30-18e1e4e5f658",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ce3063d4-40d9-42d5-9981-7df2344c8f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72966a8e-c284-4902-8f48-cef84eafb69c",
        "cursor": {
          "ref": "8c606067-2aa7-4c9c-a5b8-7720f1911b58",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "80cb3b49-40ad-4563-b110-79f1a4c45190"
        },
        "item": {
          "id": "72966a8e-c284-4902-8f48-cef84eafb69c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f616a53a-4bf5-4906-af91-2cbc07b8c4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515d1148-d1b0-48cf-8f28-62a6754c9f86",
        "cursor": {
          "ref": "052a78fe-2588-4cbe-9f81-b93301a8d9cb",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5a6ca753-fd22-4dcc-97aa-6040552d0bb7"
        },
        "item": {
          "id": "515d1148-d1b0-48cf-8f28-62a6754c9f86",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "647bb4b3-6033-4e36-a607-49e3b78fc644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3c0ca5-c496-4a47-adf4-0758e3ed6e0e",
        "cursor": {
          "ref": "e6257849-2645-4b3b-92bb-0d798262fe91",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "45cf6ad4-5bf0-432b-985e-160917e835b7"
        },
        "item": {
          "id": "6c3c0ca5-c496-4a47-adf4-0758e3ed6e0e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d74d5b5b-f612-46eb-810a-d4de71b2a8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f6d40a-fa2d-40f7-a475-2da607107402",
        "cursor": {
          "ref": "10ddf285-c3a7-4dec-b9f3-a49840867de5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "821de504-080c-483f-8dce-3d1ebeb0f5f3"
        },
        "item": {
          "id": "c8f6d40a-fa2d-40f7-a475-2da607107402",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "93649dc1-edc5-4e42-91f9-9fc2aa1074a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6a0e30-88fc-4af2-8b58-dc7a34a11072",
        "cursor": {
          "ref": "a6cc582d-ccd7-47f6-b010-823dd9e1b47d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "36af149b-3cfb-4652-b471-ab2cb4f211bb"
        },
        "item": {
          "id": "1c6a0e30-88fc-4af2-8b58-dc7a34a11072",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "40cd8213-68f8-4bd6-a38b-b007b9dd5958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e47ee2-6068-4980-ab50-f04a7630311e",
        "cursor": {
          "ref": "20f756b3-627a-47ff-bb3b-df74f1e78654",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2fd62927-a30d-4dd9-89b0-ede556e9aade"
        },
        "item": {
          "id": "72e47ee2-6068-4980-ab50-f04a7630311e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "06a50525-942e-4212-9029-def507ae29d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7e1639-c434-4e54-8e71-c244ca1879a0",
        "cursor": {
          "ref": "9f776324-8d3f-4df4-a2bd-91ac073ce0e4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4d11091a-c477-4a94-8b68-13640b88db58"
        },
        "item": {
          "id": "9e7e1639-c434-4e54-8e71-c244ca1879a0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dd8b392d-d817-4ed6-a2ea-2b2c78d0e232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a46037-3fb5-4e5a-8916-8849515717f7",
        "cursor": {
          "ref": "85785501-34a5-4a25-89f1-1f6baa2eeb42",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2eda54ef-ba3f-4a67-b2e9-6286920b4eca"
        },
        "item": {
          "id": "d6a46037-3fb5-4e5a-8916-8849515717f7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f44f6f25-e12f-4efa-aff4-da0d399ef5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ab5568-6cb1-4891-95f5-1cbbf33f68c1",
        "cursor": {
          "ref": "52110586-3ade-40ee-bca4-9e09628659bb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6fbcbf74-2722-45a3-abf8-aaa3bedd182e"
        },
        "item": {
          "id": "39ab5568-6cb1-4891-95f5-1cbbf33f68c1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aad0efba-60a9-4dac-b74e-d33e446bc1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0728e821-19fe-4e33-a04f-98fbb4799f3d",
        "cursor": {
          "ref": "ff87ee3f-60fc-47a4-86e5-0c8aa1270d90",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cbe77d8b-cc64-4a27-a04c-f9cdc76556ba"
        },
        "item": {
          "id": "0728e821-19fe-4e33-a04f-98fbb4799f3d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "89bbe468-4fb0-4d14-a7d4-9b78e95f1e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e181e449-60c6-4cd5-96e5-1e500362fec5",
        "cursor": {
          "ref": "a8826a7b-e6ca-4f24-895c-e128343cc1a3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "45e92719-9d25-4164-80dd-8d713cc4da81"
        },
        "item": {
          "id": "e181e449-60c6-4cd5-96e5-1e500362fec5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d0809bba-f920-435c-a9e0-95a2ae9064c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64431f20-b21f-48be-b4bb-4544d3d69b87",
        "cursor": {
          "ref": "f13e1084-29a0-4065-ae7d-f32c307b0f08",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5c1575f8-b4cd-4e16-a623-07c56f754e96"
        },
        "item": {
          "id": "64431f20-b21f-48be-b4bb-4544d3d69b87",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ca6f536c-7a02-43ac-9113-94c869f1b69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364fdf0b-48ff-4997-8bb6-52df12202be0",
        "cursor": {
          "ref": "2f96274f-0312-4be5-a1ae-87426abd7fde",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0a3647cc-92fe-4cd2-913b-935c9882e701"
        },
        "item": {
          "id": "364fdf0b-48ff-4997-8bb6-52df12202be0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "534c3f87-f6ba-4a62-8867-9a5df3ed5a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6a28bf-7436-483a-8e20-cbdb2c7faa6e",
        "cursor": {
          "ref": "9a89b2a9-eea0-44a7-b941-8640eef2a8dc",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a6a43f41-b5a3-418f-92be-3cb6e874b3d3"
        },
        "item": {
          "id": "cb6a28bf-7436-483a-8e20-cbdb2c7faa6e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a20e6e51-76ab-42d8-980f-2b28bd7e3b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e9f164-77c7-43ea-a373-de77cde161c6",
        "cursor": {
          "ref": "88eb0265-0339-4bec-a0e2-4b56d00c2913",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4ba589af-42cb-4607-8da2-b956f8bc6ac4"
        },
        "item": {
          "id": "a7e9f164-77c7-43ea-a373-de77cde161c6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "73da71cb-acd3-4da1-85b2-6e559040b2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36133af-a0cc-4ca3-ad53-9c245878a1e3",
        "cursor": {
          "ref": "09995a43-19a2-4aed-a8a6-4c99577efd65",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "87cc11be-62cc-4247-b48f-b76dff3aa945"
        },
        "item": {
          "id": "c36133af-a0cc-4ca3-ad53-9c245878a1e3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5ea696ce-9ed7-4ee5-9b25-e31b290eebbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7570a2c0-5d8b-4c6b-b1e9-3f9edf5eebda",
        "cursor": {
          "ref": "a7f165c6-c553-4eaf-931b-dfd49d3232a2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fe25bb17-bf80-4eb6-b62d-4561600fe926"
        },
        "item": {
          "id": "7570a2c0-5d8b-4c6b-b1e9-3f9edf5eebda",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aceadb34-2f62-4bf4-b849-a9e3b136802e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dbe678-2f33-4e0e-a21d-add22e8161c7",
        "cursor": {
          "ref": "c5cf7b3b-eeed-4de2-9532-25a4f734770e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "38f2b834-ea95-445d-ad76-725f6410aa20"
        },
        "item": {
          "id": "05dbe678-2f33-4e0e-a21d-add22e8161c7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c84b3e92-b5c6-4d64-96b0-21db13729da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ceac25-6165-4ed3-8f3d-b22911998bfe",
        "cursor": {
          "ref": "e52e362d-1115-413d-b2ce-11f1ac08ebb7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1ac2a2fc-de1f-4397-85ce-2bc21265a31a"
        },
        "item": {
          "id": "e1ceac25-6165-4ed3-8f3d-b22911998bfe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b0e35f9b-0ab1-4ad3-a7f1-b0d8c5de18cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3825a4a1-74d5-49ee-b275-55a280ca1f0c",
        "cursor": {
          "ref": "82cbcc11-3070-4c2a-a503-1fa410792594",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c5c8e631-63e4-4e19-9e65-6ac02d4b8b4d"
        },
        "item": {
          "id": "3825a4a1-74d5-49ee-b275-55a280ca1f0c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f64ccfd1-d450-4129-a2c5-8509f50cfeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8417ff68-bc44-49c6-8c1e-ea4a1e0baa9f",
        "cursor": {
          "ref": "857bedfa-9427-4107-a32f-2690b6722a35",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "45356776-cb86-43a6-9e9a-e6032eecb537"
        },
        "item": {
          "id": "8417ff68-bc44-49c6-8c1e-ea4a1e0baa9f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1fc78f94-f6b6-4d62-9bce-9dfc8a1b6a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76cee60-5cfa-4b56-b06b-bb5fa07811d3",
        "cursor": {
          "ref": "393836ba-d152-44d1-8a88-18f068709b85",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1469aa94-3dde-4b02-b915-9dc8d4583234"
        },
        "item": {
          "id": "f76cee60-5cfa-4b56-b06b-bb5fa07811d3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1056c44d-50ca-4e12-8f9f-490b6611356d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f0b45f-8b43-421e-9d2b-fb942554ed1d",
        "cursor": {
          "ref": "5c7c45bd-649a-4974-bcd1-d7620af873ed",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de6667cb-98fc-45ac-a361-1e257a128f39"
        },
        "item": {
          "id": "57f0b45f-8b43-421e-9d2b-fb942554ed1d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d62972f9-c0d5-42b5-bfba-ee194c51ffa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f39711-3ec5-4045-868d-3b1968a6c4c9",
        "cursor": {
          "ref": "c8c7b8c8-a432-4a6d-943b-06e7209791d0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e6189292-02de-49bc-acd9-fa779ce781b4"
        },
        "item": {
          "id": "84f39711-3ec5-4045-868d-3b1968a6c4c9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "913ef53c-86a6-4844-b2a1-510692afa827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f5685b-47e4-406f-afc9-43aeed014bfa",
        "cursor": {
          "ref": "6cdef800-c0d1-4356-a570-cd3bbbb85cc3",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f2ea135c-cc7d-47ce-b007-4e99e8b6eed0"
        },
        "item": {
          "id": "78f5685b-47e4-406f-afc9-43aeed014bfa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b01b6948-0bae-488c-8ecc-e0657c0fd5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af116414-6c00-491c-bad6-6db30e3f5e40",
        "cursor": {
          "ref": "039fbf19-4043-43c7-ad8d-c7c51ae12e3f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "786e9dce-d4e1-4418-aba0-51434c9d5a8d"
        },
        "item": {
          "id": "af116414-6c00-491c-bad6-6db30e3f5e40",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4179d5b3-9978-4555-94c8-a62383a00850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4775132-9c2c-4551-850f-83396c902ee3",
        "cursor": {
          "ref": "959b7d72-1205-464d-9a19-1e8c79834d4d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1d1fd299-b8e3-48ea-9892-42ef1b1a1982"
        },
        "item": {
          "id": "a4775132-9c2c-4551-850f-83396c902ee3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "935567b3-0d9f-4690-bb0b-8d9835f0a57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53055c3e-af10-44a8-ab47-201dbedf76ef",
        "cursor": {
          "ref": "3a191c54-b5d2-484f-bc54-241bf40d0a8e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4a343340-f961-4ac2-a4b2-110376a7b6eb"
        },
        "item": {
          "id": "53055c3e-af10-44a8-ab47-201dbedf76ef",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ba81080b-7560-42fc-ba49-dbf65177a137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8c1ca2-d1ae-462d-8bfd-df9de61ba62c",
        "cursor": {
          "ref": "29a8b621-3fbf-4f8f-8e64-f29b000ea8ad",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "21209144-6944-4a45-bc0d-d526e7fde594"
        },
        "item": {
          "id": "6d8c1ca2-d1ae-462d-8bfd-df9de61ba62c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e9f2976c-f2a8-4dc5-a27c-c70f9d4c057e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287ec999-1f41-4026-bab1-b645047c8a75",
        "cursor": {
          "ref": "1d13d6ce-6af2-4d98-909c-6369cbd021c7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "24829ecb-682c-4064-a88d-49575d2fa547"
        },
        "item": {
          "id": "287ec999-1f41-4026-bab1-b645047c8a75",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "18d0f0cf-b86f-4e6a-a86d-0fae1a218b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487f8ac5-1e66-4a67-a197-077183106ca3",
        "cursor": {
          "ref": "98190ca4-712d-4afe-a1c4-4ffaef8671de",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "60ccefce-4aa5-4c5e-9a0f-31b41bfb4525"
        },
        "item": {
          "id": "487f8ac5-1e66-4a67-a197-077183106ca3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ce9afa1b-6f27-4bad-9441-8843805f3012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154d2e33-4622-41e6-8be9-5a59f23ff675",
        "cursor": {
          "ref": "c3a5e394-f3fb-43a5-83b2-5eeb0a71d52f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c338ec1a-26a7-4469-a71e-82264e5931ea"
        },
        "item": {
          "id": "154d2e33-4622-41e6-8be9-5a59f23ff675",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dbd6620a-ab81-4772-b2a0-acd323c7addd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06e0dc9-5c2c-4b78-aa05-6c996a0edaf5",
        "cursor": {
          "ref": "f39511c7-54da-44de-a03a-da333e932d69",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "287b3df8-2197-410e-9d0f-7333f181878f"
        },
        "item": {
          "id": "a06e0dc9-5c2c-4b78-aa05-6c996a0edaf5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e2b6e880-4f7b-41fd-a2b3-181b1d8115c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e8ed48-6921-453d-bf25-c4ce2edfb6e1",
        "cursor": {
          "ref": "53e662f3-5123-4ce4-aa1d-0ac206aa1001",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fcc144f1-ce85-4f52-99c2-2c8f9a8f5275"
        },
        "item": {
          "id": "72e8ed48-6921-453d-bf25-c4ce2edfb6e1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2e16732b-2d23-43b0-a9c4-18d95bcb009b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fb5250-9c2f-43f1-9df7-027a788acbc9",
        "cursor": {
          "ref": "be1f935b-cfd2-45b0-922f-0bf281881d81",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "511beaf7-fe5a-4a5f-997d-9d5e67243ca2"
        },
        "item": {
          "id": "a1fb5250-9c2f-43f1-9df7-027a788acbc9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "142517af-dd6f-451e-9981-c8074dc585c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f666206-a140-4a5f-9bac-244168048b2a",
        "cursor": {
          "ref": "19a8d913-39ac-48bf-a535-ca907bd93005",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "607f4344-6044-4e12-a3c5-fb69727ef098"
        },
        "item": {
          "id": "9f666206-a140-4a5f-9bac-244168048b2a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "26cc9144-02a6-4648-9e96-85faa80231ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec525e76-a96c-4d32-9a67-7d85ac4e5e7d",
        "cursor": {
          "ref": "77dcf873-3e13-45a9-92a4-9a1cad90e980",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "21e98bd1-9e34-42bc-8248-7c2d4f8a6ae3"
        },
        "item": {
          "id": "ec525e76-a96c-4d32-9a67-7d85ac4e5e7d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f64f0480-4ede-4ade-ab86-b50c3ce20e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429b8fc1-796f-46de-84d3-f8d41e23b6c9",
        "cursor": {
          "ref": "4d157e07-730b-4a6f-b87c-ba682969b6ed",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7f18ee10-d102-4e41-88de-7a14ea0b597c"
        },
        "item": {
          "id": "429b8fc1-796f-46de-84d3-f8d41e23b6c9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "efc71228-d75a-41ed-96f2-f78a5c96fdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7387bdf6-fb4f-4942-8963-25712c6f16c6",
        "cursor": {
          "ref": "243a2361-4f93-4650-bb9a-6a1f381bd5f7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f20aa6df-ce69-45e0-858b-24afe7d14636"
        },
        "item": {
          "id": "7387bdf6-fb4f-4942-8963-25712c6f16c6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed7053b8-7d30-47ec-954e-d85737760f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c8cf45-b1f6-4ef8-b95f-018f41a53bf9",
        "cursor": {
          "ref": "377a6821-f9e8-42ef-8d77-ff897d48db5d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7382d213-806a-49ef-a4f0-61c5fa3b6dec"
        },
        "item": {
          "id": "41c8cf45-b1f6-4ef8-b95f-018f41a53bf9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14067e1f-b755-4528-aa66-79253053112d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb88da78-bcc0-46ec-b089-24b2853a06db",
        "cursor": {
          "ref": "b8757f3b-d347-47d1-8e59-4adca44139ef",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ac71e902-35f4-417f-85f0-bf64b35c1b72"
        },
        "item": {
          "id": "eb88da78-bcc0-46ec-b089-24b2853a06db",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "16d8cec3-f12f-45bb-8f9f-d0a357f237bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663af4cc-aa4e-4fa5-ac95-ca2296629969",
        "cursor": {
          "ref": "7cd6d3a7-d66b-4499-9a25-f57066cf1ab4",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1a01214f-39d6-4e99-8833-1093685875bc"
        },
        "item": {
          "id": "663af4cc-aa4e-4fa5-ac95-ca2296629969",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "34eea728-b4da-4a0b-a34d-27bafcbbda56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c072b84-f753-4f65-ab76-e28f104f7d14",
        "cursor": {
          "ref": "c5335c0b-bc10-48c9-af0c-b601ecddb2f8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0672e500-19f9-41d7-9cb9-329914476b5d"
        },
        "item": {
          "id": "6c072b84-f753-4f65-ab76-e28f104f7d14",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "28a3038e-91be-4e07-bbe9-f46d16ad8765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006a96b6-13d1-437a-a3e4-521a070ebe9b",
        "cursor": {
          "ref": "8c621df7-0388-4d21-a541-46eb3ef0f56d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fae49eab-74ab-4905-aa57-081714ae6c98"
        },
        "item": {
          "id": "006a96b6-13d1-437a-a3e4-521a070ebe9b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aeeab3c0-22a0-45ff-b08e-b5ba53398245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9f9def-4df0-4b3c-95b1-9dbd79c060b5",
        "cursor": {
          "ref": "dc884ac7-297b-4be9-b2c6-64cf68d91ac5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6b94bf9-c97c-4f47-8d4e-e591b0aec60f"
        },
        "item": {
          "id": "8e9f9def-4df0-4b3c-95b1-9dbd79c060b5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "195a51b1-9c2f-49cb-9d31-02e7fa4b3954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f364d-5380-49d4-822c-f28f4821a997",
        "cursor": {
          "ref": "3d9b54d5-6e46-4ccc-b233-3b0f45af4e1b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "87786265-efe6-46e9-a130-c6f48d5ac654"
        },
        "item": {
          "id": "319f364d-5380-49d4-822c-f28f4821a997",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ecf36fa2-8d17-4e4a-bcfa-103c23f7878f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42006a72-88ad-46dc-98f8-bb8ec574960a",
        "cursor": {
          "ref": "f96a8889-3ceb-487c-abef-c5e2ff4ae132",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fff82f62-7a6b-46ba-b059-d91e459d118e"
        },
        "item": {
          "id": "42006a72-88ad-46dc-98f8-bb8ec574960a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e0b1d647-9157-4f03-8bf4-7caa1c716a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4ecf02-d879-4933-8f01-5c76430d6ba9",
        "cursor": {
          "ref": "da6ddb8c-2cc4-4ae1-8584-3494fd889e8e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aac7abf4-4a78-44c1-9f1b-0ef8a43a5a53"
        },
        "item": {
          "id": "8d4ecf02-d879-4933-8f01-5c76430d6ba9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "21564cac-8e85-4383-8b1a-4eb59b650bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc55ebc-7365-4613-a6a3-4f1b32bed4d3",
        "cursor": {
          "ref": "524b0e54-4c7c-41a3-bdf6-7a5994f1620d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "44f4a647-0854-437c-beca-33354f61719b"
        },
        "item": {
          "id": "9bc55ebc-7365-4613-a6a3-4f1b32bed4d3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d82eeac-b59c-4bef-9f3c-80f6062fa7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b289222c-cc6b-4d96-b895-304351c5f4b7",
        "cursor": {
          "ref": "bb68706d-123c-4ad4-adba-6876a30206e9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "76836780-2407-4421-9b35-0c273cdf91b5"
        },
        "item": {
          "id": "b289222c-cc6b-4d96-b895-304351c5f4b7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c8f720ec-50a4-47a1-8c6d-be5ec8b18fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a7da4a-5b43-44a8-aff6-ad242642a4ce",
        "cursor": {
          "ref": "9503baba-e063-48b7-ab6e-4438e98bed87",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5bea3c2d-56fd-4065-b0e5-dad67a2622fe"
        },
        "item": {
          "id": "a3a7da4a-5b43-44a8-aff6-ad242642a4ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "999d1d44-7ef3-465c-a968-4fd701128228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea85295-917f-435f-9c32-045751c4c2b9",
        "cursor": {
          "ref": "45e156fb-007a-477a-832f-9e59b798a0f9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fd3ab0b0-b12a-4621-ba81-215d7455efc3"
        },
        "item": {
          "id": "9ea85295-917f-435f-9c32-045751c4c2b9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3bee3a6e-d187-4078-a9f7-941f28dc878d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9008f0b7-aaf3-4f39-aeb9-76148737660d",
        "cursor": {
          "ref": "8e18de46-94f9-464d-a620-851bdf57d804",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9f21d813-c85c-477a-a9d3-7b9d9e6f02e2"
        },
        "item": {
          "id": "9008f0b7-aaf3-4f39-aeb9-76148737660d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c9db1825-8920-4688-b7f3-2afe07161f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa9500f-5215-40f9-abab-d62eece532f7",
        "cursor": {
          "ref": "db0692ff-27de-4aad-888a-f7865f4ea49b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f3a5448a-d33c-4e0f-ba31-5c098b6c196a"
        },
        "item": {
          "id": "3fa9500f-5215-40f9-abab-d62eece532f7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ac3ccb1b-ab67-416d-b3ea-679fb63a2750",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f575b6b9-f3b9-4d06-8a7e-7f4503e7014f",
        "cursor": {
          "ref": "9744ff29-822a-44f3-b143-0066671f878f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f1cc4254-50a7-4306-9625-a85d6de6fb19"
        },
        "item": {
          "id": "f575b6b9-f3b9-4d06-8a7e-7f4503e7014f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "71897192-7bb9-4235-9d01-2a020d49a1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21cf068-fb4c-418e-b1f3-ea9daa362e4d",
        "cursor": {
          "ref": "d8063b2f-bb35-41a7-bb10-c2c60de8799e",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ce3003ed-6044-43d8-a53a-d38333eada0d"
        },
        "item": {
          "id": "a21cf068-fb4c-418e-b1f3-ea9daa362e4d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6e82058e-0311-41ca-bf5e-f65cbf77636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0205886-6b91-4d6f-b91b-0c5ff301486f",
        "cursor": {
          "ref": "905ae87d-93e5-416c-8cf9-7dd190838154",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f8ff452a-280b-4d05-932a-8386ffdc7894"
        },
        "item": {
          "id": "a0205886-6b91-4d6f-b91b-0c5ff301486f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e3fd9c64-47e1-41d1-ba53-e29096a843e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4597933b-aef6-460b-8d76-aef45eef601e",
        "cursor": {
          "ref": "a0211f80-6f32-4d1e-a745-4db63374c798",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ae6013b3-0048-4818-b071-33f65c2b42a4"
        },
        "item": {
          "id": "4597933b-aef6-460b-8d76-aef45eef601e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9c684b0d-4bbd-46a0-a5e4-36e7e63d8dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f14d87b-e4f5-4c20-b3f5-d355693961c4",
        "cursor": {
          "ref": "238e22a5-b406-4082-9526-822eba7fb649",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "51c31779-1476-4f69-95d9-da0e06a39c87"
        },
        "item": {
          "id": "7f14d87b-e4f5-4c20-b3f5-d355693961c4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "65cc9cfa-cc30-4602-97c6-384812d07101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa0dc4d-482f-47ac-ba62-0baf4af87317",
        "cursor": {
          "ref": "5df05104-25a0-4ce0-8a40-1520c7911797",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ccacb4ce-8257-4bc0-bd63-a0c3ab00d9d7"
        },
        "item": {
          "id": "8fa0dc4d-482f-47ac-ba62-0baf4af87317",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2943d1ae-5fd9-48e9-8d62-5b9007cf6e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca10701-1c92-40ac-9194-9cb8010dde8c",
        "cursor": {
          "ref": "b6c0ed64-be5b-4ed3-bc6b-8d40e9bf929d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "01dd91f0-2895-43fd-8480-27e4a9f7151d"
        },
        "item": {
          "id": "0ca10701-1c92-40ac-9194-9cb8010dde8c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "856ed640-f03d-4ab2-acf6-87281517ddcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73612b95-9a35-495c-aaa0-deb57bf89476",
        "cursor": {
          "ref": "d284a2d3-f9ed-419f-a66c-ca96c90c5ab1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e8daac05-a423-4347-af38-69ea74efbeb9"
        },
        "item": {
          "id": "73612b95-9a35-495c-aaa0-deb57bf89476",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "77b901c6-bede-4d93-a9e2-0d0f2e75b9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7df2f0-01a7-4046-8adb-4a5f0f471429",
        "cursor": {
          "ref": "f6f8821c-8a0a-4289-8fac-636319dc94ba",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f2660d8b-ead0-44f3-93c3-567165e44d13"
        },
        "item": {
          "id": "cf7df2f0-01a7-4046-8adb-4a5f0f471429",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f4c24fbb-6484-4846-b312-8f323f173c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad693455-b424-4852-a320-43fa0c622bb3",
        "cursor": {
          "ref": "6c9f502a-3bda-4109-9cb1-a4798e09d2fc",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "42d479c3-7172-438d-a6ac-5859a6921916"
        },
        "item": {
          "id": "ad693455-b424-4852-a320-43fa0c622bb3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3452c695-51cf-4ae9-b734-3300e5a281fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72caf221-8635-461f-ac43-00896e7fcfae",
        "cursor": {
          "ref": "1ead073c-a1f7-479d-bf6a-26efb3167ffc",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1e4beeb8-cf12-41a3-aeaf-1f8e6573e3df"
        },
        "item": {
          "id": "72caf221-8635-461f-ac43-00896e7fcfae",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8717d4f7-9170-4cf6-affa-c680e371b67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b480669-280a-47cc-89be-b56e45f2d4c4",
        "cursor": {
          "ref": "0dce047a-20da-447b-b4a8-6a0c05fbf84a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9fe0f86-9534-4b7d-bbf6-4958c54c8dd3"
        },
        "item": {
          "id": "7b480669-280a-47cc-89be-b56e45f2d4c4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eadbc33c-a658-4002-8e0c-676aee061b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bec4d1-f1f2-439e-af94-32c5aac28094",
        "cursor": {
          "ref": "e87448d9-4059-44e5-a484-142801acc233",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3c06b215-da9e-4150-8845-045b95c4ebe7"
        },
        "item": {
          "id": "f6bec4d1-f1f2-439e-af94-32c5aac28094",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "faae1fa3-e129-46d0-a312-84dda72ad6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2618c627-aa17-4b65-bece-7909089742da",
        "cursor": {
          "ref": "4d03b283-c84d-4e8f-9457-ad8517b9ae26",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3604788f-5f05-4000-94e2-e5302c16a738"
        },
        "item": {
          "id": "2618c627-aa17-4b65-bece-7909089742da",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "99af528c-6888-41de-aad1-1883356ecb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc4f20f-243d-455d-a322-a8c5ce5459da",
        "cursor": {
          "ref": "3d3881b8-54e4-4df7-bff6-09716a67f1e6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3a1e6a3b-3a5e-4111-b7f1-0bff405d6c3e"
        },
        "item": {
          "id": "1bc4f20f-243d-455d-a322-a8c5ce5459da",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "96d5ef78-775a-43b2-b663-c1f823816a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62c8a4e-385e-4a64-89a6-4131af1f361b",
        "cursor": {
          "ref": "8c835983-7454-427a-ba31-dc6f37067aee",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1777fd31-d40a-4083-95fc-5050970dab21"
        },
        "item": {
          "id": "a62c8a4e-385e-4a64-89a6-4131af1f361b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eabc88e3-a9d5-4b1b-b89d-d5af98dd5e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644150d9-e76b-4505-bdde-339c292889a7",
        "cursor": {
          "ref": "72d9e7b8-2108-4215-aa4d-ef8354e83ba4",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2114b7c0-f7fc-499c-bdc8-f00dcda69c82"
        },
        "item": {
          "id": "644150d9-e76b-4505-bdde-339c292889a7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "57f20eb5-13fa-4114-8ed8-9aaf44ba6106",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ded7a80d-8ab0-42e6-aae0-b12591b9ba82",
        "cursor": {
          "ref": "ec196e98-405b-4f5d-8a0e-379cd5ecc939",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "00c08b4b-841c-47f7-8fb1-57af5c58cc7b"
        },
        "item": {
          "id": "ded7a80d-8ab0-42e6-aae0-b12591b9ba82",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "393088cb-5a60-40de-8a9b-2b244521ffa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8117eed-2b14-4df8-91f4-11328a3e42d0",
        "cursor": {
          "ref": "7fa9fcbb-8db3-442f-a9d6-128876b521e0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "80b94bb4-6c68-4581-a966-be0a99a0dc59"
        },
        "item": {
          "id": "d8117eed-2b14-4df8-91f4-11328a3e42d0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c1c0f771-694a-4623-895c-f1f9a5ca7553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8310b763-82d0-49e7-87d4-4219a7cd9ed2",
        "cursor": {
          "ref": "7aa247fa-7c7b-4ac7-a4f4-3ec13d24c38b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "87dcde77-04b5-4e7c-bc73-424a37ef01c4"
        },
        "item": {
          "id": "8310b763-82d0-49e7-87d4-4219a7cd9ed2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0554e530-13e7-4b80-ae4c-59cd08274cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16148ee2-9393-490e-ab38-b4e1bb02be90",
        "cursor": {
          "ref": "a2629e3d-1111-43e4-8cea-8cd4c4c23740",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f64d4a94-f21b-4169-8db5-0bd1b117ddb1"
        },
        "item": {
          "id": "16148ee2-9393-490e-ab38-b4e1bb02be90",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b24e1b39-0539-4755-9359-b85eb11cdfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f51bc7-bdb6-491c-a0f3-eb226391c6c8",
        "cursor": {
          "ref": "df950330-2ce9-41f4-bce8-06a797d665eb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5cb46982-bfe6-4201-b1fb-63282a4309cb"
        },
        "item": {
          "id": "30f51bc7-bdb6-491c-a0f3-eb226391c6c8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "548fede9-ddbb-4d9b-ac79-2cf04ad7fbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025a82bb-81a5-4f23-b4fe-a19ef2849302",
        "cursor": {
          "ref": "b185ccf2-671d-4e22-a457-69cdfab1130c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e13760b5-94ea-4c04-9d6f-9e6877efaca4"
        },
        "item": {
          "id": "025a82bb-81a5-4f23-b4fe-a19ef2849302",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6966e58f-5b13-4a41-a2f8-3e6846d390e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01e7537-6522-47d2-b6d3-46efb545d28b",
        "cursor": {
          "ref": "efb47452-775b-40ed-b7d3-c12d0352b76f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3059c0c3-b2bf-4e5a-8781-4797d60a2261"
        },
        "item": {
          "id": "b01e7537-6522-47d2-b6d3-46efb545d28b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2b7d82ac-61d1-42f6-9752-6b3919730baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7c11eb-ed7b-4e4b-bf2f-e88327ec1f99",
        "cursor": {
          "ref": "24133121-1ddd-445a-9b7e-cd6aa57fce25",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "65bebe30-08eb-4be1-b357-91449ccad24e"
        },
        "item": {
          "id": "de7c11eb-ed7b-4e4b-bf2f-e88327ec1f99",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c7b29dbe-3951-4c0e-aac5-a9e111badfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae847a1-6f2b-41cb-b992-657e26a0c766",
        "cursor": {
          "ref": "f1c207dc-9b73-4c42-a865-1efc46af4a7d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bf589d86-4e18-478d-95bd-b13d001449cb"
        },
        "item": {
          "id": "0ae847a1-6f2b-41cb-b992-657e26a0c766",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d229289c-7b98-41fa-a0c7-aaeaa7bf63a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd2dc89-03f9-48f1-8393-d4b719c6d1dc",
        "cursor": {
          "ref": "f2e10d22-6923-49f4-b1a8-a8d2e52bfe71",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "df61b6be-3741-4a8e-a2e9-add53b4ada69"
        },
        "item": {
          "id": "6dd2dc89-03f9-48f1-8393-d4b719c6d1dc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bc3234fe-9343-4c97-add9-38cd68ad02fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04163c6b-93ab-454b-9cfa-a42a93644b9f",
        "cursor": {
          "ref": "c01e14c0-21b9-4e62-9f5a-97de2893b072",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d533b46a-7bdb-4462-a678-ec2d2a437120"
        },
        "item": {
          "id": "04163c6b-93ab-454b-9cfa-a42a93644b9f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "204c8a07-48d1-4bcf-a225-9d40e85f05f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fba49b9-082b-4f06-9961-d0467ba16aad",
        "cursor": {
          "ref": "4dc55f60-2e5e-40ac-8faa-0b026c951c51",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "87f9e960-e6a8-4b38-b912-5f3ae5b173f4"
        },
        "item": {
          "id": "4fba49b9-082b-4f06-9961-d0467ba16aad",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d7e97790-4dc8-4033-94dc-f265a4489ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd72a35-f7c7-48d2-a2fa-f477d7f391c1",
        "cursor": {
          "ref": "dc448e3f-f0f2-4ed2-a2f9-22be0a51f312",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "336d583b-2c35-419c-9494-3bb1d53145fb"
        },
        "item": {
          "id": "3dd72a35-f7c7-48d2-a2fa-f477d7f391c1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "00fc592d-c2a3-4070-876f-0b5037884fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34511506-166e-4560-ab34-4450c13cb212",
        "cursor": {
          "ref": "6bd9230e-08ac-4a88-b24d-256d1e44c8ac",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e7032d9b-f863-415e-ab71-4b5f518c481e"
        },
        "item": {
          "id": "34511506-166e-4560-ab34-4450c13cb212",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "86eed3d8-5ca6-46d5-81a0-cfb6f8ef954a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74d31d8-e282-4c78-a9f4-8f9330918f51",
        "cursor": {
          "ref": "db4c9054-2be7-4e26-978d-de216d1c7312",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b0e4110d-7ee4-4206-bac0-4872273a182f"
        },
        "item": {
          "id": "f74d31d8-e282-4c78-a9f4-8f9330918f51",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b6427b2b-270e-41d3-a670-b6aba32c15b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ded7641-13d3-4412-9d3e-647f0ca39dd3",
        "cursor": {
          "ref": "15bf35fc-5430-4e38-9747-cd766706661e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "091add9e-7e3c-4376-8f5d-0dfe020cd225"
        },
        "item": {
          "id": "3ded7641-13d3-4412-9d3e-647f0ca39dd3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "75dd66ff-dea8-4392-a552-af7a56cd93a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fd966d-2600-4a63-9494-25c867086fd9",
        "cursor": {
          "ref": "305fdc65-8c92-4e00-9f9b-e83054e994e5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "911881f4-5037-46c4-aa26-20c0c0fb8e83"
        },
        "item": {
          "id": "c3fd966d-2600-4a63-9494-25c867086fd9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "92d5910c-bad0-4fcd-92ca-f0a67b53a737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fd4fb8-9a80-475f-b33b-7edbfe3b8d9c",
        "cursor": {
          "ref": "55c1df4c-ea1e-4d12-9592-df85a540f0da",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "feec08dc-d1fc-4883-b77c-e66d2e55750d"
        },
        "item": {
          "id": "24fd4fb8-9a80-475f-b33b-7edbfe3b8d9c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3fa37c25-fc44-4d5d-a18a-3cd3f28fd496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4922f481-b224-4759-b5a7-ce293cb9a253",
        "cursor": {
          "ref": "00abdabb-6a51-40ac-87d7-e91bf776cffc",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0269ae24-26a5-4bdb-bf21-de54597e7331"
        },
        "item": {
          "id": "4922f481-b224-4759-b5a7-ce293cb9a253",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bb5e31ea-1692-442d-a3f2-ac9fe879b67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b61f00a-0adf-4434-b472-c8db6f044d16",
        "cursor": {
          "ref": "981788f4-085b-4b85-adc4-8efd0732f41f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b6e53a6a-d2d3-4a90-89b5-3c5b19f77da8"
        },
        "item": {
          "id": "3b61f00a-0adf-4434-b472-c8db6f044d16",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "85c98d75-bfd0-42f1-ab4b-7f25a3534ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fd9aff-7ac0-41cd-8d79-72d206a095df",
        "cursor": {
          "ref": "38c25faa-df60-47a1-83a6-e216bfeb1a4e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "468cc676-fe0a-46e3-b884-3846c6e557d6"
        },
        "item": {
          "id": "02fd9aff-7ac0-41cd-8d79-72d206a095df",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "592824ee-cb11-484d-a3c2-57e96bdd4408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09270b9-dbe5-4c36-add0-3b5b13edb54f",
        "cursor": {
          "ref": "d5be56d5-1296-4aa0-86f8-384de031b033",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0a44b5a9-f462-4f71-bf3d-cb229e07ee88"
        },
        "item": {
          "id": "d09270b9-dbe5-4c36-add0-3b5b13edb54f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3c525ee3-4fa9-4305-a558-278a8041b616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e1bbf3-2b78-49fb-9956-52ad163bd8e4",
        "cursor": {
          "ref": "62f0c2c4-a9a5-46be-a66c-dfa6e9aaeb12",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "23a51c42-5ddb-4491-b92b-cffc62cf12b7"
        },
        "item": {
          "id": "67e1bbf3-2b78-49fb-9956-52ad163bd8e4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c5f52cb9-8071-48f2-97bf-fd7b0a894d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659cc3fe-04fa-46a8-bfdb-91e7eb5af0ee",
        "cursor": {
          "ref": "53be0ef1-6af6-4716-ae7a-45f1d4885f58",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "700d0f58-2c03-429c-8cd0-86df6a7c7bc7"
        },
        "item": {
          "id": "659cc3fe-04fa-46a8-bfdb-91e7eb5af0ee",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "07cb75f0-dad6-47fb-b4e2-f40c227000f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526fb15e-a36b-463b-b9c2-ca26bcd1576f",
        "cursor": {
          "ref": "4ca769db-63d1-41f0-9131-40b5a59cc508",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9558c637-4ad1-4b21-b94b-48f2aacf1aaa"
        },
        "item": {
          "id": "526fb15e-a36b-463b-b9c2-ca26bcd1576f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e909c303-3dd1-4210-a471-6b5779c64cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8f6a67-e300-4a69-95e7-216a1e9edbc5",
        "cursor": {
          "ref": "11540c1f-69c9-4a1f-ae2c-00968e6b07de",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "384f3aec-a192-47a2-801c-2d65c1c27071"
        },
        "item": {
          "id": "5d8f6a67-e300-4a69-95e7-216a1e9edbc5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ca25492c-6a7a-43ac-b652-2c16190f06c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a2f768-d260-461d-8b51-73239843754a",
        "cursor": {
          "ref": "8939c487-60dd-4eee-902e-3f26eb8d95be",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b147e932-489d-4bd3-9823-cb030fbc834c"
        },
        "item": {
          "id": "91a2f768-d260-461d-8b51-73239843754a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2c1559b3-ceef-4fb9-87c0-97cdbff5c745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f146a6b4-3458-4056-9807-921bf5afe599",
        "cursor": {
          "ref": "0a74941a-04de-4f6e-a61c-3d75f1836c94",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "616575ce-721e-40e7-9404-3afcde422dd1"
        },
        "item": {
          "id": "f146a6b4-3458-4056-9807-921bf5afe599",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "aab8cdc7-29a7-4293-9e1a-4044712929f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ab1ffb-0e47-4f85-8202-7b2b97a73031",
        "cursor": {
          "ref": "ae197f6f-1b2f-4ca0-b316-e0b19809bef1",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "77b1691a-800a-463b-91b5-dba998c19024"
        },
        "item": {
          "id": "a6ab1ffb-0e47-4f85-8202-7b2b97a73031",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "32730fa2-754d-4945-b716-c885e070c651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beab22a3-a2f0-42bb-b0f2-422e553f6957",
        "cursor": {
          "ref": "5c7117fc-88e8-4214-b41c-e4b15c78e8e3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c0a76004-64b0-4884-ab47-63047063754b"
        },
        "item": {
          "id": "beab22a3-a2f0-42bb-b0f2-422e553f6957",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "46ee9fbd-49dc-4cd0-9f14-5e923c4a028f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6c6dc3-bec0-454f-82f1-3ab31474940e",
        "cursor": {
          "ref": "e0d43c07-4c25-44ef-a9d5-d98ac2c97148",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "29b1afd5-5e04-4efd-864f-039507d5d17c"
        },
        "item": {
          "id": "fb6c6dc3-bec0-454f-82f1-3ab31474940e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1b62e70-7110-41de-a4d5-1b389a7386da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1476747c-69d6-47d8-bc69-8b8b051b961f",
        "cursor": {
          "ref": "9ab419d2-8e38-42a7-a699-1288d219ecc9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "021557a3-e04f-44f6-8d9f-005768a49db5"
        },
        "item": {
          "id": "1476747c-69d6-47d8-bc69-8b8b051b961f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "86d5fac3-e541-4495-bc7d-67e8eb0e401f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc41713b-045e-4338-bd2f-ce77c04dce9d",
        "cursor": {
          "ref": "9636e163-50fd-46a7-aaf0-0c1bc04e4212",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7e9be302-1956-4f87-8f42-a015463089c1"
        },
        "item": {
          "id": "bc41713b-045e-4338-bd2f-ce77c04dce9d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2e4f8c01-0bf6-4c0e-a57d-e8c7b821889b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6709fa74-a90a-4c19-b6f5-6168386d45f1",
        "cursor": {
          "ref": "44658bd2-9f5c-4529-a4ea-9f19eb35c19c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "087e3db0-32fb-4e8e-a4f6-bd2b6d62874c"
        },
        "item": {
          "id": "6709fa74-a90a-4c19-b6f5-6168386d45f1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "201ec55b-0e70-4045-ac1a-877efeabec21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fa06ee-c0e5-4449-ac8c-bf6bfe912409",
        "cursor": {
          "ref": "b71712f6-ff6f-41a3-8e10-4ed9a2db2fa3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "09fd2fbf-c04f-4361-b246-aa7527f74feb"
        },
        "item": {
          "id": "23fa06ee-c0e5-4449-ac8c-bf6bfe912409",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8658f2d2-61c3-40b4-8121-3bc7cba273c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdf07c9-bb3e-4932-b5c5-ad9a3efb3caf",
        "cursor": {
          "ref": "8624b06b-84fc-4e78-ae98-0e9bffee4f9e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3b514d05-894f-4922-94c0-d7d665493392"
        },
        "item": {
          "id": "9bdf07c9-bb3e-4932-b5c5-ad9a3efb3caf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ce5d5075-19da-45c7-b71b-b919e52936d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c996f15a-cbcb-4ed3-937e-c0df7b677c3c",
        "cursor": {
          "ref": "4d59c7c7-84ec-407c-88b4-9200bb454e54",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "91e1c600-7692-4f2e-a392-5e407b2bc2a3"
        },
        "item": {
          "id": "c996f15a-cbcb-4ed3-937e-c0df7b677c3c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cbd8c5c5-c60c-4c51-acc9-d2f899f58e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85a04a8-2bc2-431f-bb97-3407fd6d7b28",
        "cursor": {
          "ref": "84a44157-38e7-426f-95cc-b3a38c5fdff6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "af04dadb-563b-4dd8-a1e9-4bb9c21da404"
        },
        "item": {
          "id": "f85a04a8-2bc2-431f-bb97-3407fd6d7b28",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a1ade503-76cf-4b95-a84a-d5c7fdb43665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9024a2b-fc47-473a-8d31-4f761038b4ba",
        "cursor": {
          "ref": "b4d26143-0716-44a7-ba82-3ce9ea81f6a6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f309f379-e341-44ec-9970-f023cb05b658"
        },
        "item": {
          "id": "c9024a2b-fc47-473a-8d31-4f761038b4ba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "35c44240-4ec6-45ae-a2d6-d1742a5eca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053fd38a-639c-4b1a-80ca-74d43037abec",
        "cursor": {
          "ref": "c138dfbd-f644-4db0-8fcf-a5a54f72c4b5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c9dec077-1b98-4288-90ab-3ab4a6b32fba"
        },
        "item": {
          "id": "053fd38a-639c-4b1a-80ca-74d43037abec",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6373bbf7-2a82-4979-a599-44ef9fc2a16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350603ea-de41-4553-b1b7-52aabc863f1e",
        "cursor": {
          "ref": "14083fa4-48ef-4bc0-8e87-94b76d20b00e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f3b64019-2865-4a75-826b-612b21ab9a1b"
        },
        "item": {
          "id": "350603ea-de41-4553-b1b7-52aabc863f1e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bff399bd-f1e1-4ef5-9d6b-f8ba8b5011cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0326a95-acb2-4aac-a3f8-5a9868792551",
        "cursor": {
          "ref": "5d841ef1-c393-42d6-aa6c-85d9da2ee41d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2b232cef-fca9-4f98-af23-b236cda17b61"
        },
        "item": {
          "id": "b0326a95-acb2-4aac-a3f8-5a9868792551",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b2853231-d0b5-4ab1-880b-1015722b8b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192c4715-e14f-4764-a9f7-7eb7b535bc7c",
        "cursor": {
          "ref": "646efdc5-5430-4e63-931d-c1da2eda5235",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "abcc09bb-7a6c-414f-89f3-105927818415"
        },
        "item": {
          "id": "192c4715-e14f-4764-a9f7-7eb7b535bc7c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "97fe98d3-7d33-475a-bd0a-2f621def5db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc34151f-87a3-45d1-a01a-2e5de10edac7",
        "cursor": {
          "ref": "95b67e4e-b79a-4c03-949d-d4594b70ddec",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "413c9c50-4ca5-42a6-b851-3f81b4634a76"
        },
        "item": {
          "id": "cc34151f-87a3-45d1-a01a-2e5de10edac7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f4d7d028-532a-400b-927f-e0504b08e924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b3eb79-daae-42be-98e2-634d361fb9a3",
        "cursor": {
          "ref": "271238a0-51a1-440d-9761-36e0d342c686",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "762edbe0-365c-4fdd-853b-21e1d867b805"
        },
        "item": {
          "id": "b8b3eb79-daae-42be-98e2-634d361fb9a3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d6981486-5579-46bd-b138-628c2b5f5e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5289d4-1edf-4d53-8891-45a9640cb1fe",
        "cursor": {
          "ref": "d6f9a0f2-5d2e-4edf-a313-5e0d3dd360f8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf74b51c-6467-46b2-9e8d-edee22f59c17"
        },
        "item": {
          "id": "1e5289d4-1edf-4d53-8891-45a9640cb1fe",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d6240171-c609-4651-9692-1a820d27b688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eb5229-4d09-4e87-9084-abc95ecb4da5",
        "cursor": {
          "ref": "05c9f2fd-b91f-43d9-932a-b849f8f7c690",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a6b89b61-bd3e-4a08-8212-48f3c8009e52"
        },
        "item": {
          "id": "18eb5229-4d09-4e87-9084-abc95ecb4da5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cfc3dd30-e3d6-4e4a-bcd7-c57bbc33af36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a7ce12-3a4c-44e5-8f07-9f0dd9b4e51f",
        "cursor": {
          "ref": "cc62da69-1ada-4c92-98e6-4baa4f33df13",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e55cda53-43ea-4cd8-ab55-5bcf06dd2887"
        },
        "item": {
          "id": "a4a7ce12-3a4c-44e5-8f07-9f0dd9b4e51f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "21625b2b-f568-448d-b6e6-5d4f9d61f2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2284bd-8f96-49eb-a040-9b1afb49c87e",
        "cursor": {
          "ref": "d174da36-692d-4194-9d1d-455ec35e36b3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "53688b9a-1b65-4937-b796-7ce7484d0858"
        },
        "item": {
          "id": "7d2284bd-8f96-49eb-a040-9b1afb49c87e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "44d232b2-df77-41c2-8e69-cc21b7fdd1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557363ce-d1d4-465c-a93a-24835a11608b",
        "cursor": {
          "ref": "a30086df-49b1-4c1a-8c2d-c7c817a3a1bd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b307d0e7-b3b8-4d24-aec5-81c865b66a40"
        },
        "item": {
          "id": "557363ce-d1d4-465c-a93a-24835a11608b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "14279b2d-b898-4eab-a939-c42d1357b6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07144e73-5ef5-4a08-bbdb-aa0a6ef11a03",
        "cursor": {
          "ref": "d4132a4a-5393-404c-bb17-1da8ff0f1d8f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3be20135-9a6b-40f9-8288-d762bd4eb239"
        },
        "item": {
          "id": "07144e73-5ef5-4a08-bbdb-aa0a6ef11a03",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8141a1a1-a4d9-4328-9843-caac085e172b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533c548c-5049-4684-85f4-282fb2de1d31",
        "cursor": {
          "ref": "b134b72b-eaca-4dca-a144-eea2b83b463c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dd8ff745-38c7-4a95-a42a-3e6192a9769d"
        },
        "item": {
          "id": "533c548c-5049-4684-85f4-282fb2de1d31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "84b33373-5cf2-4c88-ae42-1ef41962743e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117ac12e-0c51-4dfb-8dac-5a0537cde354",
        "cursor": {
          "ref": "4e6b35bb-7b20-42db-8efd-52030e0fcbb7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f188d65a-4dae-4966-99d8-b50c7d073c71"
        },
        "item": {
          "id": "117ac12e-0c51-4dfb-8dac-5a0537cde354",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "14a4bf1b-3bfb-4307-91f9-743ae87d79a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c1b7fc-fa9b-4d4c-b634-56939d94bbc9",
        "cursor": {
          "ref": "e1446522-e185-433e-95d5-cab4a9f55bd1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "036088b6-e5df-4185-9750-e8ab6d7bbe9f"
        },
        "item": {
          "id": "49c1b7fc-fa9b-4d4c-b634-56939d94bbc9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0e1ab134-70c8-4256-8a35-79ed18fea118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89654aa-5b76-48e3-9ff0-0b1dc4848b2f",
        "cursor": {
          "ref": "7cdde72b-cace-4456-ace9-11025cb8a774",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d89340b3-a992-48c0-8f16-c1388b8748e3"
        },
        "item": {
          "id": "d89654aa-5b76-48e3-9ff0-0b1dc4848b2f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2ce89745-9d20-448c-9235-0ec86c474436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b0409b-475b-4129-a048-9aef3403081b",
        "cursor": {
          "ref": "e6c0b570-94c3-4cdb-9ec9-9f160bab8b08",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fa46fac7-c08e-4ac4-9409-6c12a91ae48b"
        },
        "item": {
          "id": "51b0409b-475b-4129-a048-9aef3403081b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3d666226-b9bf-43e6-b366-6f653f078160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dcbe35-4cf1-4009-9aa7-2041850b88fd",
        "cursor": {
          "ref": "5ebef27c-2148-4916-8c1a-811fd84bb632",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "18e43604-b0bf-4dda-b719-e544bd68bd25"
        },
        "item": {
          "id": "f9dcbe35-4cf1-4009-9aa7-2041850b88fd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5a4e025d-c10b-40aa-a31e-a9c1394ae3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cb37c7-9fbe-4bb4-bd54-0840cddf4aa0",
        "cursor": {
          "ref": "09e02c5e-ea12-42ec-91e7-12e7e808a4ad",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "19aa0f6f-895c-4095-a01e-8ad8837d2acc"
        },
        "item": {
          "id": "b0cb37c7-9fbe-4bb4-bd54-0840cddf4aa0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5891f859-2dae-4dbd-a427-270d78718882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4a7c94-9928-43d8-be7f-240971547cbe",
        "cursor": {
          "ref": "daaea5ba-6a70-47ec-aa97-a66a2beed85d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "81604879-61b6-4d2f-9e53-2082a42068dc"
        },
        "item": {
          "id": "ad4a7c94-9928-43d8-be7f-240971547cbe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d7ec31cd-8644-47d9-99fd-6b8a1b05532c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbfb42f-8748-4e36-93a0-c1ea474eb8ac",
        "cursor": {
          "ref": "84372c45-4eeb-4cfe-94f5-6808f5d6e1c3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9815c9af-235d-4fa2-8948-3d35d735436e"
        },
        "item": {
          "id": "cbbfb42f-8748-4e36-93a0-c1ea474eb8ac",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fa323862-e38b-4ea1-a833-560c097aec89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0526ba-a14d-4e34-bcbc-88cb7bc33d62",
        "cursor": {
          "ref": "8bad378b-4b90-4787-b04f-0e847cf6b086",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "45949b1f-fdd1-49ac-ba32-7ed6699c1f3b"
        },
        "item": {
          "id": "3b0526ba-a14d-4e34-bcbc-88cb7bc33d62",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "460c532b-e9f6-465a-a9c6-5b4fddb248e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3cf014-4ee3-4649-aaed-573273ec4a05",
        "cursor": {
          "ref": "7a4cde52-7bd6-4786-996f-a5e4684c4e8a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fbe34ec1-a1bf-4507-8047-c62af679040d"
        },
        "item": {
          "id": "5d3cf014-4ee3-4649-aaed-573273ec4a05",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4b3f97af-6e55-41e6-a038-c288dc26c184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86a6a2c-7972-4f07-b533-676f984a109b",
        "cursor": {
          "ref": "37b52edd-752c-4e6b-a6d3-e1b9ff38c7ab",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "daeb57dd-9503-45da-ad93-836536073c27"
        },
        "item": {
          "id": "e86a6a2c-7972-4f07-b533-676f984a109b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8a9fe4fa-6964-4394-a0db-3b5056c33aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9fca98-ca14-4bfc-b91b-87dc5293896d",
        "cursor": {
          "ref": "79a45279-4d44-49ac-81d6-5bdad34f4cad",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1e1774c5-06f2-4fe0-bbae-10fa818122f4"
        },
        "item": {
          "id": "ed9fca98-ca14-4bfc-b91b-87dc5293896d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7053a1f6-f5ef-46de-82a6-7b100545bbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adcda4e-dced-4c6f-a591-6aafd9802ceb",
        "cursor": {
          "ref": "c813c095-a93c-40cf-8c23-c9063af8cd66",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0eba2f7b-9d32-4397-8e43-d581d2bf16a9"
        },
        "item": {
          "id": "1adcda4e-dced-4c6f-a591-6aafd9802ceb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7616618c-a6a6-4efa-83ba-456139d94da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732840c9-fa44-4d52-a0e3-f6c53aac2470",
        "cursor": {
          "ref": "76ab253e-6dc5-413b-b400-89f082c1078b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "21d7c8b6-38d6-40f3-8074-00c840a6b200"
        },
        "item": {
          "id": "732840c9-fa44-4d52-a0e3-f6c53aac2470",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2fb8fa66-75fe-4525-94fd-f0d1eec6c7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a7f6a9-62da-4171-89f2-84a5c2380a39",
        "cursor": {
          "ref": "e879f5ae-ffa1-4639-a983-1efe08114a48",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "30650b0c-8332-4ac8-a5b6-b7aac37c6423"
        },
        "item": {
          "id": "02a7f6a9-62da-4171-89f2-84a5c2380a39",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "593ca85a-73b4-496b-8813-b949436561eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7449f74e-809e-4d0e-8b1b-af5052e9d83a",
        "cursor": {
          "ref": "35292918-8435-4917-ac79-43992efb1917",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9a029c81-e1e3-407b-a707-a59cceceff86"
        },
        "item": {
          "id": "7449f74e-809e-4d0e-8b1b-af5052e9d83a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "62c2474a-5b54-4b3a-9d5b-a1983ec388e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe89b36b-ed99-482d-9b25-6e71b93e2d05",
        "cursor": {
          "ref": "17631d35-f1e4-4e9e-8e67-b21819490d7d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "211af8d4-1141-4ee6-96df-a858b7a8d4e7"
        },
        "item": {
          "id": "fe89b36b-ed99-482d-9b25-6e71b93e2d05",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b9c7df65-1b16-4d45-8cc9-435d38a9e377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea03c89-643f-4c47-996d-1a34e570d8b3",
        "cursor": {
          "ref": "28ec7cfc-f696-4ced-b051-3a73a36f2530",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f7ef6374-84ca-4372-891f-3c98001c71b8"
        },
        "item": {
          "id": "6ea03c89-643f-4c47-996d-1a34e570d8b3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8b1d336b-ba3b-4fa0-8149-9797a2408fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7064970-b7fb-4e48-a29f-f737c24bc887",
        "cursor": {
          "ref": "5b721b9d-55e1-44c3-af0a-7a6b4858630a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2cd1d71f-cef5-450e-b6ad-28b039630d16"
        },
        "item": {
          "id": "c7064970-b7fb-4e48-a29f-f737c24bc887",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "92f614a5-cdff-449b-baa6-db80b6aa03e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65a95cc-3fe7-476f-9469-e57aea14012e",
        "cursor": {
          "ref": "9241b643-668a-4661-b355-33cf8b8bc93d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "02a191de-09d7-40aa-8bf6-19a514808c4f"
        },
        "item": {
          "id": "f65a95cc-3fe7-476f-9469-e57aea14012e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "119a5760-943e-40ed-a4e1-fc05f1e2a0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ca06dd-7144-4017-9e78-83c64a3c5f1a",
        "cursor": {
          "ref": "935cc89e-b90e-4744-a952-72bb08b98b98",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4465fc7b-c4c8-4246-8018-7e3d73fc6105"
        },
        "item": {
          "id": "12ca06dd-7144-4017-9e78-83c64a3c5f1a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b9a854f5-2066-4e5d-8d83-2dfa500abcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee464fc-9ddb-465e-86be-f5ad98a42457",
        "cursor": {
          "ref": "4b928e77-1baf-421b-9073-cd0f8dd61335",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a3055489-1c2b-481e-9e0c-3e20e332f320"
        },
        "item": {
          "id": "1ee464fc-9ddb-465e-86be-f5ad98a42457",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1388fba8-1e07-4d95-8055-3a7493a71a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc6a40c-6ce8-4426-86f2-cee21a5e4dc4",
        "cursor": {
          "ref": "fbd63423-769e-422e-b2c5-510b5061fc08",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "da24a628-8811-4aa5-b1da-586f9c21a137"
        },
        "item": {
          "id": "ddc6a40c-6ce8-4426-86f2-cee21a5e4dc4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "af802c56-45a5-494d-8dfb-ff15456afb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec4c0bb-9a96-49ef-ae06-1690e5068547",
        "cursor": {
          "ref": "5aed01e1-0f34-4649-a5c2-70c7046dd4a9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "23d60e32-90f2-4c99-bd70-7f3a211e6dad"
        },
        "item": {
          "id": "3ec4c0bb-9a96-49ef-ae06-1690e5068547",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e25b1b8f-5459-45ae-9f13-bec860c6e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752f07bb-0108-4a57-b8f4-261c930b0d71",
        "cursor": {
          "ref": "429eae7f-3fab-4f24-9525-9763dca4919d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "33b9189a-dee7-4937-a8e7-7aae970834f4"
        },
        "item": {
          "id": "752f07bb-0108-4a57-b8f4-261c930b0d71",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "352574e9-98a3-4c2e-bb05-c7a109eb2ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13768f3d-1632-4aa3-98a5-968153f45bf2",
        "cursor": {
          "ref": "4e16946e-daeb-4def-afa0-1a12056d7511",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6456c368-b219-4ed7-8cd4-892bee7d4450"
        },
        "item": {
          "id": "13768f3d-1632-4aa3-98a5-968153f45bf2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "63b12e2c-541e-4069-bd67-7f5fe51ba47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c081d08c-834e-4876-8ac1-0d07ef7bd6d5",
        "cursor": {
          "ref": "8f064f42-8e0e-4642-955d-5ab88be228a1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dffd2387-8dc3-4444-be4c-0dc55d84f1d5"
        },
        "item": {
          "id": "c081d08c-834e-4876-8ac1-0d07ef7bd6d5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f730862d-e060-45b7-b38e-8b9739f9594a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32294240-376c-488c-8a3f-b8f85996bdc0",
        "cursor": {
          "ref": "a61786ac-e799-450f-9cad-ce767742e1b0",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4380e8ce-19d2-4d84-b288-f55761878a53"
        },
        "item": {
          "id": "32294240-376c-488c-8a3f-b8f85996bdc0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b1684623-f870-4b2b-81a9-eacacc1b446a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361111cd-1c9f-4e5a-b955-f7c96d62ac05",
        "cursor": {
          "ref": "28dc9946-5c0a-4599-bd54-f30e298b870d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b1168544-f96c-41c6-bc98-e5c0c1a387b8"
        },
        "item": {
          "id": "361111cd-1c9f-4e5a-b955-f7c96d62ac05",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "75a826a7-e812-4180-9509-df20a0263405",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927bb04c-a983-408b-8703-fb34fc555344",
        "cursor": {
          "ref": "48915a94-f00e-4ac0-846a-fc84faba6220",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3ddb3276-d6fd-45c7-bd81-cfcc2baa42d1"
        },
        "item": {
          "id": "927bb04c-a983-408b-8703-fb34fc555344",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2420580e-2c3d-44d1-84e4-007a64232753",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c2d988-a2c1-48b4-8b5a-2c99c294760e",
        "cursor": {
          "ref": "62e30f12-5668-48b0-b980-fd685dd52a24",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "08699530-b031-4eab-a776-971dc9b73755"
        },
        "item": {
          "id": "08c2d988-a2c1-48b4-8b5a-2c99c294760e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c05d6863-d7c3-41b8-992d-aab203acea60",
          "status": "OK",
          "code": 200,
          "responseTime": 2482,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d062a33-e349-4c78-9323-f4487f5d91fd",
        "cursor": {
          "ref": "be451b7c-63b2-4e0e-8ead-fb54ab2024b7",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "41374764-b349-4f87-99ed-23f4b0e26219"
        },
        "item": {
          "id": "2d062a33-e349-4c78-9323-f4487f5d91fd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fe4d30c7-8e9f-4eea-8d1b-8b2717e1ef43",
          "status": "OK",
          "code": 200,
          "responseTime": 3066,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09b8ed1-45c0-4334-86b0-d88074cb053f",
        "cursor": {
          "ref": "97a7bf23-b003-4933-9241-955dd4a7de54",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a8b605b6-cf70-44b2-b8d1-6307041a21a6"
        },
        "item": {
          "id": "c09b8ed1-45c0-4334-86b0-d88074cb053f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "864ceda1-f4ab-4aa9-996b-9a22397dc795",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09b8ed1-45c0-4334-86b0-d88074cb053f",
        "cursor": {
          "ref": "97a7bf23-b003-4933-9241-955dd4a7de54",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a8b605b6-cf70-44b2-b8d1-6307041a21a6"
        },
        "item": {
          "id": "c09b8ed1-45c0-4334-86b0-d88074cb053f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "864ceda1-f4ab-4aa9-996b-9a22397dc795",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e274b1-1a08-49e6-8740-3d1bab921bdb",
        "cursor": {
          "ref": "1b4f592c-d895-47ce-91ca-bffd96203a9f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "44062bcb-9e92-43b0-ab3f-06721a0305bd"
        },
        "item": {
          "id": "63e274b1-1a08-49e6-8740-3d1bab921bdb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "64217464-0fc3-4f89-bae0-4000229f86f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592c49a1-1c2b-46e7-86d4-f1f5bdf083f2",
        "cursor": {
          "ref": "9a276409-4432-470e-abbc-26f38a5e6a2b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "20fe41b4-d5f9-412a-8cec-b61ee383c404"
        },
        "item": {
          "id": "592c49a1-1c2b-46e7-86d4-f1f5bdf083f2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5a35033a-c6cb-48e1-9795-909ea430858e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}