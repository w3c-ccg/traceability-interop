{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c79ec246-b8b6-44b0-9c6c-463f2823a4a5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a14965a8-93d2-4ba7-a924-d1e27becaa29",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1c02b33-47e6-4d96-b48f-011c39b46605",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a70eaeb7-5e42-49cb-8eaf-4882cb39f3ba"
                }
              }
            ]
          },
          {
            "id": "23c80ac0-f912-414b-8724-5761a1751624",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1fb8b81c-8093-4cdf-922d-ad2ab896b959",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ec6306a-27b7-417e-831e-934b9a92a32c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8e3c5276-b988-4ea6-bfbc-c52122a7fb1a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "94eaa7f1-110f-4457-af69-ac05c35e715d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7902358-d258-4a91-95f6-da5b8031896f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "351ea52c-9d62-411f-a7ee-a2d1a7f07f18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3c5cdaa-3db4-43f3-9e78-33d01f8425dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "699e0258-de0a-4fac-af74-274864546be8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10f11f1c-9df8-4c80-a267-04a521911d78"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5452a930-70cd-46b7-a48e-585964851387",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2bac853-1107-44a6-9d58-77333a7ae371"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e8f009a-386e-4d3e-9324-cf50dc999a1b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c0d2507b-5392-4290-a7c1-4500e6571e35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8bc7508-0ffa-4f33-ba80-784858fa54c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f9115bf-8a89-4ab7-ab49-4e7342531b42"
            }
          }
        ]
      },
      {
        "id": "0cce1ee7-6a5f-4064-9768-f6aed8f5f3c1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6226cefe-9f9d-42b8-9a62-cf1bd44c57db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8afe307-5d55-4c86-b496-b25c4a64f18b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "947052f8-bc98-4f95-9cb7-2b355c106e32",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbf7be1-b0f0-4d86-9984-273ad83cfb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b814ce35-8976-4e2b-bd26-28c8d9c80abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55449aa0-fbe4-4086-b3ee-a8d4b3b53ade",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de651a4f-1e83-48f0-8328-1fc8c1b3f0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10fec38e-cc00-4c81-8c3a-b858ceb84216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b2b219-1fac-4ef6-a63f-1810b0ab7c15",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181f7f9e-2e01-48ca-b1a2-5a0741b52503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d524529b-397a-4a73-8ca9-16b56677ecec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b0212d1-24ea-4d65-9bd5-83c4144b377b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efea91eb-1403-4c63-8fbe-5cc2b4db4ef8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee333a6-6acf-4127-800c-d6f5d95dc52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1224240b-9f97-4fc4-a1b6-e1ac624196d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11602514-68ea-4e0a-b461-039ba59260c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93051dd4-28e9-402b-81a0-e1f9c7464e56"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ea2c3b70-b00b-40d2-bfc4-2e4bf0bb0603",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0cb9c8c8-a715-4deb-a8a7-39c5edb2e312",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc82f78d-8c14-481c-9e90-c48154720271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d3e582c4-023d-4545-8ddf-52d6cf0bcd18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4181ab7-4ee2-4b8b-a2ee-83a2cec33aeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5ef2fff8-3095-4853-bab5-7a550d4cdf0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de6886f1-b924-4e83-a8e3-bd3edfa2e8d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d8a173b-9cfa-4d48-be61-7d5db1002685"
            }
          }
        ]
      },
      {
        "id": "f2662d21-bb10-4ef6-acb5-d6829618fc2c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "94f27475-ad66-4aa9-8b8b-dd65555a4bbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dc3f2a0-8dd4-4a8c-90c6-f47905a3f5de",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c3a6f793-6b26-4356-b872-2440ee2c72be",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ab399d-cbab-4c9c-a859-2e1d048dbf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50822f2-a7a2-47e3-93c1-0e1dc096eb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80b0981-a717-479a-81bb-08043242a416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7e5a591-049e-4d4e-bfbb-fa024ecbfe2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9df857c-b5ae-408b-9468-5df2090484ed",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e889b961-1719-410b-b2d6-17bb0aecabdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87fe181c-1d32-4725-99ff-3d867ebb06df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0033f5fc-4a86-487d-aef7-b113641839e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b03b7527-745f-4949-9970-61bb4c6ffeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957b85b0-cd77-4def-b878-75060503f068",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45cf98b-3e48-4aaa-9bd7-fa0bf455cde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab87ccdf-68d2-415e-a525-dfa1d0844cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329f8672-9de4-4980-ac15-23f878f5695f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f85a787d-915f-4f6b-b769-becafe03cd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76641e8-552f-4900-9ed0-f75e9936f4b2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c275db-49db-4bb0-847c-414f4b1e4f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46adac61-a8a0-499d-9d84-3b9834f2479c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7162d88d-cae6-47c3-beb8-1931311b35ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76e3289f-2326-4dfb-a474-3bd2c0d1bc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a52316c-d12f-4172-967a-d9e956b58940",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0457c731-c922-401a-a566-1e2e7c694662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d7e307-3ec8-4302-92d2-f8244a93bcaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d87c6fe-3873-4316-bd26-c97bea6a5a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a95bbd07-6102-4ae6-8da6-c802d2b01c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafa6f51-c790-416e-bdf7-53709c7cbd3d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c01a7c-75d9-4098-a702-e736aff4c664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2754ea7-8990-4859-a8b1-151aa8a129d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37591997-de4b-4a95-beb8-852138a62de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d4f7104-17a9-41a9-92f4-24766f626674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2283edbc-f1d2-45eb-93fe-e4dc8d7b88f3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dece087-b641-4cbe-b335-b35f9bfcf751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3bcd89-a4db-47ce-80fe-0a871eaed17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcda992-c200-49d8-b3d8-c2377862dd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c50d3d73-5280-4d2e-9fb4-92df9d1d5a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb32249a-15d8-4792-8dcc-a0784cd6ef63",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b809a9-4e14-4412-8d4b-ec86d0cbd0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85827127-4f30-4061-8484-485849e15c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cee0215-80e4-4f70-95f4-de5d914e8926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74b22b45-ff06-442a-8159-1a756f7b1127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e634f89a-b96a-4485-8c8c-87350c1b1202",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91bb9e3-bb1a-4ca5-95b9-fcf57fbfca5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce64ca76-a8df-4aa0-b7d3-9ec6ce611035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442b4a75-6da9-4301-86ec-84f8933abf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d08413bb-5495-457c-91ab-30033f40dc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d5e20-f3eb-4103-9f7a-1e34bd270a44",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2c4080-d91e-429d-b3f5-d4049781439e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601173fc-f713-45b8-b0b4-17d378cdb772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61be9645-bacb-43ef-8bf8-f2859ab704f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a39f76ee-e25b-4f4d-a291-5430631c79a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88659326-4753-4317-9968-831fe8265ceb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aa06d7-7bb5-4ef1-9773-619825c0c461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54640a6d-4273-40ac-9a79-e86cae23e293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c09a2a3-37af-4b57-bf3e-7ae2ed0f646e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0293f606-4711-4c3a-bd41-a1595a08eca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b1b858-47e9-4857-b224-011236ddc9ab",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12acf3ae-fd45-4c55-98bc-7b91bec19873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deffa14e-6db5-4b1d-a269-8e6a5daf9f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d9f335-f50b-4f47-8a39-58fa690be0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13d9da21-8512-4d7f-9a4e-680c760cc4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c24df62-2d37-4376-b024-9a9d3358e5f5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38ea5ed-1d29-408c-ad4b-fe5fc28a7ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82576d48-8849-480f-83c7-c72c38fcbeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f451b67b-9943-4e06-83a2-bfcffa886c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a96fe071-55c0-4842-a628-c3312b12659b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d47daf7-a1cc-4336-b0fa-ff1dedb7d495",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced42756-f1eb-400e-beb0-2b29e25dd0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0df064-6d3a-4cc2-b320-fa266e388383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a90744-01d2-423f-ad25-43171097a654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fea45599-ff74-45da-946d-97e0ddb8c477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae64d36-11c3-4ad6-8749-e6753f204d5d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555df684-1e37-4a08-a53e-6fc3087a7b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e5db8c-6d35-48cd-beb5-55c73a4aae6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d823ab56-3bc8-44a6-abc2-aca9783c4753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aad50f32-6771-4efa-b3ab-b159c081406e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bc4c18-f99f-428c-9c55-9b2c3c1d1815",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f314c4ba-848c-46e2-a099-16a38af504af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e87107-0c10-48db-a64a-cd46afd81277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c04e983-cdb2-4e5d-b778-b2abb53275f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "300f6385-483d-427e-ae1c-2a3b0a8bd241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eed18e-10c1-403d-8b77-ade162c3888a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1719c946-09f1-4aa1-b473-695ff25c0fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99423d7c-6b21-4b3d-b08b-58ca6dedffb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c3f354-96cc-481e-866b-657415a67791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1afbe8c8-72dc-42a0-94f2-da8ce6b16043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464528d3-27a7-42f1-8a3f-92f3b81d3445",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6192925-cce1-46a7-be9b-caa4d36979c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4df27b6-ce6e-4c11-9599-bb10122086f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7899057d-83ae-4901-b0d2-6711ad511c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e554b24-72e3-4086-b01c-4cada2cf07f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abc0af9-9bab-4ca7-a9a2-0c4779b9b6e0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69019dc7-c712-4e12-99a8-4934306d8c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f38d43-c9ea-42d4-b1e7-0693033e101c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc913b3-669d-437b-b995-da2cf6a1fe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3bcf4a-1d0f-47b4-9bfb-65053a5a7259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a68b72-9548-42f1-8346-c5c31e68cd0d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dbde59-ac55-4f39-8286-672fcbf8871f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fc2eef-e91d-404c-9f3e-674e9e82b6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1157990-47c8-4901-8063-2db28794f6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda9e36f-abcd-4f06-b676-0c338d045b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e763d7c7-5a2b-4585-a1f6-3a0ffa1deb27",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecca1bf4-01eb-41c7-9111-d073f85d79d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4464d3-05f9-4760-b062-eae50f59c40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d8325c-936f-4b75-b5eb-4fcd3387d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ef4f22-0631-44c6-803a-b7a3f04161f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5d63c7-2d33-4a61-a66e-5620f0741ee1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351b727e-fc53-489b-931f-f0acee284902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c3ced1-abfd-441e-b7e9-6dab0107988d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dbdf7c-c8e3-4f98-84ca-8c9bacff9d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd5779a-e00b-4677-8b50-0afa366108e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724a5f50-53fd-4c80-8d24-afa62232c13f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141d21eb-8f59-4c27-9920-389487400c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b327af-6257-4549-9ef3-87b126be63da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879881d5-f4c3-4583-a4cf-c4c8e246a479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec919fd-91a3-47e0-a2ac-abe155ed239a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca0ecfd-4553-43ec-96cc-caccbfdb4810",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f032e9-4716-4bd8-a4a2-8abacb8c7c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0af71b-c439-49aa-b6c9-1145c2c1ee4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a2c3aa-e004-4de9-a661-e2395f1ce095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4b6637-d365-49a3-a698-9628c8f47331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f73615-8163-4dda-a11e-49b8ca3c97da",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46d67e0-8b2d-4f19-8b35-37081fe0e763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e109b0c-f5de-4862-bd28-d2c1a80ce136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fedadb-060c-496e-bfa8-d23f4907bc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fad3b34-fcbe-473f-97a2-798793adf52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa780675-498e-458e-8860-88d1c3546137",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e8d3ec-87e5-46f3-91d6-dfa473a1c871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b507faaa-b5ec-4738-8c2a-7db29974278c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45df52be-34ac-4895-8efa-accf6153f6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9290a680-6a7e-48e1-a630-847963a6a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f49bc95-9fe8-43fe-a62a-eb94e3b5558b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f96053a-a266-443b-a4b5-384038fe53d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f096ec6-3cb8-4a02-afbd-d9745fa5fffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872f9e2a-8522-40b1-883e-3af4f2986eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d398d42-9d16-4889-ad74-ce6307b6507a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb95bed-647a-47a6-bf70-d2ce5ce343a7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e03410-96a7-4bea-bd51-11f2735f9385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242cc496-84f5-498b-a8eb-c7924596de86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d37081-dff1-45f3-a953-dc2bb2cc1a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf24379-38ef-4f5e-87f9-69d68be73f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ac1191-250e-4954-91ad-df12e3ee3009",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa695aae-8ca2-4e57-a831-95a1393428b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abaf969-a4bb-4387-a4e2-3cdb28e87dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a79cb41-bf8e-4821-9d09-099c7276954e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff246807-d745-48cf-aa53-5a5e72b3bca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3748572e-d365-4eeb-ab30-a61522a10405",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13638684-b0c6-4f29-86a2-538b2ad863a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb68ee11-4bca-4fbb-90df-48cc52aa58c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd1bcd8-0c54-46e0-a308-e6284689f62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "198e05ce-23e6-49b9-b274-7e489a2556df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0450430b-aa54-4d9f-be1f-50ea27c2ce65",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d17336-19bf-406e-9dcc-c23e0af84353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0a359e-385e-4952-bd90-5930396bf854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7da5ec-0a09-4bc0-b38c-f23a8a30d071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa9d25a-a1d4-4059-9a2f-7b20e95a44aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6050c13e-9c79-402c-84b0-a4962fdae9eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f0e7a6-1dad-48c5-9ec8-e9e5f447d6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7dd1058-cb7a-463e-b930-133fbc9057b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f685be-84f5-453e-908b-68e781228a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eee191c-510a-46e9-9dd1-15325ef72ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0296df7-5194-4ff1-a230-0e05204e3a69",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0c40ec-c939-4670-817c-3500e3cc719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9bea7a0-c33c-44ff-a943-a6c0762fe3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e51bcc7-1d12-4cda-b0ac-0c218521322b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fccbe6e-b0fa-4af5-a889-e85dbc11d812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c891ca6-5f82-45ac-9483-4f62fee9da67",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adda7ec7-ffb6-412b-a4b3-93591d89bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8d80fc-e637-48bd-a2cb-bb25615fda25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5256e36-f365-4791-881c-5640e3ce07c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1d3cc9-2c09-4275-bc24-6bb9d526f4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a585a709-234a-4da7-b924-6908a02b663e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3daed2-0113-4f81-824d-a270a814a32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a61fac5-c2c3-4050-9945-ea91008e5314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac956c5-d9aa-4606-bfa2-b9abebb9f906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7fcf5e-2b22-4434-a36b-e0e2355ccd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974303df-da8f-409e-bd71-09da9f4f1bb8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060946a1-155b-468b-99b2-585272c1ff68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "188c7ee4-ed74-4119-b3f8-133b940597f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a2c1d2-1880-4335-ad5a-4bc16e46e660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74024ae0-b757-4239-aa2f-850f21e0ef45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd122e83-8a2f-4cb0-a432-588f8ac2ef99",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd9749a-cb61-4fac-9937-f5e19e1bcf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8833a32a-97a9-4f8d-a71d-12c40ecbf79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634132b6-bc6a-4010-9200-ca8d33623b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f244c4-39c6-4633-833f-67a2a88de245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa74eeab-38ab-4fbe-ba64-d2ebe63ad179",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d0b57d-d3a1-4edf-b0ee-1aabc416a022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0850c18-ac17-4672-9f93-4601c5c4cf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562b9c20-f500-4000-84e3-4447c5059077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec559a89-5452-4cec-85a0-71fa576c701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dbf0fd-d9ae-42f8-b8dc-4a85cfb59504",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e6152b-b9ae-4a1a-a998-f01656f80209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc204f3-1f2c-48e5-a023-d169442862af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c648793-f054-4879-b567-5694fa93ef8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dd64c6-ac7a-46b2-a548-958c4885db2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ebd50d-b18f-4db4-bf43-60dcf1e28ae5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b94beb-8a91-47e5-8296-7127e9bba479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc17787-4fcb-4ced-894c-85ad6a966fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f79a69-6af1-4df9-add0-98b471756ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe940cc-8099-4456-b0f8-1d186755b452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513b0bd1-9752-4049-a842-271c924e8c9f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26df969f-676d-4396-93f5-601d3dda95b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ea5858-613f-467f-ac48-ea16f0f56663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c392763-db99-4a12-a5ab-3aebafecc094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "30a88308-1f4c-4c03-acd0-a76238a233ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4015f3e-c62b-47c7-8f8d-de3f632398ae",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce604f63-3c21-4bff-8777-a2f75deefd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accc2ffc-6f8a-4474-aef5-283de0795e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00aa85f-6fa9-48de-a2bf-ec54c55cde5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a88f8328-8b3d-421d-bd86-42baf3e35834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3130c54-b515-4853-86c8-e59b61c0a917",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6664c9-0775-4746-8e8b-d9c93651b658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d8bd88-e743-434b-85d2-f3f022962bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0441a5a8-b33a-48b6-9d9c-1958599f23cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5a64e0-5d25-459f-8ac1-c7130086a867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ec9145-8815-4887-9e27-5cfd9dde96af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8526594b-33cd-475f-a901-70a83ff394d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51d7ef2-2b95-4289-aa92-88d32d31db4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63812b70-86a9-4998-8350-ae7105dff0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "916c2239-c05d-4594-bf7b-6174b4a52065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc3df8d-48ae-4e5c-84e4-3e0b575d4881",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65960c04-d5f8-40d6-9216-d99b18867d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9676d4e5-1adc-4d1a-840d-2578298cabea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f851c6a-9489-41e2-9887-54d472cbe220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc06d916-9f28-4c23-ac62-f00b2ddea271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d306747-4488-465f-bb63-9ba64a7ce3db",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95949b1e-c6e9-48f4-b9cf-91a53e7e2a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a59ec6a-c230-4944-a84c-58d4ff3ce996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfd2313-6d98-4f87-a796-001ab87ead37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3616ad-cb92-4e08-bf9a-6e52f9c32caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d2294b-68be-40ed-bcfb-512538bc7772",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfffd676-86db-494f-a39f-503f837a3c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7af9ee-2c1a-474f-9768-4bad1d15d7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd6975d-691b-425e-a435-2789541560bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b9380b-2817-425f-8780-8f773cd7a37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbafa2f-f3e3-4cb1-bafb-421cb130fabf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47dc7ac-d047-436c-89d6-fa01b65a9a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2396a2ba-0d12-41a1-b678-e951e5ed9699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba3632b-b372-493b-8153-558e6eaae0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9415419e-d3e1-4c56-9d6a-b37e795db8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9049a949-2d26-4297-873b-9f0e586a0303",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dc40c5-b431-4f6e-9cfc-6278cbc25c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11308fcc-48d3-42a9-a953-1c944742cebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91934df2-16f0-4fae-a02b-26184b4d8327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "395d77ca-5fa9-4735-bb4c-af7501218b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e37804-ce6b-479c-a9b9-569a3a9fa88e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f799c2-4a4d-484d-9c44-a81a1f447a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f3dea6-da9e-47a5-bbe3-808e2b34249b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1665ac60-e6ec-4af3-94a6-669328d3d33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32707c06-cc6a-42c5-83d5-909f7292952c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34870b90-0986-4de0-9411-4a43027996b7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ae75c1-d265-4c36-9f26-b3f30b41b38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a012cf4d-7176-45f4-b224-2411a4cf4548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7108de62-b3f0-448c-97ca-9427ec378aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c072528f-c334-4256-85fa-4ad911f6a034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb66951d-298c-48bd-a722-2b55ef44fbad",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8324c9-0c68-47fe-b01b-5aa6a07b7e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80add9cc-fee8-48ba-83e4-da028b91de27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa412cd-9fad-445c-bf4c-85a762d8cc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6b6c2e-696b-4a5b-a100-990916aa23bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077f6afc-d4c3-4938-974c-9a15f1d1cab2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24e661d-1be9-431c-9b0e-a18e4c70befb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729f3c7c-b616-482c-a975-98e6ffec2fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4125a4-05b5-42a3-9a14-b6a7e12ed20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0098cd4f-5160-4d23-9c37-bfeded72093b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eeeaa05-1cdd-4f79-a5af-bbbfcaca37f6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc472df-d744-4989-bb58-2f20659278f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88436f3f-2351-4342-a5b7-a17ec5ae37eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac7dc55-7239-439c-90ff-05cc2c7424e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b08e03ac-cd04-4048-aeef-0db7bc48f0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2acfadb-7a24-4ba0-8163-084b672c5447",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56de726b-37e1-4516-a935-fb2346ee90b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee39ca98-533a-4e73-ba10-514aadc24eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e19d91d-e856-4c30-84a5-c55dd5180815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66269833-850d-4655-aaf2-3da130860bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c285cf-fec6-4f55-b231-e897ac1e41bc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458a7b4a-ca8f-4d53-9b90-f40a93d007f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12111959-5923-4745-8ba8-9799d6004e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd84640-77d2-49ab-9459-c4a87f62bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1a490191-b1d8-431d-aeb5-167168e032d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2bd98f-fb81-4a58-914b-41a14f253cb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1e01e6-a8c5-4363-ac2f-01ca777119ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63cf5bf-e938-4277-bdd3-09d5dc6f48a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eda275f-cc43-4d35-820c-8c0584a8b85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da8827c9-c2d9-4334-ae20-89a0abb401c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436db111-d768-4168-aa9f-da37d14f5f1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910c98c4-0edd-4a6b-9089-31ce2c648cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd92a077-5af0-4cd8-a962-423d1281d796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4410063a-eef9-4d4e-859c-01f1c4f3b29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "76343e7c-adb5-40c8-b5f4-d060049fbc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6e2eb6-9e70-4a68-afaf-9580c5df5403",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6c72ce-c653-4c76-9259-fb3fd82615f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6a234a-d189-49ad-9eae-16b3f229297b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a19f43-71d4-48ca-983d-11a0d96bedb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7290c6a-4ace-4c6d-af4b-93eb11f143cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149448b7-791e-45fb-9106-1f5c50386fb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157d843d-f330-4ad1-90d9-4b8cfbb529f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ece4c97-00d3-474d-8dce-f3c845b4b807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a050cd-9cb1-42c8-8e7d-f315c42bd611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea44feb4-e929-400b-af65-1348e223dab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0060df01-5911-461d-b479-5a13ddd06bb6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165659a4-797b-4fe2-8a89-3e9b7ced6a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab2c5a8-54f3-4e07-b03f-2b8bc2ca03e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5495ba8-3386-4823-8e67-db0c9427cb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d45267eb-d522-4434-818a-5d16c011efdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997c7de2-13cc-4038-b493-8e9ba5b53d0a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0def5f13-4eae-4784-8747-ff7d99a3a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaef7d7a-a265-4ccb-aec2-cb93d0614d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da379c9b-8a89-45b6-839a-773306296af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2108f8d-2f48-41ab-832f-9ad9939f5b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e859d25-b185-41f4-bd21-4726414baa15",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2891a9d-9ed5-4e87-abed-434545b4b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4154a15-6fcc-4bf8-b9e5-bd3ff8c000bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d9e502-a0f5-473c-ba26-8ff1ce7dada1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "796456a0-9994-41bb-9d92-1b167452e5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f77725-1f5c-4ad2-b02b-52ede71a2ade",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8fc874-91dd-4a36-b574-75b0d79d3d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713f8754-b2c3-4dde-80b4-1703b05b3c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc59022-70dc-43f2-b48e-25ee3fc4e182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae2f962-0f47-43b5-9a10-2fe6bcde250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40f9258-9a6b-4206-8c1d-ae50f9f4dcf8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ca7d03-5d32-4388-bc1e-cb64ef16691d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9000c198-1e63-494d-8e9f-36e5c177a025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f84012-70e5-40ee-a85b-d52bfa0016db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "261b4cdc-ca4d-4645-84cb-b5212152723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c82619-f60e-43e6-83a1-a41567d38840",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879122d2-e2ad-4be2-b8e9-2d5b9c8cedb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e587a4-3582-4aad-82d8-5642c3689467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d0a1c3-b2ee-47a0-a379-820298a8c5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b16dba-df05-4663-875c-01037514f75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cb7b39-028e-4541-a3ab-4cb4707d0178",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1188a49-a08a-4afd-8e11-d632397d0970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1444f10-f98a-4c57-8a07-201da1243ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e011e7f-8484-47e7-b9f3-79c3b76cfdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab491760-5b48-4913-80ac-7fa6d70e6eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab56e663-5ae0-49e1-8c74-649310b8ba86",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f67b5c-2923-4e4e-b26b-1eb5e2d1e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0b9d00-4245-4bb7-b18a-9303d02f8c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ecf6ae-4163-4c35-a815-1309e8583bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da92d28-b788-4b76-8241-efdae92be342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cb9324-9085-4ce0-933b-a1f01fb352fc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ca82e8-361d-4ee8-8803-a98299b704b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce0c897-a17a-4e08-b486-5ae0b9ae1ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2090ca-4d02-4201-8b10-48dabd87d33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b50e5551-6e27-4d41-8c18-97392f404541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229cbd06-eff1-4865-98d0-6f15d713f63d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2523f570-6ec6-4608-8a21-75d867c5f511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11358cb9-2c0e-4ee5-9a07-dda5c3880034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d6cf5a-cc79-408e-8d10-9d62e44bb178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58340551-46aa-4007-bbc4-ed8f373774fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77f5a7d-8b14-490b-9f48-369e7f5ed793",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261e9fec-f7db-492a-a98e-b498e69c040f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e84944e-3cbd-4cc5-bfeb-4e58e8af8564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97549e56-e531-4ffe-88f2-ba12b0b41439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3623573-bac7-4235-8da9-87e1216e8a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0517f3-0edd-4109-8fd2-04ae4f380fed",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a04ee52-1ac2-457f-9cf1-8a22295f5588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aabe68-78f8-4bc0-8ffc-fbc7303ff306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabd6f0d-b7cd-4c5b-83f6-4934777b6d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc6ac3b-643c-47e2-94f3-2feaff4bb154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7770c85d-3c1d-437a-88ef-5e8ac8f06133",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45fdf72-5a72-4fa3-a1b5-eb1ae8e904fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24a89f7-6f4d-41de-a8cc-ce9ec3bf97bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc9fda3-f3b2-436d-ac4f-3dcd939524c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e970867-c804-4364-a135-f24f4b5fb427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9df56b0-cc7c-4f38-a88d-c9619839417d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad3f5e6-af5d-4d15-b078-f810ef2113b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebf8fb3-5bb8-49c7-be6d-4f78a40488a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e298e2fa-12e3-4169-b642-94a7676f4824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89f9427a-0dda-4239-9883-da4713fd718f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc24dfe-b996-4f2f-81da-a4b13a45b6cc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3b5ae5-569f-4d30-9802-85e486c361c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63327b0-a714-4327-b6c0-259fb098df59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75e013c-28c9-4f4f-8ad0-beb257d73f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a823179-aa48-437c-b0dd-8d408408cb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f7e3d7-653d-4de8-9358-87f5375a3c17",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be5a6a3-2a8a-4dee-8289-4927ad3de1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c610d84a-aa4d-409a-b155-9fde9368f32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f119c441-e9b0-4cab-a26a-3a49b06225b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58bd12ab-a838-4c58-8937-423fdcb53c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fe5f08-1de6-4f7d-a139-e1aa53ee12f5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064b1b83-e870-45cb-8e37-7b61d7c60caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ef3481-29ec-4b23-a42e-91c0dec3bf59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b7fef0-f63b-4b06-baae-af218ed1795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57530e0d-2afe-4f38-a86f-200e1a46bd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f30593-7286-4d8a-85bb-934064848a8c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cca971-57c9-49ba-a5a5-a67169cfc7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0d5ab0-1750-4fb2-9b78-77d5a4a46add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d25ad9-06c2-4151-8c14-d81a9aad2d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5564b1b0-eb8d-47c2-8c12-010ec38ed831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8728e584-3cfb-43e9-8ff4-de90e7141a64",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a8582e-cadb-4b91-80d8-33a91a6ae42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52fc0ec-ead7-4c6a-97ae-f9887a3acb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d696f95-badd-43d4-b165-5e164bf7e4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd285f79-a1a2-4abb-abe0-b300f5d1fb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423070b7-98fd-4533-9278-9f8f05bfc047",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9966f5e-d584-4e61-83e3-fe6808703afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69895621-147a-4fc4-ba75-ee1a8c1818da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a482b8-df97-48e4-838a-6cfaf987a566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e70789f2-1b7e-4fa0-85f6-86c941c02d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc707e67-f617-4750-a078-5919e70c20d3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f9d1e2-83cf-4a2a-bb24-1b993844188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee1ecc3-b248-4628-85ad-494c1fe42e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1fcf60-c157-4f93-b6b0-c0a5cf098179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf101c8d-49dc-4b09-bd46-d968fba8ffeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae82905-74bf-4116-b105-7a0688f06c46",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb6d54c-65de-4fe7-9ef8-918bbda389c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e352669d-643f-4042-b195-c8197385cb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab31a71-0400-4ab0-a417-59ca0eb9aa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10c55ab-126f-463c-858f-9f56141bb6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0469c5-dec9-4f41-bd36-89f9660daa20",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6c9e34-14ec-4e14-a18f-46631d7ceb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6bb9f3-ae8d-4ebd-ad33-db37e52a9dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faebda31-a48c-4edf-810b-07c0805c484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd51d6ca-c174-48f3-8d94-b60cd2813674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1125fb-8931-46a2-ab60-6d3e0d14b19f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549cad4-3c6b-4d75-a9c4-9d9c9009c1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc14c5e-bfe8-46ab-890f-813b9d07b599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93434989-7250-42a0-bef1-1e2a446852f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39395150-6857-4b01-9ccb-75b5070b2a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409a3953-0d8e-4ae9-9b48-05ad6d1f2ecd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1cd73c-242e-41aa-9888-7b71023a3349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60797f18-8e48-489d-a93e-a87bb980e00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff7c489-0f67-435b-996f-01aef3621bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f11d54a0-2370-4338-bdca-d65a4e77e743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c02e22-1a37-4b33-83a3-36aa8d14bb65",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cce5be-89cf-41a9-99d7-4ad270db614e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ff1c37-45aa-4fc0-b79c-1f864b3c6996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487b3c6d-280e-40b6-9ec5-791aa70fd2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5441f19e-b9bf-4d89-bfa1-3c8668b920d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac97d16-4571-4ce0-8226-24bc557eb7af",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56bc742-bde0-4352-9fc2-7911ade9aeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0776bf-8cfe-4f09-b23c-e544dbc4e6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3d5b86-6bde-4c77-b6bd-bb6ee96032a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc54958-782a-4c11-87a4-67fc741f6996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c771f51-8cc3-4731-958e-6888545c469e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32c96f0-6ca7-42f8-b41e-152c9ec6ece3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52d1c84-9bef-4df3-878e-59f00a980e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba862461-8c0d-4442-aab0-868395807423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dccd427-ccaa-45e1-acfa-5ee0de44afa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a06fcc-f144-4c4b-9a02-3b3608fb98ce",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b01e429-ccb6-47f4-8bc5-2eed94a53544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c7fcd6-12be-4a73-880a-c7d478f72bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c849b838-320e-4677-aa8b-8d9d38a0752f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2edf25-702d-45ef-97d6-f7fcf0e6605f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ebcda1-eb56-4cca-acba-42282c614c7d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbcb27d-b5f7-490a-9c24-f5eda8ed93fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967cfd4b-9640-4687-b4aa-d3346c5a3cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322f1629-a56e-4b43-984e-4f6127c958d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbba600-06dd-466f-a397-c7e95440f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e06c7fd-953d-4a03-83d0-372c5dd212ae",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52151e4b-d552-4ede-899b-aa9009017632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e0e48f-2349-4152-81bc-db34a7df36df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806444b7-d2a2-4772-afae-8fbbdb29486e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd218537-3d5f-46aa-9d19-df973e883555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8613ab-95d7-41af-b363-acd9df9d3956",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d118838-9286-4fd1-ba2b-9ecd512e5205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "53ce9e1a-9595-4b21-b5c0-4c93efc83f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de74982-accd-4303-99c2-838e681468b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "db498a1a-b6a1-46bd-ac0d-120cf712168a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f4d9fe1e-0b8f-472f-83e4-39ac81d7f846",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e8247de-62c1-406a-9481-010cb658d234",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e4ae2b-69a4-4799-8e6b-741c437ad2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aadd9b50-48c1-408e-a2e3-b60d2bd04a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6637619f-c29b-40ce-9ed1-a5c1ac9736a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29277509-3dce-4ecc-9323-06617a855169"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad75b545-a110-4dbb-9ecf-1a995fea56ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cd7d24f-06c2-4a67-b61f-078846d36032"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8d738fa-1669-43ad-87ab-33e8ddf73024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "802cf31d-f6e2-4eef-a6b9-f60124fd24ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ccfae2c-e771-4b94-8143-3918169a013a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5dfab04-c900-4faa-b1f4-d5be0732210a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ea321a7-f0d2-45f1-a113-9d5b3f5b7b2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf8e3913-0575-435d-aade-b03babbf1f69"
                }
              }
            ]
          },
          {
            "id": "e18f614e-6f60-4071-b690-4d468babf075",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c233e650-c9e5-48e5-8e3d-6755c1c02a74",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "653adea2-5577-47d8-98af-e95118308b47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc730b47-c88b-4ea1-a0b2-89967149fdea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f5c31b9-48a1-4c48-a4e3-1a08e3046220",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cfd32f86-a87f-4cd1-b769-9fa6c942ce9a"
                    }
                  }
                ]
              },
              {
                "id": "0b803f1e-0201-45c3-87e7-40214e5c6fd1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c879dfdf-2a7c-499e-ba4b-10388fdf734c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "862a71e8-a469-460e-a3d6-1aa71b9852e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28345ea3-d180-49ec-8d07-dbff164a94ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "540f451f-3f8d-44a9-9cf7-4ea853ab433a"
                    }
                  }
                ]
              },
              {
                "id": "330162df-8b91-4aee-be30-e60818ef5cdf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c46867-c355-4b00-844c-9a9c5e0d0277",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0265bd7e-90ec-4018-b171-e40f618ad377"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3245bdf7-4b7e-48da-b693-0e1ec3a283da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82c75c1a-f583-44c2-94e4-06686392ba0f"
                    }
                  }
                ]
              },
              {
                "id": "d6de3969-d31b-4153-86ef-9bb9f1f811ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96d42422-aa1d-454a-b43c-8aace1c3f0da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54114efe-8366-4f83-8ff3-22dade69b200"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daabf90f-0b7e-4fbb-b9b4-9116a7c0964f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d3873dc-7f73-4955-a41e-f050d8060cce"
                    }
                  }
                ]
              },
              {
                "id": "568cd1c8-c332-4bb7-9551-a198147925d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b6ece5e-910a-4fea-8c04-d0b9f442cf13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a514aab-f94d-4d1b-b61d-8f7e8e59cc12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39a70f25-f38e-47b8-b43e-7e929e8f7a30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0f3b9924-4627-48d4-a75b-6b9effacfc28"
                    }
                  }
                ]
              },
              {
                "id": "c2cce0d8-b80a-4869-9882-fffaf15ea066",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac46c125-0290-44c4-8302-b6d5b50bd84d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f809b33-cd30-4019-93e6-e9c2f50ce20e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd58e047-b483-4139-9580-34f5b501a6ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0af02564-c400-46fd-a80a-b7e3c23dcfb8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9307cde-7f34-4429-a094-a8f1e1e81561",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d030ed9-57cc-4613-81be-7e5fd3a08ea7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d051edbd-ed27-42b0-b6d4-5daa080fa70b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9f9c08d-6eaa-43eb-8824-21a49c16f434"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "986fb702-d3f8-4558-a599-76a306bccc7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16bd0673-875b-4474-b217-2b3961179bbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df3cdc33-a339-4e26-b05a-fe5e0207caa3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d29b2c0-4a31-44b3-9a8e-d2b5e05401b6"
            }
          }
        ]
      },
      {
        "id": "253a6ca7-05f8-4618-9c3b-3c3ddad1b536",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "410456fa-593c-462d-a763-2a18ba55a1a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e32b5f2-7dd0-4b0a-9f6f-382f6453e756",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "425f14f9-038d-40a2-8748-19093e2e475e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f9ec4d-7bc5-48f3-8a8d-dc887b140c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a44c2a-10bd-40b5-a061-46d5ee5219b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55b7fda-833d-47e3-9343-5b032ef06e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "897a4501-1303-4155-a11f-1fa739e83e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f5092f-2f29-4e6a-bcc6-43543b79d643",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71117c80-0d91-4223-969f-08d543a7326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3aacc19-f27e-4c8f-a19f-b51b2fbda813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ff719a-ec22-4aaa-9f26-6d34a8059d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7999bc4-70e6-4aa4-b262-58f083cb3704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d57c299-f4bb-4c3d-9770-57596627c479",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1ce208-3d56-4511-bd2a-204078e07f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b519ed9-692e-4f65-b578-82dd71fde0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e653f7b-4397-4f60-9c10-38a12fcae5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "266a3eba-1798-46c0-9713-cda10e48e81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45a9891-894d-4f82-b4fd-b45ee9f6e9f5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc79d4a-9aa5-4e53-baf2-e720546fa239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b3cc24-f59c-4bdf-a200-f0f03979f18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65e412b-601e-4dca-ad8e-e7c48d067a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a400dbb5-ba61-419d-8c15-274d8476b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a96e567-015b-4505-b49b-f12016cc5a9c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed308b81-5e1d-41b4-9fde-66bb4eca3534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926148ea-4ee9-4ee3-993e-c93f3a28f180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dab98b-af9f-49c4-88f9-5c28e7f1e8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0797024e-c661-40f4-85d7-9cc83d0c96dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb895c4c-aa37-4866-8175-df49f17209e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16d570e-e22c-4dfe-a188-d624d4cf591c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfa9a8c-5d50-4823-872c-cfe4b6a3c560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55db099-2dd3-4c78-b165-15ab9e0c4fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1290a73-8958-47c9-8699-4060d783adf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff2655b-7f93-4359-baba-87c4eccfc3db",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2773fff5-2b9c-4c32-a910-d6a103a6fb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f123ccb3-31a2-4bae-9021-ba3fae3dad7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148ce0cb-bee9-4814-9b2e-86b725f612f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab8beca-9426-4071-a4de-869881ee0dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47ed639-8c8c-465d-97b1-0bf201fce20b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34d9bb0-f71c-44a6-b942-cd41e989c8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a433bc-33cb-4e75-b215-0ffc2fdd2210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e01a4b-9927-4b3a-a5f3-2d286c8f32fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "246c3dd4-a3f3-4791-90ee-fbfa47c239b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7691e8-d6fb-4cea-a00a-7d6c48c33ef4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bbbd85-b380-4908-9d7b-a3b36d69dbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cab7f62-9620-4efb-95ae-9d7a9d54f30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cdebcd-c02b-482b-a459-ea490e59adc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f80f9bb3-2766-4933-b636-d9c80099d893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f144e401-2db1-4b2b-b653-42226784afc8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ee5683-8683-4306-99ee-06982c548157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293d4995-0915-4080-8c97-1c59dd21a68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23529005-6c1c-41ca-84f7-58617d47de13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d1a466-2209-4616-bfa5-2be65e9d121d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f224b1a9-79ad-48d9-a925-7a977b84c56f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d8c986-b2c8-4b60-a1f8-215255f09ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa34eb3-1a1e-4c09-9f65-ffe13e6b285d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a15731-7963-4226-b69d-f6200c10ded9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ca8d75-3fe8-4844-ba8d-5f12c596f383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068fddaa-bb84-447f-9bb1-313e5d3268e3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e97d55-a745-4bfe-8b27-6116b3f8b69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f6e650-cd7b-4c16-bf6c-ddf80bf29fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9131dd8-e53e-40e1-be27-084e38c5491b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb98721-d072-49fd-afca-5c99d2aa7d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6ac421-e87b-4115-b9a2-db76af06c909",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2964c301-726e-46d6-9a67-38e6cf4fd521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e04eaf-0936-44bd-a6cb-5559aa69dc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c588744-cdfb-484f-bbb0-007b3e53c2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7be5ae7-e0c2-45de-ae8f-b766d50568ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01974f65-a9b7-4088-bdbf-7acf4ed003a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c842fd3e-c35d-4e23-8201-f666b8fe318c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7311a9a4-de5c-41c7-9905-4790939e7fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916a89bb-4ab6-4493-8322-ab9a82d6b49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e262180-28eb-4f41-89c7-f05e0f4e438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98efb36-f828-45a7-9a2f-cea809e96521",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344771c4-7e68-46de-9a54-7d05e8e688f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea3eb97-5668-4b08-ab5f-3dfe07e0e997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5763204e-5a83-4128-978a-b3b2100106cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5806ad8a-4da2-4632-90a3-35bc4f991d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbda7a55-c082-41da-a956-e4a4a96c7ed2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6e9285-e3ac-40d5-9377-40814afe5946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada1f1d5-0fea-44fd-a0fd-cd60c2d81a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ce4f15-701d-48d4-a0c9-a1e282025026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a839432d-4c77-492c-a530-6b8da5d230a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0db8fa0-05f5-41c1-9d45-9a4d6eead500",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31f482f-6da4-4b93-ada9-be6e435d956c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ba1b50-f21a-409f-a431-53e846682f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469581f-f989-4fa8-b3be-c62dfaf3eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b50cd90-b910-45ce-a851-da1e8fab3628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181d2bd3-1a4e-4153-a914-ed770cd4f689",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66eb89c-22bd-4295-9f05-2e5df765dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6dbb07-0212-42e5-a58d-79fdf9191e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5fd47c-0554-4764-856b-b51a03aad736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9559041-9ad6-4736-af20-c47eb8a8217a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43b92c0-f330-4606-9420-d141480c133d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbbe7f9-fd3b-4f6e-8de9-81c7185f3394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5878770e-51a3-43cb-a79c-f3944c4f2f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f9ab7b-1c2f-4a43-943a-1092a9a1c23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5c9cbf-70d6-440c-abd4-53a9bef1e4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798962d2-bac5-4ed3-9dec-a597ed37984f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cb8907-f5d9-476f-a44a-fa7bc711d6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d50ad52-4e4b-4f86-9642-c12929777466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32268437-1901-4f1e-824c-b6f1d9b5b2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93fd431b-8957-48b4-9b02-4670fcef0301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2e0764-d678-45d5-95a0-58189a79aa91",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c64735a-407f-4472-976b-bf6c590cc369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a95f166-19cd-481a-991b-6dd334ecdadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3fd42a-3314-4f35-a3b0-a6b75ae40af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b71beca2-6669-4970-8f84-ac30798fb6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e7e77e-2a09-403f-ab22-ecdab9227458",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d90cf32-7f67-4af9-8320-e1fa20122356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b480b4-0a86-4ba0-8731-c5056eab066e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29f6a26-4aac-45b0-8b34-a2044a5a1abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0294f887-11a6-402d-b75c-0e372bd30ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f07bf0-a448-46a3-a123-5f1b990ffc06",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774ad771-49ed-41a3-b5c0-e3731bd7e43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9151af3-ba85-445b-8bc1-486a1ddc5cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76332214-6fa4-4c97-bc7c-4cc1f6b18f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de7ec702-f80f-4f2b-b142-ddc73147d710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1758bfc-a304-45ac-b18e-8376fc36aca0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aa8cc5-c0ad-43d1-adb5-5d162ddddc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acc6183-b302-4515-b8ad-a2da6020ab01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675f5dbf-b1d2-48b5-89c6-21b965b3f03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8256ad-393d-4290-9843-e25acbd208ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c44ceb8-0a4b-4103-9601-32fe945f71a0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e48623d-3e3c-4471-8b14-d5042680997c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef57b39-9843-431f-ac85-b60f29912ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0120f56f-b001-4010-b0dc-c992ad07375e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d871a7cf-03d8-4f96-9500-47059985a06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7779d3-f747-42f2-a373-80dab3b8361c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd2cc93-0a75-4cb5-9263-7e25c6cbbdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ddce07-b238-468c-9ae5-9c205c1f154f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d949f615-c022-4d3a-baec-986d8af14285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37611fd-900d-49b6-9f36-a2f237214870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215d6c86-3502-4c3d-9f52-cc006408abd7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d16ca6-47be-4831-9a53-85f776b2012d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d326a02-2543-4854-92ac-92ffe70e543c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aacd4f3-ee85-4342-8736-a554f215fb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1da3d26-20d9-4d27-98e0-04774ffa982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb89d001-8a38-41cf-8fc3-73294bb0d1c9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dd0164-490b-4c17-992a-f19f90d6e9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bfb8ce-50e3-4bb5-a848-0e27eb767619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85939e0-cbf9-478a-bf91-1ec5cc3c967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb5f2b4-796c-4fb4-9c99-cef22eba4817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625861e5-438b-4937-a630-d39577cca395",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1180937-75d0-44b9-99f0-3c914a3ae76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a261cd4-1e3a-4d8f-b0dd-18a4f55b00cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bca85f-c3c4-42e3-8877-74e10a55cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e354f2eb-eda4-4763-a56c-a5577fd32a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6161ab4-d70f-4743-91da-0e317cb277b9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5dad1c-9d4a-402e-b86e-0a858f960d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2366d3-293e-4dbd-a09f-8658ec077a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58753a9d-4986-495d-8eca-991b4557a742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5865422-f5b7-4aab-8ebf-8023fd657249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8d8017-f5dc-46b7-b1be-0ab0190b63ce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8519648-1bd7-4a3d-88b9-9201591601a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8c46d0-1c3c-4780-832f-fcd7c3e98132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c7158e-d2a4-4f8f-ba0f-82171a915b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c2d9bc-53b9-4a1f-a33a-40f90dc374dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc351b4-5928-46f5-bb34-bf241a6992ad",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182ed62d-54a6-461a-897f-288040a625db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465f101d-5705-4d96-b49e-93fa9aa22f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b032e4-d475-4ff9-a66e-f519f68839a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4af4611-046e-48b5-8394-2a78702ee404"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e8e50c7-5016-49e7-94ee-fdbf37a2beed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "490dc659-935f-44b3-b737-13481701b814",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c492648b-9be4-4309-81fe-6def944ed887",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eae2948e-40c0-4a3b-93a4-435d0ea6c691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d447bc0-529f-42ae-8a34-a52c88fa7194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7ed4b69-62c3-442a-b970-a4b164432d84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bda0313-caa7-4e64-8aba-371e3b5a582f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66ff6c27-4fad-4c75-9150-5bcc3620ac2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d69dcc2-7137-46d0-8f2e-5f02723886e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1aece39-93cc-4eed-9fbe-02d7bfa3a0f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4298bd88-f8f9-43f2-8d1a-972a9e53624b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30d933d2-9357-4151-a4ac-4aebfaa96163"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5baac1cf-fac2-4858-9afc-53ed25f394cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41040648-a263-4cd4-999b-411ce03eb865"
            }
          }
        ]
      },
      {
        "id": "f1b0b66d-1b8f-4c37-ac1b-d5a61cdc5be7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "952ed8fd-af3e-4bb1-a3e9-8b6e7c31e757",
            "name": "Negative Testing",
            "item": [
              {
                "id": "664e5fa0-ba9d-4754-aeb0-3aa4f231056d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6219c65b-fc9d-4d30-baa8-21a8d73a65dc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900d5b35-5fed-4606-92c6-f94b3aa04dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6a2517-7de2-4d25-90f8-1f2716f8ba97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593ca1a6-5e46-4f6d-ba20-13549851eca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b383e5-0aa5-4263-8a47-8bcf9feb4c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89aede7-df23-4882-9053-a326ea1c67be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d06488-b3e1-47cb-81c4-fd96b9c95429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8759f8-e160-43eb-9319-a2662f6e76ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05515716-fa73-4efa-ba34-a42432d458ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "108219ce-08a0-4f69-8c2d-653aabd2ef8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc7b3c7-4ca7-454e-815b-fa3dabdfb09f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578812da-6cd3-41b0-ae1e-2ecdcf07368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac44eac-e997-4e5b-87a1-7980a2fd25a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8f1722-e1f2-422d-a5a3-6c316a4d7599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11325d9e-f723-43e9-b742-54b0be77d277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f63cc09-5891-4add-926e-bf93a0e34ed5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1446bc46-8612-4f5c-b748-26ad6ad80ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458f26eb-fb74-4e96-8078-2bf9df68a370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea071793-de25-4809-a0a3-ebf67618002a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afbc088c-f85e-41eb-b404-a80de370c46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e355c53-0a86-4337-991f-b0b92d44fd1b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb5d80c-1c9d-4d50-ad08-03e4d93803fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1632d510-d11b-4fd6-a099-5cb7de24f4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4526aa0b-6e95-4cf6-8051-64dc26dd0d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c64f2f-b992-4076-b541-a6a157dafff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72e6482-b2aa-437c-8ce1-4b40f9a0e253",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eaf31e-0b0f-45cd-8216-188673f70989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecf5b75-9db9-4eb3-8254-a6b4f34c5319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e076078-dfe2-42c3-afa6-e0d7685c4784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a42bb5-c34b-4508-b5bf-0ee5cedac5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755cd952-d94e-46df-a375-e0879a9dfa53",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4abfca5-b235-4e4c-9f3f-c0b8d013fb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12be776c-10d4-42d5-b959-303ad6024eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ff9f81-f5b5-48ab-a55a-573457126750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a5553a-1b1c-45ed-82a5-0bd1cf8d7ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a3e248-1483-45e2-91c4-b6c84474fade",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf49097-a33d-4b1a-8c04-343137fa1dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2c248a-ba77-427e-afd1-53c7ea6ba333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267edb33-351a-4e1c-ae9c-8455c15213a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4138590-2c15-4157-a228-4d2b830d9656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866f0e62-919b-4129-9369-a09cfc2ed6e3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c00397c-2224-4eb5-bc88-d0fbddb0accf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6174a3-d443-4970-b23c-49f26f2411e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f67be1-3a6d-4e5c-b1a2-e93eb0869ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b190adc7-fd08-4c1a-9d31-8c779073b600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57181c0b-ea97-492f-bfa5-480d358c7916",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6de38c8-8834-4e07-bc8c-7d0c1db96612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fde178b-5749-4865-924f-15fd9231e36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5fbd00-5665-469f-8259-4fa544edbc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecead4a-1490-477d-8164-e85c2ac7ad5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3049cefb-af87-4e2c-aed3-939d1deb11a3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0eb6c1-e529-487b-92c9-c47515388ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708fa76e-c807-497e-bd11-f1d87fb06b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85b7d0b-a9cd-44f2-8793-de1a390d63e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5a945db0-8559-4bcf-b68c-444d3df9b37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c616fb22-04ef-44af-81d7-830cbfd5b087",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372a92c1-fdc8-4d16-9060-c32a99914d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764cdf7a-0550-4e8b-a10e-bb4f25302cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e7da2c-7e18-4608-a80d-5f16e7af9639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "748ae891-7b6a-4802-a76e-2c24d03e0019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0718cf1-6618-4d50-8596-69306bfaf562",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b1a898-c908-4545-956c-c6bd09631710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126f7ce7-995d-4c34-8ccf-3ca9d47e6d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f449438-ff27-4739-8fe4-91378fd34ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aecc403-f34e-4dee-8bf9-e82f1d3f8b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9916549-db64-4d9f-a0b1-698625035ad7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f964b3-d917-4bb3-bd14-aaed5e39b265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c88971-6f1d-4094-a2ee-25ccbad9b451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efc81c1-c5c5-49c1-9aed-4d83097dd458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "205541ac-1633-410a-938f-b805526d63fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a82287b-cc6a-431f-9df5-89d0b0a03b4e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63c0ff3-02e0-4352-80d9-cb43cfaaa4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38948745-6056-4ed8-97e8-57225e58eed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440154c0-a7e3-4c75-9972-ea6255aaa1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea0fdd7-4dbb-462b-a76e-1bf788144f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956f6088-f3bf-4a6f-b5cc-3c2cf0a3e4a2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c9d530-5d64-4f7f-b742-0ebb84ddf743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70aacfd-9e00-49da-9bbf-83f65c5613bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff570337-8437-4786-8a2a-1867dccb584d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d628659f-d321-4e63-be80-671ecfd068f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778c2531-abd7-4f25-b0d4-ee466f045302",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb49c5f-68b0-4024-8bc3-f08a942fb95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b22a008-5ca8-4a20-ad1d-dbee414e14a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170d6a7c-a967-40be-9a55-1d94e7c7a726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b7a86a-4be7-4a18-9413-86796e375d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959ad309-ed80-4737-99b2-473dabd0edd9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d29f26-6533-4c14-b112-e842a78a1394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cf0c36-96e9-4da7-b309-de9d3ccd4436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46adb13-aeed-4107-ae5f-17626f29b249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf1b964-1a9b-4352-a6a9-978f28ad55b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740c6ddf-10ae-4061-8b29-854367950c12",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9f4eaa-da67-4811-a7bb-a0f45e4e381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf31abb-e32b-49d8-bb09-0bab5f365f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b551bc73-a924-4a3a-beaa-64ea46af8a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ff03c5-a24d-4c8f-9574-48db9da2d1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca53d7c3-c291-4fd6-ac05-13b2be8c3a9b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7246a276-70bd-422c-8c26-caf1712617e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31dfcb88-48ae-4cf9-8ec7-82d2131176af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da66c0f-cf65-4db0-9fed-ae46c200f328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7907cead-f5d6-4c3f-92bc-c8c7206cf396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b0dc3f-8ffe-42b2-8fa9-8000fa5a4a31",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f7075a-6f43-4136-8a99-6290fc85a460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa57731-92a1-4f61-ae85-cc2080b539fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4333c6a-b9c2-487d-82fc-6bf9a7453482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b246744-db1a-4dd0-9b20-17afbe123f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5694b773-d908-487b-915b-0ab0a5341113",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa1c624-fe93-4615-a4d5-745016fd5fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c3276c-cc00-4fd2-8dbf-be3c7ddcb3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60510500-de86-4490-a3f9-02904b2a9244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d0eaa9-a618-4c47-8fe1-bef832c0cd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dce58a-7903-461e-b6e3-991d5faabb19",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5792bc7d-f141-4312-b097-403fa08da5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcd7324-5921-4cfe-bcb2-5404f95c8856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0977a6a7-2418-4ba0-a846-4db18041ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "050cd501-37e7-4b93-bdf0-50da4de8840b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad678cf-b13e-47a4-a604-3f1d8f722d73",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e4ef82-4dcd-4abb-a6fe-c655614b01d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33a55a5-e008-458e-b26f-1f615a3e1d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695cf3fc-a29d-41f9-a8e7-5792ef0ff487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91bc2bf-b8e1-4080-a831-70b4939c0487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506d0e4d-7ba3-4f79-99f2-fdf79c8f9fc4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bf2210-0f3c-438f-8aae-7ac14fa0f8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcbc608-8347-489b-aa93-96908356d0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80df8450-d70a-48a0-917c-1bc743e53247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eccd663-a907-4022-96fe-163495add9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e033f7c7-f31c-4c75-87a9-dc923ee8208a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c828364f-0ed7-4f10-8d6c-be22d55647c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9109692-eb35-499c-ba07-91ba93d41bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d08b8f-448d-4568-891c-c1193bf12b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "695a8ea7-2141-4955-be45-6b8c8ec850c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacac074-fb87-4099-9fac-c9a900b7d8ca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328ff7e9-15ae-41d3-a11b-ded2ed13d6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40fe791-8f5b-4bfe-bfdc-5ed4092b9f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f0c746-97b2-43dd-9396-cd89a6d24504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "344ebc25-b97e-412a-a3e8-4d2588a3bbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923a010b-112c-4d26-be89-28aa86865e4a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dde116-427d-42e7-b017-207c2ca0d687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2317ae-8672-43a2-a612-b8ce2275d2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c84857-cfe5-482a-aa65-4b7d918cbe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b873a92b-0c9a-4393-96cb-39dfd02e8d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a0501-b199-417c-9bb0-18e5a80b7ed3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfd73bf-1817-4825-84fb-f3fcc2ddb745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ed957a-2260-4926-a150-a3b2ad4b4046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d19999b-2f79-4a31-aede-adeb4ed84d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e3f4f5-8b9f-47a2-a341-b025eda6fbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73acb9d5-6fea-4733-810e-ab591bb71916",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39102d04-19b2-4a21-9650-3bfa03ca1cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8353c272-8b23-4695-9dd4-8c5a33ed66eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e7431f-7f42-41cd-9d33-51fb9b10f4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad5ba22-aa97-444e-8805-3608a1a92d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8a88a8-3f52-48b5-a7c7-764beb909f49",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e493a8-fef4-47c1-9e4a-b467ea92a28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f06282-474f-4f28-9c27-e9855305d59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053672ea-1487-4f66-ae77-d32020f49cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f06fc1-b7c3-43f1-9437-a55cbc5cc3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229e2d13-642b-494b-a39e-8813c061dbb1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295365a5-3e92-4c55-8d53-a0228d20e5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26df22f-be4a-4d6a-912d-91c37b0da32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d536d9cd-f6e3-43eb-9dbf-b5a9fb296d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3726adc7-82fa-40c4-9fa7-53906434e223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be4024c-b155-4e96-97dd-c0e1ebdd3605",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183500f9-4c9b-4ed9-a330-a89264e0b7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a2ec65-6feb-4730-89f8-3b16190d6d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baeb9b7-a31a-45be-8220-86f92391e05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29096de8-46e2-4f55-bf5e-7a9a12ebc969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1b9626-ee9c-465d-b5b0-9cf1996b42c7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832addf0-1cd1-4ecc-9e27-d2d63e897542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8acd0fca-32f7-46b9-898a-604ed2a8acd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96322ac-50d9-47cf-a9df-d4a262a19a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36d5d68-f53e-4164-9736-87f1d211d09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf3d9da-1985-4cd5-a5d2-0614ddba612f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a02cb0-8ca9-4efc-b309-eee28e70eb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d6c84a-3942-4c6a-ac1c-58b4c20c4581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f933a35-c36f-4da0-b13f-3fb4039fea21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa060e33-33e4-4794-ba79-e14112758347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cf439a-06cc-4f3d-a93e-5557a3b3bccf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bcb8ff-e307-48aa-b96c-135ca42b3f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf67a57f-28c4-4d07-9846-2a387a310d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307cc4d9-20bf-4bcb-ada9-1a9a5b2293e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "685b7f28-5e32-4c3c-a958-2397446ec8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66c3c9c-dcb9-426a-b4c5-cb7e3bd69f19",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb3fbe-52be-4a12-9d6e-31d0e66c7276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caafc13e-8b28-40bf-8fe8-126aea918b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7460b1-c6c8-49e4-8cd3-0acc1c93794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15293f8-a83d-4681-9d3a-84b2e78f5c79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4cc07048-a4db-4fda-ae46-a734491ac67a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76b2aad3-2a2e-428d-9ada-ee307979abfe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0430ea-396e-4082-bf3a-ba8f8c0c4c04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9033ad42-3226-4b41-a3ff-182d2ba887f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0395a412-dbdd-46fc-89e4-ca25a7622d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac0048be-0c44-4171-b67e-ea00b7877074"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8fd66b6-c402-44a4-aa44-497c6ebbe232",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79c1f626-6ac6-4f8f-ac54-132abbdf5fe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73d4cf91-a4b4-437f-9a76-d15f61e6506b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "345abccc-272e-41a3-b4d6-49ee754b3e32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a22f3e0-86ea-463c-82be-6ed6259394b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d88f20e8-459d-495c-9465-fdc2612dd4af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9a153a0-86c4-4a3f-abf1-1a5a7d7aff0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d12d3d50-fc3c-4202-9284-a953eafb3dd7"
            }
          }
        ]
      },
      {
        "id": "b2f1b4f7-816d-4d0e-9221-61e0237de41c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0202da0a-ac7f-4a63-949d-e9abe611605c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "414e1c42-4006-4d67-ad67-00acec6635de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "608993ec-ee94-498e-8311-5419ce2aa059",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646301a2-c270-4f19-827c-6860929a7ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5511878-ab7e-498a-ac76-0bdb5bc8fb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593d0bb8-37ae-4155-85f6-c0c71ad0bd6a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f252597e-90a2-4e5a-b97e-a5337f0650d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ef9f4d-b169-47f6-b2cd-8b920ebc20ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5981ad-24be-4b66-b308-903dd5152b1c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c33b069-63c4-42f8-a9a3-7fdd703b6b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded67227-84ef-4eaa-abf0-caaf7eeaa75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b4b9b7-4ee9-4a52-abd1-568eaf5a71ac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4791b6e5-af5b-4f82-9a34-dfd9f11a512a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfd6909-0ba5-4e70-9ee9-52e2206dd7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46efea7-8cdf-409a-8fa0-c0cf25303499",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7fb850-8c8c-46fa-b9d6-e542db155823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001da6c8-ef15-472e-9c94-1bfc09c2f74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31be57cf-483f-4c9b-95d4-fd28d03a81bc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3c0f1e-7ce6-4196-9513-d58cda65ace4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3438cb9a-21e7-49ad-8cb2-6292fb0a667e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ae9ec0-9f81-4e37-9637-9e3170ce54b7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d41349-3d81-4532-b5e9-2d5d3c5b186d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4b900e-2ca8-45a4-b124-fe512154cd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a1cced-053c-4a67-9cde-7e30e83b37fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5a5edb-8665-4e59-9f61-e0bdfa652f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053b7238-b2bc-4c96-99dd-5355979860eb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8111fadd-d13b-4448-8e45-61218e3af343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fd35f2-6ad8-4ac3-83d7-b591d6892a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88367c48-7883-4ae8-9e56-fce1d030c82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68316ef1-1730-46a9-aab3-1bf297e40a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3ab174-3e74-496b-b802-e1510c48656c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f2dffb-8b65-4a1f-97a3-428324f570d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9411261-d3fe-46f7-8269-3c0020690632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7da11df-6e19-47e9-8acd-7e0384731b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bf5a9b-a1a9-4c2a-aef2-7aba17ca42f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0e5d4b-d700-46c2-8862-adc4e45efd38",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d206c2-3f50-429e-b59e-4100b9059e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d58734-8d1c-4a63-a576-5dbdb95b3311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928d0d5c-0f3f-4ab9-b8fa-9f57b10d3c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b853556-6b5b-4fcc-ab18-c4d6bc92a5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecf383d-9187-43e7-b50f-ffeeef901543",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62706385-360b-45e6-b6c0-e721bfe00552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16081520-9bb9-4722-ba29-e6e660074371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d0ebb0-04d7-4f91-954d-e9bcb32c9df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22473bb-a9cb-4725-b747-01eb31665443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748c8320-51c0-4da5-b9b5-3ddb4ae86f23",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddf3aea-c51b-436d-b0c1-b2f06d4259c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587b8c61-aa56-4117-890b-6c13a1573279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd159e8-6549-47a3-be97-798a762cec2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375fd0e4-3f61-416c-8b5b-fcff6faa8b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9386760a-3937-4ee4-82fb-d19cc00165bf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c9a3d6-0512-4f89-b14f-cafcfe8406d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26fde4a-468f-450a-92a9-d89065c77895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7b4534-3bfd-4336-a284-2f60c0aa1297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22f2ee5-b9a6-45a9-aecd-f9f4a96fe8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2dbbce-2d63-471d-b0d6-0ccd9fb5d156",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866da395-a1a6-44c9-b8e2-6d3e94a762a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2840b5c0-c66a-45dd-97ef-ea6e0fb4d40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4842977d-dcc0-4ebe-9341-60bb96a8cb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb090a8-c7af-4ff1-90e8-8def48306673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a6922e-2f4c-41af-91fd-ac2156850a5e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74584fc7-2774-4c0a-a4ed-fd48dc40f06a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ab3121-670f-4900-9c15-104c1544e4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b2f884-81f1-40dd-b0ba-2e19eeba8268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54620fa-c1e4-4cb9-9628-45cc07a60839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8856d7-afa4-4ce8-bd1a-80aaf0e76b6c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d134015a-a152-4386-8c18-66dcdb65f35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9710dd07-b5b2-4a52-9017-255158866baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2616c11-91f0-4767-97fa-8e2f4cc71a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd83d11-6292-4f91-a7ac-2bcfbe6beb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54938b41-d620-411e-a60a-db01c597fde3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e6a490-6535-4b47-b369-af0fc3528650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e773f64-f940-45ce-a2de-d90bc6d057d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3651666-9e2a-4a10-a966-b142e3ae0f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb63f5a0-8bf2-429e-8488-622471905f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8797f660-85ca-4124-ada5-dcddcf8c7466",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e705961e-9612-484b-a1ab-2166285bbbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26aa0a7-cba3-4907-9881-c2cb63fdb654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32789a0-74f9-4040-9d12-5da892f942f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08af3226-1ee6-41d5-95bc-06b08806c3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7a1228-7be4-46a4-9cb9-75e7fd6db38d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f83bb44-fddf-42d2-bdb7-39ed7447e276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d503cee6-3b3a-448e-bd46-17b99b3d0fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930e5152-fc83-4478-b229-d5ff429631ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29949789-8498-485f-97ef-db1601017737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719088b7-3a3a-46ec-abcb-1126ed6ecca1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c203de4-c1f0-4035-b731-aa63be7993ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bceaa4d-bb4f-4782-8b1f-71359ee14e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3b61a3-1a1b-4b0f-9418-a7634609c9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b27f41a-a618-4212-b006-56fb6b341b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2578a98-f893-4942-bc3b-362e2acb8002",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ae5189-da91-44f6-9782-b5335e2b4c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4200170-83c5-4b4f-87be-e19d770a09ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3370dec8-2b22-4622-b735-cff1cd715db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e459456-72fe-4ee6-82e3-9c10210cf19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae97fd66-5e63-4652-95df-fdb86b5bbd6d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49498fc4-50d0-4aba-a1f2-69163899c677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b142a4-185f-4d33-b9b5-4f707a5a1179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355ec25b-1b81-4d46-a43e-b8fd358612c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90a9067-8756-4201-a2bc-cf85001e08cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f27db3-c0f9-43a1-9da4-cbf2a96dc9e5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7e6d3a-f2bf-4f83-b75b-dfa70be4ed2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537425bd-02b1-4e93-ac21-8a9fa6a69857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04108d8d-fe34-44dc-b673-a95408bf04f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775ad222-e6d1-43a5-a9b6-fd37f185772c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912614bf-333a-46eb-b0e7-79bbd85edca1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e18a4-be44-4802-bc43-97d4f3a0e707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d21f149-30a2-49e7-be06-04395fa687ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7ee647-dd9a-46ee-bc79-b39ce9400234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29a9010-94b8-4550-bc99-bfe6a99b9d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212522f4-5cc9-47d6-85fd-2aef25db3aff",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c327d2d-5e26-458c-996e-0c1b0fa80662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d860bfab-e534-4bd6-94a1-499a4a58d813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a8ed2-02d2-48e0-8024-69c0d5da1457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e17baa-2945-48c4-9cb4-bb47d25d401d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4799e593-9154-4c11-a817-d06b9ec36f14",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097b1524-c841-49b7-924c-c981c5f95af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f82163-1f88-42a9-9c91-8a521a6efa44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca46467b-4cdb-49c5-a562-22cf44b92774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25eba8b5-69d2-443e-a90e-67ad9b6a4714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd53940-8bd3-4bc9-92f4-d47d53d11a7e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16c0b71-e5b9-4a40-b6f9-5385cdbc0537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd7f104-3423-4605-af63-df7d042146af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68034997-be4a-4eda-b48e-074cee543fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7be7ad-3009-4f68-b1dd-d34e9758f519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d908f2f4-682a-4c82-9c45-9a5cd3242451",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb7432b-b383-4c30-8aea-11582ee2aa04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9680e1eb-b09d-4aab-a095-6389fdd64a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24cfde2-9763-4af5-be9f-6e105dff90d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18333bd0-16f1-4201-bde2-3b0ca8fec7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b9c16f-ddd0-4aa0-b0da-5457372bfad1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27617a1e-7d4b-419b-a7eb-5d88ac2a45f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bdcaec2-ed95-45b4-9ead-84fda7ab02bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257b352f-efdf-4a1c-a72b-11493142ce34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406dee81-d128-418b-995c-ba67cc08c471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092c0e9f-9c8b-4eb7-814d-bf9b520b016a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a149a3b-9e0e-46d9-b133-7d77b51b753d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e4fd164-08c0-4f42-8b2f-4ef15b7c4e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7728a236-db3b-4584-bbfe-c2eb3fb327a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376ea7e8-42b7-4386-8695-631e4de022ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f57d9e5-fe75-415a-be77-8bb1f3c39582",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8315ba9-3ca9-4aca-b32c-3fa21ab4fd1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1fd7e47-a0c8-440c-81e2-264202f28d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f6f6f5-7fb4-4f64-ae9f-3963a2031763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a690db87-522a-4f67-ba9a-ceb169c3e425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4476afc9-a7ac-4d0f-a3c4-52c9be162fa3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103eb2db-778c-4501-af92-b6910dcfa30f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83740d0-0088-4bf2-8fca-cd2fc21af162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de19d97-b149-44c1-8d1e-267e1e293705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382ec2be-c895-4ae1-b3c3-b441d4ca69d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe6ad10-4f73-4476-ba72-2d1ec86a1387",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bf1ae2-29b0-4f81-974c-849cd5f65a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414f4c67-c844-4525-8acd-8366231afc96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90efd4e2-cbe7-41a3-959d-975e18344d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f6bf3e-4cc3-46e7-9fa0-14aa5ebbfa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beabfe9d-0f36-48d6-9a2f-d990345acc44",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b970661-fa3d-454b-8982-efda96c95253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ab22d3-5b37-448b-a2d4-20bc66fc97ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ea7203-38ad-4c11-bcdb-d886c9ce2e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f2cec4-232b-4d90-b424-1c809434bb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f2d697-af64-4d92-b97a-51d58fc9ed94",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfc6231-2ed5-4d79-8e07-2afc639f0bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282f00c2-fc5a-4471-a4cb-5fb21578b78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9848401d-27d1-4eac-a788-870757bae0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b4c8d0-0810-45c1-842f-d9242a3cc5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0428e09-7c14-444d-b49c-7c36382744d4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be878d05-e6ee-48f7-ae66-74587e6d88fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08498826-057b-4ba4-b521-f3fd20846cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee190b54-dad3-4df9-adf6-e0afa6ea2f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146181de-0bb9-4424-8951-e1ca4a096ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e5ed46-e132-4dfc-aca7-ef473225ffe5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90df227-acf3-4c12-9af5-85eb077c82cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa854143-c45b-447d-90b5-bd50b5c329ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de1a7b1-d9c4-4a53-8174-2bd4089a4280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c475301-22f7-40a5-b25a-e8c4072e210c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfad8d8a-608d-4ae7-87bd-9ecff2d94e59",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae0091-cd71-4de8-a62b-d7e19130166f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32ce1ef-b211-4de4-956c-875080418949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b5f767-33ff-4b27-8a58-cea1cc4de6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7428e61e-7786-49b1-b5c3-5462ef47554f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d2d05a-68cc-4223-8e51-8cf1d4348ad9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8887a9b8-6608-4263-bf5b-7dff96a93b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daab78af-828d-4f69-8c51-49d32c74c64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6fc5c9-9fbc-42c8-9314-97eeba17fb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76b4e89-5fc6-4f14-b2c0-29af93045a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d178e9ea-a893-4f7b-bce3-e89712d6565e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e5ed06-eb7b-49e5-8f83-7cd759b999ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430c4e2a-dedf-4c7d-b7a8-4836eea619db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f3a214-e2d1-4738-9da6-f87e7222cf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e2c424-6ddf-411c-9b6a-93a4575cc512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7640ed7-a9aa-4834-844a-7c628e3a1f2a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8251b55b-f74f-44f5-abcc-40560fa845b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbdb258-2cba-430f-9976-186029fd3271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20863ba5-8664-4241-abe0-f31d0263adb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a210c478-a7ae-43a4-a88e-d32f82881519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4e817d-3e51-467a-aad6-47366992f14f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2223104e-aaf4-4cb5-9282-fd1b1a0016ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22241cb8-3749-49c9-bce1-a4bc6e30ddb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c03409b-89ec-4b39-9d19-1d9a9e109d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd1c06d-20ca-41b2-b3b1-1b37dfce2a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee33f72-1abd-47a3-8460-1ee683fa263f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa1a885-674e-48a1-b8fe-9609b7d5b087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b725a4b4-689f-40eb-b407-932c460484ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a5feb5-4e66-401f-830f-01527d990478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6292d0f-4e0a-4f01-b78b-4be72e4ee10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e90664-0861-4b6b-a066-b551e8a3b68e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ea574d-73b9-4420-9679-24eda44c4723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe56d13-6574-4708-a4d4-4566f95578c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc243306-e82a-4459-ad4b-3b10f6aeefb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dff1f3-eb24-4e51-a93f-13f58bb3e601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a3b626-9f11-49c2-a3b7-a429522e8322",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a631c15d-5dc6-43c6-bc2c-3eafefb1f46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d438d45-94f4-47e9-a328-2f8b77bc7dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887c722c-bf23-44e3-9e45-b80884d890e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5e802f-1c81-409b-a21a-55d3020e73ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bdcbd4-206c-4990-81ef-ab52dd1098e3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65db713-1e1b-4d23-8ae0-fcd2ac47ecaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cf4d2c-98ef-4aa4-bd89-2f89a5edea19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab61363-8da6-41ef-aa44-65073660a3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d3cba4-ac2a-448e-ab70-d54d4393e79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bf047c-a903-4039-9518-8258488ed91c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a156aafd-3318-4891-832c-1ac6aec252e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f200bb-751e-436e-add4-93415e3cdd31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab36d12b-9737-46a0-b126-d3a0e6cac8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933b10d1-114d-4aaa-a248-ca1820c3464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa8c617-63a9-4002-b530-dd9274afd561",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3886d6-3806-481e-b378-4c7e0205eb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3f1c2e-e941-472e-9dcf-8543ac2e4c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0557e711-9eb9-4340-b058-34e2eab08f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848a07ff-3111-4c61-9236-73002725d322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a88d20-75f4-4e03-b018-9090b37ee4d6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a17fa0e-270b-4910-9343-294fba59278c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a55e12-54bf-480f-83e9-bc1eae82af0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa474ea-6a0a-4bef-884e-4e2bfbb8c93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5137737-3636-4ada-ac89-7fa850dc402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3621cf21-408e-46df-a73c-4a23d73a8450",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d001ee0-ddcb-4fb7-a1f7-4445433d30dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f5a29d-ffb0-4899-9045-41fe4079511b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07303d75-d1b4-45aa-bb58-ea4baef5a2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aea255a-11d6-47c6-8a2f-e1600ccf626c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da21a67-ce3d-42f4-b81d-f20ed0948565",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defaf2be-6d50-4960-840b-0ea8244f06fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bf6a0a-7f38-4e6f-9168-24ee62ff8295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97062af-31a6-4233-9746-bceb4a7bd79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0306f269-5e59-4818-9df5-33952d2e64bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d71eafc-2250-48ee-b1f5-b8fa0b704349",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa83ffca-9778-4718-ba5f-62e76960562c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e81824-eead-447f-bf1e-f8e851420598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4181a83-94df-4255-8cdb-d0b85513fd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19802d31-0e6d-41e8-9b1a-13fdc2249162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7014a3e7-79fa-43a9-807c-95873e6b6fc0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415d1b11-7891-4d76-b5a0-bfa9993225d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4dfec4-055a-40e2-b393-bbcf8c9ad63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bc8509-f675-4f8c-9b65-e9799c82a11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094b3c7f-9432-49ed-a3df-a3783e14ac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f7d86e-e46c-410e-8c8a-e4aac5d4681f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6343dbf6-0e3c-4831-ae2b-56600fa490e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f88483-94c8-4b59-81c7-293cbf617b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c973fc-54aa-4c45-a5eb-d14aae4b2855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddcdfde-d148-4712-bc57-cf9fb466fcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8aa7b7-72ad-4b01-bd01-6fdecad2b0eb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8174b90-d768-42fe-ad20-ea6728a62489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bf00fd-0fce-4c50-94c6-f7b37d2cfb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad7b1e9-d653-426d-9077-c668f3b60743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e4a398-029c-4dc7-9cbe-e8ef67850c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cbd370-f0fc-4d8f-ba99-e82119501cd0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44438c2-20cf-4537-a72f-1a798ae8e7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35f921c-71af-407c-a6e8-f076f360270b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93ab4c2-1f83-46db-85d3-0384adabc1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c6b5b4-ae46-4d98-8a6c-ef9ffec3de18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9085aa6-dc63-42b8-b794-22e496156774",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0251f30-f249-4b00-878d-eee8f86aef60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bad52f4-dc90-49d6-9394-feab28356d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102582a3-72ab-41fb-a17f-b47fd44d100e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1267a65e-9c3e-4508-8842-8f4661fdd7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcb1828-f9f7-4289-959f-165ffb961aaa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d1c210-0bc6-4529-914b-1ed75b4921b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da5ca1e-0029-4033-9109-15992de70756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5513d4e8-e153-4532-b850-9e6ac3c0975c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4896f7-91b9-44a6-993e-5a8a58dacb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b9100c-1bac-4c83-80ff-61c799204882",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6f90cc-628e-423a-9887-85d76d9c7b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b0bfb8-05e4-4455-a0e9-9e6db0f2ff9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9d1842-59a1-4816-86fb-58fae136091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08481103-ed19-496d-ba25-b3677f72a341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f11ab3d-63b9-4267-a431-1d2b25dd1a10",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f70dd6-0d96-4238-95ab-985e2803cee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d25636b-cbc3-4a95-aae6-2cb949fe0398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9a58a5-107e-45e2-8470-ef4e62e44ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1043d6-45f4-4ec3-a2ac-aa2737a65980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292bf919-174b-4ff1-b6ad-49e49c55748f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc9a59f-89a4-4844-ba48-04f78a9f5342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686ea433-e5ae-49da-8dc1-057f4d4e8d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8786ca-9274-4032-a7e3-855e9804a2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be2b339-3ff0-486c-bc78-e50193796b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54aaa69f-dc79-491e-b86f-05b3b44ed0d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694f23e4-4c61-47f0-9dc7-485e84d03eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cf5545-8a58-43ea-a430-8a6ce2ae29d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d8e23c-f5e8-486e-ad93-fc2e6dbe3ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef513c6-0b61-4c39-9475-79f90c00ca0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98f4597-dffe-4cd6-8551-a04c6aaebcf3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7c3c4b-cd23-458f-b04d-50c3eeb4bcbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83d2df5-e9e4-47de-9ec4-ebb9db8fd1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6394525a-ab95-48e5-a8a1-990f181903e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c5f5b5-16c5-473a-80e3-cbfeb422dcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80b1c8b-ff00-4363-b52a-ca3f1aa25712",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c204eb-24a5-4343-8da3-0a5745144591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31907155-2704-494a-8c21-2c07bba32c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb0bbde-6e3a-4458-bb5b-fce613175129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9f629e-f135-4488-a77f-083a5e0e70da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6903f538-11ed-4007-b290-ec59a4e95490",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044cae9d-22cf-4819-b836-a3f1b404c7fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1547a8c-c223-459d-8abe-3fe1c333f90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7010e0-4a04-4a0e-9b5a-20a844c5ee74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2263405-38dc-48a2-9f74-0e90f5bbd759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d31b3eb-ac1c-4d08-9c54-a0c477c389ad",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861e7e4c-6aeb-4d2b-a8a2-4204fd633842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8caca417-7460-4152-b44b-1b307a1434c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d509aa8f-a41a-45cd-9a6e-ee900ebde3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f04e6d-6e05-4616-9a5f-35d38f9aafa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d73b527-1d4a-41df-a983-7c8d6a6ce8e0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c42a9b4-95b3-4f9b-b715-b934dc3f46ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e07f0b-9511-4e1e-9070-0f506a52215a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a7e240-a8d2-408a-b094-596700a48be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc97135f-3071-4833-b71f-ec8aff2e9115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3432b688-4406-41fd-a957-17e8e8343105",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a6bcc9-8827-47f7-96de-0df2c859e3b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b7659fc-3344-46ad-8d83-0e741f5d6a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc76292a-7429-4a74-a1b9-6910db1134ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563350a5-ac50-496e-a179-7de5aac24316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30bbe79-fef0-43e0-8d9f-5568608b6007",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f828859d-8729-430e-9fb6-896951ec3905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe91c173-7929-4955-9713-d851f8bc51a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfedf192-2237-47bb-90f3-d363763b6cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594e7849-f39a-4fa1-b05d-6e56ebc9865c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf258f0-2f61-4909-965b-be498ce9702a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b53613-6279-49d8-950c-31c320346380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f671a27a-5a26-46ea-b844-1e6c787b4ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee3049f-4042-4c4c-a4a5-63229eebbef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e058ca-6257-469b-a959-d6c87fa04b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba44adf-6a64-4406-93cc-c69ce9375bdd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca72f956-5e8a-4647-8f58-1fc47e3b0c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da13b7fa-daa5-4e26-82ca-70e03f3945cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e87eca-c73a-4370-933e-befa9ea1c370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d0978a-fd7b-4074-a6c2-5d33af7cbabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb4f8c0-33b8-4be2-b635-d33e2d09f279",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eea20ec-59b9-40db-b074-18818f9fc134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c50db3-ec4b-4572-a718-67deb2bcaef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8df0fdb-692c-4f1d-b4a4-877b11fb7292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cc9363-4c67-495c-817a-80b1bb69f69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb0420b-c676-4cc3-aeae-19b634bb1501",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618c00ee-b8da-4d16-b440-6cf9ced02d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44da5314-5a6a-4b3f-89a2-112ccafe205a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5b65a3-1de9-4040-bef2-757f9bdb061e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e27dbe6-d6dc-4107-88da-3cbbf0a4d089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7a0372-334d-4284-8c03-d2e933bef498",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef31c84c-a478-428d-a9d7-534c5bfa0682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d7d807e-bc60-4efa-9a47-a6fd12e94d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697c53b0-735f-4ff2-8937-af354d0f7b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a5e2b4-f70e-4697-9445-1f3d47a81282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4729e02-475a-4a3b-83de-31e1b6d97c37",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1151c3c2-e4a2-4b50-8f21-acd59c9eb290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e14ea3-607d-4c4b-8f98-3b65183cfee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4b0068-01ba-4f60-81e1-a5bfea16e941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808e2333-8fb3-4880-90ba-3df63dd2aa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222b4d56-5ee6-4157-a615-3bcdfc671664",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288eff7a-ff1d-471f-80ce-8eaad89dd96e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f825a1-3ae2-4b33-81b8-983191b9e66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83f2651-1036-401a-9693-4bc646e04c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add6d679-74da-4f58-9d60-d4a6c8276321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efc1f93-0dc3-4433-b8a9-a0552911a82d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f7dde4-a834-42f8-9a4e-4e9a7afc2653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f9b8d7-33c4-4d71-8e98-ec52d68bafb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3879458c-aec5-44fa-9bb6-5d9f7cedf1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1965d7-a2b1-4305-b056-3db879e03212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc9ffdb-ca6b-413e-af47-d6559bcfb85a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31123a2-bdc8-46da-afa9-3d0f200fa61d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b575779-b1bd-43fc-a761-5b976dc9cc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be07a9b2-eb31-4692-b3cb-bd80908512c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f4a580-c459-4e37-902b-e9613395451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd31217d-2d38-43eb-b666-da27b373dc85",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc17dda8-1dca-4f95-911e-b4c9a87c964b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1240ff24-ad9e-466e-8335-e4fd96896295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ef0c2b-fb6b-4f59-afe3-0d11a7c02e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bf3ce5-a4ab-47dc-8a11-c4044ed7b566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aad6dd-a22d-410d-b69f-cfbc04b4eedc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30983aeb-1d12-4450-9e12-e8c11917bdff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad561a7d-d2ad-4484-9aa0-6bc4c9541370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feac5a1c-3b88-4964-a47d-d5b055ad8fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9511985-8823-4c17-bb16-e9c74142af3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e163ec6-2192-4b01-bd4e-4ee5d15d93e7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf2161b-39e0-495d-9f09-8391b8eb1c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fbd65ea-1675-4a22-a3b5-bca93cb60a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d924310b-edfb-4567-9c72-240669e457d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bea1350-b4f0-4b89-a5f4-c8a9ccb60015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ed8db-41f2-48b7-b9f7-8d91c3d98568",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a61471-74f2-4ebc-8540-1d55a89975fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2fe164-3d06-4135-9976-6bbf14ec8a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65b8a82-054d-41b4-aa5d-7bdbcc760120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9127fb-9a5e-4b0f-a53a-f5cd0f721cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029285b1-ed4f-489f-bf25-a0ab062abe07",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95679192-d101-4d26-9211-11a81f28ad64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655c9340-2b9b-46b3-885b-24868903ec2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c83462-1abe-4b45-8da4-6c4a4e66c70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1463279-07f2-4245-b273-f610da34f5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e05ee3-12e9-46b0-a2c1-839434e41346",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dc5b67-7d3d-4931-830e-28e101daa3bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e2d98c-8c5e-4a76-9b8a-0df3178d9812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ef4da3-4d28-4118-be1d-361d1f8b8d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1693317e-9b90-4c75-b918-ab85f6e5d734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd3d5e6-ea67-4864-a6dc-b2478893e515",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e15789-b21c-4c71-b4c0-ac3b9280e9ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8239f62e-1cb4-4d8a-88fd-af795e322b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789aa31a-f2b6-4c80-82f0-65be7b67ff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad0ee19-033f-4278-a3b4-67ab6c007ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15843ad2-44de-4e30-8a55-3da4393de96e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d33d0e7-ecb8-4d57-b2f1-72a6a7100218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f0cc75-2ff4-454a-b491-2b2264eeaafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f78c360-8c31-4e37-93e5-24062b358a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6458864a-d8b5-4821-9e1f-4872773ae1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26257266-641c-4ab2-b3cf-ea25aa764b05",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef8f8db-1ec1-4e81-b0d1-4f39fbfc7ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "030232e7-7b7c-451b-b8cf-77b63144e105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ead113-e1c5-477a-9648-68a82d91396c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a409fec-5704-4bc0-8b5d-5a49363fe3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed53fd2c-b2b0-4bb1-95e0-9055d12e4c77",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c24f1b-b005-4b64-8718-99b4e28f2a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce68df40-3f07-4929-98f1-b14fea110d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368a1c05-3171-49ae-bb85-07863e0fc4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd67301-f776-4865-b37a-8bb017017477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99291084-ace7-4dd4-ae19-b189661c5c14",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433af27e-8d59-48ef-8e96-04fc4842e0dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8533074-ef5c-4049-997c-3f1eb7f24e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e59ab7f-3c4f-4d77-bf73-40bc845b5501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d2b9a8-5414-4831-81d4-63928c08a611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4fbd0e-75c3-4939-a156-616c28f66130",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cc20f7-c778-4ff1-bc2e-e12f733d0d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e71e464-ecdf-400e-a059-bd2082bf1d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246eef74-799e-4797-85e9-766ed0d30000",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7ec536-be46-4d5f-8c9e-6cf8a47373e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b655d19-843c-4993-9bcd-8e5361b0ad27",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8449f28d-e042-4418-ab1d-60bdbb3542ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da20b44-1cf4-4a63-b83e-03b9b934546c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f6b5fd-c3fe-4342-99bd-1697c1e6ac16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a482cef9-5f22-43ec-b78d-931bb33283ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8a2dae-ace3-45f8-9ee4-8fdbffd457c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc5ac9e-4f1a-4e48-9f74-ac0217c674b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d8efb1-87c3-4e29-85cc-819be72956f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccb4874-ad2e-4924-8122-e8acf15d6963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaf9930-376b-4ce8-ba55-b07f77aab0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5b9d70-4670-49f6-9c3d-391cf764a667",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6cf4f1-3007-4429-92d9-3af31bd639c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1e960e-b371-4738-9d0e-2a4dfd67b0a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff792531-8071-4cf1-8986-c51a8acae0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794a6b30-92dc-43d3-a56e-a01977b9b303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f7617d-9de1-4ead-a2de-682663366e0b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551848a6-e2ae-4dfe-85bf-d6cb9111d317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5abff8a-77f1-4dbd-b6c3-3cc66f9a2394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0206111b-a365-4e2e-95a4-ecfadcef825a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3269fd2-e804-4921-b5a5-31f8d4983008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e92a01f-d939-42cc-a99e-6c16f41bf5a2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f09bdf1-652d-4c0f-abfe-395abe1eadff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2389e1-cd23-473f-b85e-b05fdd18b573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed08f2e-ad1d-4687-9617-152dcd44ce5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3963a632-671c-4a1b-8848-a0cc366f4f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23481b83-c05d-4475-8d4e-77ac35d2115f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e812d4b-ea44-4fc2-be43-5ba20509f57c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b1051e-4378-4aaf-914a-84f8304575b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef90400b-f212-4350-9d37-7110800446b2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdd6714-2854-4b4a-b54f-5848cd7eb595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224a61fb-74b5-4c00-a6bb-9448dd686322",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802f03ed-322c-4514-a340-0dc4ad629600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9336c08-d8d1-43d4-af3c-638b830c129e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e3ec0f-54d4-4cf9-88b3-0ae227d1ff89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a10003b-ceec-4fee-9414-52612790477d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1da44384-491c-4c4d-b803-d8abcea5497d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ccb1565-cc97-40e0-b1d1-e2145cfe9745"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e3cc309-457e-4962-bd8c-f442b3974649",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f68eaca-0be1-4f49-b371-1e8942f050a3"
                    }
                  }
                ]
              },
              {
                "id": "1fc53f86-24d6-49e7-a824-8af16574a2d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fdbf726-de9a-4622-b289-01737202311f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080df3a1-e34b-4bdd-aad9-413896429be9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "57119baa-0687-4bd4-b757-f5b439a30fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304d0bfc-a797-4891-bb4f-4ba703b77593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73aaf7e5-7767-4666-8d90-ea7500ad1f2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b42aae2-cf6f-444f-905a-59b56cc0cb0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c31a401b-2648-4480-bbf8-e2621dce447a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dfbca53-360e-4693-8aa6-d808608be3e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea2ee67e-7f00-41d1-a431-3e7495026cb1"
                    }
                  }
                ]
              },
              {
                "id": "421c8751-2cee-4a53-9be0-42e861e750ec",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "480e1495-168c-4d56-baf7-dc83c812a380",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d1b261-b156-4a8b-911d-3b055961fff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "73026eb3-6754-422b-996b-9b45ffc73f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3348aa7-0b0f-434d-8447-2858c9935afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de68948-d607-4676-ac8a-47a7c42b5873"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43a7710e-f461-46bc-bf56-e8ab4e222742",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0eea5235-ef13-4df9-bd6e-9b4983a4c92b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d44feb8-5584-41ae-8aa9-7268b3afef23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa20a99b-01e3-4d5b-93b0-0875b933a1fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71dd2144-00ea-4b52-a1a5-0929b83bd734",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a49da203-1d05-4762-8f0e-14f92c5dd96e"
                    }
                  }
                ]
              },
              {
                "id": "4cf2aa3a-9a2a-4cac-a412-5bc3519dff26",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d13dba20-b864-4168-ad2b-7417131977ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d7215c03-c1bb-4d5e-a91a-ca298c75deb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "966d2879-d49d-40db-87a5-74b83167c336",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2204270c-d611-4c7f-87d3-03141e7000d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77681305-b8a1-457d-ac13-7ae3bfdc5891",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "68b327c8-52e1-4e94-90f6-cac20a23f56c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6427dec5-eaf3-42e8-99b5-5e817f00229a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ea5fc91-7fe3-4eb9-a462-4ba9f3e358c7"
            }
          }
        ]
      },
      {
        "id": "08fc8201-0cd5-45d1-b1db-7777170c3573",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4639c8e3-f872-450f-b4a4-ad481aad1801",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7ff23c1-b0df-4afc-ba31-98a429979039",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e62980d2-f561-4e09-ac60-6485a50aacce",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b1c633-fd82-46ea-aab4-d3bf09af21ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe85281c-807a-4aca-9aad-02b0234065fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf11cc3-16dc-4c0f-8b73-edba08d84c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfd85ebe-444a-4087-bc84-b39d22abc27a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4406fce2-85f8-4a2d-939a-476955b843f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51e9422b-f4e0-461f-bd4a-6c26d20af2a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5905ac8f-a1e0-45c3-aafc-ea232ba4b9cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95ee628f-06b7-4e72-b202-385690c158c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4500045a-fd52-43b5-ad27-ba673f5cf5a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a242b500-6f5a-4484-a1e0-82dedb8e1cf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18ba1b93-79c6-404a-a0a9-4c23c4958259",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0eeec6f8-c72b-412f-9438-7a2e2ec862b5"
            }
          }
        ]
      },
      {
        "id": "d94cd2ee-ebff-42df-9cfa-120144fad55a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7441119b-3474-4b25-8168-3162f00f1755",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f824b157-0549-4966-a922-850c61e61b11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2287ea7-0e6c-4d4f-9c67-448d8f735252",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab016cf1-647b-48fd-a20b-b4adfb552ffb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfd68c68-b66e-439c-b816-eb157a8bc6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b109d292-b25b-4572-bb1e-11862822d7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90251cd2-363f-4613-b300-bf56e803bf90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bec770e8-f8d2-49d4-8e00-e00a96b8a21a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4e52772-bc19-4ecb-9871-c577e650334c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31f88cdc-d659-4ede-9046-0e0572bb01c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9b52b5a-46d2-44c8-bd4f-b79ac7684375"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71375c81-92ee-4a3b-9e1c-a5fa95d40ec1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "113dc2d7-9789-4315-8dec-8cccb0a65092"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc81f7db-d02a-4fec-9fe8-853dc8b0d8ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3d83103-f1fe-447f-af73-0b365e62a22c"
            }
          }
        ]
      },
      {
        "id": "f64757d0-9da8-47e0-a0b2-dc6a40012ec8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "879fc210-84cd-4eab-9c29-453a69593061",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26181c99-a0a7-4660-b443-46a54e55900e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e1ba294-9067-4a58-92d1-0680b2712f45",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706a0448-b530-4722-b54d-7debcb31553d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7111478-aa17-4001-bb55-524f6f5b120b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83c3413-2898-462e-aa9d-ead79f064566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00d908b3-c8b4-46f2-9627-8e17c83b902b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b96b6e4-7c1d-4e03-b49b-d2d050e32138",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fb7bc33-2c9e-4ad1-8ef5-ba5f81885d28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "465b1ef6-cc2a-49b7-92c1-9434d1413819",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38a54f89-174e-4c0b-a219-7730f9573461"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4832f7fe-8646-4889-a0c3-9e554ff5d552",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b18afe0e-2bc7-4bf4-a378-b7091806af7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "665aa536-ced6-4570-8900-fc407abc7c0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75134acc-ac75-4585-8f2b-04c9392fa2d3"
            }
          }
        ]
      },
      {
        "id": "7156b6f8-6116-406c-b82b-6dc59b5afb44",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01cc9cd1-6488-4d1d-9795-4795a3728a8c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8741bf5a-c9cb-48c7-8a9b-645042ca5183",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5975ff70-c520-4dfd-a6b4-aed64530a89a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87e7cca2-c057-480b-bf8b-bf3611925aa5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c7193a8-7b5e-4fd1-91fa-b3c508ec9420",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 84.22183098591555,
      "responseMin": 13,
      "responseMax": 4914,
      "responseSd": 409.77343888244985,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693614677320,
      "completed": 1693614714807
    },
    "executions": [
      {
        "id": "a14965a8-93d2-4ba7-a924-d1e27becaa29",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f4f91a09-0917-4153-a803-8f15223755c1",
          "httpRequestId": "595570fb-afdc-420f-a8c2-a791cc40a507"
        },
        "item": {
          "id": "a14965a8-93d2-4ba7-a924-d1e27becaa29",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a6b7bbc4-1848-4cee-bd6a-12d90c6f4af3",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 0
        }
      },
      {
        "id": "23c80ac0-f912-414b-8724-5761a1751624",
        "cursor": {
          "ref": "b2f48983-5961-458a-af47-617d9d6460f9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "444b7441-e546-4a2d-b2d4-209a160fd9c4"
        },
        "item": {
          "id": "23c80ac0-f912-414b-8724-5761a1751624",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8a706045-f803-4e16-ab8d-d551e699437e",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "c7902358-d258-4a91-95f6-da5b8031896f",
        "cursor": {
          "ref": "13814fd5-297c-434f-bf78-f10e90d15503",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "687b96fe-4975-463a-818e-2f041a1097d2"
        },
        "item": {
          "id": "c7902358-d258-4a91-95f6-da5b8031896f",
          "name": "did_json"
        },
        "response": {
          "id": "e2b76618-f7dd-4734-8232-14760bd965ad",
          "status": "OK",
          "code": 200,
          "responseTime": 145,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947052f8-bc98-4f95-9cb7-2b355c106e32",
        "cursor": {
          "ref": "77d46531-cadc-4b2c-b2a2-83e9be8b132a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b4db7d32-9fb6-4d86-9148-9242f3d9bb95"
        },
        "item": {
          "id": "947052f8-bc98-4f95-9cb7-2b355c106e32",
          "name": "did:invalid"
        },
        "response": {
          "id": "78f963d8-c850-4845-8958-e11faee4f9dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1131,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947052f8-bc98-4f95-9cb7-2b355c106e32",
        "cursor": {
          "ref": "77d46531-cadc-4b2c-b2a2-83e9be8b132a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b4db7d32-9fb6-4d86-9148-9242f3d9bb95"
        },
        "item": {
          "id": "947052f8-bc98-4f95-9cb7-2b355c106e32",
          "name": "did:invalid"
        },
        "response": {
          "id": "78f963d8-c850-4845-8958-e11faee4f9dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1131,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55449aa0-fbe4-4086-b3ee-a8d4b3b53ade",
        "cursor": {
          "ref": "f141b51d-2df2-49cd-8642-a3fa602858d5",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "486bb314-97af-4a88-b00b-c79b7e51b55e"
        },
        "item": {
          "id": "55449aa0-fbe4-4086-b3ee-a8d4b3b53ade",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "96923066-337b-42af-97de-e26e1c5474f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b2b219-1fac-4ef6-a63f-1810b0ab7c15",
        "cursor": {
          "ref": "77cdad71-26e7-42a4-94b2-ba9f78f379c5",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d79d85e1-6869-405d-a8cb-1dd17519391c"
        },
        "item": {
          "id": "e7b2b219-1fac-4ef6-a63f-1810b0ab7c15",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c64e3825-215c-448f-859f-dd4bceb8646e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efea91eb-1403-4c63-8fbe-5cc2b4db4ef8",
        "cursor": {
          "ref": "5c484566-6a1f-42b8-9105-990542170bb9",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c4d5e52-bb8b-4eeb-9460-300205a486b7"
        },
        "item": {
          "id": "efea91eb-1403-4c63-8fbe-5cc2b4db4ef8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "47e60040-16f5-4868-8b50-202e254d4f57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 89,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb9c8c8-a715-4deb-a8a7-39c5edb2e312",
        "cursor": {
          "ref": "78efda46-6a2b-4f94-a70d-8c8c2bc28dd4",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7e7bf7b9-d5b7-499e-a82e-a5816203b409"
        },
        "item": {
          "id": "0cb9c8c8-a715-4deb-a8a7-39c5edb2e312",
          "name": "identifiers"
        },
        "response": {
          "id": "0fa32464-0d5b-4428-bd5f-bc105bd531f1",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a6f793-6b26-4356-b872-2440ee2c72be",
        "cursor": {
          "ref": "de8660f6-a1dd-4a56-8273-cac002724700",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "16c51f53-6cef-46cb-84a6-1686433ed758"
        },
        "item": {
          "id": "c3a6f793-6b26-4356-b872-2440ee2c72be",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4ac71b17-b7ec-4b7e-a9c6-37cdf26e8a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9df857c-b5ae-408b-9468-5df2090484ed",
        "cursor": {
          "ref": "b6a5dd46-f619-4c76-a0bd-b2ee389d7a0c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "093d35c5-b76c-471e-87dd-61435cc69a66"
        },
        "item": {
          "id": "a9df857c-b5ae-408b-9468-5df2090484ed",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a73e3d37-956b-4a70-882d-f840d251de3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957b85b0-cd77-4def-b878-75060503f068",
        "cursor": {
          "ref": "4978e7f5-1481-41f6-9188-ef38629ea36d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "361380b3-8562-4e92-b71b-c7035fba2b43"
        },
        "item": {
          "id": "957b85b0-cd77-4def-b878-75060503f068",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ccc5c5db-4398-4c81-a484-f3e309ebf583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76641e8-552f-4900-9ed0-f75e9936f4b2",
        "cursor": {
          "ref": "1de37460-11c5-477e-9a28-ba191856c0a2",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "81fd1893-3a0f-41a9-910d-9a3bbdb48a0d"
        },
        "item": {
          "id": "c76641e8-552f-4900-9ed0-f75e9936f4b2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "673d176e-2c70-4eb6-8776-78c736cd5ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a52316c-d12f-4172-967a-d9e956b58940",
        "cursor": {
          "ref": "05fc1106-f7a3-4648-9cda-3a833891f3c6",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "045f87ce-66fe-495a-a669-7ccf3d1ca7c9"
        },
        "item": {
          "id": "9a52316c-d12f-4172-967a-d9e956b58940",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "42dae277-c436-449f-af08-d42a33a4c198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafa6f51-c790-416e-bdf7-53709c7cbd3d",
        "cursor": {
          "ref": "8717f4e6-7209-4020-8b61-c4765b9af715",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "22473216-fa6f-4918-b2a0-5157ae7c748a"
        },
        "item": {
          "id": "dafa6f51-c790-416e-bdf7-53709c7cbd3d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "743cd919-b1d9-41be-9a19-4385b39a1fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2283edbc-f1d2-45eb-93fe-e4dc8d7b88f3",
        "cursor": {
          "ref": "678e68ed-e918-43a6-bac7-c7db240ccf88",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "19a46b7d-ecb6-481f-912b-30f18ead7d14"
        },
        "item": {
          "id": "2283edbc-f1d2-45eb-93fe-e4dc8d7b88f3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "37a8e074-3161-4c69-8799-2aadf2152fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb32249a-15d8-4792-8dcc-a0784cd6ef63",
        "cursor": {
          "ref": "49017116-f42a-4e10-9b0d-273a330cb182",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2607c328-2371-424e-9c4f-397e19adbed8"
        },
        "item": {
          "id": "fb32249a-15d8-4792-8dcc-a0784cd6ef63",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5d24371a-4364-49b8-a514-46a1db449663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e634f89a-b96a-4485-8c8c-87350c1b1202",
        "cursor": {
          "ref": "fcfb720c-0b1d-4e42-8913-fe89dcd88cb2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "176d832b-cfea-4b87-9eda-7fe1907e0da5"
        },
        "item": {
          "id": "e634f89a-b96a-4485-8c8c-87350c1b1202",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "73aeadbb-630b-42cf-9881-30fead440c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d5e20-f3eb-4103-9f7a-1e34bd270a44",
        "cursor": {
          "ref": "a48a1f9a-c997-4624-831c-e3ee71d8d33b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1f9d7f01-590f-4bc6-88e1-22dbd7d4d763"
        },
        "item": {
          "id": "9a8d5e20-f3eb-4103-9f7a-1e34bd270a44",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9fde87b1-d901-42d0-a9d0-a435b1402479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88659326-4753-4317-9968-831fe8265ceb",
        "cursor": {
          "ref": "bafa1847-d728-4273-9636-f81e9d42d20d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "942a5cbe-cfa9-4e05-9b32-bceebcdc9aee"
        },
        "item": {
          "id": "88659326-4753-4317-9968-831fe8265ceb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cf9fcbb4-a164-48bc-b165-3129a93d1dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b1b858-47e9-4857-b224-011236ddc9ab",
        "cursor": {
          "ref": "91466625-08e1-4619-9c47-1889d6cb0216",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "351f809a-225a-474c-9f3d-2ba5e2dd0032"
        },
        "item": {
          "id": "82b1b858-47e9-4857-b224-011236ddc9ab",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a8beb9cc-0129-4996-a2b6-ec3f1fbed626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c24df62-2d37-4376-b024-9a9d3358e5f5",
        "cursor": {
          "ref": "fd54c13b-8740-474a-a839-e5c5b5137e7e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2e796593-aaf5-444c-bbf0-542acfc3c9d7"
        },
        "item": {
          "id": "0c24df62-2d37-4376-b024-9a9d3358e5f5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "81e9e11f-5705-40c0-882f-dab5640a5251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d47daf7-a1cc-4336-b0fa-ff1dedb7d495",
        "cursor": {
          "ref": "8efdf6c9-a7a0-4604-b1bf-03fc933b9830",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f4e3607a-478d-479e-aba1-08befbb8d177"
        },
        "item": {
          "id": "8d47daf7-a1cc-4336-b0fa-ff1dedb7d495",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d2ebd8fe-d645-4f2b-90e2-ddad819c2003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae64d36-11c3-4ad6-8749-e6753f204d5d",
        "cursor": {
          "ref": "a450a968-7381-4b7d-b801-20211ad1e3d1",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "91b1ba0e-22ff-447b-b23e-9221aba024ea"
        },
        "item": {
          "id": "aae64d36-11c3-4ad6-8749-e6753f204d5d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7a8f108f-2103-49d3-9eb3-f062bf2d4b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bc4c18-f99f-428c-9c55-9b2c3c1d1815",
        "cursor": {
          "ref": "c1f79905-3d41-4597-98a3-727280124c08",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b8daa168-7ba5-4ecd-bb87-d8bbf7d94dc9"
        },
        "item": {
          "id": "70bc4c18-f99f-428c-9c55-9b2c3c1d1815",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4578f257-2bc3-421c-a5f6-069a0440678d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eed18e-10c1-403d-8b77-ade162c3888a",
        "cursor": {
          "ref": "1f9f5839-b545-47d7-9cb8-ac64714e67a0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bc2ae297-8121-4fab-acd3-97f33106a7e3"
        },
        "item": {
          "id": "05eed18e-10c1-403d-8b77-ade162c3888a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ed45c85d-8885-4863-9461-d7ed644cdd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464528d3-27a7-42f1-8a3f-92f3b81d3445",
        "cursor": {
          "ref": "2fa2d6b5-2563-47fd-acda-d9706c708c67",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1868822f-7c10-4719-aacd-d897d737fc7a"
        },
        "item": {
          "id": "464528d3-27a7-42f1-8a3f-92f3b81d3445",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1ddcfb85-a129-4d79-892a-00e0c310fb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abc0af9-9bab-4ca7-a9a2-0c4779b9b6e0",
        "cursor": {
          "ref": "b00885a8-02c5-4ae1-8696-bfc6347a9f9a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "63509f29-6edb-4aa0-a667-ef32b358a330"
        },
        "item": {
          "id": "1abc0af9-9bab-4ca7-a9a2-0c4779b9b6e0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7ba90764-d45b-4f51-ae30-487ebae0c1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a68b72-9548-42f1-8346-c5c31e68cd0d",
        "cursor": {
          "ref": "49075593-cc23-4d01-9097-e3b3225d9208",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "88c5fc3d-c657-4302-a999-3dbc57c35262"
        },
        "item": {
          "id": "89a68b72-9548-42f1-8346-c5c31e68cd0d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5eb836e9-978f-478f-b039-420dd0454b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e763d7c7-5a2b-4585-a1f6-3a0ffa1deb27",
        "cursor": {
          "ref": "e30e3c8a-859f-45d8-86d6-ba31c7bcf7e1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "588200ad-b3b5-4d57-b5ee-e76acaf87c1b"
        },
        "item": {
          "id": "e763d7c7-5a2b-4585-a1f6-3a0ffa1deb27",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3af1cb9f-c159-4002-b8be-8923ef1fcb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5d63c7-2d33-4a61-a66e-5620f0741ee1",
        "cursor": {
          "ref": "ec2de582-f1b8-4989-a7b7-aa4c097c6db3",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e1766568-b1ff-48ee-b288-a46c8f4462df"
        },
        "item": {
          "id": "4e5d63c7-2d33-4a61-a66e-5620f0741ee1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2414e897-ee1d-4f7a-a8e3-66cc13fd2cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a5f50-53fd-4c80-8d24-afa62232c13f",
        "cursor": {
          "ref": "794e34c1-0531-4ce6-a236-f8b6c3b2a5af",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5ef56152-c35a-422b-ab7e-5ad5ffb7cc77"
        },
        "item": {
          "id": "724a5f50-53fd-4c80-8d24-afa62232c13f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3f2e55c9-c0be-458b-992f-486023f4500c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca0ecfd-4553-43ec-96cc-caccbfdb4810",
        "cursor": {
          "ref": "42f4cee1-ad52-4d4c-9010-121fe5321787",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "752f134b-65fa-4be5-a210-6550f7a07f16"
        },
        "item": {
          "id": "3ca0ecfd-4553-43ec-96cc-caccbfdb4810",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "db5818df-d83f-41bd-8156-6fc43c3229d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f73615-8163-4dda-a11e-49b8ca3c97da",
        "cursor": {
          "ref": "9e651036-ca72-421e-aa58-6dc6615ab707",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "85bff66c-b20f-4302-ba3f-12be088095d6"
        },
        "item": {
          "id": "06f73615-8163-4dda-a11e-49b8ca3c97da",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8d763dad-8aef-493b-ac6e-936549a4cdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa780675-498e-458e-8860-88d1c3546137",
        "cursor": {
          "ref": "2bb7bf32-78a8-49aa-8c09-57d0c7f344e9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6597f824-5af6-4514-9695-c41b46fde35c"
        },
        "item": {
          "id": "fa780675-498e-458e-8860-88d1c3546137",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5c85bff3-5a0a-4fad-b30a-d80d0a842955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f49bc95-9fe8-43fe-a62a-eb94e3b5558b",
        "cursor": {
          "ref": "524fe475-22b2-41c7-9d51-bbd1e1f8c6e0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ce3eb351-bc56-435c-81ed-485eaed99b54"
        },
        "item": {
          "id": "0f49bc95-9fe8-43fe-a62a-eb94e3b5558b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2f9fffd1-d1c6-4d78-9af5-f866732b1576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb95bed-647a-47a6-bf70-d2ce5ce343a7",
        "cursor": {
          "ref": "ce625c69-1624-49b8-a9ac-afa765fb5ff8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b880f222-9603-4f3f-bd5f-3b0fece4c40a"
        },
        "item": {
          "id": "8cb95bed-647a-47a6-bf70-d2ce5ce343a7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "95063142-d245-4e0a-948a-a403e4a1e74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ac1191-250e-4954-91ad-df12e3ee3009",
        "cursor": {
          "ref": "3c786759-4975-4053-a0f6-681f34f017ae",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0aca558f-4f65-450a-8e8f-1da8731a7d19"
        },
        "item": {
          "id": "62ac1191-250e-4954-91ad-df12e3ee3009",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "498d7c94-ea2c-48d7-8170-f90a584117be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3748572e-d365-4eeb-ab30-a61522a10405",
        "cursor": {
          "ref": "d8872fee-b650-4eca-b233-86cf54cfc677",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4ba12ecc-9141-4ccf-bcde-75a191bcd00f"
        },
        "item": {
          "id": "3748572e-d365-4eeb-ab30-a61522a10405",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d513b6b1-2c27-4140-a4ec-54da05f68c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0450430b-aa54-4d9f-be1f-50ea27c2ce65",
        "cursor": {
          "ref": "f9923ae8-489e-4f2b-9421-1dc9a45e5d98",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6ebde3cf-9c53-4bc5-9ae7-4874a05f13df"
        },
        "item": {
          "id": "0450430b-aa54-4d9f-be1f-50ea27c2ce65",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1925b9f4-3534-4527-bcae-c149ddeb416e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6050c13e-9c79-402c-84b0-a4962fdae9eb",
        "cursor": {
          "ref": "9af8c3c3-fc95-43db-90a4-3610e6aaaa5f",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "eca8e694-7eb2-46af-8cb3-c4c154677e38"
        },
        "item": {
          "id": "6050c13e-9c79-402c-84b0-a4962fdae9eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4a675df-74a0-4934-81da-505233f02eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0296df7-5194-4ff1-a230-0e05204e3a69",
        "cursor": {
          "ref": "5d757e4f-621a-4892-86ee-de08255c318a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b3b8a139-5336-4233-87a2-c6c35197993b"
        },
        "item": {
          "id": "b0296df7-5194-4ff1-a230-0e05204e3a69",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "195614bf-f172-4230-af75-d40876405dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c891ca6-5f82-45ac-9483-4f62fee9da67",
        "cursor": {
          "ref": "ef7ad49a-a7bd-45a9-8703-82d41611f77d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3296d30c-f70f-4285-ad68-976d0b164fc0"
        },
        "item": {
          "id": "3c891ca6-5f82-45ac-9483-4f62fee9da67",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "84502ee2-e2d6-472a-aae0-66e7f94bc1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a585a709-234a-4da7-b924-6908a02b663e",
        "cursor": {
          "ref": "ad68e1a1-8e65-4d39-94c9-5829b2daf839",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "96a96b43-3fff-4305-99e5-dcb481f22d88"
        },
        "item": {
          "id": "a585a709-234a-4da7-b924-6908a02b663e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "492935e5-b160-466e-9198-c141b668b790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974303df-da8f-409e-bd71-09da9f4f1bb8",
        "cursor": {
          "ref": "e43e48e6-89c4-4ac8-893f-cfde84df6e40",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4009bef7-b71c-4992-9586-bf0ba8980f40"
        },
        "item": {
          "id": "974303df-da8f-409e-bd71-09da9f4f1bb8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aa8ceb5c-60d3-435c-81d9-f7ecc6a1dc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd122e83-8a2f-4cb0-a432-588f8ac2ef99",
        "cursor": {
          "ref": "5644f742-28e6-4c1e-bb8e-526561d1d2bc",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0f82df3f-4102-444f-9d0c-6129711eed0c"
        },
        "item": {
          "id": "bd122e83-8a2f-4cb0-a432-588f8ac2ef99",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ae457ca5-1904-4505-8ee3-363c67416264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa74eeab-38ab-4fbe-ba64-d2ebe63ad179",
        "cursor": {
          "ref": "fb157df2-4a0a-484c-9ddd-862e00344ea0",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "133cdcb5-f6e5-4f0f-a519-32bdaaeafae1"
        },
        "item": {
          "id": "fa74eeab-38ab-4fbe-ba64-d2ebe63ad179",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "612fa877-3c89-4e92-abef-e49a2fba82df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dbf0fd-d9ae-42f8-b8dc-4a85cfb59504",
        "cursor": {
          "ref": "cfbe522a-6bd7-495e-8e30-2611e26f95ad",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7c988ebd-9818-4c9d-a0df-cb5ce5f747fc"
        },
        "item": {
          "id": "72dbf0fd-d9ae-42f8-b8dc-4a85cfb59504",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5b1ebe31-68bb-42c8-b703-8737c26d765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ebd50d-b18f-4db4-bf43-60dcf1e28ae5",
        "cursor": {
          "ref": "103410c9-bca9-4ac7-a034-eecae0818887",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e722b0a7-0400-4b62-bcbb-a0b537097f4c"
        },
        "item": {
          "id": "44ebd50d-b18f-4db4-bf43-60dcf1e28ae5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "18dc90b7-71a2-42f9-957c-20cfbceb22a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513b0bd1-9752-4049-a842-271c924e8c9f",
        "cursor": {
          "ref": "b73ba1d1-f19b-411d-bdc0-0b1cd421a3cc",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9d2d284c-d0ee-4be8-8ef3-defa403c33e3"
        },
        "item": {
          "id": "513b0bd1-9752-4049-a842-271c924e8c9f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6fdf5024-9c59-444b-a11b-68c88f995a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4015f3e-c62b-47c7-8f8d-de3f632398ae",
        "cursor": {
          "ref": "477a8eb7-594b-4f4b-a136-2b0ef94ed66b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e7d33a80-6db6-4722-8fff-6f2f2c084e2c"
        },
        "item": {
          "id": "b4015f3e-c62b-47c7-8f8d-de3f632398ae",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6a1a29c4-cc73-4be4-aa8d-b5f415b29e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3130c54-b515-4853-86c8-e59b61c0a917",
        "cursor": {
          "ref": "cc46d04b-6b1c-498d-a9ae-0d7200a69fd6",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d06c01d3-9c5b-45be-b9fd-93088a15e290"
        },
        "item": {
          "id": "b3130c54-b515-4853-86c8-e59b61c0a917",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "49261a3f-c5f0-4f9f-bb19-179f1f0bd2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ec9145-8815-4887-9e27-5cfd9dde96af",
        "cursor": {
          "ref": "3c362bd6-69a9-4870-a305-9d58c317842a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2fbbb0fa-524a-4c7d-b119-bb20aa38975c"
        },
        "item": {
          "id": "51ec9145-8815-4887-9e27-5cfd9dde96af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "de1ab3f0-0e94-43c9-9780-b8dc3c043eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc3df8d-48ae-4e5c-84e4-3e0b575d4881",
        "cursor": {
          "ref": "9c3aeaa1-a261-4800-91c3-97cc367459ec",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3de059ad-199f-495d-b53b-4c69a7455e06"
        },
        "item": {
          "id": "bdc3df8d-48ae-4e5c-84e4-3e0b575d4881",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "34cef03d-5b8d-4fff-874c-28ea88450b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d306747-4488-465f-bb63-9ba64a7ce3db",
        "cursor": {
          "ref": "415f588e-252b-44b9-9f9f-47f1af1e6533",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "197ea1ef-2514-415c-b5cd-3b6d9e056d62"
        },
        "item": {
          "id": "0d306747-4488-465f-bb63-9ba64a7ce3db",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d2d75fae-df3c-4349-b059-04394acd41d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d2294b-68be-40ed-bcfb-512538bc7772",
        "cursor": {
          "ref": "cb9509e4-b535-4c8e-a99e-71e359178a78",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "53eeee98-2359-4f31-8896-0a8db0ddad4e"
        },
        "item": {
          "id": "42d2294b-68be-40ed-bcfb-512538bc7772",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f08d4699-74bd-4a01-a0c5-2f4570373205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbafa2f-f3e3-4cb1-bafb-421cb130fabf",
        "cursor": {
          "ref": "720a92f4-8c2e-4529-a5fb-944d6b01ec4b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9f7dfc48-076c-4372-ae25-9782c9920ab5"
        },
        "item": {
          "id": "efbafa2f-f3e3-4cb1-bafb-421cb130fabf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f430f21c-79f5-4423-9943-54050dfa5103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9049a949-2d26-4297-873b-9f0e586a0303",
        "cursor": {
          "ref": "a1d0245a-e4de-49e2-9f59-89bdd33e3a5f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "89763899-ade1-4591-be12-999d8b35530c"
        },
        "item": {
          "id": "9049a949-2d26-4297-873b-9f0e586a0303",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9295db9a-6bb7-478f-ae85-f42097ffd3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e37804-ce6b-479c-a9b9-569a3a9fa88e",
        "cursor": {
          "ref": "1adf3964-0e33-45f0-8540-7fdfa234fa72",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c0921c50-a648-436d-b73e-e7437ea0e07f"
        },
        "item": {
          "id": "47e37804-ce6b-479c-a9b9-569a3a9fa88e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "45f763f0-03b2-4820-946d-b1a924ed3cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34870b90-0986-4de0-9411-4a43027996b7",
        "cursor": {
          "ref": "82849153-81d1-4ac6-a768-9c1b73125ba8",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "518e0fc8-698a-44fd-b851-0ef7b4725a86"
        },
        "item": {
          "id": "34870b90-0986-4de0-9411-4a43027996b7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dca60758-a74a-4b7a-afc8-6e73e05f7846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb66951d-298c-48bd-a722-2b55ef44fbad",
        "cursor": {
          "ref": "1d2fdfb5-1ed3-47cb-bb70-5b0de11d1c4b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7f06427a-122b-4829-82a7-ad3f5dd3b225"
        },
        "item": {
          "id": "fb66951d-298c-48bd-a722-2b55ef44fbad",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2ffa539a-41fe-4a35-8256-5c25d8bee669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077f6afc-d4c3-4938-974c-9a15f1d1cab2",
        "cursor": {
          "ref": "efe716ad-388a-4579-91b0-3d145d329163",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9717a141-9665-4df0-b626-78d7bdc634b9"
        },
        "item": {
          "id": "077f6afc-d4c3-4938-974c-9a15f1d1cab2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6476041e-6049-4cac-8811-ef6980dbc65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeeaa05-1cdd-4f79-a5af-bbbfcaca37f6",
        "cursor": {
          "ref": "2f11755c-7eae-4b25-a851-338339a4b302",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b97ac5ba-4370-4632-a3d7-f5e6ca921a6e"
        },
        "item": {
          "id": "9eeeaa05-1cdd-4f79-a5af-bbbfcaca37f6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8ea7323b-f68e-4800-bfbd-07eb7b402bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2acfadb-7a24-4ba0-8163-084b672c5447",
        "cursor": {
          "ref": "56902351-f396-4a84-8f79-cb0b5eff7881",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "820d0c4d-c916-4656-9660-98c9885048bf"
        },
        "item": {
          "id": "b2acfadb-7a24-4ba0-8163-084b672c5447",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "62cf8007-dd28-4485-ade9-f1046501155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c285cf-fec6-4f55-b231-e897ac1e41bc",
        "cursor": {
          "ref": "eea367a1-621b-4bdf-ba5a-acddf939cb43",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "820282f3-02e6-43bb-8399-390212e63e3d"
        },
        "item": {
          "id": "82c285cf-fec6-4f55-b231-e897ac1e41bc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d8f04a39-27f6-429a-a87a-e1d8beacf9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2bd98f-fb81-4a58-914b-41a14f253cb0",
        "cursor": {
          "ref": "62181077-19c1-4147-bbf5-134381589e63",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "20dd202f-559a-438b-86e3-3de46ca48ed9"
        },
        "item": {
          "id": "ed2bd98f-fb81-4a58-914b-41a14f253cb0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d66178db-2645-4470-aace-625e76f6e1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436db111-d768-4168-aa9f-da37d14f5f1c",
        "cursor": {
          "ref": "ef53b945-f466-4458-881b-8b8102e0bf5a",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "05aaa376-c94f-4c7f-bf41-a9f3479ec6a6"
        },
        "item": {
          "id": "436db111-d768-4168-aa9f-da37d14f5f1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6a051d40-c7f3-4b4f-bd9f-c9a206049dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6e2eb6-9e70-4a68-afaf-9580c5df5403",
        "cursor": {
          "ref": "2d910d28-8080-46b5-bc43-4e78eab79997",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "63f95328-7f34-4005-a68c-3b3be0e30eb0"
        },
        "item": {
          "id": "df6e2eb6-9e70-4a68-afaf-9580c5df5403",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3342e31a-5c41-4c32-87f8-1cb51098c19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149448b7-791e-45fb-9106-1f5c50386fb0",
        "cursor": {
          "ref": "efc3b816-7117-4f9b-865d-9f23b16b42cd",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3d8a4214-e229-475a-83aa-77dd2c54bd69"
        },
        "item": {
          "id": "149448b7-791e-45fb-9106-1f5c50386fb0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7d7639b1-0f00-446e-9b7a-0b685b398006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0060df01-5911-461d-b479-5a13ddd06bb6",
        "cursor": {
          "ref": "c8a80e9d-cd31-4a1f-be96-2a00e2a47ce5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "66b5a55c-d636-4f3f-9260-32e97fc24821"
        },
        "item": {
          "id": "0060df01-5911-461d-b479-5a13ddd06bb6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b7c439de-d4ac-4af9-8c30-4c414c71341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997c7de2-13cc-4038-b493-8e9ba5b53d0a",
        "cursor": {
          "ref": "a47754aa-3562-401b-9e71-984feaecadd1",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "95466f6d-bed0-49e9-ab15-916569491882"
        },
        "item": {
          "id": "997c7de2-13cc-4038-b493-8e9ba5b53d0a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "510884ce-b64e-4a75-ba09-a707420b8e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e859d25-b185-41f4-bd21-4726414baa15",
        "cursor": {
          "ref": "430ff2be-4bed-4b78-ac07-1de7326309d9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fb97f141-598a-4d6a-b4e6-573838efaf90"
        },
        "item": {
          "id": "0e859d25-b185-41f4-bd21-4726414baa15",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "afb13cd5-ddd3-4c24-a16e-1c4d4ab55ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f77725-1f5c-4ad2-b02b-52ede71a2ade",
        "cursor": {
          "ref": "b560a79d-8b45-452f-996b-da9e3f4d1a31",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1f334760-77cc-4b5c-9135-273edc15ac54"
        },
        "item": {
          "id": "10f77725-1f5c-4ad2-b02b-52ede71a2ade",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7ae1620b-065d-41e4-9523-6dafd9cae008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40f9258-9a6b-4206-8c1d-ae50f9f4dcf8",
        "cursor": {
          "ref": "e461b23a-e505-4702-abff-341a1aae1117",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71a6a420-3fe3-41aa-8931-2c8fbe183af2"
        },
        "item": {
          "id": "e40f9258-9a6b-4206-8c1d-ae50f9f4dcf8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9989a636-3bb7-4f09-9d05-293582b81d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c82619-f60e-43e6-83a1-a41567d38840",
        "cursor": {
          "ref": "13655167-e8e9-4b10-8728-a5aa7c6bc83c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "45accdbc-e990-4546-8867-2d711ec8a9d7"
        },
        "item": {
          "id": "c9c82619-f60e-43e6-83a1-a41567d38840",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "030f35b7-847f-421a-a7a2-3e95ce5a4933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cb7b39-028e-4541-a3ab-4cb4707d0178",
        "cursor": {
          "ref": "254257e3-865c-420e-b87d-10a7ecfe09e6",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ca3cc5cf-79fb-4638-9982-ea2d3efbb7d9"
        },
        "item": {
          "id": "46cb7b39-028e-4541-a3ab-4cb4707d0178",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "76ee6343-d0f6-4252-9880-1256ee809a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab56e663-5ae0-49e1-8c74-649310b8ba86",
        "cursor": {
          "ref": "e6663dbf-26a5-4ea5-a4f9-34163f81e8c7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "67d6b7b7-439b-4d53-8cb7-d56b1e0f98ad"
        },
        "item": {
          "id": "ab56e663-5ae0-49e1-8c74-649310b8ba86",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e561e6d1-bc04-4cd2-9bc4-ef25a5a5f285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cb9324-9085-4ce0-933b-a1f01fb352fc",
        "cursor": {
          "ref": "b047ed58-5e1a-4db8-a747-96da0f843a5a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9aa36b6e-0092-4292-8873-cf333e45e6e9"
        },
        "item": {
          "id": "b1cb9324-9085-4ce0-933b-a1f01fb352fc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7e983adb-cadc-4d80-85bd-a359572fd194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229cbd06-eff1-4865-98d0-6f15d713f63d",
        "cursor": {
          "ref": "e952a5ec-d146-478f-9217-1b1f608e2d00",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "028fff04-093e-497a-b5c4-6f0a9c0c7a78"
        },
        "item": {
          "id": "229cbd06-eff1-4865-98d0-6f15d713f63d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2c358e0e-8a7e-437c-b703-8e44970c6e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77f5a7d-8b14-490b-9f48-369e7f5ed793",
        "cursor": {
          "ref": "e62b4092-76a1-4f08-b308-899a4ba5abed",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9461acf5-15a1-4996-a54d-56a5a2b1b382"
        },
        "item": {
          "id": "a77f5a7d-8b14-490b-9f48-369e7f5ed793",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "564e3e5f-a1fc-4655-8b2f-cbdf73e9d193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0517f3-0edd-4109-8fd2-04ae4f380fed",
        "cursor": {
          "ref": "8007ee38-656c-4945-91d5-0bfc6668ab5d",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "281c40b0-54f8-433d-a565-60f1a85c5efb"
        },
        "item": {
          "id": "4d0517f3-0edd-4109-8fd2-04ae4f380fed",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1046fb87-70b8-4007-bd8c-c668b64f5d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7770c85d-3c1d-437a-88ef-5e8ac8f06133",
        "cursor": {
          "ref": "47421c3e-ba1f-47ef-839d-87e008fa4b1b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3d9c5196-5f18-4d31-ab91-2053ac7012f6"
        },
        "item": {
          "id": "7770c85d-3c1d-437a-88ef-5e8ac8f06133",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b00be82a-493b-4a35-9778-6fc1e07e68ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9df56b0-cc7c-4f38-a88d-c9619839417d",
        "cursor": {
          "ref": "ab7c3cf0-beae-4edf-828c-a38cd1f2ed93",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "063fcf76-c1fa-4730-b3a1-6f768cf0a308"
        },
        "item": {
          "id": "d9df56b0-cc7c-4f38-a88d-c9619839417d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2729281f-a0d6-4baa-aca4-63bc68e2a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc24dfe-b996-4f2f-81da-a4b13a45b6cc",
        "cursor": {
          "ref": "6f75b4d5-7699-4778-af6d-78627adfda53",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bdb21f51-ef15-4519-a04c-a70759933a5f"
        },
        "item": {
          "id": "9bc24dfe-b996-4f2f-81da-a4b13a45b6cc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "49f17b7c-09a6-4f66-ba09-7e11b84a52c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f7e3d7-653d-4de8-9358-87f5375a3c17",
        "cursor": {
          "ref": "0f0c6906-1a6d-4d20-9169-68cc8cf4b4fc",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "63ac5d6a-6ddd-4516-954d-7cbee6a2427d"
        },
        "item": {
          "id": "b3f7e3d7-653d-4de8-9358-87f5375a3c17",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eb7b66ce-aa8f-465c-804d-59d9527c4cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fe5f08-1de6-4f7d-a139-e1aa53ee12f5",
        "cursor": {
          "ref": "dc44f3a4-998c-494c-8811-e877afff95cb",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e51abc0b-bfe5-43e5-826e-1e9014c696d9"
        },
        "item": {
          "id": "e4fe5f08-1de6-4f7d-a139-e1aa53ee12f5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e5f6bfc9-27c0-47ad-9196-ba58bb4e7ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f30593-7286-4d8a-85bb-934064848a8c",
        "cursor": {
          "ref": "eac9fac6-7962-4439-ae43-0f28ea728ecb",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a80412b1-c200-4746-84a2-0b41946e4a86"
        },
        "item": {
          "id": "60f30593-7286-4d8a-85bb-934064848a8c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a35025e1-8219-46d3-8a1f-e4e19dce937f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8728e584-3cfb-43e9-8ff4-de90e7141a64",
        "cursor": {
          "ref": "4fd04b29-3c50-4325-b418-98adc09f57e7",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3a3279e4-4356-4d98-9ae9-6779e3e3a5e8"
        },
        "item": {
          "id": "8728e584-3cfb-43e9-8ff4-de90e7141a64",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5f13bdc0-82f9-4f2d-9b28-ca282835e3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423070b7-98fd-4533-9278-9f8f05bfc047",
        "cursor": {
          "ref": "c924519a-6413-4c4d-8bbd-af091008d27b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "976fdc9b-626e-4a2b-a713-eb35112a6e1b"
        },
        "item": {
          "id": "423070b7-98fd-4533-9278-9f8f05bfc047",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fcd2df7e-3188-4dbb-8bfc-b2e9d16e7572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc707e67-f617-4750-a078-5919e70c20d3",
        "cursor": {
          "ref": "e21c7828-fb01-4f3b-b4e9-aeb80cd9301c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fac00e63-9b24-4100-953c-0919b5ff81d7"
        },
        "item": {
          "id": "dc707e67-f617-4750-a078-5919e70c20d3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "38973974-3011-4f63-b449-bbca60bdf33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae82905-74bf-4116-b105-7a0688f06c46",
        "cursor": {
          "ref": "69f159f7-cdf3-4b86-9c2e-aed8028ff4c0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "93922120-5c2c-4e03-839a-47d118c069da"
        },
        "item": {
          "id": "2ae82905-74bf-4116-b105-7a0688f06c46",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9bc4ed60-487a-4a8e-88ad-59e25d0c834b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0469c5-dec9-4f41-bd36-89f9660daa20",
        "cursor": {
          "ref": "2a57ea1b-0f51-44bd-9f04-bff1f59bd44e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d0bbada1-b726-4c1b-87ac-bc8ee0aa68af"
        },
        "item": {
          "id": "de0469c5-dec9-4f41-bd36-89f9660daa20",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e762209c-fd9d-49d0-a1e3-9fe4c39e34ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1125fb-8931-46a2-ab60-6d3e0d14b19f",
        "cursor": {
          "ref": "aaf7836a-1ca0-4964-af6a-94eeaebd513b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1870e447-a619-4897-ad31-3f3af6d26ac1"
        },
        "item": {
          "id": "1d1125fb-8931-46a2-ab60-6d3e0d14b19f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f15a277f-3f22-42d8-8f4b-4bbfa728f979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409a3953-0d8e-4ae9-9b48-05ad6d1f2ecd",
        "cursor": {
          "ref": "370160e4-df28-4a51-832f-ec4081f381af",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "62155648-1a59-47b8-980c-91883ec6a537"
        },
        "item": {
          "id": "409a3953-0d8e-4ae9-9b48-05ad6d1f2ecd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4bf11bef-aa7c-4074-883a-1eac78bc9c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c02e22-1a37-4b33-83a3-36aa8d14bb65",
        "cursor": {
          "ref": "c0f06b3b-e3c9-4b43-b7a3-eda2352810d9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "20e372dd-2c94-4673-9465-36a5301357b1"
        },
        "item": {
          "id": "75c02e22-1a37-4b33-83a3-36aa8d14bb65",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "df817a80-5ba9-454d-80bc-8f31596f1fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac97d16-4571-4ce0-8226-24bc557eb7af",
        "cursor": {
          "ref": "51ce0c43-a547-4cbc-99f8-4723ed7a84a6",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5a5f61b5-4e42-4ab1-a271-f5591953e8f7"
        },
        "item": {
          "id": "fac97d16-4571-4ce0-8226-24bc557eb7af",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4f73b3f9-586c-4827-97ad-0564fdeba2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c771f51-8cc3-4731-958e-6888545c469e",
        "cursor": {
          "ref": "549a20d3-e316-4c2e-991f-53fc45f4d8b4",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9942d220-6ee7-45c7-b721-9a1478948e98"
        },
        "item": {
          "id": "2c771f51-8cc3-4731-958e-6888545c469e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a2379579-6144-4121-a8e7-9bdf6f90550b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a06fcc-f144-4c4b-9a02-3b3608fb98ce",
        "cursor": {
          "ref": "db571808-31c0-441f-a694-9d2e32c705f0",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7dc1aa9e-db00-4954-ad32-e0ac20f54006"
        },
        "item": {
          "id": "d4a06fcc-f144-4c4b-9a02-3b3608fb98ce",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5f4e20a6-eb46-4b32-b155-89f10d3eb35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ebcda1-eb56-4cca-acba-42282c614c7d",
        "cursor": {
          "ref": "b01de4ff-469c-49b7-82ed-309a21eb4983",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "efd96c3d-12e5-42d0-b1a1-9a2562da1a38"
        },
        "item": {
          "id": "b1ebcda1-eb56-4cca-acba-42282c614c7d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3173c2b4-ce7b-44a9-9569-7116590a0386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e06c7fd-953d-4a03-83d0-372c5dd212ae",
        "cursor": {
          "ref": "76c07541-261b-4217-ba4c-0e45beb22046",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8fa099d9-083b-418b-983b-302b12133dd5"
        },
        "item": {
          "id": "5e06c7fd-953d-4a03-83d0-372c5dd212ae",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8d00a6dd-7cda-4742-80a7-2be188e4dbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8613ab-95d7-41af-b363-acd9df9d3956",
        "cursor": {
          "ref": "a033934c-4ad6-4219-a9a3-225a4141774a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cadeac31-8df0-494b-9be5-ae9d1318f776"
        },
        "item": {
          "id": "4f8613ab-95d7-41af-b363-acd9df9d3956",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "90bc59b7-053a-4e41-b6ab-6f2b2a728326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8247de-62c1-406a-9481-010cb658d234",
        "cursor": {
          "ref": "9590d943-661f-420f-8d74-16e9ed65a5e8",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a4d736fb-84d5-4e3c-918a-b917d8d720f6"
        },
        "item": {
          "id": "2e8247de-62c1-406a-9481-010cb658d234",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "46bd3a59-6cf5-4c8d-9327-c315d2fcc116",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c233e650-c9e5-48e5-8e3d-6755c1c02a74",
        "cursor": {
          "ref": "4e5d724e-6317-46ec-b228-c6f027dac65c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e339c94c-3357-478b-bd4b-72f4d4d80f76"
        },
        "item": {
          "id": "c233e650-c9e5-48e5-8e3d-6755c1c02a74",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bde1ca83-df62-463f-8e1f-518ff1f7e56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "0b803f1e-0201-45c3-87e7-40214e5c6fd1",
        "cursor": {
          "ref": "110bf27d-00e2-471e-a4c0-6e4bd0f24b23",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "73acde2d-bad3-45f5-aca7-9a39fca687de"
        },
        "item": {
          "id": "0b803f1e-0201-45c3-87e7-40214e5c6fd1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3596062d-91e7-49ca-9ff9-a7599cacc4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "330162df-8b91-4aee-be30-e60818ef5cdf",
        "cursor": {
          "ref": "90c44401-0231-4bd0-961a-d1bf708d84c8",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d0378ac8-1b29-49e2-8e22-838803d74fd5"
        },
        "item": {
          "id": "330162df-8b91-4aee-be30-e60818ef5cdf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a36aa9e5-0f36-4bb1-b8a5-6c461f5af15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d6de3969-d31b-4153-86ef-9bb9f1f811ef",
        "cursor": {
          "ref": "23440cdb-7b57-4363-8f1d-71ac6fdd4739",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "46a7a2f6-a8f0-441c-bc4c-68b7e31244b9"
        },
        "item": {
          "id": "d6de3969-d31b-4153-86ef-9bb9f1f811ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8d1ac236-3ec2-4429-8ded-e8d702c823b0",
          "status": "Created",
          "code": 201,
          "responseTime": 4914,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "568cd1c8-c332-4bb7-9551-a198147925d1",
        "cursor": {
          "ref": "7608deec-7023-4e22-bd02-982790ce36bf",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e0e210c0-dd4f-4ea7-b6a0-f57c81c8c75f"
        },
        "item": {
          "id": "568cd1c8-c332-4bb7-9551-a198147925d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7ccc90ee-5486-465d-b42e-e98bbd8871d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c2cce0d8-b80a-4869-9882-fffaf15ea066",
        "cursor": {
          "ref": "3670dd3a-a0d7-454c-882d-0a0aae7f4722",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d991e4fa-2c33-4dc2-a0cf-ee4e04d83ebc"
        },
        "item": {
          "id": "c2cce0d8-b80a-4869-9882-fffaf15ea066",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9e13e308-5c51-40d5-aeb5-b3284750b515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "425f14f9-038d-40a2-8748-19093e2e475e",
        "cursor": {
          "ref": "f167a444-bfa7-435e-a0c7-06cdac8a8397",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "02ef56b7-5ff8-487d-86c6-d61c484a9e77"
        },
        "item": {
          "id": "425f14f9-038d-40a2-8748-19093e2e475e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "abbef3fd-09ee-4ccc-9797-d8b595da9009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f5092f-2f29-4e6a-bcc6-43543b79d643",
        "cursor": {
          "ref": "060b9da0-7161-48a8-9db6-6b97e423c84e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "77034152-ee90-4cb8-9b47-15639af3a804"
        },
        "item": {
          "id": "74f5092f-2f29-4e6a-bcc6-43543b79d643",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "444b63c0-e92a-4898-826a-4bc026f48351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d57c299-f4bb-4c3d-9770-57596627c479",
        "cursor": {
          "ref": "7cbf364c-4a9d-43a0-b610-b895725ffd4e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3f894dc8-c283-4fd9-baad-9269d4cd7f76"
        },
        "item": {
          "id": "4d57c299-f4bb-4c3d-9770-57596627c479",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8d39b218-9bdd-4bce-8942-141668f0c856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45a9891-894d-4f82-b4fd-b45ee9f6e9f5",
        "cursor": {
          "ref": "7608f24c-7567-4a2e-a5b6-d552a4b03cb3",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dc98f09b-d7b6-461f-bcbf-9f03fca701d7"
        },
        "item": {
          "id": "a45a9891-894d-4f82-b4fd-b45ee9f6e9f5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "23adf318-269d-4209-8066-e50be563dc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a96e567-015b-4505-b49b-f12016cc5a9c",
        "cursor": {
          "ref": "e2099c8d-d825-4864-bd91-5eb7225ac7e7",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5fb9af20-796a-49c6-94c0-affb51c80994"
        },
        "item": {
          "id": "0a96e567-015b-4505-b49b-f12016cc5a9c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0b480831-6814-4683-818d-dfd5cd9db10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb895c4c-aa37-4866-8175-df49f17209e7",
        "cursor": {
          "ref": "2e0b536c-6cb0-473a-8357-c3fad390490e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "23e3b1b1-0a2b-412f-aab4-c26d3787470c"
        },
        "item": {
          "id": "cb895c4c-aa37-4866-8175-df49f17209e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0649beb0-fdae-4665-a0c7-e42e087a2b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff2655b-7f93-4359-baba-87c4eccfc3db",
        "cursor": {
          "ref": "3f8afccb-60f0-453e-a2d4-e060fe89bb7a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5423ddb2-c734-41e3-bd08-b706cf34e6f0"
        },
        "item": {
          "id": "4ff2655b-7f93-4359-baba-87c4eccfc3db",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf686337-b668-4606-b01b-f397027478c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47ed639-8c8c-465d-97b1-0bf201fce20b",
        "cursor": {
          "ref": "00611270-a58e-4eef-8607-a61481bfaedd",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6d6c1f23-fda4-4b8c-8f73-8f7152422118"
        },
        "item": {
          "id": "d47ed639-8c8c-465d-97b1-0bf201fce20b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f2846378-1cb8-4325-b7e0-a4a081e1e343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7691e8-d6fb-4cea-a00a-7d6c48c33ef4",
        "cursor": {
          "ref": "2edee95a-6875-49a8-b7eb-e7b4154099f8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "40b59b83-d45c-4baa-9bd8-2d6159899ce2"
        },
        "item": {
          "id": "4c7691e8-d6fb-4cea-a00a-7d6c48c33ef4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a8e74ef3-3042-4d1a-94c5-099dc0847194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f144e401-2db1-4b2b-b653-42226784afc8",
        "cursor": {
          "ref": "9b76fbfc-7aa0-4543-90e3-7fb75e60fcbd",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cc418f81-11a8-4ad6-8cfb-d5d58c16a1b0"
        },
        "item": {
          "id": "f144e401-2db1-4b2b-b653-42226784afc8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "65b44a13-bae8-498e-9960-b44a553fc963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f224b1a9-79ad-48d9-a925-7a977b84c56f",
        "cursor": {
          "ref": "c86dc032-8cd4-4d5d-9ce5-8b3402101045",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6eb3077c-7397-4ae7-a895-30e78085bb07"
        },
        "item": {
          "id": "f224b1a9-79ad-48d9-a925-7a977b84c56f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b9f2c3f0-f249-4f89-b62b-04c10ccb97f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068fddaa-bb84-447f-9bb1-313e5d3268e3",
        "cursor": {
          "ref": "0fd095fd-857e-4981-af96-a5b3d7d7cd85",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "43af864a-4737-4cb7-b159-b1e20901970f"
        },
        "item": {
          "id": "068fddaa-bb84-447f-9bb1-313e5d3268e3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "89484f6a-ae42-4bf3-872f-654509318a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6ac421-e87b-4115-b9a2-db76af06c909",
        "cursor": {
          "ref": "d743bdb1-95c1-4af6-9bae-16920dbb56cf",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3175b3a4-8dc5-4dd5-9cff-144bc07fa6b9"
        },
        "item": {
          "id": "4c6ac421-e87b-4115-b9a2-db76af06c909",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9ac1673e-aef3-4dd0-8dc7-78832e739001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01974f65-a9b7-4088-bdbf-7acf4ed003a6",
        "cursor": {
          "ref": "26661b52-a364-4005-a8bd-9bc166f341de",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b1e15a67-9e07-4d99-8e0f-aa45931a3863"
        },
        "item": {
          "id": "01974f65-a9b7-4088-bdbf-7acf4ed003a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aec1724a-641a-4196-ab99-97970617ad36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98efb36-f828-45a7-9a2f-cea809e96521",
        "cursor": {
          "ref": "41b1c8f2-0e10-4428-a4f8-e2cc343817d7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cc948068-1b8b-44c4-9552-44ac6412778c"
        },
        "item": {
          "id": "e98efb36-f828-45a7-9a2f-cea809e96521",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "71233607-c2fd-4361-9041-25f9ae85518b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbda7a55-c082-41da-a956-e4a4a96c7ed2",
        "cursor": {
          "ref": "cad6a859-4015-4f5a-bcdb-af4defc92259",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "378f4dd2-7f3d-4433-9113-27d39022a116"
        },
        "item": {
          "id": "dbda7a55-c082-41da-a956-e4a4a96c7ed2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8b7b583a-7c28-45a6-88a7-c7c89926dffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0db8fa0-05f5-41c1-9d45-9a4d6eead500",
        "cursor": {
          "ref": "4cae1841-e615-42d2-a7bf-652d78c79180",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "28516332-b77c-47c1-926e-daad722d51bd"
        },
        "item": {
          "id": "c0db8fa0-05f5-41c1-9d45-9a4d6eead500",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "15c231ac-3075-457b-aa93-e072dc9246f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181d2bd3-1a4e-4153-a914-ed770cd4f689",
        "cursor": {
          "ref": "24450c7b-7617-4284-960f-7837b34d8a1f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "45db2490-3598-456b-a71f-2310bc4a7221"
        },
        "item": {
          "id": "181d2bd3-1a4e-4153-a914-ed770cd4f689",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51847e07-47d5-48d0-80e4-b3671b37d4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43b92c0-f330-4606-9420-d141480c133d",
        "cursor": {
          "ref": "99c09276-5d3e-4ba9-b1f8-41c625cb2b3d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "14144d11-6556-42f4-bf04-4ae157b74e71"
        },
        "item": {
          "id": "e43b92c0-f330-4606-9420-d141480c133d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "68a96b39-bce5-4ab7-afdd-f51841da8194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798962d2-bac5-4ed3-9dec-a597ed37984f",
        "cursor": {
          "ref": "de77f971-a632-4626-9453-cdd1a283f00e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d54a0ef1-bf4d-46dd-94fc-3326a0354d74"
        },
        "item": {
          "id": "798962d2-bac5-4ed3-9dec-a597ed37984f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e3523de9-1373-4cf1-b36d-b4f437ac0222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2e0764-d678-45d5-95a0-58189a79aa91",
        "cursor": {
          "ref": "4cdf0f0d-bf76-4c5a-af74-abebc6d11a7d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b39927c8-da9a-467d-b8f0-2c7c7678896e"
        },
        "item": {
          "id": "0f2e0764-d678-45d5-95a0-58189a79aa91",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f7846d9a-18a7-47ff-a18d-b4c03dcbe8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e7e77e-2a09-403f-ab22-ecdab9227458",
        "cursor": {
          "ref": "ac20a35e-53a3-49b7-8de4-b20cf1716b15",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2c8c5a92-fd60-4dc4-ae4c-ba5996e5ed00"
        },
        "item": {
          "id": "72e7e77e-2a09-403f-ab22-ecdab9227458",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b2e207d-32cb-4ccb-a95c-84bde8fae3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f07bf0-a448-46a3-a123-5f1b990ffc06",
        "cursor": {
          "ref": "3bc5dce4-3177-4f43-be1a-1f6e1dbac8b9",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "57432d5e-e6e2-4e6b-89ff-4352cf2d2dbc"
        },
        "item": {
          "id": "e2f07bf0-a448-46a3-a123-5f1b990ffc06",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "37f92f1d-bdc8-44f7-8d8a-11091f7e2389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1758bfc-a304-45ac-b18e-8376fc36aca0",
        "cursor": {
          "ref": "ccf73fd7-12f5-470a-966e-3ffff3aefcb8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1a4d4a7c-7f0f-4b79-83ea-3a6c66323c4f"
        },
        "item": {
          "id": "d1758bfc-a304-45ac-b18e-8376fc36aca0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e9492424-6020-4d86-bd59-cb41b84e0556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c44ceb8-0a4b-4103-9601-32fe945f71a0",
        "cursor": {
          "ref": "cb57895c-89ff-4b03-b5af-d71335f3e51a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9d940b5a-ced4-430c-9b16-fabb1b8d8124"
        },
        "item": {
          "id": "0c44ceb8-0a4b-4103-9601-32fe945f71a0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c5065e5-6142-470a-94b0-2474e71e2ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7779d3-f747-42f2-a373-80dab3b8361c",
        "cursor": {
          "ref": "65d0f63c-141c-40c0-9a11-98a93a60a2f4",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bef14cd1-70dd-434e-8290-931a131d0b37"
        },
        "item": {
          "id": "1a7779d3-f747-42f2-a373-80dab3b8361c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1268052a-e9f9-48f9-9571-73940e3a81f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215d6c86-3502-4c3d-9f52-cc006408abd7",
        "cursor": {
          "ref": "e45efb51-c9e4-43b6-9e1c-63f16b297015",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7f0b903f-46c5-4ff3-a55c-2d58b64ee0dd"
        },
        "item": {
          "id": "215d6c86-3502-4c3d-9f52-cc006408abd7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f794fad-abd9-4e3e-ae78-d3b4ad497353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb89d001-8a38-41cf-8fc3-73294bb0d1c9",
        "cursor": {
          "ref": "1e4132eb-9fc4-45d0-84cd-1c61c4574f94",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6e5d0369-a0e1-4a2b-a362-ce0525c424e5"
        },
        "item": {
          "id": "cb89d001-8a38-41cf-8fc3-73294bb0d1c9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "60385c7a-120f-4078-a6aa-1f949801d3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625861e5-438b-4937-a630-d39577cca395",
        "cursor": {
          "ref": "0228eee8-009b-46ad-932c-9df4ee4bca27",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8f77207f-5b5a-4094-ba49-c21cb15ffe85"
        },
        "item": {
          "id": "625861e5-438b-4937-a630-d39577cca395",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "035acd9a-dad3-4db8-9fca-12ccc1f71212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6161ab4-d70f-4743-91da-0e317cb277b9",
        "cursor": {
          "ref": "18a2d163-4838-4da2-90f8-a217e87eec4e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "525bb277-3be4-49c0-8a76-e13b577f3194"
        },
        "item": {
          "id": "a6161ab4-d70f-4743-91da-0e317cb277b9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a54cf276-f062-43d9-9fd0-33733b77936b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8d8017-f5dc-46b7-b1be-0ab0190b63ce",
        "cursor": {
          "ref": "d6e2ade3-a7b4-4a6e-b599-065427992831",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e8a5f386-340a-4138-b25c-5475fdf4ec7f"
        },
        "item": {
          "id": "ca8d8017-f5dc-46b7-b1be-0ab0190b63ce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c472c6f9-f9bd-4dad-87fa-e830f5f1f851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc351b4-5928-46f5-bb34-bf241a6992ad",
        "cursor": {
          "ref": "d6cee58b-3eae-44d5-b432-7e2d3dd19f35",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e66425f6-2dcb-4e77-b266-e8d53b79fdec"
        },
        "item": {
          "id": "dbc351b4-5928-46f5-bb34-bf241a6992ad",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c3a59dfd-975c-4a87-b03a-3df551c40b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490dc659-935f-44b3-b737-13481701b814",
        "cursor": {
          "ref": "8b4d2f82-d238-4770-b875-402117c358ad",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "074573da-ebbf-470b-be6c-fb984ad1e538"
        },
        "item": {
          "id": "490dc659-935f-44b3-b737-13481701b814",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c35838af-411c-4e65-8add-8e3639555eae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6219c65b-fc9d-4d30-baa8-21a8d73a65dc",
        "cursor": {
          "ref": "d21e39ae-7fc5-4f92-b55a-239a1a68f34a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9d35f64a-b946-428f-b168-643b2060dd02"
        },
        "item": {
          "id": "6219c65b-fc9d-4d30-baa8-21a8d73a65dc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d47690d-4a06-49a1-8a06-f4a4087370a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89aede7-df23-4882-9053-a326ea1c67be",
        "cursor": {
          "ref": "a97a231f-3245-4c9f-a7a8-5b390895ead2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5448d748-36e2-4ad9-8494-15b6ed01e0a3"
        },
        "item": {
          "id": "c89aede7-df23-4882-9053-a326ea1c67be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "211d0b6e-3a82-4baf-9b57-47aac850f396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc7b3c7-4ca7-454e-815b-fa3dabdfb09f",
        "cursor": {
          "ref": "bea9b98f-e545-46f5-84f0-dbae7357ea4e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a3999d29-0f01-4731-ae25-8b03984f479d"
        },
        "item": {
          "id": "0fc7b3c7-4ca7-454e-815b-fa3dabdfb09f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7d6279cb-0315-4b4d-88e5-91014171f78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f63cc09-5891-4add-926e-bf93a0e34ed5",
        "cursor": {
          "ref": "32c96e9f-8137-479d-bc5b-41fe053a70f7",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0ebe4c79-ce5f-484b-b0d6-9026edcc2042"
        },
        "item": {
          "id": "2f63cc09-5891-4add-926e-bf93a0e34ed5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b0514822-ff9e-4406-bda9-f1cba87c4d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e355c53-0a86-4337-991f-b0b92d44fd1b",
        "cursor": {
          "ref": "c17215cc-cff7-42a1-93e3-ceb09b9767bc",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "337dbb04-45de-47d8-9399-6d0e97c42f79"
        },
        "item": {
          "id": "1e355c53-0a86-4337-991f-b0b92d44fd1b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "774f85b4-7d03-4e82-a01a-6714346c58a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72e6482-b2aa-437c-8ce1-4b40f9a0e253",
        "cursor": {
          "ref": "749ae21f-5a05-46a8-82cc-4c812d90a9f6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "587f6706-5f99-4829-bf4f-70227df1e1f9"
        },
        "item": {
          "id": "a72e6482-b2aa-437c-8ce1-4b40f9a0e253",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f3ed0426-c0c3-4093-88e9-e89acec89446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755cd952-d94e-46df-a375-e0879a9dfa53",
        "cursor": {
          "ref": "1d1e5970-b99c-4ec9-9f98-af8bca554dd4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7e736b16-c907-419d-9a33-96a076a50034"
        },
        "item": {
          "id": "755cd952-d94e-46df-a375-e0879a9dfa53",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "952a702e-daae-47e8-9218-7528affff73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a3e248-1483-45e2-91c4-b6c84474fade",
        "cursor": {
          "ref": "f28f7c2a-0c7b-44e2-9a20-18ba19d5a63e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8ec62ce7-7439-4bb2-9c34-0928bb9289e1"
        },
        "item": {
          "id": "b0a3e248-1483-45e2-91c4-b6c84474fade",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4a430120-a748-4ede-9f68-145c13f1c8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866f0e62-919b-4129-9369-a09cfc2ed6e3",
        "cursor": {
          "ref": "adea9ccc-9c17-490b-b513-b16c7d9e1199",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b2116432-44f6-485b-a8e4-ffee4ce81eba"
        },
        "item": {
          "id": "866f0e62-919b-4129-9369-a09cfc2ed6e3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9c337aed-e847-456f-9205-8652053fdb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57181c0b-ea97-492f-bfa5-480d358c7916",
        "cursor": {
          "ref": "e808e8eb-e9ba-4dc6-bd4a-0c09d26c1978",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b5db292b-5415-49c7-8f03-17d447391c9f"
        },
        "item": {
          "id": "57181c0b-ea97-492f-bfa5-480d358c7916",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0faab73a-e91e-4f15-8827-01f9734b0174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3049cefb-af87-4e2c-aed3-939d1deb11a3",
        "cursor": {
          "ref": "7358bd19-e015-4821-b167-0854319d985f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "14a30413-9f96-4d62-8562-970380bddc52"
        },
        "item": {
          "id": "3049cefb-af87-4e2c-aed3-939d1deb11a3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "47aa43a8-7bcc-4f40-a594-d5628882704b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c616fb22-04ef-44af-81d7-830cbfd5b087",
        "cursor": {
          "ref": "39b32aec-78a8-469a-9ed1-4ef93f8349ce",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8e0bbc5c-46dd-4002-8999-5c123b026210"
        },
        "item": {
          "id": "c616fb22-04ef-44af-81d7-830cbfd5b087",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd7533c7-76e9-47e7-8935-6f6ea565cbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0718cf1-6618-4d50-8596-69306bfaf562",
        "cursor": {
          "ref": "fbe2595f-a538-4dd7-80cb-6ebe9daacaa6",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d7a68f0f-a8d1-4f93-bab5-757dd6034300"
        },
        "item": {
          "id": "a0718cf1-6618-4d50-8596-69306bfaf562",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6dd13db4-a636-4690-a0aa-94c194c2c50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9916549-db64-4d9f-a0b1-698625035ad7",
        "cursor": {
          "ref": "11feb0b6-f2c8-48c9-93e8-1b1098afabaf",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9576dabb-7efb-4fc8-adf5-c57660118a06"
        },
        "item": {
          "id": "f9916549-db64-4d9f-a0b1-698625035ad7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8e4d6a40-b041-4b7c-aed8-e51446ca95b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a82287b-cc6a-431f-9df5-89d0b0a03b4e",
        "cursor": {
          "ref": "2e7b6201-3b43-4f88-ad30-8333424e3940",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d8a0586b-8da4-4f00-9989-744abb0e6583"
        },
        "item": {
          "id": "6a82287b-cc6a-431f-9df5-89d0b0a03b4e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0841ec38-60cd-4f55-9ac3-6db5470c8bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956f6088-f3bf-4a6f-b5cc-3c2cf0a3e4a2",
        "cursor": {
          "ref": "d803ccc6-455b-4340-83b8-76f8e69ac76c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "28266e11-e5a9-4b48-b2fb-4ee5559f4597"
        },
        "item": {
          "id": "956f6088-f3bf-4a6f-b5cc-3c2cf0a3e4a2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4429f406-97e0-4ccc-aa7f-552f0ae0bf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778c2531-abd7-4f25-b0d4-ee466f045302",
        "cursor": {
          "ref": "0c55409e-7e52-4aec-9bd2-4749f61f7ed7",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d0fbf7bd-1ddf-453a-ae91-fa4aeafcf533"
        },
        "item": {
          "id": "778c2531-abd7-4f25-b0d4-ee466f045302",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1ad31205-cdbd-4fd6-a2ed-43d24cf87b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959ad309-ed80-4737-99b2-473dabd0edd9",
        "cursor": {
          "ref": "23166557-d495-4b68-8a6b-9010e335798c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "be0637c9-b2e3-4ddc-818a-d57947bb3906"
        },
        "item": {
          "id": "959ad309-ed80-4737-99b2-473dabd0edd9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3edffd3b-8ac6-41ff-8ee9-6cd292222b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c6ddf-10ae-4061-8b29-854367950c12",
        "cursor": {
          "ref": "a02415b6-7b90-4439-b094-d4212579733c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "04c4e252-c827-4d07-bd3f-e4e16dea66b8"
        },
        "item": {
          "id": "740c6ddf-10ae-4061-8b29-854367950c12",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "abcaf02b-fba1-4e8d-9636-3343040c353f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca53d7c3-c291-4fd6-ac05-13b2be8c3a9b",
        "cursor": {
          "ref": "111ac9e7-8a3d-488c-bf47-44d3984dcf33",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eb17198a-297a-4b30-819b-236b3a486f5d"
        },
        "item": {
          "id": "ca53d7c3-c291-4fd6-ac05-13b2be8c3a9b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "499d696a-1609-4317-a905-3200e38fef53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b0dc3f-8ffe-42b2-8fa9-8000fa5a4a31",
        "cursor": {
          "ref": "37f0384b-0606-4baf-967b-1439bfbee019",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6d5ba765-6c8e-49c0-adb5-6859dd36a69d"
        },
        "item": {
          "id": "44b0dc3f-8ffe-42b2-8fa9-8000fa5a4a31",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b0d4178f-0597-4cce-8fd2-ea34151466ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5694b773-d908-487b-915b-0ab0a5341113",
        "cursor": {
          "ref": "4c4a8fd1-c2fd-4c8c-8447-fe4194348498",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "80aa77ab-4fa3-4e67-9c62-0b531279f89e"
        },
        "item": {
          "id": "5694b773-d908-487b-915b-0ab0a5341113",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9c111f80-0b7b-4a7e-827a-7be12cfd1b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dce58a-7903-461e-b6e3-991d5faabb19",
        "cursor": {
          "ref": "a3e92131-176b-4210-bdc0-a088d6aa6099",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "708ae8f2-8fef-465a-b99e-3dc46ad224fa"
        },
        "item": {
          "id": "d7dce58a-7903-461e-b6e3-991d5faabb19",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ea2ef31a-d821-48e3-8314-332ef83a006c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad678cf-b13e-47a4-a604-3f1d8f722d73",
        "cursor": {
          "ref": "3b523beb-0825-4ef3-ab0e-1eec5da734b1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "511b68c9-f109-4b4f-9fdc-f32eddbd5a87"
        },
        "item": {
          "id": "4ad678cf-b13e-47a4-a604-3f1d8f722d73",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1ea6bad7-6f51-4e11-a64d-e45e156a456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506d0e4d-7ba3-4f79-99f2-fdf79c8f9fc4",
        "cursor": {
          "ref": "e63189f6-c814-44c1-9811-9d5066985ede",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "653df9a9-7459-4852-9396-1f72f876935a"
        },
        "item": {
          "id": "506d0e4d-7ba3-4f79-99f2-fdf79c8f9fc4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "60822914-d8c4-4361-82ff-c45c9e45e74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e033f7c7-f31c-4c75-87a9-dc923ee8208a",
        "cursor": {
          "ref": "46773c46-f177-4ae5-919d-abf350c3288a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "823519a3-9b37-42a7-9129-275f63381d47"
        },
        "item": {
          "id": "e033f7c7-f31c-4c75-87a9-dc923ee8208a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1c856139-a73c-49b5-afb8-a34859daf5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacac074-fb87-4099-9fac-c9a900b7d8ca",
        "cursor": {
          "ref": "3e6d3f62-bfb6-4939-89f1-473daff521eb",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "690ebecf-5b41-47a6-9590-2b51d0e1f2fa"
        },
        "item": {
          "id": "cacac074-fb87-4099-9fac-c9a900b7d8ca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "98226b1d-bc49-40ac-b046-a336c2642aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923a010b-112c-4d26-be89-28aa86865e4a",
        "cursor": {
          "ref": "3c2ef8b5-e6f1-4337-b293-bcca4dbdc31c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8c8e658c-d5aa-4683-8acc-bf30b393e4ae"
        },
        "item": {
          "id": "923a010b-112c-4d26-be89-28aa86865e4a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "829a8022-cb61-4549-8958-cada893fc8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a0501-b199-417c-9bb0-18e5a80b7ed3",
        "cursor": {
          "ref": "f3f7dd8d-82a5-4c43-bf03-98ee130aea3b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0bc2a715-e77e-45bb-89a5-5ff39acce0df"
        },
        "item": {
          "id": "fc9a0501-b199-417c-9bb0-18e5a80b7ed3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8daa1e55-042e-4600-bee1-5efe4f96a129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73acb9d5-6fea-4733-810e-ab591bb71916",
        "cursor": {
          "ref": "93f8b3ea-e314-442d-893b-d2113cb107e2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "409199da-9d55-4235-aef8-afba591b7632"
        },
        "item": {
          "id": "73acb9d5-6fea-4733-810e-ab591bb71916",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38f3d247-ea28-4b78-bb3b-a066b70b6b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8a88a8-3f52-48b5-a7c7-764beb909f49",
        "cursor": {
          "ref": "01dfb2b5-cb6c-4b20-a8ad-1d68c9d980b5",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1fc7ac62-d5ad-4afa-a492-9f00fdf16566"
        },
        "item": {
          "id": "0f8a88a8-3f52-48b5-a7c7-764beb909f49",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2cfb3ca3-1351-4562-9d6d-370a27607670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229e2d13-642b-494b-a39e-8813c061dbb1",
        "cursor": {
          "ref": "fb38716d-6a06-4058-98f8-90d591c9c9c8",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "89a3250c-411b-4286-bd90-6607b36d4413"
        },
        "item": {
          "id": "229e2d13-642b-494b-a39e-8813c061dbb1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7c02379f-4659-4a6e-b5cd-750c06d6cd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be4024c-b155-4e96-97dd-c0e1ebdd3605",
        "cursor": {
          "ref": "b063b8f3-a8ee-4b11-98f5-9f67248a17c5",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4b050ffe-3f95-44a3-b02b-5c8d3338c5a8"
        },
        "item": {
          "id": "0be4024c-b155-4e96-97dd-c0e1ebdd3605",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "735b4d9a-7c08-40cc-add9-b21891d8a18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1b9626-ee9c-465d-b5b0-9cf1996b42c7",
        "cursor": {
          "ref": "7764c608-11e4-46e4-84e7-e1054aa8b926",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12b236e2-7617-4bc2-ad1c-63652bc98eb8"
        },
        "item": {
          "id": "3b1b9626-ee9c-465d-b5b0-9cf1996b42c7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8ead506d-bf11-4b0f-a114-d66f7f486626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf3d9da-1985-4cd5-a5d2-0614ddba612f",
        "cursor": {
          "ref": "0ebf3f78-3b77-4bba-8992-4137721a936a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2f6d62d4-8158-4d52-8c63-e7d0e872e189"
        },
        "item": {
          "id": "6cf3d9da-1985-4cd5-a5d2-0614ddba612f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b06d6e2b-1bc4-406f-ab12-ead13ba4ad73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cf439a-06cc-4f3d-a93e-5557a3b3bccf",
        "cursor": {
          "ref": "e44bb69b-0cf2-43e0-8ca8-46a9dd175431",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "63332249-eef5-463d-a63b-916ec22e79a7"
        },
        "item": {
          "id": "62cf439a-06cc-4f3d-a93e-5557a3b3bccf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "277f7279-a153-4ec2-83ae-ff33e530959b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66c3c9c-dcb9-426a-b4c5-cb7e3bd69f19",
        "cursor": {
          "ref": "4048942f-7b59-43bf-ae4d-7a651b5e57e3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9817a7f9-15b7-4dc7-959c-1611d73889a3"
        },
        "item": {
          "id": "a66c3c9c-dcb9-426a-b4c5-cb7e3bd69f19",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d3d8bb6-723a-49c0-9c5b-2f04f18b74c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b2aad3-2a2e-428d-9ada-ee307979abfe",
        "cursor": {
          "ref": "03248a3f-ba38-482d-98b7-04da2d844be0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2cea4d49-c97e-4008-8997-e9b2c4dc6568"
        },
        "item": {
          "id": "76b2aad3-2a2e-428d-9ada-ee307979abfe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2ff7fa51-323c-4505-97c2-7752f9f616b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608993ec-ee94-498e-8311-5419ce2aa059",
        "cursor": {
          "ref": "667612b2-838c-436a-99e3-89823ad48757",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "777e8f71-de6a-42f3-be4f-d01c42ed3c70"
        },
        "item": {
          "id": "608993ec-ee94-498e-8311-5419ce2aa059",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ae111972-aea9-4a41-b79e-b8c086a921e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593d0bb8-37ae-4155-85f6-c0c71ad0bd6a",
        "cursor": {
          "ref": "be4defb3-23a6-4e8b-9dc4-46fdc10c1fdd",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "eaa75b1b-4717-42eb-ad0e-09de6e79fd0f"
        },
        "item": {
          "id": "593d0bb8-37ae-4155-85f6-c0c71ad0bd6a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3f85e411-5e24-4448-b6a5-b808b88b92e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5981ad-24be-4b66-b308-903dd5152b1c",
        "cursor": {
          "ref": "bc55e157-d75e-465b-929b-8d521291eb44",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2c54e61c-f707-4e7b-8e5d-6d24a6428957"
        },
        "item": {
          "id": "bc5981ad-24be-4b66-b308-903dd5152b1c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "622fefdc-e59e-4ce7-a594-31ed5ee36b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b4b9b7-4ee9-4a52-abd1-568eaf5a71ac",
        "cursor": {
          "ref": "736ffed1-6a23-4173-9b99-48d33f067fdc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b451ecb9-2185-4ef4-a385-e3d15102dfb0"
        },
        "item": {
          "id": "18b4b9b7-4ee9-4a52-abd1-568eaf5a71ac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cd9b56da-016c-444c-bbaa-6c7e1605bdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46efea7-8cdf-409a-8fa0-c0cf25303499",
        "cursor": {
          "ref": "92f6edb1-ae84-472a-9767-58d022691f37",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "006c25d1-e8c4-4ead-8a54-fc537ba08a78"
        },
        "item": {
          "id": "d46efea7-8cdf-409a-8fa0-c0cf25303499",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "aea812d8-43ec-421b-bb24-a19fab3e12b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31be57cf-483f-4c9b-95d4-fd28d03a81bc",
        "cursor": {
          "ref": "e5f7f0c5-349b-4b04-b2a8-7791f48230c7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "05aec7e3-267b-461c-ae6d-e6a63362347e"
        },
        "item": {
          "id": "31be57cf-483f-4c9b-95d4-fd28d03a81bc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "882a2706-a6e6-4af4-9048-254b5791678c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ae9ec0-9f81-4e37-9637-9e3170ce54b7",
        "cursor": {
          "ref": "fd61667d-b0b0-449c-b06e-7a64a57c5b63",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "39ee1402-6061-467d-a03c-6171e546dbed"
        },
        "item": {
          "id": "b1ae9ec0-9f81-4e37-9637-9e3170ce54b7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7941acc5-155d-41db-b4b4-a18c73824b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053b7238-b2bc-4c96-99dd-5355979860eb",
        "cursor": {
          "ref": "4d8d9978-65b7-4705-92f1-1a38f46c2948",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cc464a2d-cc11-4772-a954-ce4c599366e5"
        },
        "item": {
          "id": "053b7238-b2bc-4c96-99dd-5355979860eb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7333f5d2-2efe-4733-85d3-aaacbf38060a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3ab174-3e74-496b-b802-e1510c48656c",
        "cursor": {
          "ref": "707af033-865e-4233-aee9-ef3b254b5eb2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c49ed43d-77c4-458f-a779-86551273bff7"
        },
        "item": {
          "id": "cd3ab174-3e74-496b-b802-e1510c48656c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "10d2360b-677c-4092-8753-c95f8ebf74db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0e5d4b-d700-46c2-8862-adc4e45efd38",
        "cursor": {
          "ref": "26bf2215-cdb7-4d84-90f5-40f50a19ca2f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a3c16cc8-e02a-4187-b3ed-dd65c2fec101"
        },
        "item": {
          "id": "7d0e5d4b-d700-46c2-8862-adc4e45efd38",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b511751c-c47a-4199-b854-f968d4a0e9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecf383d-9187-43e7-b50f-ffeeef901543",
        "cursor": {
          "ref": "e8e9c588-d8ee-401c-8ffe-797cc6c51445",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e501b8c5-8aad-4021-a9bc-61469a232475"
        },
        "item": {
          "id": "0ecf383d-9187-43e7-b50f-ffeeef901543",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1c24a97f-fb34-4c5b-b74f-09597ef6617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748c8320-51c0-4da5-b9b5-3ddb4ae86f23",
        "cursor": {
          "ref": "1affc9da-0e98-48a6-bc4a-a583dfcf1e94",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "716774e5-b72b-4174-807c-5e155ec33085"
        },
        "item": {
          "id": "748c8320-51c0-4da5-b9b5-3ddb4ae86f23",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "838625ee-258f-4d33-9214-5100b15d44dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9386760a-3937-4ee4-82fb-d19cc00165bf",
        "cursor": {
          "ref": "6c4db1b3-d095-473c-a88c-07d037ca25ff",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b19c3d0b-4561-4349-a513-12e9120b1439"
        },
        "item": {
          "id": "9386760a-3937-4ee4-82fb-d19cc00165bf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c9a1f19a-0301-463f-817c-b9638032775e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2dbbce-2d63-471d-b0d6-0ccd9fb5d156",
        "cursor": {
          "ref": "cb1781e5-bcaa-4a31-bd5b-bbdd93aaa59d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "431754e6-3126-4f80-bcb2-c1c33692ba76"
        },
        "item": {
          "id": "4e2dbbce-2d63-471d-b0d6-0ccd9fb5d156",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b9fa0f77-4a59-4d25-b064-36a611e93bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a6922e-2f4c-41af-91fd-ac2156850a5e",
        "cursor": {
          "ref": "026eba3e-819e-4f09-aa86-06dd0320cd12",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a19deefe-783d-4fd0-9cdb-8dff5596c1e0"
        },
        "item": {
          "id": "e8a6922e-2f4c-41af-91fd-ac2156850a5e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "515c7fd3-ece0-4eb1-bc8a-443e94db8413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8856d7-afa4-4ce8-bd1a-80aaf0e76b6c",
        "cursor": {
          "ref": "077679ae-ed89-4e11-a259-1a16ac6445f4",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f0d62b91-24ea-47db-9b15-097ac51e5659"
        },
        "item": {
          "id": "bd8856d7-afa4-4ce8-bd1a-80aaf0e76b6c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0ad1c0b3-806a-4d04-bab5-52a3d8328c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54938b41-d620-411e-a60a-db01c597fde3",
        "cursor": {
          "ref": "203fd849-49b8-4c58-b7fc-df03250bfbcd",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8248a2d9-a0cf-4a7b-84a7-d8ae7775fc26"
        },
        "item": {
          "id": "54938b41-d620-411e-a60a-db01c597fde3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3dbe1eca-28f6-49d1-8831-b6bba1001e25",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "8797f660-85ca-4124-ada5-dcddcf8c7466",
        "cursor": {
          "ref": "e4bae2fe-d48b-4ede-927f-c2d50053ad38",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d8e6b8e3-f151-47f1-a1de-18e14a450f34"
        },
        "item": {
          "id": "8797f660-85ca-4124-ada5-dcddcf8c7466",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "43e83b5f-7ead-4a8e-96a3-9e6af1d2452a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7a1228-7be4-46a4-9cb9-75e7fd6db38d",
        "cursor": {
          "ref": "2841b1cc-9829-4d55-8af2-9d09b3d022e0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "251a7861-dd5b-447c-963a-879a98c23a78"
        },
        "item": {
          "id": "ba7a1228-7be4-46a4-9cb9-75e7fd6db38d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b114f3d1-cbdd-419a-8892-c91145b64cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719088b7-3a3a-46ec-abcb-1126ed6ecca1",
        "cursor": {
          "ref": "83bafd6f-cdee-4f75-94ca-00bf69bad33a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ff8fc0b3-e2a1-4237-96a3-4e325b9f8772"
        },
        "item": {
          "id": "719088b7-3a3a-46ec-abcb-1126ed6ecca1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ec3bff2b-3e25-484f-9403-acd0cb851906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2578a98-f893-4942-bc3b-362e2acb8002",
        "cursor": {
          "ref": "1bd7ec64-6f1b-4fe6-932a-103d7bb9c524",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "26fa32ee-78c7-4703-b5f8-c5a0db4ad9f3"
        },
        "item": {
          "id": "e2578a98-f893-4942-bc3b-362e2acb8002",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "804048fa-effb-4c22-9aa2-f29bd81f5333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae97fd66-5e63-4652-95df-fdb86b5bbd6d",
        "cursor": {
          "ref": "18f68810-9a0e-4aed-a6bf-61730ab3cf64",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4a953477-39f0-4a49-9e1c-5b61f402ce3b"
        },
        "item": {
          "id": "ae97fd66-5e63-4652-95df-fdb86b5bbd6d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "03df3355-7f3d-4687-8ed9-e9c5579f94bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f27db3-c0f9-43a1-9da4-cbf2a96dc9e5",
        "cursor": {
          "ref": "f9060ab7-b162-4adb-9538-364f99d620a2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0a0db313-86a2-426c-8e96-df65a0c4b021"
        },
        "item": {
          "id": "34f27db3-c0f9-43a1-9da4-cbf2a96dc9e5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a275a02c-d485-4c3b-8a59-2cd5a7d8da01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912614bf-333a-46eb-b0e7-79bbd85edca1",
        "cursor": {
          "ref": "67fd1fff-2afc-4c7c-abff-8db8f17f9a75",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32e70937-a757-4863-b2ff-9cd4ba1b18f7"
        },
        "item": {
          "id": "912614bf-333a-46eb-b0e7-79bbd85edca1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0095a220-d113-4ffe-9b89-d88341df8a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212522f4-5cc9-47d6-85fd-2aef25db3aff",
        "cursor": {
          "ref": "5dd9a67f-ed35-45eb-a3c4-3263c1507892",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b5b6000-f97a-4783-ba53-cd400e12c05e"
        },
        "item": {
          "id": "212522f4-5cc9-47d6-85fd-2aef25db3aff",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "11e455d1-3ee8-4d8d-87fe-56c5ce65ca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4799e593-9154-4c11-a817-d06b9ec36f14",
        "cursor": {
          "ref": "3509f46e-4701-4528-8043-617a14aac5f7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "46885d2f-4863-4269-b127-88f3c87714aa"
        },
        "item": {
          "id": "4799e593-9154-4c11-a817-d06b9ec36f14",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3f50e454-e745-461c-9730-a685f3556114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd53940-8bd3-4bc9-92f4-d47d53d11a7e",
        "cursor": {
          "ref": "ad638d13-b0f1-4973-83b8-e82ebcb30582",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "51552841-3be9-415c-863d-044168b7c2ec"
        },
        "item": {
          "id": "4cd53940-8bd3-4bc9-92f4-d47d53d11a7e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a184978f-6527-49b7-83fb-5d3b38693496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d908f2f4-682a-4c82-9c45-9a5cd3242451",
        "cursor": {
          "ref": "7c866c05-f245-48f1-8e56-c9af4ef02d15",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c136744f-f7aa-456c-a194-efbb06298b17"
        },
        "item": {
          "id": "d908f2f4-682a-4c82-9c45-9a5cd3242451",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2cd380f3-a4f3-4df3-a688-e0eaf197fb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b9c16f-ddd0-4aa0-b0da-5457372bfad1",
        "cursor": {
          "ref": "f45d768f-1975-4f7d-ab9d-407033bbfd86",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "779f45ca-1cc0-4e89-acf0-c52cebdf749c"
        },
        "item": {
          "id": "28b9c16f-ddd0-4aa0-b0da-5457372bfad1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8b58247b-9677-470f-885f-349099c3c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092c0e9f-9c8b-4eb7-814d-bf9b520b016a",
        "cursor": {
          "ref": "da770058-fe66-4b3e-99c6-e54e4ae59a46",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "345021db-3646-4a87-9a9e-9154b837654d"
        },
        "item": {
          "id": "092c0e9f-9c8b-4eb7-814d-bf9b520b016a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c981bef3-8120-48ab-9524-5651cfb53ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f57d9e5-fe75-415a-be77-8bb1f3c39582",
        "cursor": {
          "ref": "2a50c28f-7c27-49ca-9341-0e5c04f65a2c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1acaa12b-c923-4b46-8b2c-5b50fcb8abff"
        },
        "item": {
          "id": "1f57d9e5-fe75-415a-be77-8bb1f3c39582",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "07f3595c-cd3f-4ae5-bdfc-cf1e20d599e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4476afc9-a7ac-4d0f-a3c4-52c9be162fa3",
        "cursor": {
          "ref": "a195c115-d6f1-421c-995c-8313aa02292b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6f645e01-7220-4128-816e-e35c8f0e3ae7"
        },
        "item": {
          "id": "4476afc9-a7ac-4d0f-a3c4-52c9be162fa3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f8d0cc78-ea83-497d-a842-5123e407be69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe6ad10-4f73-4476-ba72-2d1ec86a1387",
        "cursor": {
          "ref": "65f5052e-76c4-49a3-ae9a-fe62d5baed33",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a2bbb6d8-619d-427a-8e72-578ad0d18242"
        },
        "item": {
          "id": "7fe6ad10-4f73-4476-ba72-2d1ec86a1387",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "188b1938-6505-4ac6-af41-f4da581f2ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beabfe9d-0f36-48d6-9a2f-d990345acc44",
        "cursor": {
          "ref": "03dd6dc8-289c-4d19-a6ef-e1b6e7849ef0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "11b16934-23bf-4805-95f9-5eeecda5ae9a"
        },
        "item": {
          "id": "beabfe9d-0f36-48d6-9a2f-d990345acc44",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "63383c6e-29e7-438a-bfd3-d480ecab782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f2d697-af64-4d92-b97a-51d58fc9ed94",
        "cursor": {
          "ref": "44da3b22-bd09-434f-8bc6-af6ab4b3fad7",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "12111f07-9a7a-43ac-ace9-a18154468f26"
        },
        "item": {
          "id": "b2f2d697-af64-4d92-b97a-51d58fc9ed94",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "866b3016-414e-403c-8e7a-44923c781a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0428e09-7c14-444d-b49c-7c36382744d4",
        "cursor": {
          "ref": "0d50bf7f-d30c-493d-b5ca-6849dd2981f5",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4f0a6184-f152-4b3d-92a2-ef5954a8fc9a"
        },
        "item": {
          "id": "b0428e09-7c14-444d-b49c-7c36382744d4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1af8620c-08dd-44c4-9aee-d24dd6496613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e5ed46-e132-4dfc-aca7-ef473225ffe5",
        "cursor": {
          "ref": "7b2dec40-b9f2-4616-8b26-0c4c5ef4886c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "457a40b9-0337-4a62-bed0-550b5bb61541"
        },
        "item": {
          "id": "67e5ed46-e132-4dfc-aca7-ef473225ffe5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "61deb1bf-b34e-4ade-92db-f59cbe72d35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfad8d8a-608d-4ae7-87bd-9ecff2d94e59",
        "cursor": {
          "ref": "24cc47f4-6009-4c8f-a8ac-172d9233c9fd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6278d9e3-4ee5-4e67-9a96-1ad98ea177f0"
        },
        "item": {
          "id": "bfad8d8a-608d-4ae7-87bd-9ecff2d94e59",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d0f70e8b-1d99-4d4f-9146-b2a8c706dc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d2d05a-68cc-4223-8e51-8cf1d4348ad9",
        "cursor": {
          "ref": "93bfa9b8-34b1-4162-a626-3afe98087c1d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8f28cac3-526a-446f-a5dd-1d9cd27a3ae9"
        },
        "item": {
          "id": "d4d2d05a-68cc-4223-8e51-8cf1d4348ad9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "92ebdcdb-9b8a-4e26-9089-cec0a428e156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d178e9ea-a893-4f7b-bce3-e89712d6565e",
        "cursor": {
          "ref": "9e35e7af-8a2c-46d3-a289-410c88ddb59a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "66123af6-3eb7-432e-a598-e31967a3be33"
        },
        "item": {
          "id": "d178e9ea-a893-4f7b-bce3-e89712d6565e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "886a1763-a37b-4995-aa86-9498baa847bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7640ed7-a9aa-4834-844a-7c628e3a1f2a",
        "cursor": {
          "ref": "2a1410e4-2339-4046-9bab-7cbe620b7a18",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "13dc84c9-4f88-4ec3-b135-b44589352c43"
        },
        "item": {
          "id": "a7640ed7-a9aa-4834-844a-7c628e3a1f2a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c784d674-351b-4a6b-a95c-83118eb06e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4e817d-3e51-467a-aad6-47366992f14f",
        "cursor": {
          "ref": "93df27a3-dd3c-4ff0-b86e-796b56c1331b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aa6f8649-1fa9-4e35-bbfd-f829d35552e9"
        },
        "item": {
          "id": "be4e817d-3e51-467a-aad6-47366992f14f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1bc202a1-45cf-48b8-bb25-f0b4ff0c549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee33f72-1abd-47a3-8460-1ee683fa263f",
        "cursor": {
          "ref": "36e38b0b-0f75-4ecb-9ea0-7e81a8710d38",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ff4b69a4-99b5-46ca-be01-8e55d34d6353"
        },
        "item": {
          "id": "eee33f72-1abd-47a3-8460-1ee683fa263f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ce334e85-31ce-4345-b5d7-1bf03d8cf104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e90664-0861-4b6b-a066-b551e8a3b68e",
        "cursor": {
          "ref": "b8476f3c-f045-4633-8270-bdc4b008f6cd",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c45b3923-e290-4cb9-8518-3370bfa86e5c"
        },
        "item": {
          "id": "42e90664-0861-4b6b-a066-b551e8a3b68e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "99956d00-c1f9-4ce1-8367-097a5916e093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a3b626-9f11-49c2-a3b7-a429522e8322",
        "cursor": {
          "ref": "b97a2f44-4bfa-4373-8807-4aa7382d1e9e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cefd28e3-9b1a-4adc-a3f9-525a3a538772"
        },
        "item": {
          "id": "e9a3b626-9f11-49c2-a3b7-a429522e8322",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1dadb723-3e01-47a4-9539-54863bb6ee1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bdcbd4-206c-4990-81ef-ab52dd1098e3",
        "cursor": {
          "ref": "c2495dde-9bf2-4905-b92b-f7a25002e575",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "25155b95-b1a5-4f7c-a30c-c6d79f2a4631"
        },
        "item": {
          "id": "b3bdcbd4-206c-4990-81ef-ab52dd1098e3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "95df1e86-c37a-4e19-b432-69af3268cfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bf047c-a903-4039-9518-8258488ed91c",
        "cursor": {
          "ref": "56885bec-3c6d-4fd8-b28e-954f6f5cb35d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1dc95b1e-9411-48e5-b910-3d1e687218e7"
        },
        "item": {
          "id": "e4bf047c-a903-4039-9518-8258488ed91c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "484dbe43-63d3-4589-9ea0-587491a6f78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa8c617-63a9-4002-b530-dd9274afd561",
        "cursor": {
          "ref": "e3c4e7ed-bfb7-4ceb-8cdd-eefc313df278",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "61d00170-d3c4-44f9-ae49-fce28cb67b4d"
        },
        "item": {
          "id": "6aa8c617-63a9-4002-b530-dd9274afd561",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6b41b786-34cb-40bd-a0a0-8c0e2eb63e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a88d20-75f4-4e03-b018-9090b37ee4d6",
        "cursor": {
          "ref": "f2ea5be3-dbea-4ed3-9bb7-c23990a261ed",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7b156d26-3240-4ca4-b3b0-171cbd9fb89f"
        },
        "item": {
          "id": "a5a88d20-75f4-4e03-b018-9090b37ee4d6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0dd9f0f-5c43-46d2-a30f-4c172653d2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3621cf21-408e-46df-a73c-4a23d73a8450",
        "cursor": {
          "ref": "b3d63150-e808-4a77-9a8c-b395d764cc5e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e869180b-69a5-45c3-9f1f-1b1ff35f2c8e"
        },
        "item": {
          "id": "3621cf21-408e-46df-a73c-4a23d73a8450",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8bc02c73-88fa-4427-96e6-398e100c1775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da21a67-ce3d-42f4-b81d-f20ed0948565",
        "cursor": {
          "ref": "189b9dde-79a2-4129-961c-dd340813edb3",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f5c892ee-788e-42eb-a44c-c8e7d4e42286"
        },
        "item": {
          "id": "1da21a67-ce3d-42f4-b81d-f20ed0948565",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7c5dedc0-59bc-4967-8f6d-92e52737d753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d71eafc-2250-48ee-b1f5-b8fa0b704349",
        "cursor": {
          "ref": "7a1bf3d6-e365-48c1-b568-547bab973900",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6b2e9be5-3d3d-48d6-bdf0-d4f3f623fbc4"
        },
        "item": {
          "id": "4d71eafc-2250-48ee-b1f5-b8fa0b704349",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b29af1ab-70e3-495b-a4b2-f03dc82f2d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014a3e7-79fa-43a9-807c-95873e6b6fc0",
        "cursor": {
          "ref": "aff5fbbe-6a7a-4def-b544-93d0740b1a9a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a9d63f10-d231-4478-ad93-05f399407d6a"
        },
        "item": {
          "id": "7014a3e7-79fa-43a9-807c-95873e6b6fc0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "912e4aec-7be7-4ccc-b51b-f0aa203d92b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f7d86e-e46c-410e-8c8a-e4aac5d4681f",
        "cursor": {
          "ref": "7a24518f-124a-4886-9d48-45adf5d8a1e9",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5ed50b4d-79fc-4245-a37a-22afe063fdf0"
        },
        "item": {
          "id": "66f7d86e-e46c-410e-8c8a-e4aac5d4681f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab596740-83e9-4d87-afc5-376f2af8f20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8aa7b7-72ad-4b01-bd01-6fdecad2b0eb",
        "cursor": {
          "ref": "04c65ac5-358d-4bf7-8cd8-a80753aa2e9e",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2dff7e8b-f49e-4908-9ec9-aca971c6aff5"
        },
        "item": {
          "id": "0a8aa7b7-72ad-4b01-bd01-6fdecad2b0eb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "641f953d-1c3d-4edb-8a30-324bbdca2d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cbd370-f0fc-4d8f-ba99-e82119501cd0",
        "cursor": {
          "ref": "0250b344-fe82-4850-bbb1-9595bc3fe80e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9e551077-73c9-4df3-993a-77ed3d633895"
        },
        "item": {
          "id": "47cbd370-f0fc-4d8f-ba99-e82119501cd0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a275ea81-5b50-4540-a789-8a73f29978e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9085aa6-dc63-42b8-b794-22e496156774",
        "cursor": {
          "ref": "5a6b8ba8-1efd-43d9-b843-db91ace9e307",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e0372102-ea7e-44e0-b4ab-36074cef3977"
        },
        "item": {
          "id": "a9085aa6-dc63-42b8-b794-22e496156774",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c4b48084-5471-4527-9f76-873a29258a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcb1828-f9f7-4289-959f-165ffb961aaa",
        "cursor": {
          "ref": "3c176017-8f88-454d-90c2-7f4a2d5cd63f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "81f5bd19-8740-4db3-bac4-b1ae0fe341bd"
        },
        "item": {
          "id": "7bcb1828-f9f7-4289-959f-165ffb961aaa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f6399c0f-04ce-4c49-93dd-d1821f503c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b9100c-1bac-4c83-80ff-61c799204882",
        "cursor": {
          "ref": "6b43fbc9-7f8e-4f83-8c37-39066ab2e980",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "52091371-281d-4a60-b209-c5914755b95e"
        },
        "item": {
          "id": "e5b9100c-1bac-4c83-80ff-61c799204882",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b695aa67-1359-45c0-baa0-aee17705547b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f11ab3d-63b9-4267-a431-1d2b25dd1a10",
        "cursor": {
          "ref": "5f59957c-ae03-47cb-839a-e12aee74d9e9",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8746f472-7075-42ed-af54-2baaf5b377f3"
        },
        "item": {
          "id": "1f11ab3d-63b9-4267-a431-1d2b25dd1a10",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "764ac2a0-24a6-4162-97de-80136b4befa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292bf919-174b-4ff1-b6ad-49e49c55748f",
        "cursor": {
          "ref": "569db0cf-7377-40d0-beba-b13957fc0d68",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ac83384d-f3fe-47dd-9879-8e78467833b6"
        },
        "item": {
          "id": "292bf919-174b-4ff1-b6ad-49e49c55748f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a82dd75b-6684-498e-841a-247b2ad37ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54aaa69f-dc79-491e-b86f-05b3b44ed0d4",
        "cursor": {
          "ref": "5872f10f-5a45-4eb8-804b-d08a4fd573e6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8d2c1ec7-be94-4b18-a702-c70b42457d00"
        },
        "item": {
          "id": "54aaa69f-dc79-491e-b86f-05b3b44ed0d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "75471220-bd2e-4fe5-a4fa-0895671c4456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98f4597-dffe-4cd6-8551-a04c6aaebcf3",
        "cursor": {
          "ref": "1fdc2574-be3e-47de-b1a8-4b8fc86c3069",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "23cab61d-5898-4d39-9871-b2d4f2b57375"
        },
        "item": {
          "id": "d98f4597-dffe-4cd6-8551-a04c6aaebcf3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2c1ff87c-dae3-4c43-8bd9-29fd6fd8c4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80b1c8b-ff00-4363-b52a-ca3f1aa25712",
        "cursor": {
          "ref": "09a6052e-287f-4187-a156-56838dd9ed98",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "11a3976b-12ee-4519-8588-2a4878087ac7"
        },
        "item": {
          "id": "f80b1c8b-ff00-4363-b52a-ca3f1aa25712",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "aab888e4-3110-43c8-9de4-2def8a16f070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6903f538-11ed-4007-b290-ec59a4e95490",
        "cursor": {
          "ref": "b77e1164-498d-47e4-8cf8-091c3740625d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "13fdedf5-6ae1-4d6e-b4cf-600dbe75f997"
        },
        "item": {
          "id": "6903f538-11ed-4007-b290-ec59a4e95490",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bdadc469-c39d-4dd0-ba8b-0b7bb9ffc3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d31b3eb-ac1c-4d08-9c54-a0c477c389ad",
        "cursor": {
          "ref": "782e116a-59e9-47ba-b352-913c7e81ad1f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "52428d1b-cddd-4b88-a4c1-daa7e7ed75e9"
        },
        "item": {
          "id": "4d31b3eb-ac1c-4d08-9c54-a0c477c389ad",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2f062859-66dd-4f9d-8676-c2917beb406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d73b527-1d4a-41df-a983-7c8d6a6ce8e0",
        "cursor": {
          "ref": "f09955a0-2a8d-434a-abad-0023c41c752b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "76508faf-e44b-4b8b-9680-502dee61e38d"
        },
        "item": {
          "id": "2d73b527-1d4a-41df-a983-7c8d6a6ce8e0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e0c88e38-8796-42c6-ad03-00456a30f32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3432b688-4406-41fd-a957-17e8e8343105",
        "cursor": {
          "ref": "1d85e88d-4e71-435b-8b4f-09e2d9888497",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "df3f2bb6-9add-4a65-959d-ac1907c58d92"
        },
        "item": {
          "id": "3432b688-4406-41fd-a957-17e8e8343105",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f6772e7a-7f8f-4c99-b43a-7e0dd201d51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30bbe79-fef0-43e0-8d9f-5568608b6007",
        "cursor": {
          "ref": "95217494-c3d2-4c81-a20f-8368d825f2e9",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5c3fa57d-4dc7-4be9-8aad-5684efd5a93c"
        },
        "item": {
          "id": "a30bbe79-fef0-43e0-8d9f-5568608b6007",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "15bf3098-f6f0-4835-af46-6fb3dde5059e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf258f0-2f61-4909-965b-be498ce9702a",
        "cursor": {
          "ref": "5ae776db-7acb-4678-9172-1d62754cdc6f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fea55a33-baaa-4874-bd74-c828c5862e83"
        },
        "item": {
          "id": "cbf258f0-2f61-4909-965b-be498ce9702a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "580b7f95-c364-4949-99e3-3d0950140537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba44adf-6a64-4406-93cc-c69ce9375bdd",
        "cursor": {
          "ref": "c6198bf6-ba2a-4034-9864-20276c95411e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f73a6dc7-aa7e-4ae5-87c1-f081b511195a"
        },
        "item": {
          "id": "3ba44adf-6a64-4406-93cc-c69ce9375bdd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b35f0c31-8142-4dc5-8082-2796f8ec842a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb4f8c0-33b8-4be2-b635-d33e2d09f279",
        "cursor": {
          "ref": "381ace1d-5eba-479f-8247-976e18666c18",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bdaf1897-81d1-4709-9183-b056d83ef00e"
        },
        "item": {
          "id": "3bb4f8c0-33b8-4be2-b635-d33e2d09f279",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "434e0106-bcce-4685-b104-f8949cb7c34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb0420b-c676-4cc3-aeae-19b634bb1501",
        "cursor": {
          "ref": "721ab3df-2d4a-4065-8441-6381459906a7",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "af7aaf7c-018e-4c26-a8aa-0304ec40b12f"
        },
        "item": {
          "id": "ceb0420b-c676-4cc3-aeae-19b634bb1501",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "48340494-9eb5-445d-ac94-e8d30b6803bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7a0372-334d-4284-8c03-d2e933bef498",
        "cursor": {
          "ref": "0a1674f1-0237-4a0e-8645-b331ed3851db",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "70002dca-4a5e-46ce-a9db-fb9de88284bd"
        },
        "item": {
          "id": "9f7a0372-334d-4284-8c03-d2e933bef498",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f1323c67-a5c1-48f2-a79f-8c2b68d9b31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4729e02-475a-4a3b-83de-31e1b6d97c37",
        "cursor": {
          "ref": "5c524ea2-399c-4e63-a37f-7508e8f80230",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cff05611-ec8a-439b-a5a6-4ef799803f87"
        },
        "item": {
          "id": "e4729e02-475a-4a3b-83de-31e1b6d97c37",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d63c20e1-573c-4de6-bb31-e1bf0910eb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222b4d56-5ee6-4157-a615-3bcdfc671664",
        "cursor": {
          "ref": "6bf8a236-22bd-40b6-8be1-1cd5fa5b1817",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f7956490-8fea-4646-8c00-9651aee1e45b"
        },
        "item": {
          "id": "222b4d56-5ee6-4157-a615-3bcdfc671664",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bf58c46b-0fa0-4c01-abe0-300149f1afba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efc1f93-0dc3-4433-b8a9-a0552911a82d",
        "cursor": {
          "ref": "7c9c1bc3-3f23-4657-8cb9-a02db8d12333",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0af3818d-9921-4f97-b9a4-059a962880e2"
        },
        "item": {
          "id": "3efc1f93-0dc3-4433-b8a9-a0552911a82d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ac88e618-de2d-44f4-8445-5016abdf0ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc9ffdb-ca6b-413e-af47-d6559bcfb85a",
        "cursor": {
          "ref": "836c5861-d5c9-4465-b83a-45119f3f4147",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0f906ddd-9843-481f-bfd7-ea184f87d7be"
        },
        "item": {
          "id": "cdc9ffdb-ca6b-413e-af47-d6559bcfb85a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0d22ca43-a34f-43b7-8ba5-ca6abd925844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd31217d-2d38-43eb-b666-da27b373dc85",
        "cursor": {
          "ref": "cddb3c09-f95e-4fc4-a298-707e9396a8b1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6470c285-5b0e-44d9-b7e6-bd0921a4abe2"
        },
        "item": {
          "id": "fd31217d-2d38-43eb-b666-da27b373dc85",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "55944a9f-db83-4740-8b81-7ebe3d7a85e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aad6dd-a22d-410d-b69f-cfbc04b4eedc",
        "cursor": {
          "ref": "d39564fe-5d5b-409c-b34a-46d1fc6f4a3f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e12c30c1-7044-4eb4-8380-5a36e825229c"
        },
        "item": {
          "id": "a5aad6dd-a22d-410d-b69f-cfbc04b4eedc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "90cee1e5-bea5-42ab-9216-978226fd089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e163ec6-2192-4b01-bd4e-4ee5d15d93e7",
        "cursor": {
          "ref": "aefd9eee-2ac0-4d3b-ada8-9a5e9251d5c0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c706cba5-aa60-42ab-aed9-4bfd846fe194"
        },
        "item": {
          "id": "1e163ec6-2192-4b01-bd4e-4ee5d15d93e7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1ff626c9-080e-41c5-bc2c-fc2c887d7e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146ed8db-41f2-48b7-b9f7-8d91c3d98568",
        "cursor": {
          "ref": "1f3bb7af-37f0-4d4b-bda1-2b85e9ef68c2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fbe93cab-0ba5-489a-9eba-83c0fa69509d"
        },
        "item": {
          "id": "146ed8db-41f2-48b7-b9f7-8d91c3d98568",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aaf17a7e-c947-496a-9a57-aba59192d2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029285b1-ed4f-489f-bf25-a0ab062abe07",
        "cursor": {
          "ref": "ecac15ea-da8b-4d5c-b803-fa5d0a140d12",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4577ce8f-c11b-49a7-ad99-d0146f358f6f"
        },
        "item": {
          "id": "029285b1-ed4f-489f-bf25-a0ab062abe07",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "baea59d4-aefd-4fbc-905d-8989a0db40e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e05ee3-12e9-46b0-a2c1-839434e41346",
        "cursor": {
          "ref": "34e61472-060e-4590-9123-cadccef15dee",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3eb0a42b-9057-4042-9a6a-6e1aa98a8bbf"
        },
        "item": {
          "id": "e0e05ee3-12e9-46b0-a2c1-839434e41346",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4fccf0a6-d71c-4d8a-84da-fd2a96966261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd3d5e6-ea67-4864-a6dc-b2478893e515",
        "cursor": {
          "ref": "e7f86958-71d1-4bd0-943b-57fbd9abea1e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3d6abc49-75c8-4980-bfcb-c7aaef074b50"
        },
        "item": {
          "id": "bfd3d5e6-ea67-4864-a6dc-b2478893e515",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "97cbc3ff-04ea-41cf-9a71-f0df99feb5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15843ad2-44de-4e30-8a55-3da4393de96e",
        "cursor": {
          "ref": "d2350ba7-edd3-4c83-9f45-a86b020a25e3",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "20333639-1058-4608-936f-424e50a52042"
        },
        "item": {
          "id": "15843ad2-44de-4e30-8a55-3da4393de96e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6fca28de-8617-4bcb-a9ac-e368e1d55de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26257266-641c-4ab2-b3cf-ea25aa764b05",
        "cursor": {
          "ref": "68888c11-60ad-4c61-a4ac-efb97594c723",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d668d560-2902-47fb-b982-0d713e5a1c7f"
        },
        "item": {
          "id": "26257266-641c-4ab2-b3cf-ea25aa764b05",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a6cc6bdb-c578-4255-bfd6-89126678bbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed53fd2c-b2b0-4bb1-95e0-9055d12e4c77",
        "cursor": {
          "ref": "2b7ea146-f45a-4a1b-8682-d6caa0061ac5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8b96b62d-fe6e-4ef0-83b7-53a09ae16df7"
        },
        "item": {
          "id": "ed53fd2c-b2b0-4bb1-95e0-9055d12e4c77",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bebdd4b5-85d2-41be-a839-cc5a9d142544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99291084-ace7-4dd4-ae19-b189661c5c14",
        "cursor": {
          "ref": "2ece1fbb-6c7a-4371-8f60-df4ea6fce4bb",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1d8cd360-b373-4373-af65-021be1dba85a"
        },
        "item": {
          "id": "99291084-ace7-4dd4-ae19-b189661c5c14",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c3994202-fd29-43f5-b5bb-d335cba0c53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4fbd0e-75c3-4939-a156-616c28f66130",
        "cursor": {
          "ref": "e57d8c4a-614a-42f0-a811-63dd52f8e349",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "abed781f-719e-497b-af5e-a8dc82ab0b3d"
        },
        "item": {
          "id": "ad4fbd0e-75c3-4939-a156-616c28f66130",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a78559dc-ebd4-4c8e-a53b-51508e7ed7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b655d19-843c-4993-9bcd-8e5361b0ad27",
        "cursor": {
          "ref": "54dffae5-9b57-4c20-a2e8-7592c28853d2",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e001d223-bd7a-4dbc-823d-207279679eba"
        },
        "item": {
          "id": "3b655d19-843c-4993-9bcd-8e5361b0ad27",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "86f9f925-4795-41ec-94b3-9aca3839608b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8a2dae-ace3-45f8-9ee4-8fdbffd457c6",
        "cursor": {
          "ref": "c4f0c0c9-97a4-4d54-b702-857e10150424",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8048657a-9365-46b3-8e17-4f32d01920d7"
        },
        "item": {
          "id": "fc8a2dae-ace3-45f8-9ee4-8fdbffd457c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2da36a14-70fc-4ffb-8420-e9168c345671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5b9d70-4670-49f6-9c3d-391cf764a667",
        "cursor": {
          "ref": "85643eef-968f-4ddc-9cd0-3b2b34ad7b04",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8361f8fb-1ea8-4c3a-a935-a8becd935c00"
        },
        "item": {
          "id": "ec5b9d70-4670-49f6-9c3d-391cf764a667",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1b29e49c-a60f-40eb-a762-9c601425fb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f7617d-9de1-4ead-a2de-682663366e0b",
        "cursor": {
          "ref": "4df4b367-1ac0-49f5-889a-da88cddf3f99",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "48d549da-aafd-4e41-98bf-f17d0f4fa212"
        },
        "item": {
          "id": "59f7617d-9de1-4ead-a2de-682663366e0b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d8543ea3-c1ff-4b71-9089-e5b19d11e47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e92a01f-d939-42cc-a99e-6c16f41bf5a2",
        "cursor": {
          "ref": "d9fa7ae2-1e41-4d06-8c32-eff231cadbca",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "eaa5ec3f-c57d-45cf-9020-256d7c74c06b"
        },
        "item": {
          "id": "6e92a01f-d939-42cc-a99e-6c16f41bf5a2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "08d6c47c-eaa5-4cf1-96a7-1290069c2fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23481b83-c05d-4475-8d4e-77ac35d2115f",
        "cursor": {
          "ref": "5a9a32f1-0677-4ef9-aa5b-0e821fd988ca",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cad9fc9a-a7d3-4ae5-93f7-22cb55a6922d"
        },
        "item": {
          "id": "23481b83-c05d-4475-8d4e-77ac35d2115f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "03a25c1e-637b-44d8-a90b-1897087d249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224a61fb-74b5-4c00-a6bb-9448dd686322",
        "cursor": {
          "ref": "9cdc095d-3d48-4dfa-9975-b86dd6d7e9e4",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f9efa94a-4004-4a63-86fe-f6ad207cfee1"
        },
        "item": {
          "id": "224a61fb-74b5-4c00-a6bb-9448dd686322",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "721fd48b-9e08-489e-84a0-437cb1ce5c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdbf726-de9a-4622-b289-01737202311f",
        "cursor": {
          "ref": "e84fd6f4-db7f-4d71-87c3-f604da089127",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "813e9d33-9ba2-4827-9848-da124f865820"
        },
        "item": {
          "id": "1fdbf726-de9a-4622-b289-01737202311f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "619436ab-0e4b-4dfa-a013-c3b96f9728e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480e1495-168c-4d56-baf7-dc83c812a380",
        "cursor": {
          "ref": "86e79f28-16c0-4e5d-bb2d-08e23619d5df",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9694b40a-65f1-4f11-9ed9-f2dbbd87bae1"
        },
        "item": {
          "id": "480e1495-168c-4d56-baf7-dc83c812a380",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bf31b397-f3b0-4a00-b858-1476d5a88ef5",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eea5235-ef13-4df9-bd6e-9b4983a4c92b",
        "cursor": {
          "ref": "72ec6570-39b3-45e6-b12a-0ff6e25369a3",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bd84a0c7-9bca-4b32-97ba-6115ed9477fc"
        },
        "item": {
          "id": "0eea5235-ef13-4df9-bd6e-9b4983a4c92b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ff232cc2-6c8e-4a76-b44b-22b4841d0e51",
          "status": "OK",
          "code": 200,
          "responseTime": 3246,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf2aa3a-9a2a-4cac-a412-5bc3519dff26",
        "cursor": {
          "ref": "69a3fbe7-f2e6-4d1d-add3-13c2d25fd6dc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8ed42ded-567d-4d9a-8c13-d3c589c293fd"
        },
        "item": {
          "id": "4cf2aa3a-9a2a-4cac-a412-5bc3519dff26",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c7a8dbe5-bb28-4cfa-8029-db5701991439",
          "status": "OK",
          "code": 200,
          "responseTime": 2851,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62980d2-f561-4e09-ac60-6485a50aacce",
        "cursor": {
          "ref": "578aaaf3-15b0-443a-8b1c-2f9dec8e2347",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d239753f-6578-436e-8a22-25cb26066169"
        },
        "item": {
          "id": "e62980d2-f561-4e09-ac60-6485a50aacce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3c88e841-899a-4178-b8eb-240ecb719164",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62980d2-f561-4e09-ac60-6485a50aacce",
        "cursor": {
          "ref": "578aaaf3-15b0-443a-8b1c-2f9dec8e2347",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d239753f-6578-436e-8a22-25cb26066169"
        },
        "item": {
          "id": "e62980d2-f561-4e09-ac60-6485a50aacce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3c88e841-899a-4178-b8eb-240ecb719164",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2287ea7-0e6c-4d4f-9c67-448d8f735252",
        "cursor": {
          "ref": "fe8a29d3-00d7-4b27-853c-3ee461597b8d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "eca6811a-180f-4c59-a971-5afb7bc4f598"
        },
        "item": {
          "id": "b2287ea7-0e6c-4d4f-9c67-448d8f735252",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "12c175c0-0abd-48af-93dc-69c97dede790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1ba294-9067-4a58-92d1-0680b2712f45",
        "cursor": {
          "ref": "69f70bf4-cd79-4422-9bb3-4c732893c5ca",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e6656cd4-db55-4880-b5d7-811a41410d03"
        },
        "item": {
          "id": "0e1ba294-9067-4a58-92d1-0680b2712f45",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aaef7490-b1ea-4194-885f-0361d1e35b33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}