{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "30953422-b344-46cb-a6d0-99145b6acc7c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "71dbec8f-d298-471a-afaf-dbd8696e80b3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fee7f3b3-29a5-4ab1-a8f0-b6109846c5ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6e0004b6-90f3-4f1c-a9fd-e223d8bade74"
                }
              }
            ]
          },
          {
            "id": "5ef0df35-02f3-45c4-95e2-1912cd4dcc1a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0bbd1659-bd3c-4195-8586-1f0bb323c0c8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "271faa5d-9d3e-4764-be35-bd4d5705aacb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "58b5f25a-4c48-4375-915c-891257d8c97a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "192b6926-38bc-40a4-9831-678be037d1ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37f6c481-1c45-4788-963a-cfde715d734a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cfaeb1f-c84c-41a9-935c-4badb5393994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dc94bcf-7136-4c8e-ae77-b9cc3e697535"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd1d3d8d-d552-4263-813a-2c433b775d55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "233231e3-1b28-4ea9-a1ec-4fc617b105d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0dc9d629-edd8-43f4-9515-166505dcdbd1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "048c8d65-a9db-43d0-a4c0-09763187e435"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36e2b1da-042e-43f8-ba91-56c0abe67231",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d001fa3f-eed3-436e-b3f7-420b0be8ed32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff6ac500-5739-4a58-bb73-fdb5301be977",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ad2878a-e312-4141-96a5-0e57610d821f"
            }
          }
        ]
      },
      {
        "id": "263714b1-5d1b-4b5a-b952-45c2f2ffa40e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bb25e011-05fc-4767-837a-627bb3812432",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8aabaa5a-31b7-429a-bae5-9bc04490784b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1731b7fc-675c-4ff3-9dff-4fb7dd727260",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de66694c-1ba2-4654-9c51-dffb3db7c004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fc2300c-7866-402b-a531-60fd15019f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1120ccd9-ea1e-4fad-85be-7a516c433f08",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999aea1d-7595-4ed3-9942-cff8081017f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d0e349d-e62b-4c60-a179-67dad03dcf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d11052-66d6-4191-aeb9-75e64c8e7e8c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94040482-6d96-426a-9746-ec833f1ab1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f3cea51-337e-472d-b3ca-0ac76c318851"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d6e38b3-f483-4b9b-a4ef-7963b9bfcfce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e20bdfd1-0bc1-44a6-a381-f820230a97c2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b54289-9d82-4c70-be8a-7dd744aa0209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80f7cfbb-4234-423c-9ac8-c7decb1441e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51aaabb-715d-4968-9563-c6d12122cdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a5d7f9-aab5-4dc9-8484-a8f8073797b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2a4fd392-1da0-4000-bfab-f8092d9ea348",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72bc22c1-0418-4738-a307-a27e6fbfc1e6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0568f3a2-9500-4ccc-a074-91f1ea7a5006",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6d94254b-daf6-4e1c-ba9a-a6db8243b1df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d25057e0-e90a-4598-b063-1aec23888b75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3db30d40-941b-4370-82bc-f99aca3cc517"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba41c212-e79d-4e47-92b7-8630016324dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a404df3-1264-42ab-8542-296d91028889"
            }
          }
        ]
      },
      {
        "id": "cbb515af-25fd-4e72-b780-2c1be3a79343",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "02580435-9348-4e51-93f1-5cb35fe57e81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7d2b363-a08d-4258-8eb6-236514853ed7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1f70e136-a561-4705-88fe-5999d0977d6b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dc8b2d-a91c-468f-b30c-2a005fbead04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d94292-6c49-43ff-8d00-d8d1a3818140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdb2d8d-2e61-4327-9d9c-3e3b8619811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf6c8a27-bfb1-4d5b-9f21-5d08713ca1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449c79b5-06de-44b6-9c0f-3af16c995955",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f139eda8-47ae-4285-9bfa-be714daa0ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c536734-ab49-40f0-b707-ccbef0f8860a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f02c64d-2b98-46b8-b2c7-d40614daf56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cd1f852-34a0-4cdd-b8c0-469a07d1ed08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3165fd8c-4488-4fa2-9a2e-162ad36f4ff8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d181cc6-8952-43bd-8ac6-2883ba207140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e4bc3a-da34-4131-b3ea-328806dabeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a23e82a-156f-4fec-b658-12189af9972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af65fa07-446a-455b-90f2-d9fc0e2971b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b2b69c-b5d3-48ff-9360-eef0b1cec548",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af339c24-0e5b-46ed-9fdd-191ced8ca1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2416c59-7cf4-4d1e-8785-5a7555be72ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3b01ee-cccb-4b8a-ad65-d94a5883a625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba9d6fbb-2bc9-4321-8c1b-0c02a6f8aa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb18e34c-6dec-48c1-809d-c061680cc94e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f313c72b-f73f-47a5-8c52-1be5335360c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92291a6a-ee62-46d4-bf02-29f9f2cd8119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4803534-4114-4834-9d7b-385356fc8d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9073927-8a03-48fa-8ee8-510bd4c947e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6185c1c1-ad17-4d1c-92e9-3c416100f443",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36531939-07f2-4ff6-b4a6-fad5d0bc033e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964b9127-2884-4512-a9ee-00a8b7f76b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2307a55f-d2c7-47bc-9c7c-392480aec3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a678d30-fce0-48b5-b9da-af135f61cee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dad44fe-a4af-4e8c-b67e-fdd0896c51e1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4be9c4-3467-4f59-8f15-9835f14c4286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4692f111-c661-41f8-bbef-0fadae9d0c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c123ba3d-ea45-4dd8-a85d-61ff7497c2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2874f016-352b-43a9-aea2-246a6d922707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df93900-11f4-4fab-9064-b810308e95ec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79054629-f934-4a58-a70a-b61cfe40fa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f197c6-9047-4a8f-bc6e-0ef732e8ffeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a601249-1014-4a5b-9058-6134b744bf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28d70427-1c4c-4a70-8925-84eda955b956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ff78f3-12ac-4f09-8dfb-48ae135f8bb9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909f2485-19b8-49b2-b1f1-40f06238c00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bdc615-e855-4f8b-98e2-46c64d39cb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ad0921-768d-4752-baf8-80fba4e1d21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88558245-73e3-4186-a113-b5e425c0e852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3000155-e9ae-444f-9eae-b7d9a525e2cd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0739ed4b-5ab2-43ab-8cb5-bbeb233c4628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cd28bd-23de-420c-81d3-5339df8f8b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f55235-d75c-4c09-918a-28975a4ea059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d50480e5-fcd3-4ae0-867c-c1acf1e0e599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03053cb-0f97-494a-9c39-46611aa7da9a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fdf3dc-d60b-4935-998d-19dd176522f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62141534-5bf2-4fa3-85be-c4cb31d7bfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aac0cb6-c935-4508-9cc9-605fea741844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df507cc3-4e03-4ce3-998b-a5edf2a6f808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24a3a2b-5e38-425c-8cf9-b67849797da7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9581f2-4b1f-4666-81d2-80ac40b20382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f85f86-d547-48df-8b24-0b8c19cdfb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bacf128-43ad-42b9-b2f0-f8d4761edf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fbab20f-a53c-442a-bfea-f412664a46ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d846a5ba-ed13-4a36-9024-e279b5fbf10b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318e277d-af69-47e5-9551-c42573bf08d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6496f06-eaa2-43cb-805d-93f7ab2e46a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61344f3f-8d13-4800-8288-75db76503245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f8b64d3-b270-4119-ba06-5a2f98f82960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0ed3b9-ea9a-466d-a6e5-cf60a71aa122",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698fca93-388c-42a1-876d-183676add642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27acfb11-54e4-45a0-93d6-cb7e98f91052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436cfa43-4faa-4564-80c5-6af008e6d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb5f2cd9-1e57-4a59-a05c-f1b6772d754c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904d1aa3-87df-461a-867b-8d0b794d5e2f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e8ebbd-bb3c-4f04-b448-c7e74560bc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d707e35-950e-4b2d-83cc-dc7ee450047b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cae3d86-ebc8-4c4a-b545-6329d3ea1cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f69f621b-a9c6-44fe-aea9-1b6102a6da3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b1f5aa-3457-4f14-aa31-1e2469dfbbe3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16669d15-5a67-4861-b4c5-7e34ebd89cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc62478a-5fc4-4993-9146-e93ef39f2d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc4d20b-571d-4e88-9267-771613e9c776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40d4f2bd-5d9a-4912-a852-3cc9b5312aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f526eb-70ee-495d-af81-c38b9503e964",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601b5980-f37c-4b64-99ca-5fcad3535bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad33cd4c-edbb-4eee-93ab-960aa4a58cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8374bf09-ff03-46b8-a39a-1bf7f526c8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ce2b0df-a38a-4180-9626-acb366710be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682ba0a6-5e91-49b7-9f32-73f4d2a9d466",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fc0041-69f7-45ea-8e2a-86be54ddafa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a86a94e-5667-4b92-8a5c-3d9493011b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a39cd1e-c930-4763-919d-9f18041d4d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "195484fc-5fed-4c86-abf4-d692ae3e6062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1141f7e3-8b5d-4de2-ba78-a1b6f5fd4365",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f68b4d-d52b-472a-ada7-78077794c3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44507d0-318d-42ac-af77-aed06cf580b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe955fb-c35e-450a-a623-d24205e4b006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45ecea27-a876-41ba-9af2-5f983c909b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0d60dd-1d3f-453c-86b6-f26c272abdc3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d37916d-cb78-4c56-9734-f5d39f31735e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f176c207-471e-40ac-94bb-319ae037bf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064b6622-6ff3-45a2-8aa3-501eb58e9628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f214f78-51ac-4999-b1e1-5724823693b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9d1478-67ed-4ad1-a0c4-790fa4321539",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb5fd5b-ac38-4f8b-91c2-9407fcdf3fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f320dc-b4c3-4fe6-9d83-697d537e1c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495ab84b-e659-479e-9761-ce306b933970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d49641-af33-4808-b203-a10622303568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01366b7f-efdb-40b4-8ddd-392c6a037b90",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8797c1-40f4-4cd7-ab9b-270eb0a56d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d38dc04-d8b4-4cc1-adc0-555e59af5c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dea6383-7f3a-4478-924f-e99e8a1ae251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93f4a7be-1bf3-4106-867d-fc045caeb152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf31592-6c72-43da-81a3-02c6c24a4fba",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9c57ba-1862-482f-a735-c1c754662ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3f25e4-7b0d-477b-a041-0f3e4ec8a79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ba19aa-f4db-412f-b209-8d5c1e0ed883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3098a109-c605-4f9c-92a6-4447cdabd072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2890f6a-0014-4aa9-92df-ec83c42acada",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b3c303-b87a-4488-b6e3-96f0e44595e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9551a278-f5c7-416d-9fe2-1902d9a5aaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb9fb61-c354-47cc-a4b4-266fd081c91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06e433b-5498-4c8e-b5ad-4cf6aa865452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9614a8e-037a-40b4-896d-9b1105070db9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b143c8c-9723-4be7-a624-4208cce4f328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048b0da5-cb45-4e19-ac15-a4bcceae566c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ef3980-0c52-4670-9360-4e0c3a18c531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "556285a3-9ed4-401c-8430-53016378bca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d0bb45-6864-408e-98f2-52cce26e1e94",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee96111-878c-4263-b415-db92c1e0222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a2aa37-a5bc-4984-8bcf-124b24242ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7c66ad-f5d1-486f-8d22-c8d510e620b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8be2dd-32aa-46d4-8ef9-70ddc99d944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9328988-bfc3-42cd-8d01-88c6c9a72d34",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd0fa21-2eb9-4483-8dc5-32f1f554e16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347d862c-fa87-41cf-996f-d01e866cf2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c5a932-805a-4b13-bc59-cf47634c9305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "279b6665-b613-48b8-8e33-393f6da0e32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d3531d-e319-42e0-a301-59ce99d1873a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d61c958-faa2-4521-9fd4-c3f0b99500ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdddb5ba-8060-469c-b1a0-6d81212dfad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20911348-74bd-44d6-82c4-5997a8150762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46232c54-6163-47f4-8806-c5ef5d195ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcfd557-2355-4576-a81a-0e38c10acfb8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99754d29-a9ac-4ad3-b77d-558eeae837ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eb94dd-a749-477c-bf6e-65b9524c9d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ea5712-b209-4fc1-85b6-520237b926f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9181c1f4-ccee-4515-9b88-0bfa5da4e793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c15bd09-80ab-4ddb-8bbf-e7fc77b50acb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7305b91-807b-4492-bd1a-8fb46ef0f793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e79ba5-4954-4b50-9296-6af85b5fd794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d915536d-6946-4311-adee-73cf62871516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b59c6f7-5b42-408f-b959-50b3a0dae2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033e3f34-5fa2-442a-9a87-0d75ca75c76f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d52794-dcaf-43c2-851b-2ff3ba771e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60574691-9cf4-40d7-84e3-161b1d1cf479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8890d0ae-8283-4cbc-93c1-0d2956c8b723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e26fba22-f00c-438e-96c9-63ee3fd4c0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b346167b-0bf8-4fec-9729-652a3ce5402c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85d8e06-9a57-4626-ae7a-e5b09fd5710e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69af1d12-7ff9-4979-a38e-e930a2e11418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2e9ca6-ab97-47c9-a4aa-16b5f4749462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4e019e-647a-4ff8-991e-0072fe5cacf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36c91f1-d286-406b-99b3-0d28f6b6a176",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c158eb-1823-4568-811d-1d805019568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d3e85a-8cac-48ad-b23b-5d0abb503a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dd834d-d85a-4542-86ab-07fc21444788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7c4341-deaa-4f30-9ddf-09b97aa3bfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5dcc4b-a172-4ba8-aa81-47dd1c28a08b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbc1167-0c1a-42ac-aa61-9db7855d88be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5906e211-f158-4b65-a377-3b81d8f6e72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15990570-72e9-4e7f-8723-2a897c2f451d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4012cb6b-62b9-4fe6-878c-b3fb85e7e045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a066377-6b8b-47b6-bd0f-4c976c0bca6d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eb7981-9919-4351-8119-6b652f1f2ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b332e10-9484-4ff8-98e9-d08c49db8c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f1a36-1ca5-4f1e-95b1-293eb0ddcb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "86f6385d-2728-4029-bd15-3d5cbd092dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b7d39b-7363-494c-bc40-0ebfa8a65550",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94853760-b551-4825-a6ac-7447c0608766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ede61cdd-b056-4190-9f99-57ee12ff5607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3b75a9-5a67-4dd8-b8c6-9cc4a6618091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1008152f-6c0b-4104-a392-0efd873eb4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e69606-99fe-4c88-a115-4966216fd33d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec24b95-2183-4827-9bbf-e629e3dc89db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba6aacf-05d0-4f4a-808c-4894eb3410ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fc42f4-3a60-4360-b22a-e07ae86b736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "084a9c22-7efd-44a6-a385-9cd543e53be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97131f8-501c-42ea-a759-44769914ffb3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b596e4b-e695-470a-8537-98907d18a389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68399f3c-5187-4a22-9632-a3cc11814705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d972bcd7-0792-44d5-b5df-48800fc111e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8573f2-2215-45f4-be17-049eb6dd8190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101769ea-3df9-4b0a-9b40-a0fa84d6fac1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377f7b3c-06bb-47da-89e9-6c92fced2624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b207d258-3976-445e-b34c-70e91e3d720d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6a1c66-d0a9-4590-8804-8362b2bcf727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf75eae6-c979-41cf-b933-18f90d409fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0433ed5b-0ccc-494c-9e03-00736aa94b1d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec37642-eafc-47d9-a1df-52c18221b274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850d82e1-5c85-434b-8f57-38acfd4f7094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e930b3f-5e1a-40a7-ba80-24a851109cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3757af76-8c15-4aa4-93d6-fee2788cfe31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cc3a7d-404f-4d5f-b205-274134007edb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cfc42c-e08c-4d62-8dcf-9e15e0c5d665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac9be69-8f57-4394-98c8-dbec0ebc4360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3398d7-fa93-4819-9e38-fb019065d3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a659ccd-c642-40c3-b2c7-c81e799675b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83446141-a1d7-4356-b513-5031f087907d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ceaa93-fff9-4f8e-aca1-43590e8dbd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef920f7-5e40-4c52-a1bd-afca40dda695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c6c556-8427-409d-b011-fbc4a3711f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b088b8ba-bfe5-4cde-b291-cdd47b432788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b626ba99-1697-4d4c-9de0-c16fedeb8332",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50acb9f5-05c6-4116-8c82-38f157428efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8272a8a-8641-4714-a6e5-5675914cdc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82594a11-15d0-4ae9-a397-3dbcd098b75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a9fae4-73d4-44c7-8d11-58882123246b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a847aa-ed42-48b3-95d8-55dce6ec54ef",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506ed02a-a79a-4f3b-a100-8b8a2328d097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcaf9da-0a19-405e-9039-4adffe7faa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a46249c-1e93-4d93-8005-aa8ebda98c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6689927f-b142-4a53-871b-6cb0e7a5139a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4b6fab-5a4a-4b28-a1fb-adc42b85bd91",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f840a1-7b5a-463a-8b56-12aec3003cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2440fa3-1894-4965-97f8-199c939ada61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4283505d-22a5-4121-8254-a41abe6c4d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5ccbd0-1704-4681-a122-b547287f860c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cf7741-58f6-41db-9226-dfe9df5fdc99",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1259373-58cd-4ae7-b5f3-21cc3d4ebdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229116ba-0da9-42d4-938c-598340fc58e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c863f1-d35e-4f37-bdf4-714eb777a326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99919558-8e3f-4216-af86-3a3f1cb79edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8b672c-e3c1-4ce7-b171-00b2d86904a7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4fb0a7-881d-4076-acfb-e7041831c23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b614356-2fa8-4313-b9bc-41679d903bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db474245-b5e0-4012-9a73-785d604fb736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "241b9fc3-c4da-4080-9dd4-c82f709fafc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ae2748-ed5a-487c-9a85-93be6888c6bd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfec3e9-e764-4ac0-a07c-f529164003b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5dcc27-d0a0-4e1b-a605-6a36c45faf8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dc6199-6b44-4129-b927-cb61dd6d7299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eee2222-7f23-4f78-b48c-37aedf7813dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31df8a36-f153-4daf-8917-69a5bbe9b11b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682d0e37-96f9-4c77-a861-e56270d532f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3d77e7-d03d-4ae8-87d7-d0696d711ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b7349a-ac38-4ac1-a0fc-56c3668d6b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac04e613-b5c2-4cd3-9a82-af6b9f3a4fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c2f1ce-d68a-4b55-bb45-700458c6ed94",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7133046a-d420-4ee4-ac23-28d0f9d842cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a465ab3-8bb0-4b2a-87f8-6b27967bc2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d924aafa-fd4c-4179-8d11-bedb46794d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8076bbbb-a89c-4478-8d23-b78cdf333ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178f197b-1740-4dba-899b-9e9a5e6d0e83",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8b10ba-098c-44b4-8d00-909f886d0561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671bf78a-bfbe-492f-8c43-aa9f49dc0ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e7243c-f9d2-46bd-aa41-550351005546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d35032ed-e742-4145-816f-1f30ff6e52be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c0a520-2d23-4308-8281-e83592f025bb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63151026-a7d0-4efe-affa-6b720e44bb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379982e8-8b4b-47ff-b430-d8b24873a79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6323f65-b98d-4a3d-abcb-e671b224348a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfb571a-0661-4a10-b1c2-d9f2d36a884e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f007e2c-a561-4445-bfa1-839e3e729bf6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66684e15-fe10-4310-b54a-429166e7d82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820ba216-e663-4a3d-a87c-3aa76ea59dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e75959-ee20-4d2f-b159-6c552fbcb481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e59bfcd-3586-449e-8bdb-6f5ff62d57cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a4579-bff6-48d6-a890-a35c7f4f70b5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5bc2f4-325b-46b2-9d22-0d9f440199c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b71b8c-bbc4-4680-b77b-a9a0d7bdb677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a84bfe-629a-4c7c-89db-2a9fe8261425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d67cc1-590f-4ec0-a22d-2b7f88ac82ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178ce226-abb2-42c1-ac8a-c52ef39b3930",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4864d6c5-6833-4536-ade0-4c964fcd3018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b92d7d-378c-49eb-b220-b5ef1f72b32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7672d1-9f90-49cc-be16-1714287afea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d72d67-cb58-46d9-b9da-277ebfd58985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b002502-fd05-4880-81db-200a453df9bb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edce348a-bad4-49c1-b9a6-22fdee4657c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd222754-4ab2-4931-9e93-f87f5c59ba76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbeeef39-d4d7-4af9-9415-39d9d3046391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6791d4ea-fd68-4fa2-84b0-b7ae36c23109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c3fd5c-91a7-431f-9f65-fb92f90ebbb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4db7b56-e2e1-4880-9d6e-251712b6093e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a000611b-a63c-4f40-988d-fec74dd2c6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0e9249-20dd-4a8c-af9d-e0317a9f4303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "981e2345-63d9-49eb-9da5-f9560816d164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f15ff76-deaa-467a-9665-219a9828c026",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc2c930-1431-46c2-ad94-7bb59620bb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23269be-8231-41cc-ae0b-e58c0b2a13d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbef4e99-18fa-44d8-9d80-2a3abe2887de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca404304-35a4-46de-971d-1f0d647d5283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1422d7-99a5-4b0b-a0e4-4de292de5b21",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5acbc6-0770-42d2-a46c-3bba66dc4fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3989cb75-3885-4d4b-97ce-cb93a5ef086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ab735c-9543-43df-a836-551628f3dc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "10765d6d-e4aa-43a2-8f4e-9322328aa950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134047fc-ca3a-4270-ba81-deef927edba3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338fee6d-59e9-4538-a62e-338f71806ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5bd2dc-6f73-4258-85b9-774b23c01d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fd5fd3-a948-4a5b-9fb5-ff66adf14ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "60e7beed-cf75-4e09-b505-a4968809c00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a361bb8d-e665-471e-bbcb-329d465418d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a138c4f-545f-471c-984b-23c09239b4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aae2b5-1ace-4f2a-bb2f-66ac459a5b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e05ac1-391d-4254-831f-3679076a744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "212856c2-b88b-4bc8-9ab6-2726a5bb85a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d8e558-0419-45f2-a17d-888005f95164",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb33034d-ba36-4f4b-8074-78eb95c66817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e849fe8c-496a-49d0-a04e-a782c919adc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443095ce-453e-44f8-a70f-24a3c89c3f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9225370-c2ee-4e74-815b-92233429235d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c27284-500f-41c0-b82b-7f5e3b2130ac",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f1c857-624b-41eb-9266-d55b48e92be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6656f9f9-63aa-4f29-859a-9f3b068ffd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f68348-00fa-41b4-9484-c87e94c0cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "519c3c1b-2174-44c9-9b54-468846aa4db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a44bd6-e36b-4d17-bcec-c735a5703084",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11526faf-f35a-4b37-a72a-8f26516d0b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc681a5-b811-48ee-8a90-5e3470eab3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e608c4d-a093-43f6-bdff-a04ed6f5c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b3d5c2-1e40-40a4-b208-a312bd3bfec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba05ca1-1f5e-42f2-a29d-266918c6e13f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bd7b9c-4dc1-4f09-baf1-1358b31673f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0a6a9b-3cd2-4364-abe6-c405f54c0b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eac5e81-fa50-4da9-9f65-aa2c27f9c339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ada384a-8a66-459f-93ea-44686c1b7684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3c5110-7d13-4deb-8f23-36476bda9241",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4062f7a1-c748-48cb-864f-ee9a40b78683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a658a8db-ffdc-406d-a6c2-0a40f7cbff85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babbe1ab-f82a-4c81-9583-987cb36ea41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49bca3b5-2ae7-4694-adae-84f65eaf589f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975f99b0-a8e5-48a5-ba2d-601bb8abd16a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1138a201-5e65-43a5-840e-dee3816e488c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389c9215-55d1-4cf5-89fb-896e53611536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d3522e-c7a3-416e-afe1-ec83ce1e5336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "780bccc5-07ad-4c91-be0d-270175063d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a16ffd-2c41-4d7e-b611-f71b400179dc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9083f7-d08f-4a49-ab00-72fe00dfcc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd48ac86-b292-4864-9015-4ad5e039900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9220bb61-d739-4ae6-afca-cb19c2078232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfb3c5b-70d7-4a2f-a18b-1c1dc4372430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecabd386-5c1a-440f-a93a-560388064f47",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f6b73f-3111-4198-a940-3a8a6dd99c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241fc26c-0ef1-439c-9cb0-34adb013f470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b56fae-ceb2-42a3-85b5-789187b58e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5dbe6f-b7c5-4b61-877f-4ecc2ffe1adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9991f85a-4067-4131-b4a7-e9951bc3a2f3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbb30f6-9948-4d64-a301-fd51e4186901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad15c8e-8852-4ef5-9851-2e23efd5e9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb94f73e-cdf1-4fe7-a820-bc1fa66d3a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4acee2-33dc-4532-b1c6-59e763888eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9006bc22-4a97-493b-92e2-6195359eb2d4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf288c-6bba-4731-a34d-e160a127282c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61856272-5e5e-48d1-a211-4d8a1ee4cba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6504ca7-a867-4679-9a13-4d62d4eda53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81fdce6a-3f41-4693-9166-1b5381774f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c792bd-f93f-451d-96b5-32ef83a59cfc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858051c8-d244-47cd-a983-577edea5aa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2753cbe2-e627-43fd-8f22-335d6cc00a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaafcf8c-b1c6-4a09-af0a-eb4c64e97746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6678594-f715-46f6-902a-8df04d31ffec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d4d804-231f-47f2-900e-53b8b43ffa65",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bb5431-a00a-4f28-94dd-044d6402c43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaff625-afd9-4e1d-a7e5-13c5f4dbac52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98337c68-fb3f-44ae-8a38-d221b81f3e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b32dc9db-5267-464f-9c87-cb73c6c4feea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778afef1-71d7-498c-9d63-e3bb2f9f0bfc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27657a7-6043-420a-985d-8ba3ce9e000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e724089-660e-4a01-8216-9c66972e8945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3483ecb6-6b6e-47dc-9771-100a124d6276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "895b3705-0618-4b75-a926-dd8fa4650cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad366d80-5311-400f-8c28-7ce55ef8965b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3080b2c-cbdd-49d7-a44b-513cb30cfb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d018c2-6658-4499-835a-4a3219eddc05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8024b9ed-6b1d-4069-9c55-7f7cb29a92bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e085f090-5dba-4420-8259-d49e977063e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b731e3f-1de0-48d2-a4ae-e7729099ecaa",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d48cba4-76f5-4a65-8ad8-6a808598cbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c01769-6dee-4e12-b7fe-b25426827fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ead8f57-5dd6-4423-901f-274747339535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f148e21c-fc10-4159-9c5c-e90290742581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9505dd9-7b40-403e-8bf8-8cd69e9008b5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5e074d-81c1-481d-ad43-a11e03d0edba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d27f8d-6fe3-4f8b-a838-4583adee09c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e79161e-1c80-4151-adf7-7cb7d703ea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "901537aa-1dbf-416d-a8f0-799550d8c9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfd36f2-75ce-4502-a437-d6d33fdab8a2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ed8af9-6003-41c7-b67c-c5995b30602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dd9cab-3656-4169-8c7c-d978e1fdaf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29678de-80eb-4513-9c23-2f1f1d685df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d687caa9-a005-466c-a5b3-b18ac55a0b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafe2fb7-1aff-4cc3-b44d-dc21c7bca675",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d3e38c-1875-4837-82cc-c7434da328dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10815945-826f-4da5-a4ca-a1b5829052f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bb695d-beda-4947-ae72-1ba9f004ca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9c4a6a-d171-4250-8c76-7df02d0adabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153b1946-dc5c-4676-ad6d-e444f9874218",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff5fdc3-55f2-4b40-ad81-019525b83b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe8eb31-e2d7-4000-b98b-ecd4448f0dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e3373d-ea0f-43eb-97d8-81d259e50784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8274ec74-ffe2-45a9-8dad-f09932887cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbfbbda-2caf-47bd-b69d-c625b35a9c03",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accd55d8-81ba-4dca-bd19-5dd60b6eda36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f508ba48-716d-40f0-a06a-921226316426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e96bac-4a61-49ed-acfc-b3707b0fab47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c4003e-a1a2-4007-8c6f-f1c199a03bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e08876c-4dc5-4d98-852c-7960ab48587c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcf9799-dc70-4d2d-83d1-d722f0cab3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34db183a-d9d7-46e2-b7dc-a085f31f78d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730166d6-02bf-4776-9324-79d15bf42a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b2e592-e86b-43ba-815a-5588d32c5965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedbb555-b4be-4ee8-8868-f62b28afdcac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a592c804-4070-4cf8-ab7a-7ffd25db92a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dacf4f2-f38f-4ebd-82f4-c96daca62525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717c53af-0c6e-4255-bf90-1762ef7a7d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af360eae-0813-43a1-a2aa-3991f8841cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf37e09-b994-4a20-8b4b-c2b0e62174f0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b0cb1e-5986-48fb-8134-840e79585051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e28ff8-2e5f-4657-97bb-4227a8e3086d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829c3b39-d2ff-40ea-ba20-024acd9bbb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e08269-b89d-47c5-802f-4eaa2096f93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee4439d-ff92-4827-bb49-3aa8d9a1e65a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc3ff0b-9e98-4f02-aea3-edba5f8c2909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a6b505-d5c5-45ee-91b9-dd96540b2cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fbaada-5262-438a-9679-c1c9f1e03c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df805980-a6ce-4378-8a8f-f7fbad464a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075097c8-e4bb-4f95-8ebc-ee652376ab57",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dbafe0-8952-4c20-b83e-37da19b32c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb393c19-f67b-4733-9153-ea843a379374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a12ad6-3053-43ed-815a-85d69114640d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df5cc25e-d619-4ed9-8f41-3f8b1aa6a3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c4ee55-04f7-4657-af13-314bef153837",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fc2f13-e092-499f-8bde-0f2d24aa32fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5ec760-0443-4b28-a370-f5ec8f3b4bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d97b5dd-25c0-453e-9c9a-978f8f0c1ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c7e661-60f0-4525-aa8c-90dc87a43bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a7f6fa-5880-494d-bc39-3099870c5970",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54af4fd-2d44-4c59-b302-7b492d28b20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc6c418-d590-4ad8-a68f-e0670cac7ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49016236-c7eb-415b-8e5c-74f706970ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff493e25-46ba-45d5-9a5f-3ac21cd6fddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7321453f-4c64-4e30-ade8-2efb6a83f03d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0592b05-3b5d-41b9-9235-40a638be4a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d861b9e-4fbc-4f1f-bbe0-f1beb7251c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9262332-5cd3-4ac3-bb9c-92cb64586bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0778369-c454-4d84-9802-6c54a968a2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f7389-f318-44d0-90c1-88c322d907f7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130872de-800a-47ca-a374-fc49fe139874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f6b9ed-a22f-4d95-8918-49061798af01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2543e8e3-ea68-4e4b-ae7e-c7b1a996fae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d64a8de-43ab-4685-a4fb-aedd5850eb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce65c4b7-13a1-4ab8-9024-b57897540dd5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6691f8ad-74b5-4b18-89cf-164421aefe02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e3fb4b-c5d6-411e-b5ce-cca451390aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e012a0a-c44d-4898-8d52-d5cbe63737e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "204b18ee-c253-4a2a-88a7-b8ab2326952a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d872835d-56e6-4181-ae62-41ac624fae9c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a5e7b7-330f-48a7-89ba-1672d4cbc4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b84b3afa-b6e7-4809-9467-6739f9ec4d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b5db2b-515f-480d-ab74-60aa3b5746f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8429b0c-5937-4549-b5e4-41032ed4eb94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "780e228b-cc94-4f9b-85e4-868e2c1c695a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97f584bd-5b3e-4beb-bf3a-d1c579833470",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba42ea04-a154-4533-bcfa-743687483bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0bcd15e-d1ff-474f-976e-b0f678b3a769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efea203-d7a2-4b4b-b4d0-eed7d66a7d07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f476727-a6e0-407a-9049-582f5bd9dcbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e338c5c5-3263-48e9-bc5f-06257c329b04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb2f089a-2a5a-4738-9fd6-b07d60a9aa30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3899304-907a-4ae6-a9b1-c2f13039ac48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be01d0e6-2e83-4c03-a28b-ea9769bbbf62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79a708ce-07f5-4a56-96d1-a07bfde032f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9b8d3f8-1dec-4663-8ae6-2d646f6b3a04"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ac991a96-f745-4d78-b51e-0a11bcc6003a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "feb35877-2314-4ca6-87a7-f2b10116cd54"
                }
              }
            ]
          },
          {
            "id": "70da5f6e-a84a-4755-a66e-d627e7b43233",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e7c318e-2bf8-47e7-a003-67db8ca6bb32",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "078e340f-955b-4111-8d27-c1254df85c55",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23590713-f1df-49fb-88f3-f0fa00df6f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4b2d4722-c547-469e-81f1-a7d84722fa02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be100a5-636f-4b46-8999-a5fe4b619ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3821e5-e9cc-4ff9-8590-b7c05776d0cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df2ca15d-8a49-4fae-b685-d7b96d1e0174",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e39eab13-e9f1-4d04-86ae-67612e77153c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e53fcff-c7e4-45d1-b152-98cc155ab453"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a70ac154-4a46-4370-af21-b721ffae1386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c308c4c-2de8-4718-becb-ab74fccc67c1"
                    }
                  }
                ]
              },
              {
                "id": "c7c46036-c000-4193-9b45-6accb5edfaab",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fa10856-538d-43d9-98b0-ff954c89dfcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dabf34fa-704b-493f-affb-32e8d7cf2d88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feb4baec-f806-4c7a-bb38-84adbaefd72b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6523bbc-3707-4860-a053-5fb2cd62a9b5"
                    }
                  }
                ]
              },
              {
                "id": "58e43fbe-91c1-4690-a879-8e17b0395cb7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10f160b3-67c1-4d57-8c71-8b8dc092915f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "730388fb-98dc-4833-a6ad-b2a55f1437ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e6156e1-32e7-4bde-966e-4966e6d9f929",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4135ae8d-93b8-4bae-9ddc-ceff6981df49"
                    }
                  }
                ]
              },
              {
                "id": "6ece0aa7-012a-4cd0-ab7d-42408081330b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "911017e7-a36f-41d8-8a80-42314d9980f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8832805-f521-4e80-ba59-11a4d90c5226"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50e8bc7a-6845-4728-9d18-4f52367678cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c08505ca-df56-440a-8240-2f1276673a60"
                    }
                  }
                ]
              },
              {
                "id": "2c2b0a8b-e732-4412-95f0-b8839a0ef459",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9070b703-cb65-4159-a203-16b99cbdd8dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92787c57-cc44-4ce5-92e0-ae39a7f995e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d651a5b1-de7b-4a8b-a87e-827c4d200ef5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f81be2a5-f4c8-4b2f-bb01-aae0ef4d36fa"
                    }
                  }
                ]
              },
              {
                "id": "a6e3434d-9616-45bd-a844-701b718d9d32",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "396cbac5-64c5-41a3-8777-3d643543774a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c3228e7-1caf-44ef-9199-a43024d12169"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa862a9f-76d5-478b-9e59-9379d30a8226",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2c01e44-94b0-48e5-bcfa-9ae2956894c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "450eb94d-a4cb-43d2-b36d-d68c5ba4aa2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8151cd95-7a63-4821-86f2-931bb57a886e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ba77fa97-84de-4aad-88b8-184919d114d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57ed9a7f-063f-40a3-bdee-6677558606c6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a6604df-4d0b-48f6-bfdb-3c9de605b31e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "01f29d6e-6fda-4b1a-9c4e-858aa9d9f7fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c589735e-0e5f-4440-abc9-4441a758541c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b909f41f-665d-48ea-b5f5-a60393127d18"
            }
          }
        ]
      },
      {
        "id": "13bb871b-723f-40fa-a0cb-5a9456499b83",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "61e5b631-9411-407c-a38a-4a9f6d337edf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "474706ca-5855-4ae0-9679-5f933a62614a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aafa3d45-4e65-481a-9d56-9c3681e0eb43",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f1a1fe-1bf2-4249-a7b5-8f8c2cdbd179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0414ed25-a6d0-44ec-9997-fdd8a1d33ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1406a2a4-3dda-41dd-b0ba-890884b3adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0b7bc9-6988-42a5-8739-b8f5ed405509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90893934-1251-4a0d-8287-67017d206b2e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9147589c-bc29-41e9-b07f-73e8fc3c4d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23c56c3-929c-4dac-bb96-fddb6ba9170f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ca4413-451d-46bb-aa9a-10fc7ec3e3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74cd323-44a3-41f6-a13e-13e05601212b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa725dd8-5bb4-458f-86a0-51f8651d0370",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28da2a2e-aae7-4c24-a3f4-325f2b243559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ab2848-ffcc-49d2-99de-e679b3a85f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaafe8a-b124-40e6-8e78-eea9e4022cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0211a8-a7ee-414d-b750-971be7a1fbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed81ecdf-21e9-4b28-b5a0-36aaef4b0854",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b7de16-6b14-4749-abe2-8506035dac1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5d9f48-4246-46f6-923f-38851d02e883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695c3671-4eb6-44e2-93ce-21a047ad743e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dd333c-8888-42bb-af4c-26b07494ccf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb4a4d9-db77-4231-ac21-8b7cf5ee65bc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f779d-4d45-4ac8-a3ab-dc3afcc728b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1cacbf-d55b-485f-ba50-190d29ec8481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2dba9a-4aaf-465e-a9ca-13c3372ccbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f099c7-4a17-44d3-ac30-21f37518a788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999bb9db-9ba3-44e3-b54a-287dc30504b4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3d7c2b-3de5-4c91-b425-140f49db026d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f80620-e7ff-4504-a344-abf182ee4afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81a3a2b-d6ee-4189-9625-9ec876c7ba2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55ea7e48-ee62-4ee0-822f-6e00a7480f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ffe0ba-abaa-4280-83b5-e0be82e0038a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04f2eb0-2f38-41db-9072-76e16e59e1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b48db81-b3d6-46ed-8785-01c0571effa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9481c47-2b7c-4ecb-a741-41cc0d690b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced01efa-cfcd-4aae-b931-d058c1dddc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e77b207-f7f1-4cec-9906-c653824628f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ade8443-cc8e-440d-90ad-db57ef9621c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca706d3-db91-4d80-9914-827312d81164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82133ceb-6b9f-415d-9365-63007a08ea0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c31963-2ff1-4a95-8bbd-1b82119ce9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9321a83-228a-4b72-886e-a6272fc9510d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62608bb4-cdac-4a37-83aa-fd49b5ae066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd7bd5b-c016-4436-98a3-3dfa0cd3f949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76343793-1f7a-4c50-8d4e-c7f6f1ccad12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a34d85-85fd-498b-a878-1dc2a0ab6297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cad70ff-2f2e-4c3f-81bf-13f8adc61dce",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e484d-66d1-44c5-bc5a-82e97cf93e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b84337-ec85-456b-86d7-fd0343ac4519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7078b7e-e9fa-4e50-9e88-9f793e9023f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2195c593-f6db-449d-8fbd-833e61bb8d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32244f6c-2803-4fe7-81a2-a8ebc478bc2f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26196b45-f28d-4251-ada2-97d498f6a728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031bc4a2-e906-472b-a08f-6335e46e8002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132a1722-4d27-4958-a7a4-c63ae84ba939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f700c5b6-5220-42e9-87ab-8106805bbcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40865c71-daf6-4286-9754-26f91ebfb447",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5436c23a-895b-4319-a0c0-e8f798976ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56f88f1-115a-47f3-b57e-8f703764617e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e6ae76-b73a-43a3-9cf1-5e65aa0f22cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa52e4f2-8101-4da3-9df4-6a1d928bf59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea12332-cc60-4ec5-9873-cb8f3519baad",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bf4642-9086-4ecd-a5ab-3be2634ec41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126c9f43-8a9e-4249-a90f-992fcf751587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69ebea0-8b57-49f0-a724-3298a95d8f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99879e34-e132-4522-8480-5ce97dd39c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb983b17-2e28-4816-815c-92d5d911b2c3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d16479-f787-441b-a3f5-e25ca16c5bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d6e8f6-09a3-458d-843c-fdf2c3dcd62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9b48b6-4ffc-4fa7-a4f5-1a0188f8d9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc1f4da-8a33-4f50-9cf6-0a1921e558e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81444843-1264-40b6-992b-7e8befff4a50",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a125d1-0462-4850-a57b-c8055427c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332fd09f-9136-46fe-aaa5-afa3c7171061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e047fd-7c3f-4e20-bcb9-84da96e6c167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb067a54-45ae-4095-9c12-fb5cfc005a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cef336-9642-498a-a2ed-25025a1fc027",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b1b277-ae10-41bf-8194-8fae05e24700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1076d2d5-e0ad-4624-962f-b86edd77e56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7c22c2-aa33-42db-9079-2bb891dda81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0afbfd9-1d7e-4884-914f-a166b11a233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30461a4-e0bd-4ebe-8d12-428b01317dfa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00130c92-1483-4322-8dd8-ae0ab747ff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2072323-865d-447e-bab1-848cccb54ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24386a8d-2a00-4b98-a98d-8531c77dc142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc1b184-307e-4461-91bc-e978b59ecd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abce460-c3c7-4fca-8732-601f24e0d1b7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1613dfd7-6d2b-4979-8fa9-5a961d2b6009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad3ade9-f11e-4937-98b5-e0ec72c97bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fd709e-5f06-4ae8-b4cf-8dd1add88dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44df3afe-7857-4dde-83cd-dda742551e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d59b71c-3db4-4b68-bb06-4f6cd9e39c5f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b24a9b0-fdc5-4ba1-8bbd-9b8c9a2744c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5ab5de-c15e-4886-bdb6-c9e9460c01cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106095ac-329c-404b-8fbe-2bd5cea6abf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf38b6a-35a5-469a-86d4-b474435652e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832e7499-4e58-452d-b6dc-7143366aa239",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fadddb9-b34e-41c3-bf7e-ad995bd234f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6aac1c-35b1-459a-bb63-b9a12764f0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3c12eb-98d2-46b8-b67a-526a5440ecdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "079e62ff-9e4a-49b0-a36c-04c1409869e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc612a11-7599-4c7d-82cd-8c43af6c66bb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5b4cd9-05b0-487e-b9cf-8b5c457eb370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ffdce7-66e1-4401-bc81-67f2f1110577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e9df53-5a60-4b7c-b8fe-94a1bbd3798b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e1bf5e-f3bd-4b91-a63e-2702aaf74a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e2256a-858b-46d6-bbe5-daa324a636f6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a143f0-5c94-4df8-9664-591295989868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4630d263-a014-4e7d-920f-6169d8c7c687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b81cfd-ea01-4fe2-a332-9678dd1dd44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cff14c3-852b-4c38-a441-0dc1cc3b2f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d5b49e-8977-46a8-9031-15160f63b13d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4762fd-f57e-41a6-84bc-c535529ae429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e60bf02-3a41-466e-a1ca-dfd10bb40f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded14856-6ac0-47bf-afca-8accb0a14135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e7a95b-bdc7-4bc2-9bd3-6b3b4c451777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fbb6b4-6196-464f-89a4-b90d9592510b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4e06a9-1007-4c1d-921b-74ea89a5cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22389ea1-09c2-45c3-a29e-30d437950736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba896284-ff3b-4b43-b931-5f73a957b449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "378f4c7d-d361-438a-ab6b-bace7ca45ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2778277b-be50-43ed-9570-92a2ff522684",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e427d0d-2851-4df3-8dfa-66e9c43aedbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83235e56-125e-4670-90bd-2c37a14d1d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fa6c57-9ae6-45ac-a60d-dcbb7145e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5c7eb2-d330-4da8-989b-4f2e5b4b4e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47820dab-f862-4090-993b-9c821c112a43",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261c8ce2-650b-4fa8-98f7-9d1d0f30a8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9410afb-025a-4f35-bf84-075b6d98948c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f07b8ed-bc85-468a-a499-bf482e2b2cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5deadc-2485-4572-811e-668ef0a3da89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0bede7-9548-4dde-b18f-48d7d2319ed2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d24fbb-0de5-47f5-b98f-63eaf6aac0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5effb5b-7372-4a9b-aabc-ee2fa82d48fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c25ece-5524-4777-95cc-2ea820bb6b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b27a05-5aec-4f55-a72f-6d99381f0bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dc590e-7881-4fe4-b5a2-74b5adf70854",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280ca3b1-a7ce-4098-8d1a-92abe79372af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177a5a7f-7cf7-41f7-afc6-182974469ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbad498-68af-4cb8-b0ae-5e2e054b069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8b062d-5931-424c-8699-5e500b59a821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f662549c-a943-4909-804e-56df2b963944",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25225a69-85e6-4f7c-aad5-d5f2c4a12967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368ca0ad-a3b6-4ea9-8102-a4cd569be0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221e1f33-6be2-4823-a4b6-77421fa4871a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9ede8f-d7b3-4178-a88c-c463e2c0e75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b550b11-0b2f-4a1d-bcd4-f7c86533dec2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9862b0df-9d2d-4302-8c76-5e97cee8bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67020b4e-5923-4277-9b61-6c10988bb60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf004d8-df53-43f7-a8f5-4b84da937b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78ee709-d697-467d-b81f-fb15dbdd4d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acfe7ac-9190-4ac1-a1b3-b0374ce0afbd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec96b5d-d4cb-4118-8c6d-0f466e770665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7497f7b-8d51-4e3c-9399-9e910c5f49f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7835234-a4bd-4ee4-802d-2bdfe0335b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6bf327-7918-4baa-bcb8-be33fb99d76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2095dee1-cb26-4f29-a07e-4415398c0fd2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b404c988-c798-4889-8600-9742f50f7514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5176d6-15f0-4308-aff6-e25690d2264f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584b7c9f-7a1d-4ec8-8294-f92756053c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2467cf13-1cee-455f-8829-11687b328b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7feb1dd6-dd9d-46fc-a164-b56690cd5ebf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6475960c-570d-44d3-9375-a8087af073a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a457b48-8ef4-495f-8b79-46a7c90be9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a572c7-afbb-4fd2-92d7-8933e0c55a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1af8975-f141-4437-8600-42a1649720ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d8dcc7-0d6a-4603-a748-ba43bfa3f0dd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc9b919-78ee-4a64-857d-6652742dca3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809475dd-632c-4453-a1db-f70557ed026f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c566fb0-05a8-4813-88b9-64fa0215deb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd943be-b929-46e0-a011-57c0b95d04c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeed0e85-e6c5-4c67-8ac9-069fc2be87db",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c79e1d-375e-461d-9d62-553dadf67acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39218e4-ec7c-41a9-a9a2-b2351c0e2bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b43336e-62a2-45fd-b3db-ec020ae61060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c11fe416-8179-41ed-a34f-5325d60d4d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc6d2c0-4123-4fef-a819-f65f74aee365",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787e96f6-21df-4dd8-8107-a0e4d9cd0def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b5e69c-1327-4a57-aa53-22971d9ea4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba011d3-6798-4cd0-8cea-4e8567372339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4e7749-373b-49f0-9bad-af686d81e2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0341763-c34c-4aca-90f3-0834b2ddff54",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21509cdb-6f00-49bc-81ec-a0e8c1ec1b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8220e545-47b5-4e42-8e53-99201ac84dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fdb98a-f544-4342-9048-aff12e5468bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7faa38-68aa-45e9-9960-21f6971f3d66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f0ab3966-062d-4853-9131-b02e3abed1d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0316a4dd-b0ca-4c06-9383-f1666c5dfa58",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62c7f79-a809-4e5c-8d5c-ec1b680c0f1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e2454486-4fac-4160-a45e-5aa9e017fb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077675c8-8777-4f61-bd44-bb9fa8e23507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c079daf5-2191-40ca-b310-9ccccc5a7dd8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea963e56-2301-4664-b766-f4cf28423f10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2a1288a-b360-4fe8-92dd-7011b198c8d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25336a7a-73ea-489b-aefa-ee6b00c54519",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b584acdd-0d13-44ca-8f6d-49fb67b33713"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03ed461b-b8a9-4442-8e79-1698370cb41e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9e1721b-ecbe-41e3-bf3c-87ca6ff37cf9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba154d82-fd34-455c-8610-c09b6f1c2894",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4eb219c3-028e-4237-af9d-def8395afe3e"
            }
          }
        ]
      },
      {
        "id": "e3ccb139-745f-41bc-a953-de76999c0816",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "48735f1a-332c-4d5d-b128-52ec60d64f77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7c206e6-9701-47a7-8fd1-b88112009385",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44d44f8c-aef4-49a9-b8f2-34b3ff6f9779",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d9d773-1d2b-40ea-9121-e067ecde59a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858a8199-4935-47eb-8469-65ac30d07ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d915d559-dcef-4eed-9f5b-9771a4ab70f1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42c7969-df9b-4f4f-9096-266b12ee88fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ed67b7-19fd-4843-8d9a-8a7fcc855177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c5dbe5-8fbb-4591-bf8f-0f14330a58d1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d797d291-85c9-48f6-8520-40e9b9f5120f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2876ae2-8f8c-4eb9-8d85-2533f822e018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cc056b-083b-4248-b0a0-24dbd55a315b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7295bbd9-6513-4c03-ac80-74cd2e8bc02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42500551-e261-466c-93d7-5c93c1abeff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35906f80-4ea8-4b89-9c14-2df7a20d6e6e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b77e9f7-4862-42cb-baae-a44a91fe20a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea759e7-aad6-417d-9a38-981b7b8d9d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7644fd-8eb4-429b-857e-3d5b488c867b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df25fd97-808b-48c9-9389-85367f6511e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d0ec16-092d-4a5b-8ddd-4a5f8d54f2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8717059d-b845-4662-b85a-222ff9363efb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3ef04c-e3f5-4f57-95fc-2693822603d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a4c27a-3954-4c2a-ba02-50de2021e097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42667db5-10a5-4597-b3f3-dddc00216ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc6f0a4-3b03-4809-a3ae-00b079bac194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb0e948-8167-4df2-ac9f-cbfba88eb313",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800e71e2-3887-400c-ac46-4fe943ecb0bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c6414a-b678-4c06-b8ef-5815288bec93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4402667b-a8d7-45f1-8e5b-c01c890ea4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3379e53-2fda-42b0-84d3-59ef1fd1ecfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4dac68-63a2-4e0b-8ce8-815d3ffe3548",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dc9d21-d600-4e58-8942-92bccc76219c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63bf49e7-4fd5-4fb0-b973-81a8e16bc3ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c65c304-efb9-4ae4-8dfc-1bcb3e79585c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fdbd1c-315c-43c3-bfaf-8fb78488e45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41d276d-f5d3-4c19-a357-db4c0e672621",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0dfcc8-b171-4f57-b2ae-09ffa624df40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e54ea2-f6be-4572-97b7-b002833339ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463cc534-713d-4610-a693-20e218a0aa3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1b5eee-522e-4d16-b6cb-1c021f102a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065c2d0b-01ce-4413-ac87-f33dfebf20b7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed6addf-334e-4ff4-84ee-3eb0575ba8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf6e752-bed0-4db6-8c1a-97fcd940727f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282b73ea-a6b1-4e10-bc02-f5f9e2b6bd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b5b795-a917-4402-a843-7d9d9be31b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc947fb-c7f5-4c24-939e-2ba603dfe280",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6993e402-709f-48ac-a9ce-1df26bd1b7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1bc896-1381-4f6c-bcd7-fc8d38cc0dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a98fef-14c9-4f1f-86cd-6d7a63659b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89748da-75cc-4ad6-9190-a4c2c5e65593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2831391c-df66-4cd5-b20c-13a2b305cdd0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27114207-c8c1-4605-bc80-17af0982cb4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14f99fa4-df7c-48c5-97ff-63804376b05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e77735-eeff-462c-9596-a7e3d5c5f8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d35af5-fb30-476e-9266-0b2880231697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e855561a-3fca-4ac7-9837-f8612e329e01",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbc8c39-4150-408e-a66a-d4c9724618e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0947cbdc-64a0-4b72-b134-689d6ca61978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a948fb-f473-4d6e-ba7c-4d9b9f3a3779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cfbac0-1654-4b4b-98e5-dd9aae1fe949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc860f0-146e-4ee8-8fa3-99e88793940f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c288954-dd34-4392-a857-496da0527125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede2e03b-5831-4b6a-94da-9772e8eb0a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866cefd6-39f7-4b56-82bb-531547b1829b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47928a5f-2341-4061-bd7e-a0d3e7b7756b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae103da5-a208-46d4-ac44-053389012ba7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7dc3db-edf8-4464-8b5a-e16ca188b788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87986698-49fa-4d7d-8fc1-dfbf038eda83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29783a9a-bfdd-4336-9af6-ff5cb70643b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8680c346-9704-4b40-a4ae-d172f6c8ba14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e534234-0837-463d-a745-b8305d4c9d5f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358a1b2a-ea2f-4d37-b0d9-e84c52b85ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fa67ea-e75e-4aec-aa16-2a56aca82ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14461660-b472-4063-8630-72ec3308c503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9156152-1b3d-4f23-a52c-f73cdd9d35a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60706d6-6124-4861-a093-fdd7d263b6e1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d565a91b-6061-41cc-85d8-80c65c3c2621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f82c20-3504-4b1c-829f-ed8eb0d4172c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b608394d-cc9d-4b65-8a79-55964737c410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6867499-ebe7-46b8-82a8-e58871e7ae90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8df8ad-70ed-4eea-a94d-1eaecf256364",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d786cb-a4e3-45b4-97a9-7dc04ed50e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6912e807-c373-47ce-b46b-d7b20e31e49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e8a093-ef5b-4d82-988b-8c23ce2713e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1606f172-15f0-47b3-8e68-e8b6728e7aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc95627-4751-4404-b117-60774eb16ab2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1949c2f-5a98-49cc-a206-509143fe1188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c08370-5cec-4ac8-b29b-4f7c76990f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7348fd-0794-415e-99dc-a85dd989ceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0e954c-8b68-40d8-8e24-dd323b7f9598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff74c8a-33fa-49c3-9615-d99715aaf844",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165bd528-a439-4563-a1b4-dc08f6e7eb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b83be9-d02e-4544-b03c-25a4fe24f6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49178d19-ec08-458f-93d1-fe2205006f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70a64ba-c2a3-4c56-81c3-4a2cec5b7b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0ad96e-12ea-4057-a0a3-771d4129f4a9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e60087-c4df-41a1-8acd-73dfcafd4460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3760a8d-1116-40f6-b435-9763e6852d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1bbaaa-837b-4562-aab3-ea402a20d9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2e44c1-4697-4589-a2fe-eb6f2423138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3957da21-749c-4133-85de-433df9636a0a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ed2ddd-8aa1-43d8-bdcc-4acb8b3fc6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbfeb9c-a816-436d-9e7f-e5228efbf989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84caf4a-c5f3-44bd-b2db-22a05d26da7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86f7542-c18f-4aeb-89a5-fa6569e61fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec2e864-48a1-49d2-b61a-d6ad56657666",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4228bd42-5ad2-4273-81ea-4ddd79bf8523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6852c13e-99c1-4f72-80b2-516d4bff7321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd99fbc-0f73-470c-acef-2f9586ffdeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77a2751-c131-41e4-826c-8ff6639a815b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4111e2-119a-4d29-90d9-0bc3a1d432f5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7a653b-50a3-42d2-acc9-429402476638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c818f631-9497-4247-9c7a-4014201b49ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e18b05-37f2-4682-8594-8fc8fc6bcb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e181d24-fd3e-4a6b-a332-1559977d0617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e854f9d4-9b38-49f8-a679-f98df63942de",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa5e91c-87ab-4a0c-9138-f20b6c82e8ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b75068c-c604-438e-962d-373ad0b0a4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2fe65b-b08a-4c01-9e96-b379a5e7e114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87332a04-8d18-4242-a66f-a7f4adf629f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7af50bb-76f8-4cf5-98ba-682d10352f3c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567d0011-cf0a-47a7-a2db-b1db280a2d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705ed3bb-2139-4817-9ef1-3d547fa597af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdd8acb-5a96-4937-944e-2ba5affa1370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dce2050-31da-4e5e-a450-20f8a675b547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9915863-dfdf-4d2f-83a8-9f01d72da24e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34070cc2-7bcf-485b-b924-165a9dedfc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe28f8a-00a2-49e5-8830-ffcb94ba89ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0abf335-a440-407e-9caf-00a606a0b607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06c2dff-be45-42a6-b461-2070bed2881c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1622d6-cab0-46e9-90ef-fa68cfda96ac",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c801132-319b-4765-a307-737373fcea76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab7f964-8cb4-4a79-a6e1-4ec57657f601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb6c354-8326-4f16-8d5f-1d80db3259db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd33c5f6-bcb2-4522-959b-bc1fd231506a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06123ed6-5249-4099-88ae-5993c3a82b10",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cc0c93-b405-48e6-84e2-5845d13eb046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e591e98-a097-4d97-98c1-4b481f6e2ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f206b5c8-97ed-41c7-822f-c3d37c3e2bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aca321d-26ad-4b74-bd8c-51b545f5273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74369b8-015f-4b35-b74e-b08ad811c8a7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4942af0-0fd9-449a-86bd-76fcd17d3bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b78ce8-070c-48a0-acc0-494fa3ffbc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3570964-fe61-47cc-b8d6-75d9245c63df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a4aa3c-d1f7-47c2-a471-2b357e81df78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bbabdd-c6c2-49f0-939b-58b758e266eb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b978b71f-3fdb-4fe7-9283-e22d55464c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e002885e-17eb-4fa5-8480-562263662550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44992ad2-ebd5-47df-8ab2-a1f18081b275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e1ba37-5818-435f-935c-ab63dff0440f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f80b0f-295d-42ad-a210-e9c2faa3b8da",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e008cc2-9f2e-4a5e-ae6c-4396238efc4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a3b16c-54f3-4527-87f8-cafc09da6182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb40620b-640a-4c42-9945-1f3da61c9ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09215fc0-6224-459f-aaba-9b730e1c1b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44b92ef-0dea-45ff-b248-cee8a404dd7a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39041205-0983-4f95-b25e-c0b40fe47de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eedfb91-6391-4942-9973-b2a363cbe369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8763937d-59dd-4cd0-b424-faea0a3917c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f091b3-4f59-4bba-b9e3-414289e9aa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f083c4-7865-400f-934a-fd2e2b31f8a9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eeeff8-387c-4a33-93fb-45bdae01f130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de3d699-adfd-4284-b269-76f4726da80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdb7e9c-d46c-4d0a-a560-031d58d78180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1393e134-f98e-4cab-83d9-762eed2d7b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e7c396-0cc5-4587-8b36-ce48eeaa7926",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e49f477-0746-4d74-a1e5-0eaf0159f986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aac0832-51cc-46dc-b154-578fa71f7eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4753e417-df91-403e-91f3-4b4d0288ffbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8a7170-d2a1-4884-91e9-72513ef6dd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39520a04-7f93-4f39-9e0a-d4869f5d8eef",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8add67-4a2e-4216-8515-438a47ebfacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d53f6c-f613-451e-a4fe-70dd7558f7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed89f9b-eee3-4bd5-8cde-abc9a6178155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0324286-e339-401d-8c0e-68271a8e6d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7de815-ac60-4e29-b5bc-013c4a37aa6f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcda1278-e75b-4bb7-8353-efa40bf6514b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defead8e-3aa3-4b71-bb94-62adac814507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1fdbb3-a7b6-4845-adb6-88fb65d48221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23468dd4-f6cb-4cd4-aed7-16fe16086234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7386cd-170b-4e2b-ab52-680b31d5dc9b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e4c9ae-6d73-40a9-8837-2e55952ceb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e6cd33-057c-4162-a462-7112cf2ca560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7181bb-3715-413c-b37d-518cd03c931a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0314c25b-0a6f-4e53-a2db-8f5bc7f97df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750788a9-954f-4816-b0e6-4f560d2354d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1418ebc-3f12-4740-9ce0-5c619d83ab9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d90eadc-a96a-428e-abdc-229e37715bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8567f2bd-6455-4b8a-a32e-f40a2933f86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f66518-7e6d-4c28-9c9d-3cae673545a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48384535-a979-48bc-b27f-c064f6d67b3b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86612a3-ec31-46cc-bad2-6f8ae58164a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d74e7ef-40cc-480a-9ec6-010d48ac45f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bec6c70-3a16-4274-b538-1360d1ff2a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e0baea-c961-4014-8c6f-9074ddd65a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece4bcc9-7c07-4c96-8068-c3d6d929a174",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105c0daa-e5af-4767-9cc7-39437df1ac95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3334297-9476-493e-9130-8685f86ee2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9efe51-6426-4905-92a9-b60adb0995c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553d5c71-d80a-482d-9a0b-23da7586bae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b1d0f1-42ae-49d5-8608-f21e06438a42",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cb802f-73bf-45c3-a8d6-276e1ec8ff1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2ac2fc-3d49-43a5-975b-55a7bca6dda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a630fea7-20ba-4d51-bc2a-99522c6520ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e054cbdc-80ed-4a5a-8ec5-4906f0c66f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62267fc7-8167-484a-aeaa-82955c2a1954",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2abae99-ee6c-4189-a9a1-453b97f1d607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef06550-4894-42e5-b2bd-621b53ed24f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01f47f3-a034-4ccd-aedd-3ef2aa13b6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa9751b-7bed-441b-9546-739ba7afbf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5da9be-34ef-428d-93b8-f66a153db3a4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5db0584-86c0-4bf1-b853-a3357aeecb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565ce360-ddfb-4b8f-ba6f-f05a51ee1704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02173d21-25d2-450a-b3c7-d0bacba308de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166ac54d-ad05-4e9d-aee6-d8c9698af68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcc100c-0726-42ea-adf6-df8b52441deb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e22551-51a0-45ee-94d7-54ac509a910f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea41626-baef-4db9-8be2-61bc6c7dbfeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b4dd82-35c0-458f-bfba-b9aaa2f99c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6f19b2-36cb-404f-8f14-c87afc15fe3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2af5bc4-f66c-4094-aba4-711f4015886f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cacd4f9-a671-4656-8d9d-e4a1d2c433af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50da880b-cdb4-4878-9952-a442992cc7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8837285-95c0-4be4-a436-229af7942a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0d1532-0201-4af0-bd22-e272dba808d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6a1db0-a61c-4a21-ab49-55a4c18c6bfc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aa699e-2948-4709-9ee4-56101e39e467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5eac2b-ae2d-4d53-8f53-b3f91b08797e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4548a8f2-970e-4ebe-a8cb-d9e36af6f9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7032084b-33bf-42ef-862b-ce70d5365f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fa1e3b-95d2-4d68-9a6a-9c940bc07b8d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a1dae0-3ff8-41dd-b715-515b214d942f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726e0223-41d8-4daa-a36b-5aeb4da17693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d76fa8-8b51-4b75-ba9b-1b3ddfc395d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f055ca9-c3ea-4a4b-b17a-1a67896300ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c6b245-d2a6-43c3-82ef-d307a8795623",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3881df84-e3d6-4e80-a969-7412a175f8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb8811f-6038-44f3-a9be-eacd2e90d531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba6f301-17fb-42a0-b801-7ae97d3fd738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec02e8d5-3b50-4251-83ba-42c9a419467b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e18159-2229-4e87-875d-f09243e8b6cd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ce7eec-da15-4c90-b43c-ac909d7a01c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956ff919-dc1d-4a3a-83ef-51fd6869250a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fb3d94-a994-47a2-8f5c-c7905bb5d5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022e78e4-35a5-43b5-8106-f47f968657e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d58fbc-7e7a-46e6-b2ac-ae4d923b567e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c241175-4734-4ebf-8cf7-ac70d3e3c5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c387b7-f673-4f95-a4e6-d4c11463c843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcedc68-4306-40e6-ac8b-f16c7b2aaad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520e2fe8-2db6-4cfe-b82a-f406b5b6446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94554c52-935d-4cf0-bb30-871f61ff086b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0883911-e9b8-4bd0-8adb-831b5c64f012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acf7dd3-2ad5-44ac-9df8-71c6634761d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3113206a-600c-4bf0-9189-3fb7ac625f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f319ac5a-2b0b-403f-bbbd-278fdf7d3e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcc0e7b-5032-435d-b0e0-a801f64c5981",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcf9123-9bc6-4593-8b50-c1b54772bd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6deadd-c4e3-43dc-adf1-0eafa975e67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26428e2-af18-4386-9b6a-d09f67e53fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455cbde5-0637-478f-ac8b-de3d8af4a880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aab29ac-3b2b-4519-bf6c-7ce5f4433593",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d77351-b865-492a-8a7f-80a0dcb4dc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea52d05-bf77-4dd1-beb8-86ce5e9ce05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b385a6a7-dcd5-4fd8-81e6-38710678434b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc4536e-7b9d-4e11-b194-69376f73cb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db855022-b4ca-477e-b19f-5a9afa330d3e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54663fe0-ee2f-40f0-b0c7-c9ed4471c59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9c365b-23f6-47d2-bf16-e2a02627fd8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47134259-025c-4e69-a234-5a2e8d7c3daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc0ac75-15a9-49e2-8ca6-565d6fc33f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d87ee9a-5445-494d-8533-21c26f1359d5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c704e3-d1d7-497b-a781-56eab7ed51a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e07846c-721b-4c95-a86b-7d1109dfd365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46da3b09-05dc-492e-9105-cbd1350cc8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245e2339-9426-49af-8cf4-10f210b870ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9434f0e-20e2-4895-8f3d-4af166dd1067",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eca7d6-e13d-455a-ab1a-90f6fb2923f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f233bbf-cc03-4ce0-ad71-8ae0ff14e26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64bd9f7-3c8b-4fc9-89fa-f500a0437767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44767ac7-f32c-4a7b-8118-7684a18ee9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2eafd2-5be2-483d-a05a-c9a99e04d87b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bcc055-7a65-414a-82df-512115fb2967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51a5418-fa4a-457a-9337-20c19b63f4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3204fb95-4501-40e6-a225-1e548165814e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab92801-2e23-4db9-b36c-a058b583b2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa3d3e5-55f8-4f93-8237-ae937e58026c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb020097-485a-417b-b845-780cea7fb9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b67be4-2ac5-4fdf-8cf3-bffa811c2ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de99ad7c-7be2-4e68-8075-56ebf5ebdf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24311592-45a7-44c8-b0eb-ac6c13dd2cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9276bb08-95f8-4afe-b238-bcbb760ed50d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ddf836-b5aa-41bd-a6f1-555152d21dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d8a3fa-8b5d-41d8-998c-20c179bb4f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cff9ab-3370-4e8b-b8c0-4ecdf9cb7801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931c68e4-5849-4266-a7f3-2684203ab497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8844b0fb-5a3a-40d5-bad7-134e4935253a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c92ec8e-2416-40d2-bb03-3e304feebe1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec152c77-1f83-4375-8ddc-8794c030a470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b2133a-7796-4b58-84c0-41d606d6e960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce62f89-c4f6-4ea8-b0e0-89bead971c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cbe691-4a31-42b3-8f16-a8c7fbc25b73",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a6dbba-3970-42e0-8eed-c4ab23b1e6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3544530-4c4e-4943-b7b0-4e05f994ed30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b4bcde-86c4-4705-bfc3-5f0627e95e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20addc1-80e2-43cb-983b-21743b2370e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d1756d-fd26-4244-9479-dc4184970da2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06acfc38-165c-43ad-99ac-f539047986b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "663a3158-55ee-4762-afe3-d2ab2203a4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a15598c-3643-4946-aa52-79c0dcc0a934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fae08a-ba92-45d8-a68b-aa3df512fb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16f20e3-36bd-44c0-9eff-de9477e82624",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1785f3e9-d17c-45f0-9240-5545ebe8a5f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47b7ec6-b8d6-42e0-88d1-53278ed0a802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860cd9df-ad51-47e4-a70a-428af3e082fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4578f465-4c91-4dc6-99a7-48deca2cbbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829691b3-72d9-4a0f-a7bd-f117025fdfb9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19ef506-e97c-42b5-9202-4009ee011e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31dd18c0-1606-4733-aa86-838b6619bd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49bcbe4-6248-4cad-a3d2-252217f549bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3dbf1c-6f37-4308-bad8-7fc9f547658a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104cb650-a745-424e-b1b7-24cdb47d20f3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27359d05-e82b-48dd-a478-4d6e7f6cbc40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fadebc-12a1-473f-ad1c-6f5bd74f9fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b24a3b-18a1-4bb1-bec9-a9ffc574b749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5d6448-018a-415b-adf8-bef81d60b77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7014d35b-a052-4f6e-84bb-d676bf22eb2d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32132cc9-ba76-46df-802d-853e5da02856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ba3cf3-729f-4a05-ab4f-ae8b5b950afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a3b029-2e10-4ede-9f7f-1548fa3552ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dbe506-4775-4754-ae15-78d117c18919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350e7af9-20ad-4b06-9204-c0bbc758f498",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c667821a-019d-4e53-8730-c5fa80fb2a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5946347d-4b23-4818-be1d-f06ef8497a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f4b650-078d-4dd7-843d-e08bb624d552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdb40e7-fbc5-4f19-beb8-8102c70f2e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6880510-f668-40c4-8e7d-af11c1bcb035",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae22239-d27d-4188-8b60-a4fc1630d362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b32cb9b-8c0a-4db7-a193-7ead00c09c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ef5bbe-1293-4fe0-9c6d-09772dc83b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83361fd-2dac-4fa5-b0fd-8a8dc223bf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfc4453-0c9d-4d07-8158-662252354e2b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a219a9-953e-4d1b-8eca-8d4123645613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d37290-75f5-428d-baa3-c7e60c8e9128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be2f1c0-5f6d-4f0b-a9aa-4dfb3f248b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535334bb-c073-4023-9c35-da36e8a82073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34037d9-51b0-4a85-a523-4d903e64b507",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff08fb7d-64ce-4dd4-aa06-640d49f44b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d33fd01-50ee-41d7-8d3e-97e7bc56e279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece869da-bb91-4d0c-b5b7-c35e0cb4705c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d594abf-70c3-461d-8a9e-2b05cfccaa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f402ff9-9890-4439-abb1-95cf350fcf10",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032aabf4-9e03-4f92-9169-e21b9f574004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27be73db-71fb-4981-b1f8-15bc63abfc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee3bf8b-3f55-4f8a-b994-febffab24fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfe6289-6ed0-47e9-ba9e-6a833846c934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e2d62b-484a-4dda-9b2d-49547397cd6c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f535b5-6008-49fd-a636-70039a2859c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c955d37c-871d-4cb4-9551-8360d693f53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b909a21-9a73-43f1-b140-26484f205e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb78e7c-184a-42ce-9482-655c101a7ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1502b1b8-15df-4b50-8711-947d7f304f22",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aaac47-1b73-4867-a480-6b496bcefd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1901d70d-8b8d-4b12-a0e4-f820cb1b4571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fcfbd2-1fba-471d-a7fd-78deb5334381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb51068-9cfd-44b1-bd51-581a99c7b57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb23bda2-43ab-4a18-9a8d-c7725643fe0e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baba7cf-d75c-4d4d-a3fe-d92bf42e91a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dadca243-7c74-46ba-b2f8-de8e30bf31b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0230f341-670e-418b-8a15-c64d421038d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703b5f31-0a87-4531-8c01-546b679c4143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2562137-eac2-4e3b-9954-0b9503480292",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e1970d-a461-415f-9083-8074661928ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ab468d-2931-4b0d-9452-df5b1f8015d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a205e91d-8560-4295-83da-e35748a5f600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4235d5-61da-4206-a5c0-cf75d8db2ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d5656f-ce1b-4115-bb31-3660500eefc5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a10864f-22fa-4755-b24d-2d17df025178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e34b35d-2688-458b-b709-aa0c96d1e2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83055191-fec6-494e-a2ec-d49ce8b92326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06910d2b-c7dc-4e86-a214-aeeb0094beeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b632b023-5bdd-4dab-bd31-dbe5628166fe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13185d81-c6f1-4354-983e-6d2e2cfa38aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6d0812-b038-44da-84c0-be2e0464d783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110707b9-bd93-422b-b154-2c64523fb859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e926eb-9fe6-4a2c-bc0e-66d63fd13876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13449f22-9550-43b0-9be3-a69ccbe9a811",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5976f333-ff01-47c3-95cc-f7643a4e336b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f849836a-f946-4b1a-8a50-3379256dded5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f2521a-bd1a-4a7f-ad19-a9538bdd158d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9279656f-e1dd-4c84-b82d-12d95507c53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfe72c2-d61c-4e5e-a46f-2521e74de8ed",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d98ff26-8130-4695-92c5-0907dd9cf199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88be38e4-7e95-408e-8e97-e290edbcb960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dd2f07-3ef3-47df-bd80-a329665add4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0ad9e9-c3b9-4ffc-a548-e3ad34b1012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf791b6c-ce17-4aa3-a5d7-c9754260174c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c9b0ec-7f24-4c3f-b3b1-ab1d468cf8d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d1eaeb-0863-424c-a86f-600bad829e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b3b996-b5e6-4e69-9664-929ba5a83f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be534de-e102-4d85-acd4-2f26f02a90a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a21032-e1f5-4b0f-9f3d-d1e425521347",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc4e12-497b-4135-9d51-188439db5478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae4d47a-a709-4515-8cd1-02c75b58466c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4bc144-06f8-40a7-a6a7-50fcb68b3d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e411d43f-0b03-4cbc-82fa-4869cfaac147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621b2765-cfae-4b73-9116-1a2d4e438d01",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e6bac4-fc37-44ef-8a73-b4a8f0dd8821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1694e992-4000-4a94-a4f6-2f1a17f7de50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aeba81-897c-4406-9de7-4959f812afc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50afcd51-01e8-4819-b250-61fda1045f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6e3f6e-8f80-4e44-8e11-36ac3fb8ef20",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d84d1ef-cc26-4281-a4ad-8f41b4fe515c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f12a06-80d9-452b-bc90-9092afce9e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fd5605-13da-4e38-a962-3611bd7d4c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18367480-a6ca-40fc-9091-0082cf6510cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473d5357-f447-4382-9f92-8a7b1a01da13",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56083d52-a6f7-4569-9db3-3f4d729a9ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b88ebb-c1c2-4866-8e60-f44dac54e222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3fd609-acc2-42d6-85aa-b61a4076540c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbe8a4d-c97a-4d7f-9e19-01262ecdcb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c00aa26-c785-4d51-8b7a-9ca2bf0fb788",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9a9a18-0ffe-4f5b-8ff0-e47abca39933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b6bca2-aeb5-4c53-afb5-2cd80d7eaae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268ad7de-7549-47ba-bd82-10ae671e0208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f38a221-653a-463b-a427-e1b7fbf94504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b10640-a685-4504-a3cb-ca03fa20ea87",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c14a47-dbfe-4477-863c-a2d229a92d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e562ddfe-4265-480c-9bed-72991319d206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54863e91-d121-44e8-82e7-684fbbd5b52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e994d9a5-f574-4d19-93e1-e0c95a101f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828b37e3-11f7-4cd4-b581-b78b178a255d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29546ee2-ecb5-46bc-ae3b-0a282b0320f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b70ae27-8fd6-4dac-a333-38128109d45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab8ca87-cfe5-4347-8265-b98c5df91453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a92434-4b01-4ced-8624-af4ac5e5f163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41e3ceb-ea61-4d97-b3bb-e84ec349b6c7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92d7158-a2ac-431b-83e5-3ea16a8b0b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada10763-a53a-4f19-8f38-0dd367a58204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9a7867-39c4-4545-9661-71879cbe32bd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b320ee32-158c-43f8-b359-40affa76ca39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0066a045-0e4d-48b5-87f4-f0deedddf0dd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36174391-abe2-484b-a20c-1bc914b9082c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d534a1-5974-4dc2-bfed-80d1a3a448ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d1eb7-4e53-449a-980c-7d9092e731dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b73cc5-15a4-4c64-9aae-596672bd442e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f42d2f7-de7f-4ce0-beba-8343cb1af1cf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d5c66b-5e7c-4fc8-8876-d0958c771ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eee66fb-c1a4-43e7-ae47-85dd5a51def5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ddf827-c947-4744-b97c-9f8088e3ccee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54224eb4-4f12-4ce4-9bc5-bf8ddddf4944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876f73d3-1de5-4429-9d00-9672c56d9365",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87768de-32bb-4d11-9b4e-5a6304ac9f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3472698-62b5-4e08-b113-ee45f067a4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a675794b-2df2-4dee-b804-b21768d1b9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9d6a95-6fcf-4eba-b426-30353029f93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d91b943-9ad4-4cc0-8e5a-58216287de17",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe2cf78-b579-4200-8a1b-76d6e79b1c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213bbd11-015e-4450-8093-792bc0d5aecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a159ad32-6fcb-4a6a-992d-dc05a17c2edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bee915-b91d-4fea-9cd7-7e90b1af19c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc9c5ab-64fb-47c5-b0fa-63ad7dde6010",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979b258b-2dae-4353-9a0f-1405ad94ca25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52dbcf95-9b5d-4599-97d8-e32da4cdc7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3530ff-5540-4c8d-9608-0e1849efc88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09073ed7-4a7a-4212-a5c3-e771c9ffa9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a18a51f-f2e7-4bd1-bcb2-1ab48f688d2f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0631a1-5423-49ec-9724-c7eb1560fbe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6d890a-3fae-4510-b61a-f51b395fe8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36ea9b1-8018-460b-ad19-5b336b1583fa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2117ef6f-a02f-4ad3-a112-b906b33cdc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ba782c-1bc7-426b-b975-106a01942c6b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aaf524-6d3d-44a6-896b-1b568fb5e463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d21610-3cc0-47f3-8e6e-a977de553412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884be98b-75e6-44dd-b3cb-e7a3094167f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdb0320-db58-464f-8673-580f533b4c32"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e121087f-5b1b-4fc2-ad28-98f5a335299a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "072a5cf4-9a12-4154-a91b-1bf3d8f2f4c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e95022d-22bc-4538-9037-fa2503505409",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6729b05-aecf-4be5-9172-ad1eba33707f"
                    }
                  }
                ]
              },
              {
                "id": "d92e74d9-555b-4940-abd9-2a3e37e2dcca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25e9944b-4a97-421c-a153-10a83e03f226",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f815db-3763-4908-bc38-1ef34513dbc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1be7d16d-cdec-45c6-99ee-f78394d98101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde70a0a-a0e1-42e3-841e-0b6fbdfc931b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2eedbc95-033b-4088-9c5c-4d78df4e8a86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18fda9ce-c135-405d-855b-39ceb9e9188e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08228030-16de-4815-a9a7-072d7b871f07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b9d1292-816f-4ce4-916e-b2390c053ef1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98631140-8b56-48a0-a3c5-7ac3c9ab0b4b"
                    }
                  }
                ]
              },
              {
                "id": "ccaf70d1-e4fd-4924-81ca-d28a77da60cf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a35c313e-3716-4598-ae52-5ce2373b1f5b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5189e17-aa9f-462e-96d3-ad914e90c135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e275e4c8-b5cf-470b-b227-4034fd82cae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06ceadb-0b81-4f38-a6a0-2de594d75fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63938a1-8ef3-4bd8-bbf0-2cea2f89e39f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ddea82e-de60-494e-8853-6aff035b5ffd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df1f26f9-7a8e-46d0-9bb6-30c9d90dce97",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16c6d4f6-1927-4fa0-8cbb-05d3af26d40a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c38c9ce-081c-4e5d-880c-ebb6c53813d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45dbbe6e-594b-471a-b1f9-5c9c67fc5eaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5bd2bb6-ba8c-4c9c-a609-4d0bf3fbd629"
                    }
                  }
                ]
              },
              {
                "id": "f1aabc10-1b8e-475c-b43c-9ccba6c9dc80",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc90b5a1-8339-4b79-9d31-1d39999eb70b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "58acec59-d48d-41df-a206-74003ea96c19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3750c97-b198-41a4-8d5e-03e04c51b094",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c85658c7-0cd8-4672-873c-51865e7e5232"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a626a18-32b6-4285-802f-31b3cb7c4299",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f06eec58-754a-4f42-90a5-d5f6fe06293a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be6ffa90-1485-4e34-a3fb-4e8863ac78fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38d33adf-babc-4d15-b1d2-a19c07be0fa2"
            }
          }
        ]
      },
      {
        "id": "8b72a80e-2891-43f2-b4f4-1c7e6fa9a8ba",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3b35e20f-4b5d-4743-9e10-a0b0472c6477",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79add1cd-5169-4f37-803b-71f8fa8fcfca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2288ecc-e71c-4e76-853e-24d552564f19",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1310e0a2-5128-4812-9bdc-446acfb2b86a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c95e78fa-9003-409b-8275-d0bf8ac286c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598efa85-ad8a-4fa7-b56a-d59386cf17f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2aa4e82-b7d9-456a-ae6d-a8da40806387"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea00ad9e-7900-4566-a78b-5f0a01ca6f59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a54efc3-7e76-4587-8ee6-070d957bead2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37b635b2-c9d5-404f-a654-a8344739c11f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "187efd6f-dd58-4e30-aae7-33d42f94d629"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4cff130-d5e2-498b-8749-7b5d19e68636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5ddc507b-b726-4ef0-895e-e088c1c53ae0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09746ea4-97a1-4425-a98f-31c877ca0f4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e6b4ca2-31b3-4748-845d-13a2fcf9e1f7"
            }
          }
        ]
      },
      {
        "id": "a408dc2c-530d-4dbe-a145-c5d7fc4ac993",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "af9fb547-83a9-4c40-b5b2-aa062e6dc995",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc1a4295-6084-4f0e-8ed9-5ede74b4a982",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ddd7728-ee32-4dda-85a4-aea627fe0424",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b186ac68-a393-48b0-9dda-a79094628d14",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d2b63ff-186a-4600-b47a-5c740065a007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1507e37-739f-4b30-99cb-8cc605249cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a11485aa-ae06-4c7f-8dc4-7372d495a5ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e4841e1-a4f5-42c1-b807-cc3f988a12d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "167e6814-5fbb-4497-a0d5-a44bea17288b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e373dd2b-f68d-432e-8845-aab4dd8b5f5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a9d5dea-e6d2-4c58-bd1a-b1c4985c6906"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a683945b-04d6-48fe-9e62-e0a549b70757",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7fbeec3-fd45-47b9-b3d2-81d01c70c3ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f5324cc-299c-4692-b3e7-83f9cd6f29d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f890b0a-a944-4ff7-9d0b-e64f175dc9b4"
            }
          }
        ]
      },
      {
        "id": "6768ee5f-5ad1-40e4-a0df-d6e19f36f7da",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bc0ad015-902d-4d23-8d24-452807ed824a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46d24297-74dd-4038-b77b-4ef3ae5a1e97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "525669c6-3923-44df-ad9e-8d2f9304c86b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249541a4-384c-45ea-ab7e-3b27c09ca266",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d3c5a12-1d4b-4d86-9950-c6ae66b59d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4861aeaf-e759-4e53-8829-9ae54c5d5005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a8c1aa0-497d-400a-892a-55221b02b8ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56fc7fde-de13-430e-b34e-fcb8ab7007e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3864a1de-7dc1-4afe-9967-2073f1fc40e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d19eb780-878d-4821-88b4-5570531a1ba0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d288735-0b46-477b-a4cb-31c009726617"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "335e9e60-60ae-4175-a0fb-b95cc38678eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "750af09b-5b1a-47d2-a6d6-94e24c11a1e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4904d817-8d42-405a-906a-5d160d63878e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9dc546cf-a87e-4066-9271-41c285c77153"
            }
          }
        ]
      },
      {
        "id": "6fa298ef-4480-4f61-90d9-0d0d7cda1de5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f087760-1d3b-469b-b18d-49eddc9278c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "970c18d9-870a-4391-8a1d-d8f2cdacb0b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d3bb540b-f7bf-453f-9f7b-6d999ef1bc95",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "739a571d-b91f-448d-8e32-09acc040d663",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22f90ca8-c6cf-4fbc-b742-1f83a895d2b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.68650793650794,
      "responseMin": 6,
      "responseMax": 667,
      "responseSd": 45.82057112912427,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727138727758,
      "completed": 1727138753127
    },
    "executions": [
      {
        "id": "71dbec8f-d298-471a-afaf-dbd8696e80b3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01835f34-3409-44e1-97dc-d3ec74c99e71",
          "httpRequestId": "09cafbdb-83f6-4b80-88ac-387158472938"
        },
        "item": {
          "id": "71dbec8f-d298-471a-afaf-dbd8696e80b3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09bebf1b-6839-475c-a489-1161ff425fdc",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "5ef0df35-02f3-45c4-95e2-1912cd4dcc1a",
        "cursor": {
          "ref": "fbecd564-0c6d-4d99-bb30-7b55e63b769f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d87ad3c8-e884-4e4c-859e-2c5f4a20108c"
        },
        "item": {
          "id": "5ef0df35-02f3-45c4-95e2-1912cd4dcc1a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7a5f1599-5b45-493c-a88b-fba5939a158b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "37f6c481-1c45-4788-963a-cfde715d734a",
        "cursor": {
          "ref": "2628898d-653b-40c9-befd-2b5d11183069",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "26e2825b-50d5-4a63-a333-7be4f5393cd1"
        },
        "item": {
          "id": "37f6c481-1c45-4788-963a-cfde715d734a",
          "name": "did_json"
        },
        "response": {
          "id": "8a407712-01dc-4c62-96c5-1bafcdb97376",
          "status": "OK",
          "code": 200,
          "responseTime": 300,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1731b7fc-675c-4ff3-9dff-4fb7dd727260",
        "cursor": {
          "ref": "1a4279f3-1117-45ed-a62b-a3ff0d64f43d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9dc2f52-4396-4aff-af90-7e07dcede741"
        },
        "item": {
          "id": "1731b7fc-675c-4ff3-9dff-4fb7dd727260",
          "name": "did:invalid"
        },
        "response": {
          "id": "67732ada-2cf4-4232-8a87-781d9898ed9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1731b7fc-675c-4ff3-9dff-4fb7dd727260",
        "cursor": {
          "ref": "1a4279f3-1117-45ed-a62b-a3ff0d64f43d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9dc2f52-4396-4aff-af90-7e07dcede741"
        },
        "item": {
          "id": "1731b7fc-675c-4ff3-9dff-4fb7dd727260",
          "name": "did:invalid"
        },
        "response": {
          "id": "67732ada-2cf4-4232-8a87-781d9898ed9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1120ccd9-ea1e-4fad-85be-7a516c433f08",
        "cursor": {
          "ref": "523a2e09-3fca-4bf5-a865-9d141aee7968",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e6c2cc5c-fefe-493d-bb0e-561a471bf41d"
        },
        "item": {
          "id": "1120ccd9-ea1e-4fad-85be-7a516c433f08",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "600832ef-7b7b-48cc-bcb5-ece6517c9cae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 148,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d11052-66d6-4191-aeb9-75e64c8e7e8c",
        "cursor": {
          "ref": "c475b5b2-8926-45b6-b6e6-fa58efecb069",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c1a1b40c-698e-4a94-aa5a-175dc7e8ca30"
        },
        "item": {
          "id": "a2d11052-66d6-4191-aeb9-75e64c8e7e8c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7622e764-1fda-4721-9b75-24a1b590f5c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20bdfd1-0bc1-44a6-a381-f820230a97c2",
        "cursor": {
          "ref": "10c61c4d-0833-4c3c-b829-065def6c06ed",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dc3d5f3f-c138-44d1-b41b-5a6edf297cb0"
        },
        "item": {
          "id": "e20bdfd1-0bc1-44a6-a381-f820230a97c2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "98ee17a3-5333-48f2-b80c-62cbf539ec92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc22c1-0418-4738-a307-a27e6fbfc1e6",
        "cursor": {
          "ref": "94eb0dfc-c7ba-45cf-a910-247f212b5f65",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ac51ef7a-32a8-4643-8b4b-f07c0a08889d"
        },
        "item": {
          "id": "72bc22c1-0418-4738-a307-a27e6fbfc1e6",
          "name": "identifiers"
        },
        "response": {
          "id": "259b3774-133e-4210-9a26-1ecfc4b5e777",
          "status": "OK",
          "code": 200,
          "responseTime": 269,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f70e136-a561-4705-88fe-5999d0977d6b",
        "cursor": {
          "ref": "4590720f-1ec1-41f4-80f8-afc8953c8621",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1d4e3588-4b5f-45b9-af33-076e8e152d25"
        },
        "item": {
          "id": "1f70e136-a561-4705-88fe-5999d0977d6b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7119611d-c2d7-4184-8e46-0446921e8674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449c79b5-06de-44b6-9c0f-3af16c995955",
        "cursor": {
          "ref": "c04bab21-1669-4c12-90b1-609507ea8e96",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b86c6ee4-6f30-483d-a885-010c85ad3033"
        },
        "item": {
          "id": "449c79b5-06de-44b6-9c0f-3af16c995955",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c8df1cba-83d4-4997-9b16-eb668a78f715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3165fd8c-4488-4fa2-9a2e-162ad36f4ff8",
        "cursor": {
          "ref": "841a7ef4-c772-46bb-b489-103c276a6c4a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "25472e24-cad6-498d-a097-90ab59802055"
        },
        "item": {
          "id": "3165fd8c-4488-4fa2-9a2e-162ad36f4ff8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a9061eed-0246-47c9-a510-24a8b06ed426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b2b69c-b5d3-48ff-9360-eef0b1cec548",
        "cursor": {
          "ref": "15c60b72-96af-45e7-ac93-266b46d364ab",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ce1c8e66-cf7f-41bf-9dae-2394b1d94cf2"
        },
        "item": {
          "id": "d4b2b69c-b5d3-48ff-9360-eef0b1cec548",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "14babab0-1a5e-427b-acc0-a442190d0b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb18e34c-6dec-48c1-809d-c061680cc94e",
        "cursor": {
          "ref": "96a54d93-e2b9-49fe-9253-c20273b0f0a2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d0d8f40f-8eed-49cd-8e64-d409c1d12686"
        },
        "item": {
          "id": "fb18e34c-6dec-48c1-809d-c061680cc94e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "82b340b9-c183-42e2-8b14-3a4edac5abad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6185c1c1-ad17-4d1c-92e9-3c416100f443",
        "cursor": {
          "ref": "ed7df149-17e1-45e6-970a-986963fa985d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a740cd2f-3f15-43b8-973d-27b573674a69"
        },
        "item": {
          "id": "6185c1c1-ad17-4d1c-92e9-3c416100f443",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bf93f79a-754a-4142-91cf-cb1a36c06eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dad44fe-a4af-4e8c-b67e-fdd0896c51e1",
        "cursor": {
          "ref": "ab84410b-d7f6-4f1f-963e-0691fc218405",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2aff3d04-e14f-48ef-91c2-6022222a6471"
        },
        "item": {
          "id": "6dad44fe-a4af-4e8c-b67e-fdd0896c51e1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "88151ee5-bd80-4c22-b6c2-066f3ef02003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df93900-11f4-4fab-9064-b810308e95ec",
        "cursor": {
          "ref": "57cf649c-8559-4c76-bd9d-89a2f384c77e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f7171420-ab8c-4290-af4e-68e340856855"
        },
        "item": {
          "id": "5df93900-11f4-4fab-9064-b810308e95ec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0b9be2fe-036b-4788-bfe0-6b4ab1d218c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ff78f3-12ac-4f09-8dfb-48ae135f8bb9",
        "cursor": {
          "ref": "5087f2ac-343e-43e3-81cd-12b3f1e12e50",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e7ec267e-362a-49d9-bfd9-0c87710afde7"
        },
        "item": {
          "id": "20ff78f3-12ac-4f09-8dfb-48ae135f8bb9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "eb23c937-c5e6-4fdc-ae56-71f16670ecca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3000155-e9ae-444f-9eae-b7d9a525e2cd",
        "cursor": {
          "ref": "a337c0b7-5c88-4f4b-93c2-cd20a3f4a4a0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b5b46f73-90a4-43d5-96f5-5b70ffbf7941"
        },
        "item": {
          "id": "b3000155-e9ae-444f-9eae-b7d9a525e2cd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5a35cd5c-60ce-4c1e-926b-2c1298013358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03053cb-0f97-494a-9c39-46611aa7da9a",
        "cursor": {
          "ref": "0d57a04f-a8d8-41c7-bca5-0988622a85b6",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "93133d84-9736-4c76-96bd-5d06e7c0f0ad"
        },
        "item": {
          "id": "b03053cb-0f97-494a-9c39-46611aa7da9a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f0ad185f-7bd5-4a91-8e9d-6095e33633c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24a3a2b-5e38-425c-8cf9-b67849797da7",
        "cursor": {
          "ref": "0b61026e-c072-4c93-acdb-78f595392a52",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "07bd657f-1be0-4929-87f1-832b3e4d052f"
        },
        "item": {
          "id": "e24a3a2b-5e38-425c-8cf9-b67849797da7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "023c37f8-c473-4bd4-8249-7fd9926ca1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d846a5ba-ed13-4a36-9024-e279b5fbf10b",
        "cursor": {
          "ref": "26c88cfd-1af9-4fdf-b3e3-9194e4f91f43",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c49bb562-823d-4e57-b7c7-7fe3fc141841"
        },
        "item": {
          "id": "d846a5ba-ed13-4a36-9024-e279b5fbf10b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8e43396d-be3b-4842-a50d-be67a9a32db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0ed3b9-ea9a-466d-a6e5-cf60a71aa122",
        "cursor": {
          "ref": "95a58e70-285b-49ba-ab81-8d56be83b33a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "947d84dc-86a3-4e6a-ac02-0543686a0cd9"
        },
        "item": {
          "id": "5f0ed3b9-ea9a-466d-a6e5-cf60a71aa122",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d6b0ec38-7f9a-4ce1-a2e5-2fde41a20fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904d1aa3-87df-461a-867b-8d0b794d5e2f",
        "cursor": {
          "ref": "10ec2520-388b-4cce-9f3f-0396888d5aee",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ad707e51-cfd6-404f-bcdd-27f0452ae18a"
        },
        "item": {
          "id": "904d1aa3-87df-461a-867b-8d0b794d5e2f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cb7cb97c-7ab4-4f91-a411-3221f07dd0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b1f5aa-3457-4f14-aa31-1e2469dfbbe3",
        "cursor": {
          "ref": "dab93980-7f57-4712-9e9c-4a81c6afe558",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4d53c24a-86fa-4fa9-823a-65c6f9a9ab55"
        },
        "item": {
          "id": "02b1f5aa-3457-4f14-aa31-1e2469dfbbe3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f04c74af-e5aa-4d34-9e8d-c2c85447b79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f526eb-70ee-495d-af81-c38b9503e964",
        "cursor": {
          "ref": "40ccdfc8-eeac-494a-8bfb-a96b5c73c0ec",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "94953320-2571-4f7e-9245-c25e0602c809"
        },
        "item": {
          "id": "34f526eb-70ee-495d-af81-c38b9503e964",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e1bacf9a-d778-494a-8ff0-fbebad578d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682ba0a6-5e91-49b7-9f32-73f4d2a9d466",
        "cursor": {
          "ref": "19d5524f-a35a-4c82-b3f3-bd8cd943dd41",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cf97ecbb-764a-48ac-8fae-80d039f12dc7"
        },
        "item": {
          "id": "682ba0a6-5e91-49b7-9f32-73f4d2a9d466",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0e28a438-e25e-4adb-97d0-08ca33a2e77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1141f7e3-8b5d-4de2-ba78-a1b6f5fd4365",
        "cursor": {
          "ref": "552f1a99-9e4f-4c83-9289-b1297eb7cc62",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1bbc2375-c8a2-4b31-9a37-98714bd44018"
        },
        "item": {
          "id": "1141f7e3-8b5d-4de2-ba78-a1b6f5fd4365",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "579e7a0d-04c6-441b-b523-f97a0888038c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0d60dd-1d3f-453c-86b6-f26c272abdc3",
        "cursor": {
          "ref": "cfbf7ed3-3f79-47ab-8716-339faf455949",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8a0eea21-fd62-48b6-aed2-88b332f458c1"
        },
        "item": {
          "id": "2a0d60dd-1d3f-453c-86b6-f26c272abdc3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a4b4763-29ab-4d4a-83a9-1c05d2170d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9d1478-67ed-4ad1-a0c4-790fa4321539",
        "cursor": {
          "ref": "20f20590-2a81-4ad6-b431-88ed17d22355",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "913d45ab-2d44-47b7-a5a7-12004b3a0491"
        },
        "item": {
          "id": "1b9d1478-67ed-4ad1-a0c4-790fa4321539",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "34c6f094-8d81-4fa5-a6cb-dd85c91efc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01366b7f-efdb-40b4-8ddd-392c6a037b90",
        "cursor": {
          "ref": "68d67e81-895a-499d-8310-8edd4b3deffb",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "46010c67-757c-4932-a31a-fae9848a9371"
        },
        "item": {
          "id": "01366b7f-efdb-40b4-8ddd-392c6a037b90",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "491d9d2d-4ba5-4552-b054-2ac7a0a23a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf31592-6c72-43da-81a3-02c6c24a4fba",
        "cursor": {
          "ref": "e764eaec-9dad-4a86-b1df-33a6c25e4125",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "40b4a960-ec4c-4d6f-b4ef-d70efac070a0"
        },
        "item": {
          "id": "0bf31592-6c72-43da-81a3-02c6c24a4fba",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a9bce861-2e93-4fb8-9855-7ed0ce544a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2890f6a-0014-4aa9-92df-ec83c42acada",
        "cursor": {
          "ref": "38e3dca4-0d2f-4a20-8920-bc183f51bc3d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "27862bd0-cba6-4039-b69b-932dfd3d5a49"
        },
        "item": {
          "id": "a2890f6a-0014-4aa9-92df-ec83c42acada",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1d3905b9-407a-4c5c-883c-f1e680266b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9614a8e-037a-40b4-896d-9b1105070db9",
        "cursor": {
          "ref": "14e3b58b-c258-40b9-a553-292243365fda",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "83dea9a6-68dc-46c3-96ba-3e13afe31ba0"
        },
        "item": {
          "id": "a9614a8e-037a-40b4-896d-9b1105070db9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d11944f1-71c3-453c-acd7-5d3d1226dea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d0bb45-6864-408e-98f2-52cce26e1e94",
        "cursor": {
          "ref": "6d800174-505e-45bc-a84c-97478fff7c46",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ffcf1c20-28ed-4a95-837e-6091b7d79f5b"
        },
        "item": {
          "id": "78d0bb45-6864-408e-98f2-52cce26e1e94",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "51ca61dc-3cc3-4933-9d3f-543524b98fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9328988-bfc3-42cd-8d01-88c6c9a72d34",
        "cursor": {
          "ref": "4a4b8db2-a1ef-46ad-ad60-209fd491b553",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "076bf806-edce-4835-b074-fcaa3c163aa4"
        },
        "item": {
          "id": "d9328988-bfc3-42cd-8d01-88c6c9a72d34",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "82e07938-0fb2-4514-bbb0-f8d1c5d3e582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d3531d-e319-42e0-a301-59ce99d1873a",
        "cursor": {
          "ref": "0dad1750-2bf7-40ad-95b1-5096aed8a8eb",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eafd8746-7b50-4059-bfbe-43421e51bc4a"
        },
        "item": {
          "id": "58d3531d-e319-42e0-a301-59ce99d1873a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a89385f3-61bb-4b19-b2db-46dcd5dfc389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcfd557-2355-4576-a81a-0e38c10acfb8",
        "cursor": {
          "ref": "bf69df37-03f8-4c53-b27d-d393c50f29c0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4e60dba2-89d5-46ba-9eaf-e45037b8cf4a"
        },
        "item": {
          "id": "afcfd557-2355-4576-a81a-0e38c10acfb8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b68f0247-48b3-4f6d-87c0-dbf2720530b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c15bd09-80ab-4ddb-8bbf-e7fc77b50acb",
        "cursor": {
          "ref": "c9a0706b-e539-4482-9164-0ef7e92df677",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "58b74482-d9e0-4df6-b0e3-9e78ce2f375e"
        },
        "item": {
          "id": "9c15bd09-80ab-4ddb-8bbf-e7fc77b50acb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0c3bb0a5-3ad6-4a1d-98e9-5213199e1e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033e3f34-5fa2-442a-9a87-0d75ca75c76f",
        "cursor": {
          "ref": "769b0b1a-26c6-45e3-b6fd-974cebbc1883",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e147f11b-bede-4873-a65e-ada2589b93de"
        },
        "item": {
          "id": "033e3f34-5fa2-442a-9a87-0d75ca75c76f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d3b2dc80-b1ba-470d-8021-1e3655e66bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b346167b-0bf8-4fec-9729-652a3ce5402c",
        "cursor": {
          "ref": "f8f5629d-4b6c-46c5-a899-ea5644eabfbb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "820fa91d-13e4-4562-8b52-914036995b55"
        },
        "item": {
          "id": "b346167b-0bf8-4fec-9729-652a3ce5402c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3ec7d851-61a9-4ded-b4d3-d62409cc52b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36c91f1-d286-406b-99b3-0d28f6b6a176",
        "cursor": {
          "ref": "1438d073-fe3c-4c0f-8d09-d599b30d1811",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5953a4be-9870-4092-8895-d0c1ba135a71"
        },
        "item": {
          "id": "e36c91f1-d286-406b-99b3-0d28f6b6a176",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b9308725-8d29-4283-a15f-fb137f533a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5dcc4b-a172-4ba8-aa81-47dd1c28a08b",
        "cursor": {
          "ref": "8b0e183e-fd9c-4d59-a45d-d489f1e69c53",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b89dd396-847f-4f62-b8b9-50fc3877e18a"
        },
        "item": {
          "id": "6c5dcc4b-a172-4ba8-aa81-47dd1c28a08b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f2591546-aa5e-454e-ad77-0defbb643542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a066377-6b8b-47b6-bd0f-4c976c0bca6d",
        "cursor": {
          "ref": "d5b8dd7b-066e-44f9-b0b8-25faa7866f02",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d9249f24-67d4-496e-89b6-a5911575f87f"
        },
        "item": {
          "id": "3a066377-6b8b-47b6-bd0f-4c976c0bca6d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bfaef994-41ff-43cd-926b-845d151e7f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b7d39b-7363-494c-bc40-0ebfa8a65550",
        "cursor": {
          "ref": "780907a4-424a-438c-b50e-50a656bd7927",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7e5ef55c-b456-4a07-a02d-30a9b7408329"
        },
        "item": {
          "id": "14b7d39b-7363-494c-bc40-0ebfa8a65550",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fbb4a9c3-c595-440a-bdf1-c59ee771ee6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e69606-99fe-4c88-a115-4966216fd33d",
        "cursor": {
          "ref": "f71c30c3-b66e-48c7-bbd6-4358bda2bde6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6970363f-5193-4b10-9f60-11dcc5673d4a"
        },
        "item": {
          "id": "07e69606-99fe-4c88-a115-4966216fd33d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6cfa2c67-af93-46e7-8966-0c56bd7fbfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97131f8-501c-42ea-a759-44769914ffb3",
        "cursor": {
          "ref": "c9d07ee0-bab0-4158-90eb-1addd952c2e3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c6e803ef-d3b8-4429-9abc-a846cc47aefd"
        },
        "item": {
          "id": "f97131f8-501c-42ea-a759-44769914ffb3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2d66f3fd-b02a-4f88-8c2f-e7c6e43dd5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101769ea-3df9-4b0a-9b40-a0fa84d6fac1",
        "cursor": {
          "ref": "93ace103-0eed-436d-b0d4-b7dc628f03f0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0902a702-ae7e-4a97-a3cd-85b0344c33fd"
        },
        "item": {
          "id": "101769ea-3df9-4b0a-9b40-a0fa84d6fac1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c359a35e-b043-4294-b7a9-6e9f5facc8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0433ed5b-0ccc-494c-9e03-00736aa94b1d",
        "cursor": {
          "ref": "9e6da7d4-d1b1-4ac4-a573-a48c08c6ae81",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e623c3f2-e6ba-436d-82be-513155b5cfcf"
        },
        "item": {
          "id": "0433ed5b-0ccc-494c-9e03-00736aa94b1d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "752d6f2b-8df8-4ce0-a969-0fde410f3741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cc3a7d-404f-4d5f-b205-274134007edb",
        "cursor": {
          "ref": "6ea48bbe-9d74-4e7f-ae09-78cc3a37729a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a0e40091-a9f5-40ec-9cb0-125e7ed67884"
        },
        "item": {
          "id": "02cc3a7d-404f-4d5f-b205-274134007edb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9bfcb793-0e59-487c-a2a5-42157c505d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83446141-a1d7-4356-b513-5031f087907d",
        "cursor": {
          "ref": "3b5e3595-2b8d-442a-9c88-395ad561a057",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "31ad1129-6cc1-4fad-bafe-875bc3318f86"
        },
        "item": {
          "id": "83446141-a1d7-4356-b513-5031f087907d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8a214e58-d26b-4237-8a59-539b66db60ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b626ba99-1697-4d4c-9de0-c16fedeb8332",
        "cursor": {
          "ref": "8c3c37e5-268f-4d72-9c16-5c42c7c22df5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7c1361f4-3c16-482b-9ef3-37571c839021"
        },
        "item": {
          "id": "b626ba99-1697-4d4c-9de0-c16fedeb8332",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a5f1528e-cb3a-41db-8a92-f56c0d39da9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a847aa-ed42-48b3-95d8-55dce6ec54ef",
        "cursor": {
          "ref": "4c965849-254b-4634-a733-e3a4e7b3423f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "06b1dd59-d20b-4ab7-b8f7-49efdd406fd9"
        },
        "item": {
          "id": "82a847aa-ed42-48b3-95d8-55dce6ec54ef",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "01636d55-1bb9-4066-a8e6-a69440423998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4b6fab-5a4a-4b28-a1fb-adc42b85bd91",
        "cursor": {
          "ref": "acfaed76-6430-48f3-ae9a-9a14bfc5210f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dd6b7ac2-c8a6-41b7-815d-bfee4bc4c22b"
        },
        "item": {
          "id": "eb4b6fab-5a4a-4b28-a1fb-adc42b85bd91",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6aadaad9-0487-474b-9e7c-d2fcc323fa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cf7741-58f6-41db-9226-dfe9df5fdc99",
        "cursor": {
          "ref": "3da4910c-26df-4272-8e28-b6b05b95d62b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e040542f-d923-4779-a9f2-ce585d28ca2c"
        },
        "item": {
          "id": "26cf7741-58f6-41db-9226-dfe9df5fdc99",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "97c5b59d-d4a8-4ac3-93db-acb30ef71327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8b672c-e3c1-4ce7-b171-00b2d86904a7",
        "cursor": {
          "ref": "42ae6249-f8f0-4fab-b026-b38526e71790",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5e19fb41-b072-49e4-92c1-274eb39837ee"
        },
        "item": {
          "id": "4c8b672c-e3c1-4ce7-b171-00b2d86904a7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "88e486e1-0839-464f-8230-088223a47730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ae2748-ed5a-487c-9a85-93be6888c6bd",
        "cursor": {
          "ref": "6433a72d-e726-4d4c-a4e3-3e721cc79ab3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bdcc0ca0-e682-4b57-94c8-413b957bea5c"
        },
        "item": {
          "id": "f7ae2748-ed5a-487c-9a85-93be6888c6bd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "65b45ef0-9620-40b7-b4ad-fc500c0bdaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31df8a36-f153-4daf-8917-69a5bbe9b11b",
        "cursor": {
          "ref": "62c24922-4225-4f32-9429-e0dd289d4a88",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c3ab2cb-6498-47e4-a50f-219df925fa77"
        },
        "item": {
          "id": "31df8a36-f153-4daf-8917-69a5bbe9b11b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "efce4a31-bee1-48e8-a220-e715c6689375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c2f1ce-d68a-4b55-bb45-700458c6ed94",
        "cursor": {
          "ref": "15c73ca5-abde-4e01-85c9-0f3104ab5b4c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c4453006-89d7-4145-b5f6-6183c19c43c1"
        },
        "item": {
          "id": "93c2f1ce-d68a-4b55-bb45-700458c6ed94",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "03bd5fd7-3e37-42f0-9adf-cca077b76cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178f197b-1740-4dba-899b-9e9a5e6d0e83",
        "cursor": {
          "ref": "a69abd34-58ae-4c35-913d-24c71354744b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "86e76538-60d1-43aa-9542-0e4d042821b0"
        },
        "item": {
          "id": "178f197b-1740-4dba-899b-9e9a5e6d0e83",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d0a5bb6f-af53-4083-97d1-88f1f245d4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c0a520-2d23-4308-8281-e83592f025bb",
        "cursor": {
          "ref": "0fa1009d-4bd6-488f-967d-a05301dd4ea9",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fd0d0de3-a776-49da-8b05-2315b92b2ecc"
        },
        "item": {
          "id": "e1c0a520-2d23-4308-8281-e83592f025bb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8818fdc0-1b4c-4d43-840f-249c6639d04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f007e2c-a561-4445-bfa1-839e3e729bf6",
        "cursor": {
          "ref": "6a2a374e-7c6c-477e-8860-4b6437c2f535",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "14d168ce-dd3e-4872-9b8b-7d2c48be0d33"
        },
        "item": {
          "id": "9f007e2c-a561-4445-bfa1-839e3e729bf6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2f3d7b2d-409d-4d5d-9e0e-3339478fb9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a4579-bff6-48d6-a890-a35c7f4f70b5",
        "cursor": {
          "ref": "f15d9626-1dfb-42da-a1d4-ccc0cdc74579",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f1dbf537-12b3-4a22-b303-df81161dfafc"
        },
        "item": {
          "id": "2e9a4579-bff6-48d6-a890-a35c7f4f70b5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "69862ad9-dd7a-4f5b-ba21-7aaf0b02711d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178ce226-abb2-42c1-ac8a-c52ef39b3930",
        "cursor": {
          "ref": "d125e060-8422-4b7c-8443-9dc75e5554d0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "166803d0-43e2-40d6-8437-c71f5154a872"
        },
        "item": {
          "id": "178ce226-abb2-42c1-ac8a-c52ef39b3930",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b73e71e5-ce1e-402a-bc42-948d81bb12c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b002502-fd05-4880-81db-200a453df9bb",
        "cursor": {
          "ref": "f76a9869-de98-4a31-b2cf-6155b4bcd1b9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5fa49925-47ef-491b-b688-780334ab4bda"
        },
        "item": {
          "id": "1b002502-fd05-4880-81db-200a453df9bb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f0c100a5-797a-40f9-aa07-4a9be3788679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c3fd5c-91a7-431f-9f65-fb92f90ebbb8",
        "cursor": {
          "ref": "ffe5f58b-42cb-4e05-bd49-0a8c6130ba6b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6cb2ee55-a563-4f4c-b4df-d5f347c2e759"
        },
        "item": {
          "id": "98c3fd5c-91a7-431f-9f65-fb92f90ebbb8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5f6729d3-e22c-4461-9a77-d311ef0790d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f15ff76-deaa-467a-9665-219a9828c026",
        "cursor": {
          "ref": "73e8680a-7f00-40c9-bc35-fc0797be6686",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b5a16354-df30-41c3-8ffd-f8111c0c0b88"
        },
        "item": {
          "id": "0f15ff76-deaa-467a-9665-219a9828c026",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9f53361e-1f65-4ee3-8bd7-6a6a2308f371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1422d7-99a5-4b0b-a0e4-4de292de5b21",
        "cursor": {
          "ref": "91113d44-71eb-4686-85e8-e360f91917d3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8d59325a-4bb1-4857-b467-2192fadc19d6"
        },
        "item": {
          "id": "9b1422d7-99a5-4b0b-a0e4-4de292de5b21",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "368c8e36-fe09-4012-bb47-bc7db9cd0ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134047fc-ca3a-4270-ba81-deef927edba3",
        "cursor": {
          "ref": "90f6f8f6-2306-4215-99a1-30a15b2f7bc4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e2796c44-1af7-447e-8d56-8ed5c08e6026"
        },
        "item": {
          "id": "134047fc-ca3a-4270-ba81-deef927edba3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fc3b8f28-0485-446c-9792-9a7d72facc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a361bb8d-e665-471e-bbcb-329d465418d0",
        "cursor": {
          "ref": "f26053f0-e42f-4e17-8a43-39957ed608d9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6ac9adc1-f579-46d2-9a44-563087b98314"
        },
        "item": {
          "id": "a361bb8d-e665-471e-bbcb-329d465418d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "db32c3d6-ef0e-495b-857a-c05160650d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d8e558-0419-45f2-a17d-888005f95164",
        "cursor": {
          "ref": "fc7d03bc-cd31-40da-b89e-55e50c65b081",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6d7c8a5e-ae40-481b-9913-9ac2a4a071e8"
        },
        "item": {
          "id": "85d8e558-0419-45f2-a17d-888005f95164",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b5e05ced-b62a-4744-8d43-06083be649df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c27284-500f-41c0-b82b-7f5e3b2130ac",
        "cursor": {
          "ref": "cab861df-b813-4328-a035-a432b1f2926e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "06672cbd-78e5-41e5-8fa4-2c6207ef08f6"
        },
        "item": {
          "id": "88c27284-500f-41c0-b82b-7f5e3b2130ac",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8c1e237a-f9f6-4a3b-a8f7-70f1745a70ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a44bd6-e36b-4d17-bcec-c735a5703084",
        "cursor": {
          "ref": "ed9a517b-5c9c-48d8-8c41-d0055e898f7a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "99151a0b-32ff-4e8e-b592-c3e3dc919f23"
        },
        "item": {
          "id": "75a44bd6-e36b-4d17-bcec-c735a5703084",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "73ef4f05-7f93-4c20-a449-08f491921247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba05ca1-1f5e-42f2-a29d-266918c6e13f",
        "cursor": {
          "ref": "8b36ae9d-8849-4043-9c23-7a96d93b8cac",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "319b2ac5-b0dd-4405-a5ea-b899bd6a1a52"
        },
        "item": {
          "id": "bba05ca1-1f5e-42f2-a29d-266918c6e13f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "31fdb84e-158b-4ea3-a0ba-71942c87054d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3c5110-7d13-4deb-8f23-36476bda9241",
        "cursor": {
          "ref": "0fbac5f6-82c3-4d60-a0ee-cf17dcf80cbb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ac94d103-9ff6-44e1-8137-1b932b873161"
        },
        "item": {
          "id": "8e3c5110-7d13-4deb-8f23-36476bda9241",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "29cd7396-fe8a-4acc-bd07-8e0d6bc4ce35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975f99b0-a8e5-48a5-ba2d-601bb8abd16a",
        "cursor": {
          "ref": "1324ddf5-e205-4017-8acb-84829fd95b94",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e2901baf-691c-498a-a1a7-c4173a34d60e"
        },
        "item": {
          "id": "975f99b0-a8e5-48a5-ba2d-601bb8abd16a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "94b77bc3-64f3-4883-afd3-10e13d603a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a16ffd-2c41-4d7e-b611-f71b400179dc",
        "cursor": {
          "ref": "c1e935a9-3211-4fb1-9e00-152130aa251e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7fd76b2b-4edd-42d2-b3cf-51e39c72f8e6"
        },
        "item": {
          "id": "10a16ffd-2c41-4d7e-b611-f71b400179dc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4c82a31c-6cd8-403d-ad2d-c0c16bb39d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecabd386-5c1a-440f-a93a-560388064f47",
        "cursor": {
          "ref": "6d828e80-47ef-46a3-9adf-5bcaeb1d7784",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b39ca94d-36c5-4618-83fa-179763672ee9"
        },
        "item": {
          "id": "ecabd386-5c1a-440f-a93a-560388064f47",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bbc24b02-a5bf-46e2-bedd-6836281c85e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9991f85a-4067-4131-b4a7-e9951bc3a2f3",
        "cursor": {
          "ref": "fb90ffb8-bbe9-4263-b431-079c73577953",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a849f22d-cc5b-434b-b144-e06ffc97ecea"
        },
        "item": {
          "id": "9991f85a-4067-4131-b4a7-e9951bc3a2f3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "efa9effd-07d4-405b-b14a-db0ad1b18583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9006bc22-4a97-493b-92e2-6195359eb2d4",
        "cursor": {
          "ref": "d7dfaf45-08a7-45ca-9cef-2b30d66114ee",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "097de1ba-b85b-4fc0-8a50-91e4f2775567"
        },
        "item": {
          "id": "9006bc22-4a97-493b-92e2-6195359eb2d4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8928f173-765b-4089-8438-bdc43454f5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c792bd-f93f-451d-96b5-32ef83a59cfc",
        "cursor": {
          "ref": "e0ddd686-eede-46be-9a49-12384e80ec3d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1fcb30a4-dfc8-4e22-8458-a67c8800a4e9"
        },
        "item": {
          "id": "00c792bd-f93f-451d-96b5-32ef83a59cfc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "687969ef-82a6-4176-966a-5adfe9fc6bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d4d804-231f-47f2-900e-53b8b43ffa65",
        "cursor": {
          "ref": "8c31e65e-a44d-46b4-b92a-495837856e04",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4e0f83a0-e833-45c6-9e10-931a097a094a"
        },
        "item": {
          "id": "43d4d804-231f-47f2-900e-53b8b43ffa65",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9b6e6a09-4c6f-4598-bfe7-6a0af98899f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778afef1-71d7-498c-9d63-e3bb2f9f0bfc",
        "cursor": {
          "ref": "1e851fd3-f0b9-42e2-87c6-ba78e626c2dd",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2f85caf4-bbd8-402d-ac64-45e611c3df57"
        },
        "item": {
          "id": "778afef1-71d7-498c-9d63-e3bb2f9f0bfc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4e05d858-7eda-4b27-aa72-48d6ed58fa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad366d80-5311-400f-8c28-7ce55ef8965b",
        "cursor": {
          "ref": "091d6f12-bd07-4690-aa17-e88ff5dfa141",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "44c79ede-9820-44c8-beeb-8125d911a3f1"
        },
        "item": {
          "id": "ad366d80-5311-400f-8c28-7ce55ef8965b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c9fd1ecd-4dbd-47b5-b333-d67af7a2e385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b731e3f-1de0-48d2-a4ae-e7729099ecaa",
        "cursor": {
          "ref": "e9e79aa1-91a2-4d87-9eb9-6b4305f04113",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4cddd8bc-979a-4ff7-a50f-b3b6e451ae29"
        },
        "item": {
          "id": "2b731e3f-1de0-48d2-a4ae-e7729099ecaa",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8ad9bca3-dd37-4cc3-8ab7-29972792e96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9505dd9-7b40-403e-8bf8-8cd69e9008b5",
        "cursor": {
          "ref": "e98564bc-d2a6-404a-8af4-b48a89aeb87c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ad434247-bd42-4d8b-872a-3af4134897bf"
        },
        "item": {
          "id": "c9505dd9-7b40-403e-8bf8-8cd69e9008b5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "70904dc7-4527-40cc-8fe7-8906bf2f00ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfd36f2-75ce-4502-a437-d6d33fdab8a2",
        "cursor": {
          "ref": "bc149e52-deed-4a13-ab70-3970388d6f79",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e546f264-398f-42a5-b6f5-1adcb486bb08"
        },
        "item": {
          "id": "3dfd36f2-75ce-4502-a437-d6d33fdab8a2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "aafd6599-fa3e-4c71-a1be-2450c437712d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafe2fb7-1aff-4cc3-b44d-dc21c7bca675",
        "cursor": {
          "ref": "fc08b78c-2519-4730-a741-5f39fe6223d0",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "797a57f5-4b1a-4157-adb7-301a3f1aa44a"
        },
        "item": {
          "id": "eafe2fb7-1aff-4cc3-b44d-dc21c7bca675",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7a2e67f3-cd50-46e5-9ceb-fea6dd59f46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153b1946-dc5c-4676-ad6d-e444f9874218",
        "cursor": {
          "ref": "28495519-4690-49b2-b2c0-4516715fb526",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9c0a3d53-a36b-497d-8a56-66f75c95dad6"
        },
        "item": {
          "id": "153b1946-dc5c-4676-ad6d-e444f9874218",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2002fa4a-7118-4e1e-8577-a44d36db2e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbfbbda-2caf-47bd-b69d-c625b35a9c03",
        "cursor": {
          "ref": "ce4d41e4-f755-4613-8f37-b48aca584cd0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5404a826-4c16-43ea-bce1-a73bc058a1f8"
        },
        "item": {
          "id": "5fbfbbda-2caf-47bd-b69d-c625b35a9c03",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4076c56e-22ee-4721-98dd-1f907d5d0b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e08876c-4dc5-4d98-852c-7960ab48587c",
        "cursor": {
          "ref": "c77f0b02-66cc-4d55-9da6-3ba363959d9b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d6986a37-9cf0-4bde-b6b8-15e29d51c56e"
        },
        "item": {
          "id": "5e08876c-4dc5-4d98-852c-7960ab48587c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4af7f169-cd3f-4e27-8ade-4c42842f7108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedbb555-b4be-4ee8-8868-f62b28afdcac",
        "cursor": {
          "ref": "10c6a8b6-84a7-4bd5-939a-da1a0d9002f9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fb862b49-db09-425a-9fba-19f00cc32f92"
        },
        "item": {
          "id": "fedbb555-b4be-4ee8-8868-f62b28afdcac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6f67c91d-4f70-4c1e-ad9b-2710eb69ff21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf37e09-b994-4a20-8b4b-c2b0e62174f0",
        "cursor": {
          "ref": "6ba91e09-3847-454a-ac61-84dc9fe37e5b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "69e33780-b6d2-4687-a8a8-d41adf0706f4"
        },
        "item": {
          "id": "3cf37e09-b994-4a20-8b4b-c2b0e62174f0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0c0116f4-dd37-4547-9133-781d137d79f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee4439d-ff92-4827-bb49-3aa8d9a1e65a",
        "cursor": {
          "ref": "977cdbcb-9f77-4b92-8cd8-5050d3f02e46",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "02b32454-adbc-4429-86d3-0bf48af6c06a"
        },
        "item": {
          "id": "dee4439d-ff92-4827-bb49-3aa8d9a1e65a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "88d67773-ad84-42a9-bb0e-1972fe44abbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075097c8-e4bb-4f95-8ebc-ee652376ab57",
        "cursor": {
          "ref": "d14a7a44-0a09-4278-9c83-a27987bb32c3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1ba74b4f-b3fc-4b64-bc5d-5709d68e4071"
        },
        "item": {
          "id": "075097c8-e4bb-4f95-8ebc-ee652376ab57",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b0713ebb-2c9b-47b1-8328-108f6f2d0f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c4ee55-04f7-4657-af13-314bef153837",
        "cursor": {
          "ref": "d83b2d0d-e908-4791-8217-3450460bad49",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0201820c-b371-4984-a4d7-6b2a44e55614"
        },
        "item": {
          "id": "13c4ee55-04f7-4657-af13-314bef153837",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "73f60f45-db24-45e1-82b7-47858b687fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a7f6fa-5880-494d-bc39-3099870c5970",
        "cursor": {
          "ref": "3d314327-0681-4218-a598-406e4cbfe34b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "00e97094-3145-4753-ad07-ae20d333d8ae"
        },
        "item": {
          "id": "16a7f6fa-5880-494d-bc39-3099870c5970",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "294bf498-9fdd-4387-8d78-a7b8fbe2622b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7321453f-4c64-4e30-ade8-2efb6a83f03d",
        "cursor": {
          "ref": "dc7970bb-8e53-44f3-863d-bc11a0affc74",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fcfcecd7-dd2e-4b7a-9b35-3fee1acc087f"
        },
        "item": {
          "id": "7321453f-4c64-4e30-ade8-2efb6a83f03d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4e8cb994-3c84-43a4-914d-63ce74c4955d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f7389-f318-44d0-90c1-88c322d907f7",
        "cursor": {
          "ref": "a6bf5811-f35e-4d81-b222-311ad2ce4b8b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cbe33938-8885-4094-82db-bc8d327a32bd"
        },
        "item": {
          "id": "f65f7389-f318-44d0-90c1-88c322d907f7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d3928046-1b3d-4f1a-a1bc-63db8b5a5cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce65c4b7-13a1-4ab8-9024-b57897540dd5",
        "cursor": {
          "ref": "aabfa161-4924-4e96-9574-85477e386ab5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e00307d-ce49-4e4e-a75d-bb0fdcaabbd4"
        },
        "item": {
          "id": "ce65c4b7-13a1-4ab8-9024-b57897540dd5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "05bebb57-90e6-4a2a-8a9c-48a04142de6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d872835d-56e6-4181-ae62-41ac624fae9c",
        "cursor": {
          "ref": "49481fb9-0d1f-41fa-b7dc-bdbda430e95b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6df2c09c-b607-47e3-9ee9-26b900add1aa"
        },
        "item": {
          "id": "d872835d-56e6-4181-ae62-41ac624fae9c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0e50c6c7-a523-407f-b867-8e028a5fcab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f584bd-5b3e-4beb-bf3a-d1c579833470",
        "cursor": {
          "ref": "48c711f0-a910-43e8-85dc-f8582130ec68",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f4f9de4a-f456-4411-bfeb-44332b8d0471"
        },
        "item": {
          "id": "97f584bd-5b3e-4beb-bf3a-d1c579833470",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cbef5708-4a96-4949-b4f2-d88a2d3aa755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078e340f-955b-4111-8d27-c1254df85c55",
        "cursor": {
          "ref": "a4a9c313-2ce9-4480-a26b-2008be64b57e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f422a267-da9c-4ccc-be0a-f1c3b9127185"
        },
        "item": {
          "id": "078e340f-955b-4111-8d27-c1254df85c55",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "59ef29de-aab1-4119-b347-c19572065c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "df2ca15d-8a49-4fae-b685-d7b96d1e0174",
        "cursor": {
          "ref": "c3dfb8b0-b2da-4f5a-9929-0450ca490570",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3131df12-2650-43bb-87ce-b62e3301d117"
        },
        "item": {
          "id": "df2ca15d-8a49-4fae-b685-d7b96d1e0174",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e1fa69d4-4cdb-4f43-b918-ecc507e4c4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c7c46036-c000-4193-9b45-6accb5edfaab",
        "cursor": {
          "ref": "506c64ed-60a0-47d3-8043-a0c88549f082",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "258a5607-7b58-44ba-8269-ae3235f9e925"
        },
        "item": {
          "id": "c7c46036-c000-4193-9b45-6accb5edfaab",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8cddcf9a-8b74-4888-98fc-9df61fea65e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "58e43fbe-91c1-4690-a879-8e17b0395cb7",
        "cursor": {
          "ref": "146054fa-d0b0-4254-8f5d-73842eed93bc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "25b995ca-b6e2-4d17-b5b1-6a6dc951c1db"
        },
        "item": {
          "id": "58e43fbe-91c1-4690-a879-8e17b0395cb7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4026be5b-ef3e-464c-8f5d-2bd186e0cc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6ece0aa7-012a-4cd0-ab7d-42408081330b",
        "cursor": {
          "ref": "bf51091d-c8f4-4f1f-9d18-0bcce62b3445",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "37eb4b86-5b10-4b71-93c2-065c01ca68b3"
        },
        "item": {
          "id": "6ece0aa7-012a-4cd0-ab7d-42408081330b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "78e1fb5a-0285-4120-860b-0a86d897d859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "2c2b0a8b-e732-4412-95f0-b8839a0ef459",
        "cursor": {
          "ref": "4ac858fc-9a83-4563-92af-3e31a279d088",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2d8139f3-4edf-4fdf-a117-5d7897fe65d7"
        },
        "item": {
          "id": "2c2b0a8b-e732-4412-95f0-b8839a0ef459",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "417ae0db-a250-4d69-acfe-4e61490a59ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a6e3434d-9616-45bd-a844-701b718d9d32",
        "cursor": {
          "ref": "46768ac7-2e10-4f59-a28d-3a82d2bdfb2a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "91e3eb28-e1ab-4f2e-b5a9-2a8e9e9a4a5d"
        },
        "item": {
          "id": "a6e3434d-9616-45bd-a844-701b718d9d32",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dea25ca2-13bf-4d6f-accb-ddfbfb3bd54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "aafa3d45-4e65-481a-9d56-9c3681e0eb43",
        "cursor": {
          "ref": "74e067bb-d0a1-4b58-baa4-9c127110fc38",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aaab4192-a76d-476a-a015-869eca53c2b5"
        },
        "item": {
          "id": "aafa3d45-4e65-481a-9d56-9c3681e0eb43",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "50422d37-9ce7-4285-90b6-6068663e8d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90893934-1251-4a0d-8287-67017d206b2e",
        "cursor": {
          "ref": "81cec6dd-0aa9-4cab-a42f-eec90034828c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c3573618-5dab-44c5-9054-b8c9a1a8915f"
        },
        "item": {
          "id": "90893934-1251-4a0d-8287-67017d206b2e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f8c20c92-45fb-47bd-8032-43e9e81a5e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa725dd8-5bb4-458f-86a0-51f8651d0370",
        "cursor": {
          "ref": "54f9925f-db87-480b-a07c-e20e3b9c3657",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "431c3961-cb37-4a1e-8356-4f6edb064dc6"
        },
        "item": {
          "id": "fa725dd8-5bb4-458f-86a0-51f8651d0370",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "296da307-3319-4d27-a81e-9de23726b09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed81ecdf-21e9-4b28-b5a0-36aaef4b0854",
        "cursor": {
          "ref": "3249a74e-acba-4718-8177-45c417cd5a47",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3b434ebd-c2f8-4ddc-a3a3-752a2a2dede0"
        },
        "item": {
          "id": "ed81ecdf-21e9-4b28-b5a0-36aaef4b0854",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ae252e5d-eaa3-445f-9419-5f16f786d441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb4a4d9-db77-4231-ac21-8b7cf5ee65bc",
        "cursor": {
          "ref": "ac930d6b-b8d4-46e3-b26d-d9b8c873165a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a904d6de-744d-452b-8137-9a48979dd26b"
        },
        "item": {
          "id": "dbb4a4d9-db77-4231-ac21-8b7cf5ee65bc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "63ce6b99-751e-49b6-9ba8-7d6045976ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999bb9db-9ba3-44e3-b54a-287dc30504b4",
        "cursor": {
          "ref": "32082a82-bd84-4b58-bc8e-9a397ee70c91",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "561c64b4-a83d-4201-93e5-4d3f1521718a"
        },
        "item": {
          "id": "999bb9db-9ba3-44e3-b54a-287dc30504b4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "effe4f67-0a42-4843-87ef-e562646dd9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ffe0ba-abaa-4280-83b5-e0be82e0038a",
        "cursor": {
          "ref": "23a3b3b2-9273-4cd9-ad3c-398a4d76d7fc",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2a9176aa-1dd2-4840-9c93-bcfc852ad551"
        },
        "item": {
          "id": "c2ffe0ba-abaa-4280-83b5-e0be82e0038a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "41df43d6-4650-4dde-b32e-7b4eaaa7d776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e77b207-f7f1-4cec-9906-c653824628f0",
        "cursor": {
          "ref": "495d45c9-c6c8-4400-b7b1-aad51d31f088",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "98448544-f17c-43aa-bc38-9f0007af8909"
        },
        "item": {
          "id": "7e77b207-f7f1-4cec-9906-c653824628f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "780001b2-8f9d-4872-ba6e-da85af9c6bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9321a83-228a-4b72-886e-a6272fc9510d",
        "cursor": {
          "ref": "885ad445-efca-46bf-a9ae-855cf82e3d3a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f74a5968-e0db-4500-97ec-45b9f34d1b04"
        },
        "item": {
          "id": "c9321a83-228a-4b72-886e-a6272fc9510d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d80c3a29-b479-48d7-a714-e5929b5d6861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cad70ff-2f2e-4c3f-81bf-13f8adc61dce",
        "cursor": {
          "ref": "78d9e6d0-3d01-4ee7-ba89-407bc93e7835",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e0b8c4af-ec90-4155-8601-3d8166259fc6"
        },
        "item": {
          "id": "2cad70ff-2f2e-4c3f-81bf-13f8adc61dce",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c07e1d4d-9ea6-42b7-a954-24da1132de15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32244f6c-2803-4fe7-81a2-a8ebc478bc2f",
        "cursor": {
          "ref": "60f8c1fc-abdc-469a-a66d-b395bd214d30",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6359ba94-b015-477f-be36-deeb99785a77"
        },
        "item": {
          "id": "32244f6c-2803-4fe7-81a2-a8ebc478bc2f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c37f3a8c-b68c-491d-bde7-3bb34294a157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40865c71-daf6-4286-9754-26f91ebfb447",
        "cursor": {
          "ref": "52341e47-42ff-494d-8a81-866ea21f8dc6",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a6e4f988-7778-48e1-9e59-ad56a7575433"
        },
        "item": {
          "id": "40865c71-daf6-4286-9754-26f91ebfb447",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bc88592f-a460-42d4-a69f-a3da1fee5856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea12332-cc60-4ec5-9873-cb8f3519baad",
        "cursor": {
          "ref": "6d2c8c59-7c3f-4bed-9614-09c65a0b1c09",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c0667155-881f-4680-8399-9ea4e56c09fb"
        },
        "item": {
          "id": "5ea12332-cc60-4ec5-9873-cb8f3519baad",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "741dc3a7-93b1-4e65-a668-6a1e99a92361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb983b17-2e28-4816-815c-92d5d911b2c3",
        "cursor": {
          "ref": "d2029d1d-0fc1-4c13-88e8-e82e017acd39",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1c4402ca-6f86-4095-910c-826e0a12bd45"
        },
        "item": {
          "id": "cb983b17-2e28-4816-815c-92d5d911b2c3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ba44fc6d-c7d8-4a36-85e4-d2810fded446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81444843-1264-40b6-992b-7e8befff4a50",
        "cursor": {
          "ref": "0dc66141-1e0a-4876-9dd0-2eb2d152bbc4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7735039a-9ab7-4018-99cd-73edf9cd3a3c"
        },
        "item": {
          "id": "81444843-1264-40b6-992b-7e8befff4a50",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cdaf2a0e-be16-45b1-80cf-d9c7bd17d33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cef336-9642-498a-a2ed-25025a1fc027",
        "cursor": {
          "ref": "879aa1ff-fdf7-4ad6-b73f-5c712c7cd665",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5549117d-5a29-401d-97c9-c22057e70bc6"
        },
        "item": {
          "id": "47cef336-9642-498a-a2ed-25025a1fc027",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f9efcce5-83cb-4144-a643-746aad822221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30461a4-e0bd-4ebe-8d12-428b01317dfa",
        "cursor": {
          "ref": "dff260a8-aff5-49f6-965a-eb88023fedd6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "edeb0896-5344-45de-8015-236952d6144c"
        },
        "item": {
          "id": "b30461a4-e0bd-4ebe-8d12-428b01317dfa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9970ee1d-32cf-4609-9dc2-9f81d9714c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abce460-c3c7-4fca-8732-601f24e0d1b7",
        "cursor": {
          "ref": "692ba4a0-cb75-4578-8e8c-0b7eac2ac100",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "94dfb5d8-3de4-4773-a7a6-4b179724e831"
        },
        "item": {
          "id": "4abce460-c3c7-4fca-8732-601f24e0d1b7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1b62c11a-7704-442b-ba9c-6097c60bbd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d59b71c-3db4-4b68-bb06-4f6cd9e39c5f",
        "cursor": {
          "ref": "d591468f-b8b3-4551-9b4a-002f16ec10dc",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0d8cd922-5df5-462e-b876-fdef80993656"
        },
        "item": {
          "id": "6d59b71c-3db4-4b68-bb06-4f6cd9e39c5f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c3545bb0-6e93-4cd1-a5df-0f31dcdcee83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832e7499-4e58-452d-b6dc-7143366aa239",
        "cursor": {
          "ref": "ff3aa9ac-e872-4ef5-82c6-1a2fbc0bc755",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "41227cb2-61b7-42f1-bc5e-cbc5ae72e436"
        },
        "item": {
          "id": "832e7499-4e58-452d-b6dc-7143366aa239",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e3675df-0bed-42b3-9f9f-332e4c197221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc612a11-7599-4c7d-82cd-8c43af6c66bb",
        "cursor": {
          "ref": "32fad517-addd-460e-a622-59b0b404dbde",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cd453389-bf10-42f4-9f8a-dc3b69e76cb1"
        },
        "item": {
          "id": "fc612a11-7599-4c7d-82cd-8c43af6c66bb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "85fe7c02-d32b-4587-b69a-3457af84215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e2256a-858b-46d6-bbe5-daa324a636f6",
        "cursor": {
          "ref": "519cb706-f31a-4e62-9d08-1b67e9dc73bd",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bde02f74-4869-40aa-aa4b-6ec7982f064f"
        },
        "item": {
          "id": "00e2256a-858b-46d6-bbe5-daa324a636f6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7b39b831-1071-46b7-af85-145ecc255d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d5b49e-8977-46a8-9031-15160f63b13d",
        "cursor": {
          "ref": "c2823a2c-82fd-4dd0-aaa1-1c24e724f18a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "19afe2ff-5484-4fbd-91c0-bb12a10e2772"
        },
        "item": {
          "id": "69d5b49e-8977-46a8-9031-15160f63b13d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "43488ee1-358e-4dd2-a9c0-33ede83d5277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fbb6b4-6196-464f-89a4-b90d9592510b",
        "cursor": {
          "ref": "800a936e-79ed-45da-8ce9-b23a9fd52f6d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "341870b3-8d36-47b0-8137-b4dc8c0c4bdc"
        },
        "item": {
          "id": "28fbb6b4-6196-464f-89a4-b90d9592510b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "de866fe0-efc8-46b1-bae3-6331af016265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2778277b-be50-43ed-9570-92a2ff522684",
        "cursor": {
          "ref": "d90863f3-7c51-4ee3-a3d1-7602f771065e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "784c92e2-fba8-4178-ae88-569d70bbc919"
        },
        "item": {
          "id": "2778277b-be50-43ed-9570-92a2ff522684",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "68295dde-c30b-4d27-96fb-7192fe9300ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47820dab-f862-4090-993b-9c821c112a43",
        "cursor": {
          "ref": "379a4152-7f78-45e8-9fb5-9058bba5d5a2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "85f9ef85-b15c-4323-8e76-1c6da3374879"
        },
        "item": {
          "id": "47820dab-f862-4090-993b-9c821c112a43",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8c80c844-9b19-4867-9965-f4c3fb3b6f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0bede7-9548-4dde-b18f-48d7d2319ed2",
        "cursor": {
          "ref": "952190f0-cf3d-4b34-8ec8-d19603da96c3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c341ca3d-1665-4ab1-90d7-8e69c311328d"
        },
        "item": {
          "id": "9e0bede7-9548-4dde-b18f-48d7d2319ed2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "13ddaad1-9c7c-46b9-82a7-ebaf3900ca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dc590e-7881-4fe4-b5a2-74b5adf70854",
        "cursor": {
          "ref": "6be12c37-baa7-47e3-9be9-49e5264a25ad",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0ceb1620-3830-40e5-8fca-89e296154ee4"
        },
        "item": {
          "id": "e8dc590e-7881-4fe4-b5a2-74b5adf70854",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f5363f42-e642-4cf9-b947-8cc0f5092c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f662549c-a943-4909-804e-56df2b963944",
        "cursor": {
          "ref": "964b5459-72ae-4516-9af6-f4d4d74bad69",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "da738059-2874-4c7f-b5ee-9279ffbdf67e"
        },
        "item": {
          "id": "f662549c-a943-4909-804e-56df2b963944",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "16860396-e649-4715-8866-82f9cbf3166f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b550b11-0b2f-4a1d-bcd4-f7c86533dec2",
        "cursor": {
          "ref": "ada99e93-fc72-4580-ac16-8b9401a3c796",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9c2b3fa1-06d9-4a6d-9a8e-ad5365021da4"
        },
        "item": {
          "id": "0b550b11-0b2f-4a1d-bcd4-f7c86533dec2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "02d63a4f-48a5-4d4f-afdf-b2c2b9c9fd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acfe7ac-9190-4ac1-a1b3-b0374ce0afbd",
        "cursor": {
          "ref": "3c8d0aea-af47-4931-b389-e948cec5000e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3258c984-afb4-48ba-86c5-9280d15b29c9"
        },
        "item": {
          "id": "1acfe7ac-9190-4ac1-a1b3-b0374ce0afbd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "af4d8b3f-445f-4584-a52e-0a070b37ea2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2095dee1-cb26-4f29-a07e-4415398c0fd2",
        "cursor": {
          "ref": "78e22a0f-caa8-4917-bb26-dfb3c9c70498",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "39b4fbec-82cd-4ec2-8bf1-be98d85b31fb"
        },
        "item": {
          "id": "2095dee1-cb26-4f29-a07e-4415398c0fd2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fdd322c3-d133-41af-bbfc-e1dc399b0498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7feb1dd6-dd9d-46fc-a164-b56690cd5ebf",
        "cursor": {
          "ref": "45fea856-b1fa-4fa8-88ee-a2b3e3a9859d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "87bb5970-252b-4a1e-80f1-b9e1559b18e2"
        },
        "item": {
          "id": "7feb1dd6-dd9d-46fc-a164-b56690cd5ebf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5aefa34d-916a-4ed3-98a9-329f092ae44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d8dcc7-0d6a-4603-a748-ba43bfa3f0dd",
        "cursor": {
          "ref": "cb9cc0b8-cafc-4ce5-a522-687ce7a98b79",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "82809906-e9db-4736-8c7c-af65cb2ff891"
        },
        "item": {
          "id": "78d8dcc7-0d6a-4603-a748-ba43bfa3f0dd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1c57d4e9-a87e-4426-8780-5e07f97a0962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeed0e85-e6c5-4c67-8ac9-069fc2be87db",
        "cursor": {
          "ref": "0ba18ea5-f6b1-4a06-85bf-ded3a668959b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "638590e9-8845-4283-bfb6-1ef953dc7dd6"
        },
        "item": {
          "id": "eeed0e85-e6c5-4c67-8ac9-069fc2be87db",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "94baebd1-d1fb-43ec-b808-08f0367ab8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc6d2c0-4123-4fef-a819-f65f74aee365",
        "cursor": {
          "ref": "7b8f5632-9021-4364-8d6e-ab354a06f541",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e07e0d61-cdd2-4e2e-b37f-d69fae563e90"
        },
        "item": {
          "id": "0dc6d2c0-4123-4fef-a819-f65f74aee365",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d26d8663-8a58-4e91-be3d-e4a04b0cf37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0341763-c34c-4aca-90f3-0834b2ddff54",
        "cursor": {
          "ref": "42bcc57c-4d73-40f0-9309-4f0a0e5e26dc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6088b37b-9092-48e4-9d24-63303abaa6fd"
        },
        "item": {
          "id": "c0341763-c34c-4aca-90f3-0834b2ddff54",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "63b8cdd0-55bd-46c8-8ed1-c2b3b4a8d193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0316a4dd-b0ca-4c06-9383-f1666c5dfa58",
        "cursor": {
          "ref": "2719b049-76c1-4482-9cb1-41af0625fae9",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5e958193-0e68-4cce-bc11-279c82123468"
        },
        "item": {
          "id": "0316a4dd-b0ca-4c06-9383-f1666c5dfa58",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e4cd802f-7716-4d78-b5c2-99133e9d23fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d44f8c-aef4-49a9-b8f2-34b3ff6f9779",
        "cursor": {
          "ref": "f4e7afc3-4b1f-420c-909b-da90414c7b4c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "05310398-4537-4633-8cd6-54c3a2836498"
        },
        "item": {
          "id": "44d44f8c-aef4-49a9-b8f2-34b3ff6f9779",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4ef677db-2f42-409a-a1f0-25b6a486fe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d915d559-dcef-4eed-9f5b-9771a4ab70f1",
        "cursor": {
          "ref": "e428b5d2-ecfa-4dab-9dbb-848710ce0321",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7da99390-1567-404e-bb18-916f3eefcb9b"
        },
        "item": {
          "id": "d915d559-dcef-4eed-9f5b-9771a4ab70f1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6c979dae-13f3-45af-a5b1-e3e89d9594b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c5dbe5-8fbb-4591-bf8f-0f14330a58d1",
        "cursor": {
          "ref": "bd43acbd-75ca-42ae-b084-fe658f0a4d89",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ce4f365a-9a11-47e9-80c6-03898178cdee"
        },
        "item": {
          "id": "30c5dbe5-8fbb-4591-bf8f-0f14330a58d1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7a4ebd82-7618-4e54-be06-6149dc8c3501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cc056b-083b-4248-b0a0-24dbd55a315b",
        "cursor": {
          "ref": "d8fbad3a-2eab-4c07-925f-2d0e54febd6c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1960c887-93ff-4dca-9576-d0bf897c8b60"
        },
        "item": {
          "id": "d0cc056b-083b-4248-b0a0-24dbd55a315b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a2dd3a8-d57b-46c0-8182-bfad5c98b3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35906f80-4ea8-4b89-9c14-2df7a20d6e6e",
        "cursor": {
          "ref": "2f6146b4-89f7-4427-bdb2-bf395bc7d71a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "44ffc978-bd62-4b22-a79f-a69ec456bd90"
        },
        "item": {
          "id": "35906f80-4ea8-4b89-9c14-2df7a20d6e6e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4a921813-0ae8-4e08-ad27-2de2416f50c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7644fd-8eb4-429b-857e-3d5b488c867b",
        "cursor": {
          "ref": "c0838108-1f12-437a-9eff-e5f906ef06fa",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "71a84c6f-d617-4b62-86b7-d9c6072647f2"
        },
        "item": {
          "id": "ef7644fd-8eb4-429b-857e-3d5b488c867b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a68dff84-8ccf-4e99-a0eb-32e89ec2b3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8717059d-b845-4662-b85a-222ff9363efb",
        "cursor": {
          "ref": "cd749f3a-ef8f-40c1-9f34-5bfc25bfe741",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "763380c8-74ec-4ecf-bbda-8711ba4ab88e"
        },
        "item": {
          "id": "8717059d-b845-4662-b85a-222ff9363efb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "abb0a424-a486-4cc8-a4aa-aeabc4cff98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb0e948-8167-4df2-ac9f-cbfba88eb313",
        "cursor": {
          "ref": "c8dccbde-02c9-458e-87d1-56333708a83a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cec0a2c2-3ea1-443b-8259-6946149ded20"
        },
        "item": {
          "id": "fbb0e948-8167-4df2-ac9f-cbfba88eb313",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "28f0a882-b850-4126-b73a-d0821d59ccc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4dac68-63a2-4e0b-8ce8-815d3ffe3548",
        "cursor": {
          "ref": "c43d4807-6ac8-4b71-95a4-269b3aa8ed69",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8e5c0cf7-5c08-4cbc-a364-8ffe7fe7f0b8"
        },
        "item": {
          "id": "ec4dac68-63a2-4e0b-8ce8-815d3ffe3548",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "952d2f8e-4af8-4ecf-a5ce-2a476162e849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41d276d-f5d3-4c19-a357-db4c0e672621",
        "cursor": {
          "ref": "95bb2ab7-dfc7-4792-98d9-fcb16e7a1bde",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "14bd9121-31b0-4c09-92d3-063bf57ace52"
        },
        "item": {
          "id": "f41d276d-f5d3-4c19-a357-db4c0e672621",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2b1e94b9-5623-42a1-a6ed-45d82c69b26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065c2d0b-01ce-4413-ac87-f33dfebf20b7",
        "cursor": {
          "ref": "e9e91f7f-df33-4edb-9a87-67183797f953",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "99ef0560-a834-4956-a710-f38d916b0206"
        },
        "item": {
          "id": "065c2d0b-01ce-4413-ac87-f33dfebf20b7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "625cd1cf-4d1e-4ab8-8f12-d7ac9801e983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc947fb-c7f5-4c24-939e-2ba603dfe280",
        "cursor": {
          "ref": "f2b82fcb-fdf5-4eb4-a7e6-a08d73efc963",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4ce44bb5-6311-4acf-9750-91165c0a09fa"
        },
        "item": {
          "id": "8dc947fb-c7f5-4c24-939e-2ba603dfe280",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f3dcdaef-e89c-4994-b8da-e944a89337c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2831391c-df66-4cd5-b20c-13a2b305cdd0",
        "cursor": {
          "ref": "bbb17a29-fcf8-4381-b18b-87e6fde9e5c4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "84737875-df6a-46f2-98e2-b766930ec62e"
        },
        "item": {
          "id": "2831391c-df66-4cd5-b20c-13a2b305cdd0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "675b1522-c247-46a9-b4dd-e33926beaaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e855561a-3fca-4ac7-9837-f8612e329e01",
        "cursor": {
          "ref": "ddca9ae2-6228-45c3-8400-c6b26611c2bc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bb55889d-51c7-4e97-99cf-dd54c9f9f93b"
        },
        "item": {
          "id": "e855561a-3fca-4ac7-9837-f8612e329e01",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a05e43fc-e3bd-4905-ba53-90fc9d65c058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc860f0-146e-4ee8-8fa3-99e88793940f",
        "cursor": {
          "ref": "2d3af4de-fdb4-409e-948f-4d4a4616332e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a6b5762f-6446-49b4-9558-82b7219b2ee7"
        },
        "item": {
          "id": "edc860f0-146e-4ee8-8fa3-99e88793940f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "11fa4d41-7d24-43d5-8a6c-61f98be16322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae103da5-a208-46d4-ac44-053389012ba7",
        "cursor": {
          "ref": "a307c551-0618-4a01-b317-d6878936f616",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5cb7f06d-672d-48ac-98de-1aa6400857af"
        },
        "item": {
          "id": "ae103da5-a208-46d4-ac44-053389012ba7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dc18256b-2cdc-4bac-a82c-32574b64413e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e534234-0837-463d-a745-b8305d4c9d5f",
        "cursor": {
          "ref": "9e43d771-de87-43a4-82c6-10ba41643733",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bf5b1ec3-d4cf-4e39-9680-45797c2d2c3b"
        },
        "item": {
          "id": "1e534234-0837-463d-a745-b8305d4c9d5f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ac0c3a23-d92e-486d-9b27-950e31ebff04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60706d6-6124-4861-a093-fdd7d263b6e1",
        "cursor": {
          "ref": "bb0b8e16-ddea-4f59-8e63-47480633967e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4b91eb96-ea33-4e2d-86ae-f571aa1e10a0"
        },
        "item": {
          "id": "e60706d6-6124-4861-a093-fdd7d263b6e1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d723f853-6e68-4621-a32f-47d45729219a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8df8ad-70ed-4eea-a94d-1eaecf256364",
        "cursor": {
          "ref": "e2ce7b85-108b-4634-9fdc-26cf76abe2ca",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "07d7e640-38ab-429e-b664-f77183fed085"
        },
        "item": {
          "id": "7e8df8ad-70ed-4eea-a94d-1eaecf256364",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5861593a-dac9-4191-aeb5-5dbe91c2ebbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc95627-4751-4404-b117-60774eb16ab2",
        "cursor": {
          "ref": "6c2c7377-920f-48bb-bdf7-9264e6930c92",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "46f7073a-9860-4a94-8902-db7e55b41ff2"
        },
        "item": {
          "id": "bbc95627-4751-4404-b117-60774eb16ab2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "15488a45-266c-42e2-90bb-ceaae6907dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff74c8a-33fa-49c3-9615-d99715aaf844",
        "cursor": {
          "ref": "912df57f-a261-4c48-a4cf-8f454134d83e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7098a010-748c-453a-9c11-d0592f9424ba"
        },
        "item": {
          "id": "eff74c8a-33fa-49c3-9615-d99715aaf844",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d0979f78-d93b-4a6a-bdfe-2aa52b9c5d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0ad96e-12ea-4057-a0a3-771d4129f4a9",
        "cursor": {
          "ref": "2b41e842-afa2-4a13-8e8b-9f2dba61f656",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "150f5015-1fa0-444e-900d-d1537fa3c3ec"
        },
        "item": {
          "id": "aa0ad96e-12ea-4057-a0a3-771d4129f4a9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "14777823-f704-4934-9710-403deb993fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3957da21-749c-4133-85de-433df9636a0a",
        "cursor": {
          "ref": "56a8aa3a-101f-49c7-a198-d567bb33f5bc",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fcd6a7d1-fc24-439c-ae7f-4ae7470e7db6"
        },
        "item": {
          "id": "3957da21-749c-4133-85de-433df9636a0a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c4ced3f4-9855-419f-8797-11bacd075f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec2e864-48a1-49d2-b61a-d6ad56657666",
        "cursor": {
          "ref": "bd63826e-d655-48b5-ab1f-6fa2ac1f34fe",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "76b6ec58-60e4-4778-aa1e-4d8222317053"
        },
        "item": {
          "id": "4ec2e864-48a1-49d2-b61a-d6ad56657666",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "71ef8b19-9b44-449b-bfcc-81674dadea9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4111e2-119a-4d29-90d9-0bc3a1d432f5",
        "cursor": {
          "ref": "d526a65d-fdb5-42d8-b147-c08049a1c0bf",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8ff139b2-e449-4ddc-b237-127678fd735f"
        },
        "item": {
          "id": "6c4111e2-119a-4d29-90d9-0bc3a1d432f5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dcab750e-9f0a-44ff-9819-3d8a81d53d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e854f9d4-9b38-49f8-a679-f98df63942de",
        "cursor": {
          "ref": "a6bfe3a6-de7f-4998-90fa-8ad00aa006cf",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e8e3df76-a0dc-4f99-8020-d11980c31b7b"
        },
        "item": {
          "id": "e854f9d4-9b38-49f8-a679-f98df63942de",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b23595b1-6505-4342-8b1e-345647ace2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7af50bb-76f8-4cf5-98ba-682d10352f3c",
        "cursor": {
          "ref": "e2889579-585a-4644-ae85-9c9007492cd3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "249b6e6d-d2ed-4152-8c90-a351e64530d6"
        },
        "item": {
          "id": "d7af50bb-76f8-4cf5-98ba-682d10352f3c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "13956e7c-025c-4492-b698-40f34eea4ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9915863-dfdf-4d2f-83a8-9f01d72da24e",
        "cursor": {
          "ref": "513fd276-cb46-463b-bd32-02425387e67c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a5ce83a0-dede-4eca-8400-b5b740c2b56b"
        },
        "item": {
          "id": "c9915863-dfdf-4d2f-83a8-9f01d72da24e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cbde9e9e-10dd-438f-8bab-7d32a8197594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1622d6-cab0-46e9-90ef-fa68cfda96ac",
        "cursor": {
          "ref": "2afd73ab-7d0e-473d-93b2-4a9a9e120001",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8bb578cf-8657-4f64-befb-21294e0f5564"
        },
        "item": {
          "id": "ce1622d6-cab0-46e9-90ef-fa68cfda96ac",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4b2d24ea-e2dc-4a7e-8015-0f969c3f7ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06123ed6-5249-4099-88ae-5993c3a82b10",
        "cursor": {
          "ref": "784d2a0d-af18-4aed-a72b-a4b6ef3bd79c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c780495d-ce18-40b6-90b6-607dadbcada6"
        },
        "item": {
          "id": "06123ed6-5249-4099-88ae-5993c3a82b10",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b00ef977-ed03-49e9-bcc4-189d5f2a35d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74369b8-015f-4b35-b74e-b08ad811c8a7",
        "cursor": {
          "ref": "93bf21cc-030b-4fd0-aa61-ebe1fcf0217f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "abaa6bf7-49c4-42b1-9803-2ef0a6719bea"
        },
        "item": {
          "id": "e74369b8-015f-4b35-b74e-b08ad811c8a7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3ed733b9-ffe2-4dfc-b8c9-6f6f1711e225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bbabdd-c6c2-49f0-939b-58b758e266eb",
        "cursor": {
          "ref": "8674d9df-1a48-45dd-bed8-7a821d5e9bbf",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d7970e9f-7aa2-4436-a82b-2052cec6d71f"
        },
        "item": {
          "id": "a6bbabdd-c6c2-49f0-939b-58b758e266eb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cb3cb29d-b17e-4442-be3f-20126a17093e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f80b0f-295d-42ad-a210-e9c2faa3b8da",
        "cursor": {
          "ref": "4dd2f8c4-3f66-4951-bc40-00d8e6cc93e1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c5303131-7fc1-4972-a0a5-1e0f9be4f64e"
        },
        "item": {
          "id": "b9f80b0f-295d-42ad-a210-e9c2faa3b8da",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f5c44ebf-af45-426e-8aa2-40b09807d015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44b92ef-0dea-45ff-b248-cee8a404dd7a",
        "cursor": {
          "ref": "c95ef231-83c7-487c-8e26-e30cdd123969",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e23b55ca-f062-4b62-a790-b1951d533355"
        },
        "item": {
          "id": "f44b92ef-0dea-45ff-b248-cee8a404dd7a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b207a0c3-f422-4b7a-9f57-091923edaf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f083c4-7865-400f-934a-fd2e2b31f8a9",
        "cursor": {
          "ref": "db776f5b-6e9a-432f-b44e-87e1e1fe2a83",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4aa83baa-b06f-4ee6-842d-cd638ff4a7e9"
        },
        "item": {
          "id": "90f083c4-7865-400f-934a-fd2e2b31f8a9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "06c771dc-0460-4ba9-af9a-a8b80771fcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e7c396-0cc5-4587-8b36-ce48eeaa7926",
        "cursor": {
          "ref": "6738dc21-c40a-4a9d-a7db-692fb78c9578",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9355f915-13cb-478f-9ca9-172984a87632"
        },
        "item": {
          "id": "78e7c396-0cc5-4587-8b36-ce48eeaa7926",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0af06f92-5fcc-4f00-9e39-e99c620a3cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39520a04-7f93-4f39-9e0a-d4869f5d8eef",
        "cursor": {
          "ref": "589c6e59-4131-411b-9dd6-afa4f866754a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a3148b2d-08fe-4f00-a987-27271d0197fd"
        },
        "item": {
          "id": "39520a04-7f93-4f39-9e0a-d4869f5d8eef",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "53d53a33-ce0a-44e2-b481-6a1057f25c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7de815-ac60-4e29-b5bc-013c4a37aa6f",
        "cursor": {
          "ref": "5e9c32a5-c6d2-4935-8698-b3efc1233bfa",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7cac251d-5bc6-4069-93ce-f9154f79fe71"
        },
        "item": {
          "id": "6e7de815-ac60-4e29-b5bc-013c4a37aa6f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cd534d0e-dadc-4353-bb5d-06f31a61c07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7386cd-170b-4e2b-ab52-680b31d5dc9b",
        "cursor": {
          "ref": "d8610500-c3dd-4c57-a324-0fd80d1c6238",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "91f0aa9f-5e8e-4f96-89aa-ef9916012990"
        },
        "item": {
          "id": "8d7386cd-170b-4e2b-ab52-680b31d5dc9b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "39b52a87-49ec-4be5-adda-5ee5eb9fe1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750788a9-954f-4816-b0e6-4f560d2354d4",
        "cursor": {
          "ref": "67ad78a1-aed9-4b2b-b059-1c7143ec2746",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "648230fc-cd73-4f4b-92cf-58f44ccaa0ff"
        },
        "item": {
          "id": "750788a9-954f-4816-b0e6-4f560d2354d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ac020580-36ce-4279-9093-0989a112e57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48384535-a979-48bc-b27f-c064f6d67b3b",
        "cursor": {
          "ref": "3fb949f7-1673-4e0f-8a71-8b417576bd11",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "21dadd78-60d7-4a1e-aa4f-d88c62fa426f"
        },
        "item": {
          "id": "48384535-a979-48bc-b27f-c064f6d67b3b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "44c2139b-af81-4d5f-96c3-097e55615df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece4bcc9-7c07-4c96-8068-c3d6d929a174",
        "cursor": {
          "ref": "c93253a1-1d9e-4a58-83af-9b6ed7566f64",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eae6bcb5-cd59-4e04-bc7d-5d41e610c392"
        },
        "item": {
          "id": "ece4bcc9-7c07-4c96-8068-c3d6d929a174",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3396b737-0e5c-48f5-9f41-4db58420bc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b1d0f1-42ae-49d5-8608-f21e06438a42",
        "cursor": {
          "ref": "2b817fdd-78d3-4847-b64f-3d3ab05ebca1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "778c42c3-93c9-4602-af09-067a5b182507"
        },
        "item": {
          "id": "a9b1d0f1-42ae-49d5-8608-f21e06438a42",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0caa58f2-1bc7-4b25-a5fa-2aac11779e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62267fc7-8167-484a-aeaa-82955c2a1954",
        "cursor": {
          "ref": "ddc28418-5f3b-4437-8cce-cac8662ea0ed",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d77ec0dd-3f3b-4571-95a5-bd3ce5dd7e92"
        },
        "item": {
          "id": "62267fc7-8167-484a-aeaa-82955c2a1954",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3cfc9abc-52f9-4cf6-bdd7-c56d971af687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5da9be-34ef-428d-93b8-f66a153db3a4",
        "cursor": {
          "ref": "4c740bce-6677-4c10-84ce-4f83e8472ad0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d620d66d-34de-4cb0-a68b-7d8de2d53e42"
        },
        "item": {
          "id": "9d5da9be-34ef-428d-93b8-f66a153db3a4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c041834b-0f24-413a-933c-ff1d71b75856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcc100c-0726-42ea-adf6-df8b52441deb",
        "cursor": {
          "ref": "cd3359e6-ca75-41d4-8e56-03377ba19ef8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d0e8af84-56cc-4965-a915-fa0e310a3f56"
        },
        "item": {
          "id": "bdcc100c-0726-42ea-adf6-df8b52441deb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c74dea11-cfd9-4212-9a0b-7f65b69909ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2af5bc4-f66c-4094-aba4-711f4015886f",
        "cursor": {
          "ref": "503b6b89-5f0f-4df1-9365-041c8834fba6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c55e904b-97e9-4161-9943-27390cc79f44"
        },
        "item": {
          "id": "f2af5bc4-f66c-4094-aba4-711f4015886f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dfdd87a4-9548-449f-b230-06253d3b6e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6a1db0-a61c-4a21-ab49-55a4c18c6bfc",
        "cursor": {
          "ref": "192840b5-7d7e-4f83-9d8e-fbbe2609fa30",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "722446cd-5def-4a55-9b81-53c91befd9e6"
        },
        "item": {
          "id": "3e6a1db0-a61c-4a21-ab49-55a4c18c6bfc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "28f5756b-4d51-4c05-a7d6-d03779dbbc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fa1e3b-95d2-4d68-9a6a-9c940bc07b8d",
        "cursor": {
          "ref": "2a695082-6950-4e6a-9013-a8f262f5cb0e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a3078b71-6ccd-44cd-9241-e7152dbfc787"
        },
        "item": {
          "id": "97fa1e3b-95d2-4d68-9a6a-9c940bc07b8d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "54e29622-5db1-49c8-aa58-4d55a99d3729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c6b245-d2a6-43c3-82ef-d307a8795623",
        "cursor": {
          "ref": "36e21a8c-6bef-4b6c-a02e-ee7beea57b44",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dd6f8057-ee3f-4e12-9c11-b418710516a3"
        },
        "item": {
          "id": "11c6b245-d2a6-43c3-82ef-d307a8795623",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cfb50638-8fb7-42a9-ba31-0ad339c328a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e18159-2229-4e87-875d-f09243e8b6cd",
        "cursor": {
          "ref": "4f3893c7-8d06-4468-9565-e30315226f7e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ea27575e-a97e-40fe-a6e2-bfad3a4355c1"
        },
        "item": {
          "id": "45e18159-2229-4e87-875d-f09243e8b6cd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4cd408f1-e4d6-4913-a294-f6d700f68fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d58fbc-7e7a-46e6-b2ac-ae4d923b567e",
        "cursor": {
          "ref": "d0056e6d-f9c4-4a24-b4e1-429b1ef3b989",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a8355007-14e9-46c5-b6c5-85547e83c8db"
        },
        "item": {
          "id": "83d58fbc-7e7a-46e6-b2ac-ae4d923b567e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a3295bcc-5fe9-4b53-96d4-d459ae425b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94554c52-935d-4cf0-bb30-871f61ff086b",
        "cursor": {
          "ref": "ad2b4fec-a665-48ea-a952-a93485c685d1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0c6c9644-d771-4803-87fd-757386bef83c"
        },
        "item": {
          "id": "94554c52-935d-4cf0-bb30-871f61ff086b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "63f0fa59-b8e1-48bf-b3aa-0b86211af8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcc0e7b-5032-435d-b0e0-a801f64c5981",
        "cursor": {
          "ref": "fa3f5f4c-ef7b-4388-b117-97973a4f3c4b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e0fd3fda-d20d-40cb-ab13-9ff8f2380681"
        },
        "item": {
          "id": "9bcc0e7b-5032-435d-b0e0-a801f64c5981",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0a6f3106-6a3e-4564-b5b2-3d12d9f3f583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aab29ac-3b2b-4519-bf6c-7ce5f4433593",
        "cursor": {
          "ref": "2b02cf8d-635c-4471-983e-12295a5db549",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b1051b66-8ebf-4fdd-bcb1-e8c42a3119ac"
        },
        "item": {
          "id": "1aab29ac-3b2b-4519-bf6c-7ce5f4433593",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fc71084d-d030-480f-9918-c1e17efa92ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db855022-b4ca-477e-b19f-5a9afa330d3e",
        "cursor": {
          "ref": "d0ed17f2-5b5f-4ef7-b663-48c453d0496a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "41ae9cc6-ab77-43d8-b20f-0af777ed8d5d"
        },
        "item": {
          "id": "db855022-b4ca-477e-b19f-5a9afa330d3e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c0e93d6e-9fa3-4f47-97b4-4cebe74c955d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d87ee9a-5445-494d-8533-21c26f1359d5",
        "cursor": {
          "ref": "56ba8495-455d-4cd7-9fd8-8648fafe43b3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7e005e5c-6025-4f89-92b5-fec06cbb83b2"
        },
        "item": {
          "id": "5d87ee9a-5445-494d-8533-21c26f1359d5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c7f74f2c-4d23-4a5e-9c08-c156b31fa190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9434f0e-20e2-4895-8f3d-4af166dd1067",
        "cursor": {
          "ref": "2b6f65cf-018f-4e3f-82ab-775a01fbf650",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9e79c5ea-5a1f-4868-9397-59ad8dd21272"
        },
        "item": {
          "id": "b9434f0e-20e2-4895-8f3d-4af166dd1067",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "72904153-4e0c-4499-b49a-a6af4d1f06bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2eafd2-5be2-483d-a05a-c9a99e04d87b",
        "cursor": {
          "ref": "91583f82-b080-4dad-97ca-c11d27b6f343",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d7af42a2-fe55-4bea-94d6-065eb5aa5d83"
        },
        "item": {
          "id": "3a2eafd2-5be2-483d-a05a-c9a99e04d87b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3fec4330-d76e-4ade-af2a-fd3a492f9df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa3d3e5-55f8-4f93-8237-ae937e58026c",
        "cursor": {
          "ref": "bcc2680b-9a56-4b3c-8dc0-3dd62e6c9f9a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "db2a9e21-4512-447c-84aa-87628135e02c"
        },
        "item": {
          "id": "faa3d3e5-55f8-4f93-8237-ae937e58026c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c6ff7495-db38-458f-8550-e3599eee0da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9276bb08-95f8-4afe-b238-bcbb760ed50d",
        "cursor": {
          "ref": "55e3cc25-2275-4e3d-a7d5-d7b2569f1318",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "618745fc-4228-467e-b75d-e2eee3bcd3f6"
        },
        "item": {
          "id": "9276bb08-95f8-4afe-b238-bcbb760ed50d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2a246a6f-6303-4813-bfc4-d303c8009885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8844b0fb-5a3a-40d5-bad7-134e4935253a",
        "cursor": {
          "ref": "a4f89ee8-21e1-43ad-8e60-8d380ccd8095",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "48437f8d-3a02-456e-8289-f61afb012522"
        },
        "item": {
          "id": "8844b0fb-5a3a-40d5-bad7-134e4935253a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b9f1dbfd-2752-4f10-870a-bbd1ba663db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cbe691-4a31-42b3-8f16-a8c7fbc25b73",
        "cursor": {
          "ref": "c63dc922-43fe-4d1a-b2bb-75260b592916",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "424e3d77-40ad-4780-a2df-8ce44f51ee88"
        },
        "item": {
          "id": "21cbe691-4a31-42b3-8f16-a8c7fbc25b73",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9f12a18c-14af-44d7-83e8-f5d25d4b3126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d1756d-fd26-4244-9479-dc4184970da2",
        "cursor": {
          "ref": "735d42b5-c2f4-4ff1-ae95-187b6206952b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "14c9b3c7-1232-4677-a8f5-0f2ac0803416"
        },
        "item": {
          "id": "d3d1756d-fd26-4244-9479-dc4184970da2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "166f7865-fba8-418d-b049-cfacbdc89782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16f20e3-36bd-44c0-9eff-de9477e82624",
        "cursor": {
          "ref": "dfe391bf-4774-49b1-94d3-7503dfaa26ee",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "685a3e0e-2032-49b8-9603-53b57af8003f"
        },
        "item": {
          "id": "d16f20e3-36bd-44c0-9eff-de9477e82624",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d38465ab-e28f-4c15-b208-bdc2cf4fea1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829691b3-72d9-4a0f-a7bd-f117025fdfb9",
        "cursor": {
          "ref": "ae672bfe-efb2-402e-96b8-a40869c4a52a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fa279fcb-dfe4-4fb9-acaa-e9eb6402303e"
        },
        "item": {
          "id": "829691b3-72d9-4a0f-a7bd-f117025fdfb9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9bbd438f-5ca6-4c4a-9d85-f8d2f48ccf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104cb650-a745-424e-b1b7-24cdb47d20f3",
        "cursor": {
          "ref": "22a5e855-3cab-42be-af0e-b4cb789ae76a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "abf256c7-e831-4a26-babd-8ac9f321fb3c"
        },
        "item": {
          "id": "104cb650-a745-424e-b1b7-24cdb47d20f3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0f54fa16-ea8f-44a6-9547-96d06de6ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014d35b-a052-4f6e-84bb-d676bf22eb2d",
        "cursor": {
          "ref": "67a96190-a917-411a-8cb7-33d55c273df3",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "adb26261-441e-4e7d-9c90-1c86652d31ac"
        },
        "item": {
          "id": "7014d35b-a052-4f6e-84bb-d676bf22eb2d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "39c198e0-6860-4afa-bb51-d6bfac7086ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350e7af9-20ad-4b06-9204-c0bbc758f498",
        "cursor": {
          "ref": "9c417ff9-a03e-43c2-9115-22f344ca5203",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7488e668-0df2-4f62-843f-7b1f79239183"
        },
        "item": {
          "id": "350e7af9-20ad-4b06-9204-c0bbc758f498",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ddfe9624-7821-4bd5-8e61-3a4b09b1b8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6880510-f668-40c4-8e7d-af11c1bcb035",
        "cursor": {
          "ref": "75509851-3d96-4f17-9c58-bfa15fd79052",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2f5f058f-66e9-4cff-93e7-16c72a4747a7"
        },
        "item": {
          "id": "f6880510-f668-40c4-8e7d-af11c1bcb035",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c207a1fd-fed0-4311-a71f-e8a9ca65340d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfc4453-0c9d-4d07-8158-662252354e2b",
        "cursor": {
          "ref": "e1a717cc-d97b-4fab-ac2d-2f82abce7e93",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "86bbec36-0ff1-4c3d-b7eb-1f1906cda8f0"
        },
        "item": {
          "id": "4cfc4453-0c9d-4d07-8158-662252354e2b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7089b22d-348c-42a3-b203-4a9655fe75b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34037d9-51b0-4a85-a523-4d903e64b507",
        "cursor": {
          "ref": "df58bbd7-652d-4939-875f-7ffaa55bd15d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "06e2432b-521e-41e3-9d68-8d9f0033127b"
        },
        "item": {
          "id": "f34037d9-51b0-4a85-a523-4d903e64b507",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b527df1b-496c-42d7-867b-b17d0bf0b30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f402ff9-9890-4439-abb1-95cf350fcf10",
        "cursor": {
          "ref": "1dbb8780-bf36-4ecd-b368-40f9f1b8ab9f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b5826938-1dc3-492c-b2dd-8f39579f12fc"
        },
        "item": {
          "id": "4f402ff9-9890-4439-abb1-95cf350fcf10",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "281a4fa5-7290-42f4-94cb-2fd7d1c6a6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e2d62b-484a-4dda-9b2d-49547397cd6c",
        "cursor": {
          "ref": "cbc3b0c6-651b-4611-8fd6-f6b7ed784489",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "efec52b1-2426-46f8-8e99-157d2fadb5e8"
        },
        "item": {
          "id": "f2e2d62b-484a-4dda-9b2d-49547397cd6c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3ed4f512-1b42-48b7-acef-196147a94708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1502b1b8-15df-4b50-8711-947d7f304f22",
        "cursor": {
          "ref": "a0f7947e-88cd-41fe-a792-2bf4a2982ec9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e1ef8be6-8553-412e-ab37-19e85dd665cf"
        },
        "item": {
          "id": "1502b1b8-15df-4b50-8711-947d7f304f22",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6b751969-c611-43aa-adab-a0fdffb14d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb23bda2-43ab-4a18-9a8d-c7725643fe0e",
        "cursor": {
          "ref": "db901134-bb2d-499c-a286-f459d6d6f8d3",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f757465-21dc-47aa-8d85-ceb6a6dd1fdc"
        },
        "item": {
          "id": "bb23bda2-43ab-4a18-9a8d-c7725643fe0e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f1d37d28-4f07-4ab0-9c8b-4c24a4f7272e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2562137-eac2-4e3b-9954-0b9503480292",
        "cursor": {
          "ref": "f4677170-d989-41c4-a054-d003e466fb35",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cb2fb301-6492-48d2-94ee-aad68922a939"
        },
        "item": {
          "id": "c2562137-eac2-4e3b-9954-0b9503480292",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f7452215-21a8-4cd1-8e3c-b4e60d089fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d5656f-ce1b-4115-bb31-3660500eefc5",
        "cursor": {
          "ref": "6f2b2d4e-de87-4261-a4d0-5c0fe6c0dac0",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "07d323d0-a38f-4289-b70c-f65538445fec"
        },
        "item": {
          "id": "a2d5656f-ce1b-4115-bb31-3660500eefc5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0cf49220-0a0b-4142-9490-94112ae114b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632b023-5bdd-4dab-bd31-dbe5628166fe",
        "cursor": {
          "ref": "e310a313-33e9-4d5d-9ff4-a18e62048a3b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ae5ecb6c-bd0b-4c61-aa58-ebeeff2ee235"
        },
        "item": {
          "id": "b632b023-5bdd-4dab-bd31-dbe5628166fe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cc7d7503-82b7-4590-9ad0-46075489cea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13449f22-9550-43b0-9be3-a69ccbe9a811",
        "cursor": {
          "ref": "9d86475c-9ddb-4f52-a973-53f2fd376352",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "804522eb-cb20-445e-aab8-68cbb35bbff8"
        },
        "item": {
          "id": "13449f22-9550-43b0-9be3-a69ccbe9a811",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "302e9625-7f79-419c-9fcb-0a8f00955413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfe72c2-d61c-4e5e-a46f-2521e74de8ed",
        "cursor": {
          "ref": "8c9fd906-39e2-44b4-8725-53b200165e23",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "df074a84-3ae9-41af-9d0e-fac7d2eb33dd"
        },
        "item": {
          "id": "dbfe72c2-d61c-4e5e-a46f-2521e74de8ed",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "52129e40-90bc-430f-8122-e7e072aed9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf791b6c-ce17-4aa3-a5d7-c9754260174c",
        "cursor": {
          "ref": "6b780850-fb56-46e0-9c78-57449584b66e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "16b92d4f-3ae2-49c1-8cc5-d4069faab9cb"
        },
        "item": {
          "id": "bf791b6c-ce17-4aa3-a5d7-c9754260174c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a6570e2f-1a51-4c3f-ac35-5f2d7f093fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a21032-e1f5-4b0f-9f3d-d1e425521347",
        "cursor": {
          "ref": "cf47da6c-f97e-4f35-bb37-787b11e92bd7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a882b702-0a20-4b0e-8c7b-15735db5ad53"
        },
        "item": {
          "id": "c8a21032-e1f5-4b0f-9f3d-d1e425521347",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6823a48d-73a7-4382-8f39-a8f70cc25984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621b2765-cfae-4b73-9116-1a2d4e438d01",
        "cursor": {
          "ref": "b981dd9b-2d37-424f-94ca-447608291071",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "939bcea0-4720-4b73-b8a4-687ec2b5e67a"
        },
        "item": {
          "id": "621b2765-cfae-4b73-9116-1a2d4e438d01",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "10ab7023-fd05-4a8f-8bec-89caeec0c8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6e3f6e-8f80-4e44-8e11-36ac3fb8ef20",
        "cursor": {
          "ref": "f7887ef9-e132-4fea-934d-18e03fe4bbf6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e281bb80-ef62-43f1-a04b-4d02e2835344"
        },
        "item": {
          "id": "db6e3f6e-8f80-4e44-8e11-36ac3fb8ef20",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eb27ff60-c3ac-4579-8936-0c2e7ab3d3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473d5357-f447-4382-9f92-8a7b1a01da13",
        "cursor": {
          "ref": "6073addc-e957-4003-ae3d-0a2df771d865",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dfdeedf6-814f-46c7-9a4d-69b8d1694ee8"
        },
        "item": {
          "id": "473d5357-f447-4382-9f92-8a7b1a01da13",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "752956f3-ea9f-4c1b-b167-06e8cb6ffa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c00aa26-c785-4d51-8b7a-9ca2bf0fb788",
        "cursor": {
          "ref": "f9111808-28b1-4b9c-9380-ec413c3af2f6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "60f8541e-1f85-4d7f-865b-ee1bfd2a0872"
        },
        "item": {
          "id": "1c00aa26-c785-4d51-8b7a-9ca2bf0fb788",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bd3ed1f9-7c3b-49f5-9dee-e5a9a1029e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b10640-a685-4504-a3cb-ca03fa20ea87",
        "cursor": {
          "ref": "6a0e9fff-62e7-4dc8-837a-34ac4bb42dbb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ddf43d1c-cdea-4b76-ad55-590ea47b4b96"
        },
        "item": {
          "id": "f9b10640-a685-4504-a3cb-ca03fa20ea87",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "33fedbe4-1162-4cc1-bd6a-68f7162366ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828b37e3-11f7-4cd4-b581-b78b178a255d",
        "cursor": {
          "ref": "1d96237d-9468-43ac-9488-b7e0cb73b82f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1e9061c1-99f3-45d5-9fb9-00edd657945a"
        },
        "item": {
          "id": "828b37e3-11f7-4cd4-b581-b78b178a255d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "552e5a9e-8a5c-4b39-817d-428f5d7e8204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41e3ceb-ea61-4d97-b3bb-e84ec349b6c7",
        "cursor": {
          "ref": "64a0358e-a273-48a0-b029-29738bae7b6a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bd43a821-f71e-4f3c-9db3-c3dc8ddeb1b8"
        },
        "item": {
          "id": "f41e3ceb-ea61-4d97-b3bb-e84ec349b6c7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b3cb97b1-1781-4294-a507-ed8463a108d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0066a045-0e4d-48b5-87f4-f0deedddf0dd",
        "cursor": {
          "ref": "b3a07d04-bda9-4089-acd8-e2b309c402da",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dbfa130c-b29b-409c-a9a9-ac58aaea2a7e"
        },
        "item": {
          "id": "0066a045-0e4d-48b5-87f4-f0deedddf0dd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bb910b6b-9027-494e-901b-c8846191175c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f42d2f7-de7f-4ce0-beba-8343cb1af1cf",
        "cursor": {
          "ref": "70afa9fc-d821-4701-ae8e-9dea02506e05",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "25c94615-db7d-4d76-b79c-eb2ac229b0c7"
        },
        "item": {
          "id": "6f42d2f7-de7f-4ce0-beba-8343cb1af1cf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa1a0c2d-fb67-4cff-b92c-1aa07526117f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876f73d3-1de5-4429-9d00-9672c56d9365",
        "cursor": {
          "ref": "4b54753f-e726-4e99-94e3-1b6924762e61",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c7e482de-e2d5-4ce5-9a52-5934a6f53c5a"
        },
        "item": {
          "id": "876f73d3-1de5-4429-9d00-9672c56d9365",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2ace6ea7-3c8c-4357-a8e2-686e6e8a9373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d91b943-9ad4-4cc0-8e5a-58216287de17",
        "cursor": {
          "ref": "f23ba97a-5ee9-48d7-a2b6-48d486c4057e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f442e396-2fe7-4c4f-b475-e3a0e6c39078"
        },
        "item": {
          "id": "1d91b943-9ad4-4cc0-8e5a-58216287de17",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1fee7a53-783c-4d71-9e68-b5b7b06d459d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc9c5ab-64fb-47c5-b0fa-63ad7dde6010",
        "cursor": {
          "ref": "0debf8ec-d1fa-4172-ad4e-d0dcea0aa5c2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f8202a2d-9fbb-4dad-aeca-8f7c49a92559"
        },
        "item": {
          "id": "afc9c5ab-64fb-47c5-b0fa-63ad7dde6010",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f2a14a47-ff25-457c-a92a-d0fe68b0c614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a18a51f-f2e7-4bd1-bcb2-1ab48f688d2f",
        "cursor": {
          "ref": "ccc3b5f9-d85b-4fbd-9915-0378e3b15db9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9e16ba1b-e8e0-43ca-9372-cf2ad9220bf9"
        },
        "item": {
          "id": "7a18a51f-f2e7-4bd1-bcb2-1ab48f688d2f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ef5f29fd-d949-40e7-a257-504e185c26a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ba782c-1bc7-426b-b975-106a01942c6b",
        "cursor": {
          "ref": "321c56eb-de6f-45cc-b9f8-0f798ad16928",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "08b4ed71-b81a-44fb-b656-24d144a572ac"
        },
        "item": {
          "id": "78ba782c-1bc7-426b-b975-106a01942c6b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ded2a38b-f9f8-466b-8282-d06ce8396333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e9944b-4a97-421c-a153-10a83e03f226",
        "cursor": {
          "ref": "53fbf350-5f6c-4712-88a8-58323c2270ec",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e2a4294f-8f2a-4ef4-8372-89512c1efa77"
        },
        "item": {
          "id": "25e9944b-4a97-421c-a153-10a83e03f226",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "da95533b-20b1-4ae7-b5fe-8dfcaf4256db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35c313e-3716-4598-ae52-5ce2373b1f5b",
        "cursor": {
          "ref": "c79c6560-624a-47a9-a2f6-fb0b69ac7915",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "75e56697-46eb-4147-9d51-a070afae2607"
        },
        "item": {
          "id": "a35c313e-3716-4598-ae52-5ce2373b1f5b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d5b629a3-bd71-4dff-ba36-b24eca78d90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "df1f26f9-7a8e-46d0-9bb6-30c9d90dce97",
        "cursor": {
          "ref": "297767b5-7fca-4eec-b228-16bba41fb1bf",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "36cda6e6-5aaa-4011-8694-eb0471560463"
        },
        "item": {
          "id": "df1f26f9-7a8e-46d0-9bb6-30c9d90dce97",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9cb2c2c1-101b-40c0-bca9-2b5d9f9bf69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f1aabc10-1b8e-475c-b43c-9ccba6c9dc80",
        "cursor": {
          "ref": "06c93bc2-3e77-48ed-a515-c20c040a3fae",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cd5273df-1908-40be-8717-40eff135e272"
        },
        "item": {
          "id": "f1aabc10-1b8e-475c-b43c-9ccba6c9dc80",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ca63d065-091d-4e40-88ff-14ba1583a9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "b2288ecc-e71c-4e76-853e-24d552564f19",
        "cursor": {
          "ref": "2ffe9430-9c99-4a01-8ca2-6a87b9ac6758",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81e67d96-faff-4bab-a420-1f0e2de68fc0"
        },
        "item": {
          "id": "b2288ecc-e71c-4e76-853e-24d552564f19",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2407a22c-da20-49e4-96ec-edc8f4fd5b91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2288ecc-e71c-4e76-853e-24d552564f19",
        "cursor": {
          "ref": "2ffe9430-9c99-4a01-8ca2-6a87b9ac6758",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81e67d96-faff-4bab-a420-1f0e2de68fc0"
        },
        "item": {
          "id": "b2288ecc-e71c-4e76-853e-24d552564f19",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2407a22c-da20-49e4-96ec-edc8f4fd5b91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddd7728-ee32-4dda-85a4-aea627fe0424",
        "cursor": {
          "ref": "37280010-bab9-498c-9f84-69623c125987",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e4fca385-e25c-49c1-9c47-494558b9b2cc"
        },
        "item": {
          "id": "0ddd7728-ee32-4dda-85a4-aea627fe0424",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "684ccd19-8a38-40be-8f50-011e5f1fa690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525669c6-3923-44df-ad9e-8d2f9304c86b",
        "cursor": {
          "ref": "3ab09802-8a12-4870-84b5-7dfa32744b7d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e758e990-0003-4cf6-a158-aea7d8736f2a"
        },
        "item": {
          "id": "525669c6-3923-44df-ad9e-8d2f9304c86b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aec53fa2-0c44-458d-877a-5e6cca7c18d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}