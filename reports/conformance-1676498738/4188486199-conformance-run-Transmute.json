{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eea5d3ee-af53-43d2-8020-89f320cc4a42",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ac2899b8-4b91-44ab-bc0e-3caea60a4386",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04f8d8d2-cf89-498a-9687-e0efabd14f8f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "095b232d-81d1-4593-9d25-db43305cc6f0"
                }
              }
            ]
          },
          {
            "id": "b2874d00-9b0a-44e6-80f2-622da8094324",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b716fc2c-3d06-43b8-a872-ef2e9a6bec21",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a905c9f4-707c-4ea7-bff1-1ac133aabd2d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "63c926bb-5eb5-420c-9271-23ea2609cd61",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "001ed8ff-0d2a-49aa-a88e-55aa302b473d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38941e5d-cc7d-49dc-865c-66a7ae526272",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5eff31a-ad0a-440a-b6b1-32fe9c636486",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ffdba94-84eb-40de-8c1d-478c9964efbc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "483a06b2-6603-4c42-8bfb-2c721ac8b977",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "500ca8f7-be8c-4ace-8bc2-1dbf509a02d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2474bbbf-7f79-49c4-96ef-3a1da5009cbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f987ef0-ad94-4374-8f70-f5dbca2cfbb5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44c88603-ac49-45b7-8372-c4177fb8893c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8962d632-e9bf-41b3-981f-7baa5665087e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1e8fbc7-35f7-4224-bd33-3df2d707e281",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aad44e87-a983-472d-9b3e-9c1d37a8d649"
            }
          }
        ]
      },
      {
        "id": "46e00202-0d51-4a9c-a60a-47a608792823",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "76db21cc-917d-4a3d-b03b-e3662d9eaa63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f2b81ec-4948-467a-baeb-6b968773221e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "209cb506-2d22-440c-a906-54152f103114",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7bb531-6928-4acf-802a-7bf8d2401dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb36c707-3297-4974-bcab-cd034e3308ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82059b9-b675-445c-86c8-b75b1aa7d33a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786a4c50-b6e0-4c75-85f4-ce374c3ecfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79fbaa0d-5e08-471b-a662-394baa0413a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dce9d7-bb23-4e20-8fb3-fef6b11e402f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21b5402-427b-44a4-aab7-b5e04963c48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c23a512-2ad2-4a8a-8c6e-12387bad65d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41925213-74e4-448e-b33b-f2080707083f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7febe1f-4273-45d7-a553-c3144317e584",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48816a6-1c09-41e0-b4c8-b54fba6e1ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7df72f18-5f3b-47ea-bfa3-12dcdf13f940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccaea46-017b-4cb7-b47e-4758fb2bd81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48957904-d3d1-4eaf-9169-1433c930c394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbd21c8-d3a4-4427-b722-385b62aa10e5",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f1b425-8ecd-42c9-9f9c-660a551c1ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4302ccf5-ce23-40f2-9607-88861b0c22ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faeaebd-9bdb-4c56-b7f5-cec6964d347f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "bc577713-f427-4419-9a3d-e31235948d6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f56fc81f-292b-4429-a4e0-984a4927c0d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49be9d86-d77f-4f3d-90fe-3257b61d9427",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b213203-2d6a-4c62-8904-0513a8b3062c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc2a43a1-6a9c-4482-915a-407b02341599"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff912fa9-e9ff-4c86-9ed1-28b1d583a646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "941cf0d9-9d1f-4f89-9592-6fff2688f78a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "742f9362-92ae-4218-babd-47536958424c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f014622-7657-4e77-b950-10daf7d8659a"
            }
          }
        ]
      },
      {
        "id": "1a7ba5c4-4139-4df7-8236-8b1d1545a29e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3c527c13-20dd-4fa7-9de4-61d4d28263c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8eeddcb1-8ccc-4eea-b946-868e9c9be834",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "af615181-b540-40cf-8889-0947d4252624",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bc172a-b1aa-46f9-bb8b-8ca4a97283a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26841707-e9cb-4995-9cbf-da8245c83b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5b0266-5557-456e-806c-c236850275d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "761fa244-569a-4f10-88df-fe77121b58fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e20302f-448b-4bbf-8769-0ad53ce9defd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a884259e-3647-4b91-896b-9b1c61fa553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46e8462-5f0f-4142-b884-5d03b7d53ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c023e85-8eb6-4749-95d5-f5ff7aa40ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28c4e06d-3980-4f76-8f35-a1fa0d16d9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a155e7dc-3618-4a1b-9dd0-6e0e7785de05",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e7192f-2ec7-4297-b865-be6bec170ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd7d1c3-f446-4168-80c2-f825eaa4a504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbeca349-8c8d-49bb-a416-b407182ba55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f720fd6-72f2-4230-afcf-029dc9fc74d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4b1a76-33bc-4612-9c60-40d807457e9c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8e1db8-ed28-4666-8468-125d8bb6039c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db76554b-1cdc-4260-8a92-32dfa41cfdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197a012f-6df4-40ec-a7d1-ed685acd4f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d1b5725-15ca-466b-b050-307a38f3b8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae979cc4-5b40-4f60-b51d-28585c85a8c4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bfc5ff-936c-4a4c-a6b9-c38b18c56986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7782506-4938-4e87-9620-d6535ba44917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3106f24-bc68-475d-966e-6c3005baf2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d4f2dcd-1a1c-4692-a8e4-3a72e6ebb155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b329494-7a11-4701-89d1-8800d2f9cecd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec41292-9ab7-4d8f-a7f0-4e7bda5d5b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d227b8b6-2c65-47ef-b1be-32044eb62f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d56d04-e633-41aa-98db-b8d6faeedece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb3a5fb8-ca1a-421f-9b83-70addcf94984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827fddca-5bfc-469f-883d-2240942c8cd1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6720a596-63b9-4506-bd06-1a537f9a2b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9b8832-c0e7-4e1a-88ab-e8d52f2862c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0f345c-3ca0-4010-bc11-49d966d26d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8a6256-3818-4527-a0ad-8cc5e378e3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37998141-d993-44e1-89e8-68c25ec84477",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63555fb9-21de-40ae-a8aa-4a2d0fe0f4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5f04a7-6423-4c97-acea-f4d71ac8a4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d977d68-b31a-4daa-8fe9-5e9f6dc48b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd417494-60c9-449f-bee7-58cd9957b698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4123fd-3590-4872-88a3-289f194f61f5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34608cbd-8405-4f2a-81c4-decb0b19b13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19da6b51-c8cb-4921-9b15-f0a1792a7200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7dbfbd-24a1-435d-8f24-bc80307c66e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0393732-668c-4f8e-8ec2-11b50ee9f7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a30217-aa0f-4378-a8d7-bb8785acf033",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105e76ac-2655-4256-926f-34be873ea22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67605778-8447-470a-b3db-35d3503ae9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51c0fc6-1937-4858-9e1e-b3ce8f09578f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77a11f8a-c841-44b7-aef7-75eea5b3efdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b28d10-f8b9-41c5-8330-913a77f42992",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a81efb-9298-4e85-b58f-27e4850d8a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6f97c9-ee99-48a0-9214-6ddae8c60604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c342b3-752a-4c5c-bad6-f80bc7f77541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ef542c8-7dad-4a01-bbea-058654fb9133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36fa834-a574-4c61-aeb4-cc1be89ff166",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268ea143-5c9c-44b7-8a00-17d37008469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848dcafc-b57f-41c2-b4c7-37c57679f8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555f3f5f-d373-4cb9-aa2c-f3a6fe3091ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ed5524c-b186-4643-8c8a-018fe84dcc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e3ea74-5e7f-43e4-a254-3b89a5030ab6",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196b5ea9-e780-4ef9-a1c5-61eedd426843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91479147-ba0a-4013-aa06-a1c7a6979930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22882c75-f5a1-4a89-92cd-74cb0d968fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6af753c-2217-40f9-983e-09b0d00cf1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734c66d6-5432-4bbe-8749-e229aaa39812",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cb018b-239a-49cc-bc06-dfad5ef59076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b88e22-b856-494b-beac-5154ac75ac77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e21662-be8f-4f67-a928-b4d5708b6ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dae839ae-3843-4476-ab9c-828d4596f3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba09fbee-473c-468f-a2a5-967898db49bf",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13e3079-d9b5-4499-8172-b9b0dff8f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62f995c-fbbc-4663-88ce-79516dfd7b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c00be1-6ab3-4fa7-9849-8315c0cecd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2e206ba-1797-4cd1-80b0-23a718f3ebe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5277b850-c076-4593-86d0-6cfdedf50e8d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b9c21d-5c29-4de6-9a90-b6f4a4b4fd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910858f7-4da9-40c8-a221-05fd125aa5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88214d73-5760-4910-834e-c9c44502b5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a90be41-913f-477d-ba7e-138a7dbb3c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb20e0f8-3c7e-4708-8518-2a9cf50da6cc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38433fc-9b27-4667-803c-e0fcc06c4100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb182662-cf3e-4133-8d96-f97626595bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c3db1e-acba-4977-9fe9-3c8d00443cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72c3de14-4779-416d-8c30-01f70cc9b2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0370b59-3719-4b87-9f35-c773d70e4b53",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138992ab-85ec-4501-ac90-601bfe9cdc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd5d800-6fc6-451b-bd54-f33520671abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d7004c-60d6-4a17-ab37-4c4b4dc37bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c21912b6-3a6a-489a-9247-e0adc00ef268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e78cf2-d1f6-474b-b5b9-64888004abfc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aefe3a6-ff1a-4484-a6fd-433b6be34282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f604206c-8fd3-4f97-8c55-9b7d2c02f9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751eeccb-96b1-41a2-90f3-416694b59b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf2876c-357b-48b5-a7b2-d1e7d73b0f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109c35b0-d43a-4ca0-8a44-11ded95d3343",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec92058-cbcf-4d4b-9819-cce01323e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec523be2-bfdd-4c67-aa59-c2d2452506af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fdbc2d-93bd-48d9-b4fd-fd773ca846f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67ce89de-2ef7-459f-a7dd-f5c9105bbec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146a35a1-7093-41f9-a5a3-7feae5974435",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2b8f93-fe42-42f1-9180-899cd3e077c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1eea3b2-331f-402e-8515-2300def125da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce49d188-6bae-4e3d-8b87-47984064883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d12e240c-95ad-4b9b-aa84-be98cccda0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86da6a04-a48e-4f05-a734-eb3507d38f1d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfb98c9-cf21-45d7-b958-92eec66a337e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eded57c-44ca-41d6-8fd2-1257d8662625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddf7793-3020-40a4-83ad-780ff5c68046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6d3f6b-f91a-4405-8b03-b8de7c944a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8169d2c3-741f-4f59-9721-289759cd174d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05557d14-b7ec-4569-b7ba-a5235a473a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b7649c-735d-4be9-8dfd-a88f407e72b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72dd8bc-9b9b-4bfb-904d-15377e5ede64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46692601-5572-437f-8baf-69218b02669c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a8a5c7-9eec-4a17-98d5-9b4325fc05b9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7459a456-d062-43d0-9db5-87fc54bec025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54efdc22-411f-470f-b142-1b2ede986dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aab32a6-536c-417c-b9bc-4227d4592907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb489423-96b4-4ff4-9e2c-319540988dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a40909e-db9f-4112-8623-897b1cff8306",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1197d51f-681a-4442-8a74-609daaf6b8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a817a73-0d5b-48ed-8952-fcc95ad22e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d8d7b6-b7c9-403f-9bba-8ae6a0d1634a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f276e02d-df4b-4992-91bd-94ecbaa5c973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8889f135-5038-4e6f-9d13-2b5fa7131a8d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0235b7f-b616-46a8-bff2-4d24725b0d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40396293-51ea-4373-a06b-a4ad281b7eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be6f22a-3508-42de-9f23-e98e1115da08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7457fa-a087-4a22-bd1b-e0d0a9f60812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206fc977-77ee-478a-a265-d7eb9f897463",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a0982e-d6aa-450c-9978-8899ad9253a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecc0091-0a73-40b5-8b10-6ae11a9521f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb94c43-00e8-47f7-9509-2b94e1825e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "729fa03a-f287-4e08-a7b2-c85d53d324fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01399ab-5d13-4794-8a0a-feebe58e78fb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6615c711-ee51-4fd5-ba24-f7c2375ba333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9bde07-a665-40c0-a3c3-75f9498a9340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add7f220-7b59-4060-91ee-b53999f24689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93bbb61b-2f2f-44c7-9c00-0a414cda077e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4229be79-6610-455c-9606-ef969bd1f935",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c694c4-ce09-4e07-906f-8c025247bf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda27f26-ad98-4287-9769-00b7c39dd278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a36b9e8-7039-4d29-9434-ae7a7c26e40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c02770b-47cf-41be-92d7-34a2c0a37ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fbbcfd-392a-48ce-be3b-6a377750a33f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2b460c-f714-4714-87a9-112b9e21409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbc6a3c-31de-4d0a-a116-b2a4b75d5f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dde81d-d656-4d9f-bea7-fe5f66671799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "869d44dc-3072-4070-9e35-4bcd2ef4d2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccd712e-9017-4595-89ea-1200a8a18853",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafcde31-5b45-4bb4-8d52-1bfd1854a37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57f26a7-6a28-4303-9d8a-188e4c71f2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fa224d-09f2-424b-9e9c-efa700109e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca65eb1-259a-4496-8375-f8b61b49ad95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd7def9-378e-46fe-880a-9788b05fa270",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6804a331-ad47-41da-aa8a-0e91765b7910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffee7cb-7ece-4ab4-b3ce-051c5c354a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb0ef89-87b8-40e6-8c9c-df9328b68997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f272d31f-d419-4a89-bcc7-04928832f7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd594e54-1686-4458-a8fd-10da45b42863",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f219890c-ee25-4eb5-8495-f0202b51678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0638d38d-45e0-4e5a-9bf2-aa74aa9e18c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ee0b41-a65c-4fd3-baf0-c03cc2547344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9799204-f3af-4698-a783-b7eaaa8dd882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9893da77-2f5b-479c-b03b-9c2459051f09",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c9de29-ebc8-4b25-99dc-0ba4a79ceb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85ff6e0-8de3-4c6a-825e-3d83b870ed65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc15343-4817-4517-8d83-0ebf4fdbc977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85959bb6-be9c-4543-ac36-9f9defe4158b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808d3b33-0b66-4af6-be4d-1682e01219a9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c60fc58-8dc9-44e4-8ea1-f46c1c90c09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e86fae-9332-4b89-b0e6-bf5d10998af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cf0a59-3998-4666-b5e2-dc7a1e2dfee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75ff6bda-2fa9-478d-a682-7337e6bfb207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d35b17-57f3-42c7-9676-361ba27cc8d6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3cce63-fa10-4b23-9db6-497a5c5a6300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce8cad1-2747-4f53-95f4-c5ea096c92b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94fdb11-10c3-48aa-a522-1d02f38106b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "26197633-725e-4a1f-b083-496149c72a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a30afa-5754-4fdc-8d3e-6cef143a0236",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a745c4-3c71-4e84-bc17-7b4eee3046a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4c13d4c-27f8-462a-ae6c-372bbc4153e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b71488b-d177-4f47-997c-0f142a550b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d8236f-4b83-446e-9240-d4b1c9cfa161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e16365d-8278-47f6-923b-75d85e0805ac",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56325293-1962-4299-995e-c7a4375f923f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ec167e-33d1-46b4-a957-16346360a970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1498f25d-d3af-467c-ab66-1208e224eeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "078afae5-3d4b-4ca5-aa38-22f3dfbbfdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2426d460-f1b5-4eb7-812f-5f2e04e8c7db",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eddadb-5bac-4f60-ada1-335b42d1c473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28be7069-34cd-4bb4-a4fc-845f13938a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a54fa20-166d-400f-bafd-d4fc00ab5464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8da74311-f158-45e5-8041-d79561d2c7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbd6a2a-0390-43f7-b4c0-0cc0df84d184",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50b7e5e-b7e3-492c-b2d8-fe9b1481de9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7dbc23-6b7b-407a-acb1-a2adc82654b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e857422-5218-4862-9bee-9582122f946c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c08a81a0-4b1e-4f55-ab22-41f4c9a80762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d464a6-6783-4491-af8d-1cdb42febd1f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64ea505-e241-4a7d-af2a-35a6405b745a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f073ee95-8997-464f-a8d5-9ef5b78142ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78367c79-fddf-4bcf-841d-85b845b1487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c18339f-0862-44a5-ac57-d14d6573c9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195bfaf0-64be-4a75-95da-ce7b13a8a6c7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50b2d1f-217d-4f9b-a508-ac090873358a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01500670-4680-47bd-a277-065252d23675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f076e3-acc3-4842-9e67-fcce429b3422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "43d98182-1b1f-4869-92bd-1dc733dd825e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca22367-1eaa-4422-91e8-5964693a471a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5df79a-6982-4334-adac-a1af339b00ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1448a3e-7fb5-4333-b33c-0f70d76aa16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8237c2d-5596-457e-aed9-b1a66c504ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b58baf64-4f00-451a-a999-196918a9a3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee614f8a-d7be-482a-a3a6-0ccc4d019734",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e2d34d-175b-4f5f-99a5-8031a425da43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde4b14b-0962-4a91-862e-686dd9fb7831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9647d9f-2932-4864-a6b3-30637d9748c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49244c33-366a-4b64-9f23-f8fd46121c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494ed984-00e6-40b8-9070-3311b00a52a7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e207665-b0ce-4012-8321-806ba7ef871e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51d1a8a-8c70-4ac5-ac73-38b373decec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8e405c-0c2d-4bb0-a38c-6f5c9f2ed017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2770f64f-e1a0-4e88-b96c-9aea145ef3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c2bec7-d879-461d-b15f-62502ae32fb8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35662f5-7878-4495-b3e4-71c4c90b9771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbac22c5-6744-4d0d-8039-ac0fd4e3b8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c55299b-fbab-4995-9edf-ab30d06fb5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da355df2-3c44-4fdd-ad1d-861903ae51c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b49e9e9-c094-45b8-8fd4-3347a5274c52",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b56b47-dd58-4577-acf6-ccf11e11b29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddea1b1a-07f7-4daa-91b2-e53ead787f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b805287-8caf-484d-b6d8-b6b2f708c439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e28ed7c-1f43-4ac2-a574-37eaec440de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7d58b7-bace-4d13-a120-10071394db96",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e59e20-83aa-491d-a10a-eb1ed1cf5e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bd16bb-d475-420a-9b00-2df63dfba781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab0ce42-794f-40a3-bf8e-a1c666252561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "480b15cc-b194-4e83-955f-25ffedd28332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d57ce62-d815-40e2-9214-23c004bd58e9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5134ce-28b7-470a-9604-f2a295801905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580a54eb-3d34-4763-92d1-f43a623278fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ccfc1b-d720-40e5-ad72-985faf6564cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba39cc1-3681-4e50-9434-6c2b75055081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00a1f2f-0c9c-4fb3-bbf9-47e8c7a3e120",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8edf03-6870-4d4d-8933-3214876fe05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e056388a-54ba-40ba-90aa-98d36d9a3895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34861dc4-7193-48ce-aa1a-98315d5caa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c250cd2-ac2c-4c72-90d3-bf030e024273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417716c1-db34-4e15-a13e-6941b15b3866",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f4495c-8a08-4eea-858c-d86200fcc970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee85071-91d1-4d1b-8d00-5f68fc8c333c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fece62b1-d134-4664-8dc0-7b4185d3fdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96ba752e-63c9-497f-ba5d-a231f98a49e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83682460-d8db-4cc9-b5a7-18927b702179",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ea5ec9-0674-4c78-a1fd-3bb2e1f3a967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e985b1f-34ce-4820-bb91-2102ef51865e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292e7ad0-f931-4f54-bddc-8364848cc6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5202ba-527c-47e5-a1ae-3a16d3d5f5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622eab5d-bfc2-4f4c-b426-a6d02d938cd6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21755bf5-34cd-4b1a-a12d-191ad53d0826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c16992d-4c26-48e1-90be-e33fa20a39bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa59be90-2779-4755-beae-8669b16f545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9233980f-deb2-41fc-b880-efdcbc80429d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a37e51-c592-40a9-92a7-e6ba34cad7f9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebf4543-1bdc-49db-88c8-2e7a18a57480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946e0229-decd-4028-aa9c-5c678574374c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9806b80d-a4ce-45da-8292-327dcb81aa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "241604de-3b15-4f60-a122-385de1a1c939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43204275-dd7e-4613-be06-3a2ef8cbf31f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdb612b-1bd8-4ce8-a4a4-f3b1471ccc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f018b9dc-8288-479b-865d-3e3384c5772d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2218488b-290b-4bed-8c28-26051a3439ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30164151-7077-461a-ad26-2ffde9fd62c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf19c216-f99d-4663-9411-1fad8214847f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e936a7e-2b24-466e-b571-c4af5d8555c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5719f00-57b6-4c70-bade-d24b1a362fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c017b16f-4af6-443e-95ca-11f5f2ba16d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53833fa8-bfb8-4144-a274-9e7b11352da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50575bca-d79e-4d6c-a5eb-716ec0a028d2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d34edf-5cca-4082-871b-1f0f6f4e20e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793702e1-85d9-4799-91ad-14c792a5d6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0990d774-e6a4-4477-9ed0-aa2f61a122d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "afc5c88b-f649-4192-87be-363e3b60cacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d33b45-5546-4ee5-93b6-5980f62add14",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70fa058-9708-4099-a4f6-8b1e20ef1fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb404305-1d91-4ae2-94c3-5cfef547dfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c344770e-020d-4bcb-90c2-703381070019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e05c4b9-ee87-4bbd-82c5-073ab9fa2395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784533dd-2812-4a14-8cc1-ef430df9dd67",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a631de5-ea1e-4c64-8c89-c6cd3b4a8e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdd69b7-3150-4d9b-b7c4-729d26000fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0390b666-90d1-46fa-ad37-dfec15a7e1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7ff4f7-0f0b-4e29-b4e1-a651172b63bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841b9288-fd52-417f-8b13-07085605bcc5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458311db-08f2-4c9f-97e0-eaa2ea2b80fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69432c40-a806-461b-8666-b221fcc09887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dced60-70c3-4aea-82cf-31f8c251ca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b53e72d-bc1d-4046-b865-077cb16a7bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10c2bf6-8fff-4ae3-bfbc-a272abf2eed8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410c9c6d-701c-4bbe-b61a-5cca13c1e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628aa06e-0ec0-4d00-9e1b-45575142214d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f031591-d8f9-4532-a623-61803f59e474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4974deff-6027-4ad7-ba0b-26ef5bf984c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efe0761-9842-4388-9943-a2e6a9616947",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8218b52-59f1-4777-a0a3-409324eb29e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d868904f-a9fd-40ad-b5ec-97b1cccf95ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3e7583-11e3-4c73-9d79-c5c1e9f5719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d1c5fc-b00a-4e34-bb65-13f2c82c53c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0566c3ed-b34e-4997-be82-007c00ea0432",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd64569-9ae9-4239-9ec6-4bd22faaec47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5b2168-68db-4a66-b65d-0ebb357ac143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8960da72-0760-4b99-aeb1-bb21ac683c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "338670a2-e572-4385-af38-e3c37b8384d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3921a6df-83ba-4fe8-aad7-7c0e8c1ef8fa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e3e110-44e8-478f-bf84-843d32139654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949f3bf3-29e2-4cc0-a161-914fac0b3f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf39587-0158-49f6-addd-10f44ba05d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d58d4d-3147-439c-bad3-89e57a370367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2a1d1a-e847-42c4-9027-9423817d6d51",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556cc860-000e-4be0-9983-410178903e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630bb9c8-0c20-4647-96b1-dacb0c6521d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49cf66e-093f-4436-bce1-9bc0ef89cdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b713dc24-fcc7-4447-b3f9-c7c88b89e31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab729e8-3971-4e32-9309-3375ae38e044",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed43dc86-1a38-4050-bea8-475e795b0c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449e83c4-cf0a-4c44-8098-5208e81c3e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868d96c9-9f4c-4bf2-bd39-5a5be081d273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf0f765-e33b-4013-ae0c-517c0839aaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6eaa02-bc41-4b4c-af37-7efce0b98721",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25643e53-3b92-4666-bdf4-62def0e7b26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22ed706-796f-450c-af1d-9d44cd8c13ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c255196-5655-423b-94b6-7f4b0b6cd2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ceab6a4-2439-46eb-bf98-7505e37e03c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8683666-20bf-455f-a8f0-bad3c1549fce",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac5be3c-b915-4940-a719-edf67176386b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf17b3c-9a3a-4421-aa70-8ee82df7ee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb4def6-e406-4e09-9beb-9379a31b6f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65d8c521-5515-48ab-bf72-cba8f9a77761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3810dc1e-8798-4472-af1f-b1bb03733349",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7742fe70-ec64-4d4e-a46c-d49f23968ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8292f38d-5473-41c5-96d3-703fc84a1afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070de951-3659-4412-b3ed-2f7b2d2836e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c411ecc-3129-4672-a02e-0a77c774b271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a653f1-9756-4e53-9032-881f294ca3c8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fedf1e6-8526-4ba3-becc-dac14311332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07586e7-a2a3-4e73-91e4-b293377b2ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ff6f4b-aa6a-4f40-9549-016088338121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af3c60b9-4d7a-44a3-9cf2-94ee1831f32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f886acfb-6c1c-4fda-b5e9-a7489b6023f4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9617dee0-6b35-4256-8536-17e11def0907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300849d2-9201-4184-bf09-11446e0317ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4acb78-3e52-43d2-b869-a60b1650e102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a65b9c13-e881-4820-9be8-7505f8619bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b18ecef-0cbe-43d2-90da-e63598275356",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1b86d8-cb9b-426d-9d70-f40772e14cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812c9d16-2963-46bc-b1fa-29571e56595b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17038a4-3f98-4b1f-8c0f-c4c5c9f38118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aed8111-9a73-4a6e-9336-0a64418fb626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328849c8-f9b5-4f99-b3aa-0b91dad637ff",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ebd3d4-433b-4ac6-8b22-512d1ca707a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65620cd-a6d8-47a8-81ed-351b12bb6eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9db7249-d159-4684-87b6-62536c5da4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af87f4a2-4c4d-4894-8812-d27ae0dad0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15b57a3-26a6-4c8a-8c9a-b08d61dce79e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9eecf8-4547-46b8-8aff-13d077f449ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3a5611-8e49-4f22-8020-ed03c95c3c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5bb6e2-a621-4334-af55-61d5ed0395df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1900d599-0c8c-4183-979e-5b39b080c191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2305d284-d3d5-45d0-bbaf-24c1e410adb7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9848f72-7a67-48b2-bc87-8b1eb370a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc661c2b-086f-495f-816c-3acc2dcaad58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5f42a8-e8f6-4dca-8247-dd1bf43638aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a10beee6-544e-48e9-9b0d-f4af190b5cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e7a3b5-25bb-43ab-a097-316abb2735d3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b45f93-9797-4fa0-808f-e93194ac1ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ca852f-3dc2-47c2-b9dc-97a26d47e147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ce5e6f-7a8a-4599-b911-61f57e8ab541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "391abe9c-ab70-4a3b-bd5e-acb3a9dab769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1191fc0-deea-4a0d-942d-4f67bbe6a92e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e3bc20-641e-4e69-8826-b5d910af1d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8e1396-00ee-4fdf-847b-65514c94f89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279dd4ca-2ff0-4562-8441-4189e1f28408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f772431-4fe6-469b-9164-dc61d9f22898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b23c0f9-7e8a-4281-a16c-3b6614da8372",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f474859-8db8-4bdd-a796-7e11a5df83bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca37e4be-f01e-4581-b0ad-73b552724c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07120e6-72f9-4be3-a6b0-2aeeecf5a024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e04713-d139-4899-80ad-9ff619a19035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc05dbdc-ae96-487c-83b3-65f9795e9e02",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7b6d54-1f8c-4446-9259-b625bda6b73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dd258b-92f1-4659-822c-dcfed6dac4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c652883e-bab8-48ec-8fa3-eddd6bcb689c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "318d926e-3ac5-4696-bb47-23f0de7992f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa6d19d-4009-4b86-811e-44b3223aa4bc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9686f541-d47d-4d28-88cd-bdd856c5256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2a5394-627e-41c7-8c6e-ff64646791dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bc1060-2b12-48e6-9675-a0ec5c3ba684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "777a0628-30e5-45dc-88f5-edf1a2f5e984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ec744b-82b0-4c49-8da0-7ec1aa233e41",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ae1d60-8046-4b58-a12e-d3c41cceef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fff506-56d0-482b-915a-dcaa3864549d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32906d92-7683-43e1-8a15-8d7da70935bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e56781e9-c9b7-45e9-b7c5-42c7cabd173f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7825eb-38fe-4d0a-a213-25f465f2411b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8d13e5-ffae-47c5-b18f-63422ef97a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44a38f2-c8ec-4e49-9301-15efab01cbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5c8bcc-b029-4baf-b80b-1607cfb5d8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba7c0d1-3722-40f0-b283-5c40661fc465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48388ab0-c5a2-49f8-bf97-103ff306911e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc9735f-bee9-4a34-bc1e-239f8a35bc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4972c0a2-ec92-4ee8-82f5-61f96a50e8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a6f4bf-d5d7-469e-8e2b-fb8f32f86b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e095e80-dffc-4054-b582-01540ff7005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c76e85c-66c5-4093-8698-d92192b1815d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697feb0c-c426-44c5-9f8b-78d9a42910de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ceadac-4b7b-4331-b003-2d951c50a9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9bd6da-1090-4504-9094-b8c1b425b9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ae9ed4-e176-420c-b511-71dd35a8b626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1d197c-442b-4695-a7d6-b03f5d9dbca6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e699b251-d919-4cc4-9211-68850a7993cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb79696-b974-4884-8fc0-d48eeacfe971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee03f55-b8ae-476a-a380-5638975aa524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d29d708c-293b-440f-98ad-f8497e0a4b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37a94af-206b-490e-a316-17bdf5e0c174",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f536c2-a341-4eae-be94-5c6681efe75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b995685-3a81-4f49-ab54-ff523fdc3800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863bf6ff-37bd-43c5-ba95-d1eb45f3fb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a42e7e43-ad41-4323-b2ff-a524d1081eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c58237-c4db-40d3-8ea3-ef40b62a3181",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f86c1c-4b40-43bf-8fa1-92ab4683f628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab05c9b-3a8d-44e9-af52-339c7c545cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6718ee-fe1b-4eae-8274-a0baf3b79afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06658233-65d0-4144-a679-2f18319a7581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffcae50-59ff-47b7-a1d7-2f794d63aba7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea07b65-6f49-465c-b594-a03002856eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab66f34-522a-4a0d-9f56-2e5d259699d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f5e546-5fea-4b9d-b7dc-d7e740f0ab53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30e072b8-f675-4189-b43d-d200b7d9dcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545ef05e-e344-4ea8-986a-1c2a17c79b97",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15012a3a-042f-4132-9f7c-9efac1c2e37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b2a320-0db6-496f-a148-42702957c505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bbb48a-3bbe-4877-a099-f8fccd159475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84ff3503-8268-4b4d-a0b9-9d6954a46847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231c97cc-db2a-4ad8-94f2-3b67e61744ae",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5562d78-3711-4d5c-bf0f-897fe453a727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda9be93-16d1-444d-8d9c-c7e453e67abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81038b32-4b1d-4ae2-9443-d7268f96b7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eeedf0f-b6c7-4c8b-bcfd-1e8d1779196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1826e8dd-78ff-436e-9b51-e66a395afaf2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91a2ac5-4627-45dd-b0cb-7732f41bee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad3142c-a9d0-4181-ab96-8441d42fd9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db2f90f-0f8e-4be6-98d2-aafaa26ca867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5159fa4-f6a1-43ec-abce-7a70c8a7d5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376591cb-9796-4242-9f2c-7b9fd274e681",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5c8b3a-feda-4ec4-bc4d-387e49bb5982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467d9a12-fcd6-4e78-9515-67834147fc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85044586-b80e-4486-be13-b5183bd169f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "01f79672-4cee-4f99-a0f8-411462071ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979a4bef-5a3a-4351-932e-249e043d0bcf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c83fbea-92b5-4376-804d-b88e41855236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "90212d0d-0a20-45f6-b9b8-95f71eb5eed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfee33dc-38a7-4092-9580-d3ef21608290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eec0666-b83e-4daf-bd87-7416c50c6870"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db900ca5-3a84-437c-83f1-a6cfcef1851b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "376bad01-472d-4a5b-8738-8e872987e1b5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a5c045-1473-443f-a292-b676bd04d1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a0cea6a-32c3-4fe5-9df1-e97167a6d4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f322cc6-2765-437f-b1af-927b3d0b5b20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3648a8e4-c0bc-415d-8a7b-422cf2b74636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a09b37-4c1b-4928-9ac3-027e78446add",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c3d2ec-5854-4952-b739-61747aba5304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c66c6462-9d34-4205-ab23-7e3913b46eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23a61b4-5a7c-407b-b32b-2fb3070478be",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a8f80d83-30f5-402a-b988-cf0c27c719be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfe0e605-b718-47a1-ba54-52a1d7e60fbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3745fba9-5117-490e-8212-adc3e9e3396c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29c77e8c-3447-4bb9-80aa-0a7d90234067",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46153190-43dd-41a6-86ec-329227765eb5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a0e404e-523e-4554-9d48-f1bc6502fa7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e30aa44-352b-4741-b321-86a017114da9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93a680a7-40b0-4f7c-8ce8-2f6ca6abed0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f7706d5-d2ba-4bdd-a70c-741f6f6d573a"
                }
              }
            ]
          },
          {
            "id": "d141ee02-edef-48f2-ba7a-0036a6c0de24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3a5c1ca-7b28-4305-9982-caa81ba5a8fb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b969c1c-8faf-41d1-b876-82a1f81edcd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c348bde1-c226-4e50-a51f-4738f6c81b25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04abe818-5c13-49e7-bb3a-54a1d95be31a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aaa9840b-99bb-49b4-81d4-c0b80362103a"
                    }
                  }
                ]
              },
              {
                "id": "e3e62922-fa1d-45dc-8d2b-9016ef16b841",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "195d9c18-6303-4105-a2d8-f400e3c751ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "228ab333-e513-4fe4-8fb8-9c17519bb80a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09f427ad-fcb3-4efe-b955-70b5eea11306",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a1a0688-71cb-4491-b9b7-de5eaa54be04"
                    }
                  }
                ]
              },
              {
                "id": "7fc8d24a-6292-43d6-9b51-c8ec3a2329c1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e151997c-079f-4b61-b792-9f81dbcdee66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de307ba7-f2fe-43d9-9d23-fcfb49d9e7d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0af22067-fb0f-4887-968c-37fce8766f78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f0a4b42a-d003-4754-a019-f951aca5bd67"
                    }
                  }
                ]
              },
              {
                "id": "bacd65ef-83d2-41d2-980e-522ad674e2a3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a61c9387-d119-4d05-98e4-8e8878b4af57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fb138d1-8a19-4733-983c-cb22a1959357"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f273600-f276-4299-9538-eba51cc3627f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2df873ff-a306-4bf8-b76d-6b6e5295ed46"
                    }
                  }
                ]
              },
              {
                "id": "07012694-f2e8-4b57-9da1-e8c54693bba4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d63b7d74-8de2-4801-a45f-f1dd62638c80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cc95147-4b33-4a94-943f-05d7c2c816b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf3a90a6-0dc2-4aec-8d66-618b3d363ee8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9cb72a1e-1af0-45b8-9b51-3ab08bfa82be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7c1e7dd-df9c-4569-ab55-56c29957f206",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2a12de3-47d7-461d-8169-696776d413e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c5238ea-a348-4028-9fc4-97ba1d081213",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ad4a7a4-89d5-4298-8a37-300464b0bb03"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a73ec782-bc47-487a-903d-d0df3930874b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5b1121dd-c90f-4254-bb9a-ef658104a0bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6846548-ed10-4be0-8b4c-275cb6564e20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "508819a6-5d8f-4de5-b42e-cdb19fb9b200"
            }
          }
        ]
      },
      {
        "id": "5f3b7cc9-ee14-4fd6-a40c-4010c93add1e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e264ea52-2c48-4faa-b9f1-727a1dc941b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "212996a4-0192-44c4-b66f-946e45de0cf6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6296d523-0c78-41af-a197-e240d777e9a9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89736ebb-562a-4ab1-a8f7-7802470bb8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7cb7e8-8cd1-4087-9857-cedf6bdbe2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822b9bea-4fb3-4cc7-b570-a2b1df33b1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb904a2-bf92-4d14-84f3-65e14bcca49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa9f98e-1a36-43de-90d1-5f7b431b7374",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c1bc7-829d-4782-b77a-80725d4496b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbaa02cc-9611-4615-bbfb-7e20888ebcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1ea416-534e-46a6-a744-b6a73133402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25704594-d292-4ad0-b11c-e9e07efc55d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5380d83c-f471-4e27-9cb6-6a673d4c4ee8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d5d931-7614-4ff9-b116-dbbd9e2cc5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624e16a6-199d-48d6-9614-27782fb57e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c59a0d-4d78-4f9c-8919-b87dd37cb349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca59e6f-c608-4e61-9e33-b2ceae94a47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ef4307-045c-4573-a5ad-517b32368edd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2bd7ec-6c88-430f-abcc-1bcc2bfe91c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8000b744-4747-4730-8823-cd49bf515e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c14d8a-c035-4b62-a380-31ef858f09ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99bd0dee-77de-420c-928a-1090aaab1249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5f2651-0905-4fd3-bdd0-206a2aa71aa1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a55972-0eb3-43ff-b883-7a20e62a3b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd9be9e-0d0d-4728-a8a4-61d949a222b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c83ee9-0d89-4cf9-b13e-988b038288fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75fc2b3a-1c2f-4657-8f0b-a053b40fabed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0962e239-b7c8-439e-bae2-edddf73906e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636f8fca-d384-43a8-bf50-55f0e1b09b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5615c8bc-564e-4b9e-a5cc-b480d83a4c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd626ab2-deca-45ef-8747-a6b0f8ba400c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83bbec47-6803-4b60-9875-124ad6f5921a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f32c1d4-b3e2-4588-8d5f-fbeb2be62744",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f0aab9-188c-4c46-ab29-dd8b8702297a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334b3f66-7500-4ec0-80a8-7d2704eb1dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1bd400-9b33-4fc7-a697-b1c026e84d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a158523-a2b8-45fa-bbb8-61cff2edd66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23825974-9c93-4d36-9d9c-193faa673f00",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9c1eda-008c-44cb-9042-086df8051548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bd19df-9a07-4656-8cbc-df8fc6b89833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad6a313-5858-427c-9764-9c34c3d5b4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda02420-607f-4255-8dbf-5324238d7761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833ae392-cc68-42d6-a706-430b4137355c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743d61ce-51f8-4102-bd29-37c8d51c2b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca1a40c-f101-4931-9a28-5391054c57ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfafd7b7-6a10-4e44-a4a0-8757e772678c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c0d324-161a-4465-8305-b0673e566145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af8860a-1995-4a31-b815-e58a27e8e6a5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabbba92-3218-46ce-812d-253310206e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8130d4d-a154-49e2-b844-defcff428946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c2f361-1777-42da-8e52-d9fddb47f432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f2a852-ed06-4d02-a307-007498b80639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08578485-07cc-4344-ac83-133b55d6431d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea949c78-838f-4e8d-8ebf-dd99065c9628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7dbfbd-5b33-4c4d-94e4-2c33a4db422e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa70f372-68a6-4e82-9cc9-38ad45ac4f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad56d2e-b967-41fd-9639-ce723a369449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c87518-33e0-4acb-acec-71776f6e6a0e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f091149-32a7-4b36-b213-7dce982d428b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d8e61d-a117-4a33-8333-14d70256ff51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732117fe-a380-43c4-a399-9dbe20f6ddef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8018c634-08b8-4de5-a14a-80cbeaa1783d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e7da79-8c1f-40de-b2bd-14f745fe23b8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305b19a5-3db7-400d-bc80-23610c48b424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba9461a-6db1-4b84-b944-27eb4313b29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c4936-d8a9-4876-9fee-a2c33544f37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "068043f6-5454-4e94-93e9-a7407a911c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bc19fd-608a-4a9c-995c-c5da4f0712ad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791b058f-919a-4a91-92dd-17c327d5e1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfaf3d1-0452-442f-b73c-32c14d850f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3813962-14bf-425d-8eac-b707f3c05969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "183c4129-433f-4782-a66b-9b34f18e3ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b11bc4-0ecb-4ca6-9b5f-6044f6c08d6f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e658aea-01d0-472c-bb81-e2f8e557d1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660e2d7e-9bb4-489c-965b-cde7306d1ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c493a129-a2b2-4c94-a2da-bc52f4f66861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f61f7628-21ff-4ee3-bbf0-cbef88eb82f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a44746-50b5-4abf-8612-864a9a5ae308",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8454668e-4b32-4a74-8956-ec9de24abe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6006e435-23bd-4c3c-8906-3d5a107882f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da21ad2-efd4-476c-9ea3-05a3bb064ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d1f440-86c9-4ef8-8e1b-56ac5edac4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19763317-7f68-43e6-a635-efcb4737d71d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb773f5-6775-4f2b-9346-bfcb4a9177e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacb09e1-b540-472e-91d5-90d00e8c3ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0e3d72-827d-496f-ac00-98125b6aff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a3fa99-983d-43ae-ab3d-107690a004d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ff4b7e-cdd2-42c3-a024-04ab8677cb1b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4770faa-ea45-4b28-9c2b-6108dff8e951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d058e8e8-8a44-4a40-a4c0-b21f8e188ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8460bfe8-b9fe-4d4e-be42-563e1c9e7cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df5ea751-6d44-48c4-9199-a6b8079e0f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa9b248-a1f8-4dc1-8833-4b348429f92e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b646dfce-c166-4d2a-b0f2-994ef189cd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cf63a0-8958-4222-841e-edf16ac5e715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3ca5fc-173f-44c6-b929-655d94587e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78275c17-e3ee-4d20-a6d4-d352ea770537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b589eec9-f32e-4957-b654-53bb243fa3b7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9479a82a-e34a-4a1b-ae28-c6dd89f3a50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cd8ca9-0be5-4926-9de2-196ebb208d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd88a13-e50f-4d0b-a637-d17ff9d27cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "675d0c3c-464e-44cf-9273-fe5b9a8fef3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e66a77d-b85b-420c-8a1f-c8dc72de0b00",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df141f-2d73-42c0-b21f-bd0376a4dcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cf38ec-eadf-4a39-b97a-2ba7405a13d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af87138-5047-40bc-9db7-3883acdbd006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00470dc3-b6aa-457d-843a-8bbe1a354281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7075f011-3bf3-49b4-a64a-4a9f3f773a1f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c483864-8112-4eaf-b28d-4ac06c74e8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0915bba7-80a2-4cf0-9498-0465bc1de2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d348345-9cbb-44e4-bdf9-cdff89f328fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1071d137-b1e5-4416-a070-cd86da73a4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b8cf4d-1153-4386-b2e5-522ebf74076d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358462c6-3d18-47ed-a129-634b7ffbbeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc915527-6cf7-4df5-842e-820adb48cadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878d2959-08cd-4398-845b-4522dd741b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292aee6b-3829-43c9-8538-b0a53ad888bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacdcbb9-5fc0-460f-ae00-18983e7960b3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17d0138-26fb-4866-bed5-4d1c918d9f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca8517c-dacd-4a22-92d7-402589fcc5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f73b66-2a4e-4202-a7ba-1fac53258529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b9ec82-2ecb-4b0f-a28e-d9bb3fe99806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f57f7f8-f0d0-47bf-81d9-2f49f46fdcfc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adcb095-3275-46e2-b9ea-9b82f7bb3d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf32645-606a-4c56-81f0-b347ea3f2336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc854a15-bcda-4dcd-ae01-50316d1e0d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe64f720-97a4-4924-8add-1443fe675045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb057a8-ff19-4411-ae91-85797fb71c69",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d4b377-61a7-4fe5-8e32-b2ad2ab027b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c72c23-5a2c-4da1-bc30-8c8b307dd5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8346cd59-140b-4961-b7e3-78bbdc8e28cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1861943a-8459-469e-be9a-dc548f5b887c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50300e3-ad5d-41a7-b3c2-0236b03d0230",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc2528f-7b37-4270-9705-abf3a856c20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2fc877-a35d-42bd-9488-3c84b0138896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6463a7-58f9-4023-80e5-2089f9415137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c8be79-9b19-4b25-8606-08ed1f280a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ff2253-c6bb-4166-8d9f-cae2410bc553",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73154f7-9bbe-4f96-a892-040a55e27be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dfdab0-590b-4bff-99a9-225dbb0333d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ce4dc8-1a8b-4320-a13b-0a1fdb443f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55233eb3-318c-4806-8fff-0831c16c104d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e1bbaa-91d5-4bb7-a759-9284f35b075b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c43ed31-c755-4733-b005-a334f3d79a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70998df4-e09b-42b2-a86a-c4406e0b17de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a5cf97-877c-41db-b215-3c95334cc93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31590d71-a2cf-43ce-81c2-75ca8c4eef28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a022fc66-d855-4464-8269-a901ed4868b0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c5d97-2ac1-4f28-81f1-8691d54ebbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc52588-de2d-4f2c-9250-4f0680f773c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6df231-98dd-4d79-85c9-98bcc30e39ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be882bf0-2dde-4efa-8751-b2b39d2fbb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c75982-f606-480e-895a-a9968070fe62",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cae1e83-97f9-47bc-bc67-ff763b227fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a69768-6f73-4376-aa2c-207a1533a78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4d781b-5005-4ae6-aa77-8444d989416a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51989921-7b44-43b3-88cb-b5965141f8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca96d48d-d09f-42da-b774-32dd868a145b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e8e5c8-2cea-4ef2-b603-a8d8b5d1b724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a488416a-1730-44a1-a1e3-f46ea9d0ba63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b7afff-0272-4b7e-b37c-561c87390774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3face30a-7043-49c9-85d2-9c53f137e541"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4549b02f-bc54-475f-9836-1d9bed719e58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "369f374f-e80b-42cc-8961-c9c8386d4d9d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cfadb9-4440-4cfd-b148-e1920a3dab8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58aafbad-1764-47f5-9ba3-0de44bf12e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c21c51-bb85-404e-98ed-a9cafcc7f497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef85e866-626d-462b-b1d9-96d8ab7425ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f360b94-70a0-434f-9cd5-0f097aaca4d7",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d2af13-b86f-4193-86c1-1ba6571c52d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "fafef55b-b8dd-4759-a667-7c3b237fc615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feedac1-6750-41da-b16d-ba0baa80fef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1eeb4f28-99e3-4899-bd8f-89cbeb7b9512"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b50023a-7834-4125-86fa-f74a2287e307",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21ad86c2-b687-4d4b-8d63-13c55b381e8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a367bcb-577c-4cbb-b1cf-c36667a71983",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83a4e2b2-d7c5-46b2-b05a-46d1a3b1a38b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e17f969e-31f1-4f4e-9a16-6070ae088314",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "410f79cf-09f6-4ec5-90cf-ca5d861b5d9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f7fea55-4ba1-4238-b0aa-a40f54561854",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0a66c69-a520-49e1-97cd-08cc2bb42e97"
            }
          }
        ]
      },
      {
        "id": "d1954dc6-4261-4eb6-b4ad-b52e2a648f33",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7452e392-66bb-49f9-83d3-35829c0e201d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a88507e8-8015-42a3-bb6f-6e2a9e355f94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2f5ad30-022f-43ea-aa75-4eb7ed47726a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0c112b-41ea-45aa-9cd4-eafe46a8eaba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a41eee-c97a-4134-bbde-6a07419a5959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ab5301-5707-476f-aa58-cd7827898114",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bbcb17-758e-4c86-98a0-bcc3a44d0138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddb81a3-8da7-439b-95cc-ac5fac3534ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ba0ccd-e908-489b-a27a-38d7831a4bd1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357eae09-8622-4c6d-889c-4fae90382f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51badc3-7b20-4aa1-bf91-5d5cedc23914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0d1d66-b23d-433e-8f97-92e0050b0d81",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b66eba2-0667-4655-8c4f-4f43aacbf912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55331e4-94cd-48e5-a45f-58b3612364db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0cfbec-0566-4669-92cb-45181d7fb4c9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ecd481-58cc-4128-919c-a0fedc341c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcb1511-cfe3-45ce-97a8-35446f08e3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e70e18-407b-4e10-a10d-c2f252f9812a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdad573-d942-4b48-8510-20ad8999ce09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcc2dc3-372f-415c-b3f9-de08668b066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c58bea-09e5-4dc2-90d6-2f8a2054a866",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee918fac-ea2e-4085-8063-3fe3ed3e2992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67dd6c0-f778-452f-b330-1ea8a1f0ece3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39654cff-5e94-4971-ba84-83a000391353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb3f422-65f5-4fed-8a13-6714c4d4c156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb008a01-1667-4b0a-ab22-8cca832e7dca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8212a4-dd54-41ea-92a0-a10911083ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946a8cf0-a1ef-4a25-9f26-59e10e9fa199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1458b2-93d9-41cb-91bf-ddc75615ad87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137b1920-5c44-4ea8-b32e-634e1ca2fbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10388ba1-bb28-467d-af6d-18b43698e1f1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3d1c15-d218-47a9-940c-3330b0b6771d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792a76df-3806-4b9d-b655-efa2922995a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4bf844-e6b1-4815-b3c7-807e0ff6c174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09054c9c-adca-4333-bf3b-44c5e37dc12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88035f6-dceb-4cdf-80ae-b0109da1d617",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cb1267-b7c7-4008-a6b3-f6adc55eb2f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00be035f-e570-4a6c-913c-6ea3fca62377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2b36cc-09f4-4c06-b4a1-f81e6136319d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ac3fc4-0f88-418e-9d95-baaa61ee4c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78428f20-3bec-43ab-b83a-4d62e6d8f5e4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8500445f-f143-424b-b48e-e1fc6bdb75dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45ecda2-1169-4053-ab55-bf827e42f7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba21d916-b9c5-49ff-9f89-413763a68c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4797a7eb-50bf-4597-97ee-c99c359d278d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c683071-985b-40b8-9663-82574f08cf41",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b253bfcc-f4ee-43a7-9a35-4749a0e71212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52199dc-4b2e-44ab-a211-0423557ae4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235015a5-9f6f-41cc-8c15-e3f298267cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1c520d-f47e-4d7e-a3b9-a8e2c11c4ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb7c053-aa85-4fb8-acdc-51974632489a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73cdd46-1f4f-41ea-86e5-1554517cd2a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a626e5f-1e67-44c9-834d-605581455704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f1bbb2-b095-465f-9930-7ee8b36c0002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1514c9a2-191c-45a4-81e8-54bfbbf188b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56474666-5d2c-49cb-a8c4-6124e2f9efec",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba668f8e-530f-46f5-82c5-e863967e8a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564a9419-c169-4265-99f3-e5db2d89ae5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351797d6-b3c9-4280-95b1-36df5ee3baa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f209a19f-22ce-4b87-9877-2a509bb33353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaa2815-dceb-4462-9fdf-3793d351bf41",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7065c20-15a1-4d2e-937c-6ab1d9fafa41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ca7500-c825-4da0-9d5f-01998def9307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d5787c-b2dc-4186-b469-c4e546e7f2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8010eab1-2eaf-468d-890d-31065f26a93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740ba4d9-4128-4009-8e41-a66ddf3e4ea7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72548ca7-e437-415a-ba2c-790ac56390c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0204715a-731b-441b-9e21-2a9d7e1ee85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5059f306-5e76-4a60-b60c-20eb37c819f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3cb5c9-67c3-4a10-95f7-2a00b6ace753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa76733-a605-4a6f-b483-81b2a2f54664",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab2b252-a67d-4210-a228-26c05faa2618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f9066a-4627-419b-998a-4c2a94093892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8eab68-7cd1-4e93-aa17-a07e3c81855b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe6bde4-d2e9-473a-b5fd-f094ed57aaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe714a0-2683-4209-9bf2-acbbea70521a",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d6774a-af94-4af3-885b-beb3bd7a37d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70cffa7-6e56-42be-8476-78d735e5a8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2d781c-69b6-489d-ad45-82eb1e1dcc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc1cf8d-fea1-46e5-9dd5-3adabda81b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ac048f-f201-4791-8649-7ae10b9103d9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c44266b-ab5a-461e-ad3d-68084b392550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c00135-419f-4f85-b8ac-9cfd30609255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baedf4f-bb1a-4770-ab45-7fe7ffd3da26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51617c97-eef9-41ba-a66e-3814780726f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0b471c-1799-46a7-9f55-dc1a5ff42061",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45483d19-1efd-4595-872f-891ab020cc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba97c8d8-f063-4ebc-94df-c1bbc15f8bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec2fb7c-ea6a-4dcb-90fe-8e09e7185078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6658299f-ddc7-4fdb-9f0f-5da4c673c8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f51e07-057f-4f0c-ae3b-22c32775e852",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e61c5e9-e55c-4243-b23a-793fa909f55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1779effe-9e89-44c4-b757-626b56c0e923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510e89b1-3a7c-4f59-b90d-8d36a0d5ce01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60efa5f4-2d1d-4ed6-a9ff-ebc1da7de339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a018b0-d782-4eb2-9668-7356728cf6d3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e7ddd-0181-4f20-918f-13cc8f175106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4789cfe9-fa0e-4198-aa97-c3719132bdf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f224e955-bdf4-4060-b337-94f23c13c56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2facceb-4abd-480f-9ad8-4db23d4f6af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23be67a9-ee45-45ca-95aa-b66df2781fb8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777a7300-d20d-4542-aed1-e9f68a7fec55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4622db-b633-4be7-ac50-5036d46989d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c383a31c-8bcd-4975-bd12-5960809f66fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d6c18d-da1a-4957-b8f4-2e14920572c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be61caf6-4162-4990-bc96-d2e15bce7a4c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a35161-17c7-4acc-94ea-5facf28cd77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1262df0a-f367-44ed-9c07-1209da447e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da826467-df73-4520-bdb9-191405381f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24635bf-ec58-43d4-9283-c8d918ae9e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f2d706-d513-47c9-bcfc-c5da5473c0e4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7cf05d-09e7-4400-a281-03e2a83633be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfac26c6-f5de-4609-8890-44983b1e8b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4beb804c-a04d-4581-9b07-470cb447eb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba724254-d11f-4fa2-aa1e-58fc5d698327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa240e04-8541-4e5f-a3d3-f22a24b75e0f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ffb7d8-74f1-4c8b-a3f8-a3a1eca4c01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f22b514-3874-4019-ac40-94c7bf038d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c85411-a94a-4534-a2e5-d36cdb9d71b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0e4a03-d5e3-4a60-b5d2-e8db9b2b55d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddbee7d-2b48-4c5e-a9f9-98aa8cf378fb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297b9fe4-450e-4ba2-ac60-806ec067704a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed1f076-d35c-4ff2-a693-f6417b815d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb73ca6-864a-4ffc-93ac-45aea98b86b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb96cd68-8ba2-4af5-96c0-bc65eb11a592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ed5f71-9abe-419d-a67c-baeecc424108",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085f2fd1-83f0-47fb-90df-8b9dc8bbcf6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98845f62-310a-4606-a15f-045267e872c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7154949-c693-4e14-adba-6711bec74ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d470b876-5e23-4043-bac3-ddb286b03237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d939b38-a827-4c4f-9be5-1669e79f3ad3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021a10ad-7b87-4a50-84f0-554e3fa04843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ee6c16-0741-495d-b371-728361fb198e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f836db-7c8e-4d51-9a4e-e9e396bee4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548b4021-d8da-4051-b62a-2fb28150252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f37708-5ada-4442-8521-d9190e7453a7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bebfc98-dd64-420c-a3c6-03e1a8efce01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9783dc31-b901-4b02-beed-1d7f61ba5dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074330bb-f747-4691-a690-8e18fc1ee4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721559f6-06d3-4ae5-9654-0689b58b8c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dab961-2069-4bfa-97d7-ca75c257eb99",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79434307-517d-42eb-9aa6-eae673e2ed3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211005a5-3cfa-42e9-a0ff-a277fb0c28e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89deabb6-3c98-4782-b5dc-a61ce521e2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977f2d33-7532-4df2-a8ec-3a4900cfa8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776f89db-e931-4e8b-9922-8a327fdb56d8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56618f2c-cadf-4915-9ecd-4591fc982827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc773e4-2d2a-4942-bd67-d4fd30a49f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb166b4-db44-41a0-bc46-e632349cea1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e0ff53-b6c7-4115-bed3-82f5d0a0861f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a59a427-c820-45ea-8769-109daea5f8b1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1493f163-0ae1-4b0e-8e6e-7b2ef253261d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd416535-1c95-4ae5-bbaf-68a62b2d6de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267de869-7fe7-472a-94aa-3552b2fa8926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce52a97-355d-4d25-a91c-b65d91c3cba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480050d8-a057-4313-ad78-b01fb732b981",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd9f9b1-b33a-435b-bafb-0c3806ef31ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93b81e7-f22c-4b4f-8f9c-914c49ed31ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb835de-ee5b-4acd-a436-9dc617a4a42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad58bd0d-6836-42fe-97f6-f0bd5eb3b4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc722b3-f503-4206-8b46-4e950e9bd6ac",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d55da3-084f-41ef-9136-184bafebefd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "710444de-2098-4d3d-9cac-9f3bb730c760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79302149-2f54-4ba4-9137-61f79b8fbdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52f214d-5348-4b88-ac85-e55d4ebdb5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9a8cb5-9a60-4a47-a051-59202602c054",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d314392-00c7-4472-9aa3-cde22f027bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a85bd2-6d77-4552-acdc-30affb42316a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb75b9e9-b5a6-4a2f-abc2-68292da0a3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6759c87c-a396-4a10-9e9d-14c89638e2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be282bf8-52b4-425c-8861-d1223bc9a2b7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92af6d34-fdcb-404b-9bc1-538b8921fbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9e4fb2-1010-463b-8c11-d27376227907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e408488e-5f75-4628-9e36-4b92315d3def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935097c1-fcc9-4bad-b322-bd509c7a7309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ddc758-3293-429d-87da-c1333f320916",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522b68ce-1809-4c49-86fd-259da484f41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bababd-fba6-48d9-a130-f2cdc55af136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd178fbf-0700-4a4e-9d8c-1f29545431f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c050ed5e-8be6-4f51-ba71-0b5e0791c63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39bbc98-e75f-453d-844c-28458bc0359b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec32c4f5-fd93-4b87-8d4f-d70b989b5317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e00caa9-9d73-4059-8070-f84ba17d8ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c72047-3801-400d-82e2-2ac493676f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0089aa1-868a-462a-9d88-10c9b003156a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a22fc0-50f1-4610-87a3-a822184572bf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b935ecc4-371f-4c3a-90cc-7237e7a2ad25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688f6a0b-01c6-4cc5-9498-a411a44843d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbbb2a6-b03f-48fd-bc7c-bf894fc7ab4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b35b76-e76e-4429-b823-614f8c7c3a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efdd482-7567-4b11-a3c4-28abf34a1f15",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b24781-8519-4ae9-a476-d17c31b57a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ba9acb-121c-4365-89c4-a4866454d15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae569fe-6188-4191-a217-1bfa19f6141a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f65af14-01cf-4073-ba42-1bb14f548c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d0043b-d0f2-44ac-a181-92f0b62292d2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8721a77-d7b2-4819-9b43-68d2f50b29b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80d9da4-c4d2-4c58-a0cc-64cc32684ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c39e6bd-96b6-4412-8369-0b207250ebd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da52a97-a4c0-42e6-8278-f173a25851be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f424db-a940-48bc-9edb-8465d6b36be8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c1b667-4923-484d-b661-e872674d5f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55244e3-a651-4c73-9907-6b736b3ae545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98ffde1-b5b6-4947-bd52-4816be85f996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecf7a19-95f1-47f5-92d5-3d99c3863b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd36eae-4ebd-4c13-88f2-8f576ef1c81b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c0cfd6-3345-433a-8d60-dde9621475a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361656af-b8a8-4426-98f1-25d73e8af64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c8cb77-5455-4f12-bf59-e423c952e74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917a5e82-e35b-4539-898f-18bf948e2d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b07a0e-8e60-4216-94be-ba08133040d4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8940364-e443-4f74-b4e0-618fad30f224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c449df7-c7f1-49c2-8d8b-937aef066d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6faa6d-d214-404f-b227-a39c9d729425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be420d8-e074-4e38-bc73-26df7424ebf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba983cb5-f7f4-4410-aa66-3d5d8c951d4c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f47aac8-86c1-4651-a2a4-cfcd0dba44f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b0534f-df6a-49a8-adc7-ece5940a3e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d139c2ae-e080-41f0-a940-21df0a6019d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0babc5-1a07-4563-8de3-b4393688527d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289a6292-afee-4fb0-bf73-cb1b867e91e2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e307990d-6a31-4677-8509-27f792521aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ee5ace-c96a-4c75-8ef0-6a4dd148f8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02583268-cd80-442b-8d66-ad1f105a508f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c53af3-b6bd-4794-a5a7-8e91c7723982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee554d3-178d-46fb-8749-67bb11266f35",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c802f2-8fbc-413f-919a-5972295ebf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f7618f-51ab-4337-bf55-15a62981d0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a5472e-f17c-4cc1-88f2-4ddd564ab74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d89e16f-f785-4034-9e98-cefce6304184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fd6810-0921-4bae-a70f-40bdd2877f92",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0b46f3-84a6-4d1a-a28c-f625cf305e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55aa7b76-8729-438e-b97c-900499f234f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abed6dbc-79e1-4498-a89d-1fd0b5a63d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed70afd-c23b-499e-ab49-0a12e5b003ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aec521-5187-44a9-8d41-2ff5e30ca9ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2496ea1f-ff50-4efe-88cd-59963242cfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc55a60a-fc06-411b-94e9-b22808f83221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a447e442-b241-4ab0-9e08-abedfadd9c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd26638-df6e-4ff9-88ef-f13fcc8844a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf46e5-5ea2-445b-8189-8b32d3549dff",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f6647a-f108-4571-afec-314c4468d1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ed63a9-f210-43a5-867f-2f307c98f95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5933ec4-0e06-4c98-8db6-f21c8b0add39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475924fe-7de8-4fb6-952a-6ec8ddf0d9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b58ff26-aaae-4ee3-901f-1324edcb3c8c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f144c8d-d042-4169-b741-185dd903640e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4be4ae3-cf1f-4807-b9c0-4880f0100871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237b2856-4323-4a14-9b31-a3c665d54e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f233ce-c264-4dad-a5a8-a21b42468af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac2eabf-5807-4a02-b7d0-5f2424083337",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b953e5e-ecb7-4e35-8bae-68f3f89f41cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbc67f3-df6d-4387-94a2-cdc816d8867c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d78eb1-d93d-41ec-ab1a-efff86774698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdc282c-3587-4831-a55d-255de1a8e17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73350452-d48e-484e-b342-9e57fb372357",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc631a7-4575-400d-8743-3fadd4c5724d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973a7a24-bd14-4cb9-9447-05dbf903c362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e47341-640f-4c5d-b908-3d9239bd29a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f288165-9c80-466d-b573-41fdbcb1bf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03c0cd8-fbff-43f5-abeb-4c3085930b41",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b968c00-97d2-4e62-8ec9-dfcbbc7f469d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dcb709-928e-43f7-b630-03b8bbeb4be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24706f9-a4af-43cb-ae79-697e000324fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6a5288-8237-44bf-971e-d3699a673f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4608adf4-13d3-41ee-b89b-b1857f6a975d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17997ebb-94e1-4754-b602-94137bf0c9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cf4cbe-04c2-4d81-977d-b20127cc397b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af06411a-c57c-4c85-8420-9a0bcb1a855a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9e7475-6ac3-4203-a22f-7bdb4aad9d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6677dcd1-3e90-4bc5-825c-e15237413239",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559309b3-306c-4b8d-9c75-e5aedffaecb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667b49da-82d5-4e21-a414-597ba1074ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866c9914-0842-4408-adac-3a20703fca34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb8c354-3016-4448-926f-3897350fc95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8ba132-a092-454a-bc58-8161aa786732",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea7ef4a-68e9-422e-8b9b-ca2295cc4ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15691cc8-251f-472d-b8e2-d6f274644268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8aa6db2-5a6d-40f1-a407-e8b665130957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb943bc-2228-4080-a389-6c104ba4c0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eece06f-421e-4838-bd6e-34b5da2543cf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366ad9a4-89a3-4b10-afa1-398f4ee96ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b02c6d-d000-4cfa-9b82-e5820c1b6df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a629b88-6676-439a-9c4f-e69de3238fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e812ea1f-f807-47c8-9347-8bd772b28c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073d1709-7a52-4c25-801e-96d0077ba7f6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9517ed8c-202f-4d96-afe2-31ff94cbad7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6505d479-0b3c-47d3-9834-2c22e3c70729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de29445b-50fd-402b-880a-aa1ada1000e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964a6cba-a732-4368-99ce-5aff16d8b177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa40f9a-8de6-4383-9eb0-de0ee959ea9d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ba245f-bf8f-4494-9974-1b896881483c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126c0e7f-61e9-419f-b84b-8d4f2bffc513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169ffac2-a5fe-4473-8ebc-f0b6846fdc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadd891d-3531-42fd-8119-c2c62a3d7669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6579a292-a5c2-46ed-afa3-cb17275656eb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc12e5a-e368-4cc8-ade2-cd0824258b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6481a5e0-b1a3-45a6-8971-6e9f6dcaab88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cad495-1980-4828-966d-d8464ee13f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9717e729-f324-4ec4-ad83-0e3539fbd38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d247945-e202-4a29-adbe-f84ff3fe910a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df197c4-25c5-4d61-a410-5e59fd5662d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9306c121-4d4d-48df-8bfa-520af9fc69a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35719e8a-7587-4fbe-a43a-7f70556dd093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a16b606-359d-47aa-97e9-702486fa769d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ac3b74-e11e-4cd7-ab7a-bb6bc73b676a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f62512-1c26-4199-96eb-6f16585e6b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc9a884-b65a-410c-bf24-5e4eb5575dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a571913-e064-4c73-9230-24f1a73ce6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756eaa5a-0a98-4847-8b21-3cd78da2f93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f651194-609d-4829-b250-8cd0e5c1854c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2de46c-bc94-4bfe-a174-0c737c3c76fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3520e3e7-cf33-452e-9805-5fe6fae8023a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590fdf62-9f35-49ec-915a-74d78248a423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea6e5e4-57a4-46b1-bd14-3f9c2864448f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a72d03a-d729-42e5-8899-4a47094f73fc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57fbe77-76cf-457b-b320-8427be951cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168ab125-5b19-4572-aa95-181809863dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086616b4-c874-43e4-9dbb-252384d48982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10d55a4-2b7d-4bec-b716-14cd478bd1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847fa9b0-a76e-4713-9d45-e098b1212d24",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb058f5-52b4-4303-865c-a16a2bc43887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef31bbc-5fe8-405e-afba-88c599016bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf52a0b2-210b-47c5-b515-dc32156ef0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8867be-ff42-40c9-93f9-99ac9dec9f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c61c0fe-e0fa-4e38-be9e-d270f3f4f08e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f322476-9d24-42b5-8136-91b4c7a19959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32351b5-f28d-48c3-bdd3-96de8764458a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9a054a-d05c-464b-add7-a62ec5cdef07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96702a3c-ec63-4aab-85c8-d01015c670b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e35a0b5-6ce9-4d13-94e3-054057eb3f83",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f22377f-fc80-41f4-8232-73566cfa4e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2815e32-68ad-4c76-8afa-fa9902c915cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00d95e4-8d2e-49aa-a382-99baf262ba8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed01d5d7-2afd-4c73-a4b6-bdc80a9df677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75203d41-a4db-4867-b92d-428775c54544",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc6b995-b99b-4af3-bc2d-5335b7d272df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c07cdd-e7b3-43c4-880f-ff4abd00b459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc68cd8-4c57-4f8a-b717-c1c73cfb36d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87335f70-18ae-4953-b564-1d61391d0175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234a4c84-d09c-46f8-84a0-2d26ae3275f5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a743d7ba-03cb-4ef6-ad8f-5461f51de0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d17d1d3-3719-4bf7-9a34-65a581c6865a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409fe16f-4f7d-42e9-960c-e5c329303818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65c3bc0-d414-49bc-9c9e-a73f10b3d3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4297eabc-4048-4cc3-b236-09a8e9f681bf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac576f4-c070-4487-804a-98e4dc2055db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474c56c2-21c5-432b-b3c9-7bf0d0c42c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1149fbc-5990-449c-afea-61108421b1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c304d8-09e6-4e62-83fa-2650489c9296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e20c23c-d40a-4312-871b-6542424e92c0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dab0ef-ddaf-406e-9a21-c5897281a596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7626934f-0fbb-45b2-a47d-39b4f93307d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256981ff-a3ed-4ae9-8a43-4d22173e9f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da0027b-25e7-42d7-9c1a-1203320a772a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6364d128-8f78-4c34-a6ba-e7e6df16944f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46975445-54d3-4f7e-85bc-3c2a95a6c273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6174c4b0-3f0f-477a-ae06-229977d952d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601ebdaa-0138-4c48-9fcb-186e3e9a7e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6937899-f171-403a-88e0-541dafa7cf68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88057c74-e972-41e6-968c-e74fbc144e3e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7072f997-fe36-4b87-a6ac-b24ff3d805c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4110860a-82e3-4423-964a-461efd00e244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f26bbc1-391c-4cc3-ab9e-deae424386f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef03f42-0c76-4f68-800f-1d254b07e510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a207f734-2834-4cbf-af06-2995a9abb7eb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1d1967-89d5-4118-a1d6-8e0fbd666fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265f5210-fef8-4221-bf44-355331184d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491186ca-dab0-4e36-b407-7f8c5e5d2fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ca729b-799d-4b6c-a8db-398d3ab7e64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa63d83-21d2-45ff-8548-8c6b98933442",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4af0460-47df-4e7b-84e7-8939c26dec2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c9c18bb-a71b-485f-932c-e7641aac88e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6466b0-5f6c-4fc9-8ebd-79dcf0364d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5bccee-8a70-4f8f-baed-1184dc6f15c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7230f7e-af18-410a-90d0-6816ae58a326",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dd0bdb-ed11-43fb-bcde-279c4f89e3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c37184-a6df-4ced-8fa7-d8fef0099078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1494242c-856e-4b81-b1b3-3754d07cad39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c9a6a2-c3e5-466d-9023-ad32794f15cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b6b23e-1a44-4f4c-88ac-ca1061e14f65",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c5ae07-388f-46c4-8a5b-fe727f138579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d81ae38-d74b-4e6e-9201-1be6b070f509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fd17f2-180e-4693-8b6a-c0c276c150ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77f00fe-f4db-41ca-be43-cf4ffd14bd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091afaf-e538-4530-9266-e3242d29d3bc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68ddcb1-2c8d-4da4-905a-3d3f69f1fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f56fae-7fb3-4e68-93e2-e14cb6ba8620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d339b6c-1b6a-41ab-bb44-893550ca25ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6098ce00-1728-48f7-a0e6-95972813a750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e7cb5f-6ea7-4fee-af28-4e89997d4290",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee7f274-4b15-4573-b9e7-d081dc617f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cac1f4a-9b37-43e7-923a-87f87c61d7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f914b4-26b1-4b16-8c02-9c07257c0fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2074e764-368d-41b9-ab6a-50b340d26076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f1ad88-67fb-4280-a8a1-30e2af0b9147",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726d1b6d-3a1e-48cb-b03a-11ae7524e703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2b623d-04b4-4a5a-a91a-71b322f21d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc996b3e-7624-4363-a24e-595494c87e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2102651a-5c98-4860-9457-eb3723504c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab76bdc4-1c88-478d-a2f8-aec4e63ef023",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b2c7fc-42c5-475b-ad8f-1c2ed0951dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f098cc5f-6ecc-4a7b-b61c-91347d1af558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90a1be7-66a1-45d8-8db1-289e3afeb518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492bc55a-2a53-462b-99e6-04786b947367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad9a761-2172-4908-8f7d-55b979333395",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a2abf-0d0b-4c70-82b2-fa0ffbc8f786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e28fc9b-78c4-4a55-9fb4-0d89e975f2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68367217-d182-4cc2-ba59-c33d34295dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb1432e-ba93-4b6f-a6fb-b265e61b7abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b855daf7-3309-4cb9-bd06-4166ecaf94c4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fcecd9-c19c-475c-a5b3-9e1f182fbf23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc9b2c24-f2ea-4bf9-bb48-7f4cf06e3278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a688917b-9d78-413e-8d3d-a9f6724b3427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a48970-75d1-4dea-b65c-9ad4e07a7d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebcbd85-541d-4449-b746-156cab87f9d5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9145d88-c940-401a-95e1-1557036183c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89fcce50-9d2f-4f68-85ca-fddd51f131a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a90926e-d2da-429b-a396-0684b74b9349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cdc274-816f-4d2e-9d21-c1870332e9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182655cb-5ba6-4fd7-9c0d-1c1644386f52",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ee102c-2259-424d-8496-af2376d6889b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4ab30a-43df-4c55-8a7a-d52f849a6c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf546e82-8999-4927-9b9b-1c4bc1821dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4695c1-c73c-4569-a7bd-893f259c4558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3cea3c-0fce-4aca-975c-0a87d91ab635",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d4650a-2d93-41fa-98d4-a3b8de503b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f33c81-6788-451d-bd1a-368364ba63f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06a0f46-1d61-4f25-be7c-451bf0b23368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb2fa9c-db5e-4800-ad7f-f030589a1e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9291c96-3b42-44dc-a397-a850cb1948a4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7a8fe0-4b41-4dfe-ba6e-a57fba217284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233b7320-cf80-40b5-a874-ee99052e6af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e29b0a-c4d3-43cf-8672-87569ab5a1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377de72c-3a03-4b6b-ae88-d2f7275bfc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1705c3ec-f937-47a8-acae-633e835c5e86",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76456238-ec76-444c-be2a-b8c40c017490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddebdd85-d9d4-45d2-afcb-be4297764b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5f5099-505c-46ee-83ff-8246c50d58d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2d7495-58c4-455f-99a9-a03453d9b5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c106db65-b53a-4a21-8a34-9622acf3cd15",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49078bf-41ab-4f8d-bb2b-78bc95c45697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4332c3d-1cb4-4a94-8586-1442696886c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25d50d5-901f-4ab4-864a-95b5320cd7e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc910851-f24d-4fa3-983f-ad8aa2a98560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeba717e-a26a-44b7-81a5-6c43abd9fd52",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475d8562-2ee1-44fe-80a7-587656347160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48627988-7248-4773-a0a9-27e35c0cf2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e67861-7a3a-46ad-85a2-02a4129bcc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae351c8-04e1-4f84-8ca6-f5b3c8e44c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af080ce-8213-4a3a-9df2-9382786bc346",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb37eea-feac-473a-853b-1e2293d36ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "313e833f-f082-44a6-a561-61ee513e5702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d37540a-e300-495e-a710-3c755399a08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79df3a74-3e00-465a-9033-960a930f2d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b640e0e2-757b-4dd6-8c69-66f9ba01b7e5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ec34a8-205c-4388-a0a6-9d7145ade874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8e1007-1f97-4fb8-b489-1343fe13f3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdf182d-4574-4221-a1c0-1a0e4b49ef6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468dc034-fba8-4922-a0a2-d6cae7967bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5a1bef-0804-4774-bc3c-027eba4a63dd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd7518c-44b3-4086-9aad-5c9e72d27c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e041b20-1faa-4dd0-aba0-6045e7b367c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735d44b0-2e64-4849-8fdd-99bdf1f456d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc8bc28-d41f-4001-8e3d-abe85c4f0e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017587b4-6e83-4094-b020-d6517936d598",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08e0dce-a1d5-4216-a07b-dd849c5d6551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3ecee7-f896-4544-87c3-d47b46f84624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129ba748-f342-4483-bbbd-b602983a9b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dee6ff4-1a5b-4ce3-9959-ed82c0d40831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ec1aea-89a3-4faa-8d8d-aef63b49ea0a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16057d7-1ea4-48d2-8ce1-d6fdda1b9df4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c19375c-2c70-4b9f-996b-e3d9d4969728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e940a21-d78a-447d-9012-dafba1cd1d09",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d7173d-6d34-4b83-a0ab-c9267f694918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b5cfd5-8c08-4e0e-b07b-d316090f6223",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98cb885-e513-45ea-83cb-3d921ae534ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e0c09f-0a05-4ae7-91a8-aa8d19f33e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf05788-668a-403a-ac73-2365fbfc79bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753b66bd-82ed-4809-ad6b-e6ec3467b00b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af2b9538-0a3f-413d-8756-e76e9a46a6bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07e79f49-0f56-4666-ae05-dc73dc66cbf9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5491d277-f6cc-4d7c-ad78-a7b9b8c76fde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95723e7e-5093-4cd3-9957-2de5afbeadcc"
                    }
                  }
                ]
              },
              {
                "id": "00a22f1c-0f93-4e03-b793-257fd6d98a40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d38da15c-48a4-400e-bc2b-2112257349fb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab17530-6afa-44cb-82c0-95b8a7ae9724",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fd12b82e-4024-48a8-b660-4f8d42530a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020e8f8f-2eb7-4acc-b7a3-bd5645b457b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91363374-f605-47bb-957d-f3641ffe986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d107987e-a3ed-403f-bd59-2545c41f4112",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4454d3b5-dff4-4c33-884f-57b6417bf391",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eed7e28f-9cfc-4ef0-92d7-3e69220923eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bddb24-653b-483e-b66a-0ec2382dca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e87a2e64-557f-4911-b361-e7e21b27d67e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47cb9313-ca1f-4842-b0f8-bfaa5ad0761a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cdb3887-fc0a-4695-b338-7a08c3cdc295"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce86c2fc-09fc-405e-82a0-70457b9d23ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc7b672c-db6a-4f24-a93f-f59e2ef062ed"
                    }
                  }
                ]
              },
              {
                "id": "7b07fd45-6a56-4cbd-9d2e-ffd83f0a7b55",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "67e5d50e-18e8-4edc-98fd-f2ce2b45c450",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51094a5-91c1-40b1-8111-a3576ba719e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "51eaed75-8b40-402c-9d27-104aebc484c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a64562-4a9a-4b8b-b225-911e5d328d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2984c1b0-be82-44b0-af9e-ed532b7f9563"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78a550ff-29cb-48e4-9e37-2a0d3db2fb18",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28b36d0e-b185-4d0b-9877-b722625c678f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e78fcd9f-1f67-4be5-a35d-70a813aeb4af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac79c00f-2de7-420c-b506-5a43b273d640"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fc65c65-284e-46c8-b05f-5fa25f59ee45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efcb2803-95ff-4f26-bcdd-3aa2e304ca2d"
                    }
                  }
                ]
              },
              {
                "id": "f8c8661f-c639-4ea2-b96c-235a41929b0c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40a73e59-2ff2-4386-bca9-15dce1a6bfe3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6c579f1-3c09-477f-97b6-25f438beefa8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc4c2a5a-fb0a-4cd5-8cd3-2f9ea33bc259",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e6f9db0-aae6-4a89-8a24-8d10a39a0323"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08125e08-0059-4e4e-a15f-da0263a169f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3f80165e-1a6c-4f00-90a7-ed872b26926a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fadcd0e5-dfb4-4a3d-8e9b-802008089560",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8398bd5-5879-4b2f-876d-105635aeacb2"
            }
          }
        ]
      },
      {
        "id": "e0191e66-df48-46a2-af05-dfd8c948fcf3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "77b19f53-db14-488e-aebe-86eb318b06b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5dd54b4-e9eb-4b42-a263-360ce556291f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5093c326-85b8-44de-b17f-49caf828f2fb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb668be-cfbd-44f0-82f5-54958a0c48eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8750e0fc-a9f2-4ea1-adb3-f5824dbc83f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bff28ee-17e5-40de-b97f-3615963c64af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb1f88e4-24f1-4201-96ff-11e24df712e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ab47a7-3c15-4596-a05c-b367b77d6b1a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46102f0-d39b-49ef-a5a8-873f618853c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "34013ab7-e590-4a46-aa79-6ec7d8728a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0989033-9787-4685-8d46-62797970380a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe7e4216-bdd3-481e-a0f0-97ae80281dd0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62073ce6-f33f-41f9-b478-c1fbe55d0af1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a652dac-3f36-4b40-bc6f-3d5c7fb6704e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c6ed7ca-2c12-4bec-9029-ce17b5ef0070",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6fb9daa-f253-4312-b78b-d3dc56298a9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "541b20bc-f5b9-4b0a-b3f0-8f58a544c9b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "302ed8d7-65c1-444a-a71f-b0a8f6f76a1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "688c135e-5da9-404c-a98a-bfa66b146f5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2ffb01e-ca84-4923-b12e-bb26dd691b77"
            }
          }
        ]
      },
      {
        "id": "8ec19b2e-7fd8-4be7-b412-1650d78df825",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "92b549e1-3970-4ac4-8adb-f4892dd6d927",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da135600-9bec-4ba4-9c75-8969d89b0378",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15f7b3d7-8bb4-43ef-bb19-d4b62f696dc0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b20a6e-5e8b-4fdd-b1e7-0648ed448143",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fcb0101b-55d8-4918-9413-feba27cc489f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6646f0-0b9d-43f9-adbb-6ef5d9757b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b85c41c-d1b7-44a4-b4be-59d1be75ec16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de31cc1-a041-42d4-b844-44a198c8cf3c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af76f360-f08e-41d3-b769-f515adbddd71",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ab9626db-c300-480c-9952-d8c022f0f477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03f2aa4-0973-4305-8b33-7800b8e8c76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e657688a-31ee-4478-b5a0-cd0c1392e161"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74195bd4-861e-4c3a-aa9d-61f6953d5770",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a4077d9-115c-4add-ab48-96ed5f5e5c93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4f647aa-8b95-4116-8c79-493d4363a840",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb417072-3786-4c5a-9c5c-881061b0f09a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85b70569-5193-43b9-825b-54f1b857e6e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b4e185f9-667a-4ec9-8c79-5c8c5292d283"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cbaa195-b81a-48a5-ac1c-eba105de9476",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2511d2b-d398-4102-842e-1ddc2114b771"
            }
          }
        ]
      },
      {
        "id": "c47e5701-48c7-40b3-a5f9-17429109e7a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e1939aca-ad0e-420f-8f97-a9174d525445",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6516741-0428-44ce-8a94-a7e2bb222449",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fe5b28a-3b7e-466e-bc62-25aa1f4a3d2a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f75aea-fb62-47e0-8f6a-61a5bfb7fc8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "26cf7b72-b2e2-46ea-9027-90d4a046eefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bdf549-2c3f-4f92-91d1-e0e73de49db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46ceb1c1-fd5f-4ad6-86a0-db2640c62677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e58bcfa-7204-4b20-8841-ac41e188f341",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd9880b-0a1b-4bd2-8b68-72ee4930dcb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d97137b9-9bde-4bc5-a2ef-6ab19b7a53e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d04dcb3-0626-477c-9e80-dc00c3534e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79239832-ed72-4f57-94e2-7a975a951bbb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd89b375-e412-457e-8e20-81d6470441d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0cf7f79-1fb2-438a-975f-3853bfb61711"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfbcc6fc-0fdf-467d-a7db-de98cef45b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24d43124-78b9-444e-b661-39f12e1502c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b37bd0a7-0f1c-409c-a817-2cca7babedbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a6b8074c-ae28-4699-ad4b-bf6fc1bc4234"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a755745c-511e-4949-abb3-b18e4e959f2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbcf5ba7-5c7c-4d6e-b536-53ca7c0c8117"
            }
          }
        ]
      },
      {
        "id": "410788ff-b882-4e65-8ca7-ff4d1c4449d0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da00798e-5942-493b-8490-a1fb3926568a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1336975d-5926-4b90-a3d2-f30c867b4239",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "83c4a041-cf58-495a-b81b-5c3cd1c78d94",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca556d02-59af-429f-8490-df44ada650be",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60a21200-b7cc-4a71-9f96-330c749c5a34",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1917,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 515,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 963,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 954,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 897.7624521072794,
      "responseMin": 11,
      "responseMax": 6225,
      "responseSd": 1001.9755720671409,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676498270973,
      "completed": 1676498516371
    },
    "executions": [
      {
        "id": "ac2899b8-4b91-44ab-bc0e-3caea60a4386",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "70499a62-3597-48ca-a4f9-f21d3277132c",
          "httpRequestId": "fccc1c4b-73bf-4d3b-a00e-47b08e75703b"
        },
        "item": {
          "id": "ac2899b8-4b91-44ab-bc0e-3caea60a4386",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7a5259d9-0159-4dae-ae7c-dcf9cc4f373c",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "b2874d00-9b0a-44e6-80f2-622da8094324",
        "cursor": {
          "ref": "a4c55f7d-9613-411e-9b7a-3407414e66c8",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "12ff1d88-8513-4723-89cd-f402b3d2de69"
        },
        "item": {
          "id": "b2874d00-9b0a-44e6-80f2-622da8094324",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9ee067ef-c669-4b92-9bff-43c6c04b30db",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "38941e5d-cc7d-49dc-865c-66a7ae526272",
        "cursor": {
          "ref": "c6679ec7-c1c6-4dea-9c48-cb4dfb0a47a1",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "93e48349-abff-404f-a71f-0db6389eef9d"
        },
        "item": {
          "id": "38941e5d-cc7d-49dc-865c-66a7ae526272",
          "name": "did_json"
        },
        "response": {
          "id": "77c3d0ca-53b7-45e8-b7a1-3861ceb3fa60",
          "status": "OK",
          "code": 200,
          "responseTime": 964,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209cb506-2d22-440c-a906-54152f103114",
        "cursor": {
          "ref": "7ca75c61-44c0-4cab-858b-2dacdea8916b",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "90e4ab5b-0ebd-4a2d-9904-2623716de0ef"
        },
        "item": {
          "id": "209cb506-2d22-440c-a906-54152f103114",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab8df85d-06ab-419b-b4d6-fc56f2bde08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209cb506-2d22-440c-a906-54152f103114",
        "cursor": {
          "ref": "7ca75c61-44c0-4cab-858b-2dacdea8916b",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "90e4ab5b-0ebd-4a2d-9904-2623716de0ef"
        },
        "item": {
          "id": "209cb506-2d22-440c-a906-54152f103114",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab8df85d-06ab-419b-b4d6-fc56f2bde08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82059b9-b675-445c-86c8-b75b1aa7d33a",
        "cursor": {
          "ref": "bdf482d9-d822-47f3-9f42-229935a7367b",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "46ab8f29-307f-4428-a91f-e1d0ea8eb448"
        },
        "item": {
          "id": "a82059b9-b675-445c-86c8-b75b1aa7d33a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d7fb1380-9c0f-4718-9e7a-ff73d3bcf1f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 780,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dce9d7-bb23-4e20-8fb3-fef6b11e402f",
        "cursor": {
          "ref": "399954e3-81d8-4036-9453-11d6ef8db128",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "23aa2c4a-69e1-4ea4-9e0c-c3d8d841ae68"
        },
        "item": {
          "id": "84dce9d7-bb23-4e20-8fb3-fef6b11e402f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9d6cf396-9f0f-4cb7-aade-dbfbb28610b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 610,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7febe1f-4273-45d7-a553-c3144317e584",
        "cursor": {
          "ref": "74cfb6dd-8098-4e33-812c-fcbb87ab8188",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "89602050-a4ab-4fed-9484-75cec46ae9c1"
        },
        "item": {
          "id": "e7febe1f-4273-45d7-a553-c3144317e584",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d7d1d425-bebd-40f8-83cd-fba052d89cb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbd21c8-d3a4-4427-b722-385b62aa10e5",
        "cursor": {
          "ref": "ecb5760b-7333-468c-83c1-a88430631625",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "10cf66e9-7b18-419c-9233-553e059d5b69"
        },
        "item": {
          "id": "bbbd21c8-d3a4-4427-b722-385b62aa10e5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c811b083-7540-4c77-a1dd-a19709467044",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbd21c8-d3a4-4427-b722-385b62aa10e5",
        "cursor": {
          "ref": "ecb5760b-7333-468c-83c1-a88430631625",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "10cf66e9-7b18-419c-9233-553e059d5b69"
        },
        "item": {
          "id": "bbbd21c8-d3a4-4427-b722-385b62aa10e5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c811b083-7540-4c77-a1dd-a19709467044",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49be9d86-d77f-4f3d-90fe-3257b61d9427",
        "cursor": {
          "ref": "bdb07269-12a1-4302-a416-4c9f752c4ef3",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4c2aa25e-e7bb-458f-b5df-d364f68028bd"
        },
        "item": {
          "id": "49be9d86-d77f-4f3d-90fe-3257b61d9427",
          "name": "identifiers"
        },
        "response": {
          "id": "637da9cc-4d8d-4074-95ec-abe7b78d9bd3",
          "status": "OK",
          "code": 200,
          "responseTime": 1046,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af615181-b540-40cf-8889-0947d4252624",
        "cursor": {
          "ref": "06baf9fd-b394-478a-ac5a-d4c2dad2d423",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a149907-7c4f-4f44-8f36-655b0245346a"
        },
        "item": {
          "id": "af615181-b540-40cf-8889-0947d4252624",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cae4524b-e645-48a1-a207-82ec0ce4f186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af615181-b540-40cf-8889-0947d4252624",
        "cursor": {
          "ref": "06baf9fd-b394-478a-ac5a-d4c2dad2d423",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a149907-7c4f-4f44-8f36-655b0245346a"
        },
        "item": {
          "id": "af615181-b540-40cf-8889-0947d4252624",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cae4524b-e645-48a1-a207-82ec0ce4f186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e20302f-448b-4bbf-8769-0ad53ce9defd",
        "cursor": {
          "ref": "2b4ec44b-cd76-41d7-84f5-8f4f5725f0d5",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "211e9bff-31ec-4ab5-ab2d-53e6c0621186"
        },
        "item": {
          "id": "0e20302f-448b-4bbf-8769-0ad53ce9defd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c578cb0d-728c-44b0-8a57-6d54734ea200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a155e7dc-3618-4a1b-9dd0-6e0e7785de05",
        "cursor": {
          "ref": "c253910d-a496-4267-9b0a-b9cae385fc76",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "570a1fe0-732c-4a20-b3aa-a57fa6ac70be"
        },
        "item": {
          "id": "a155e7dc-3618-4a1b-9dd0-6e0e7785de05",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3b3f2b19-adb7-4ebc-919a-438e3b536d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4b1a76-33bc-4612-9c60-40d807457e9c",
        "cursor": {
          "ref": "90be1f43-a66a-4c61-8ea9-00f69780382e",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9d4fd617-1cd4-4478-b988-1ad6a862193e"
        },
        "item": {
          "id": "fc4b1a76-33bc-4612-9c60-40d807457e9c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "022bb1f9-2dc9-40e0-a199-4bbfa0848a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae979cc4-5b40-4f60-b51d-28585c85a8c4",
        "cursor": {
          "ref": "72934048-12d6-4333-8c86-fde07ce3071b",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "28520c4d-e660-416b-a6d1-7c36f2e6d4ce"
        },
        "item": {
          "id": "ae979cc4-5b40-4f60-b51d-28585c85a8c4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4fc7646a-afc6-4004-9f78-45eb53f5cbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b329494-7a11-4701-89d1-8800d2f9cecd",
        "cursor": {
          "ref": "843c1706-6850-4a2f-b964-b0ca2c16c226",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b5e910b8-53f7-4d50-ac7e-1f9eeabfbbe1"
        },
        "item": {
          "id": "2b329494-7a11-4701-89d1-8800d2f9cecd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f8928451-e820-47a3-9f53-96a0cbcd8695",
          "status": "Created",
          "code": 201,
          "responseTime": 2810,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "827fddca-5bfc-469f-883d-2240942c8cd1",
        "cursor": {
          "ref": "bfc82e9b-5f40-4cb5-9ec7-c1206d9945ac",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4e61dad9-c7da-452d-a175-a6c4af2e0575"
        },
        "item": {
          "id": "827fddca-5bfc-469f-883d-2240942c8cd1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "aa20693b-cf45-4a5d-9acd-719ff89a4e88",
          "status": "Created",
          "code": 201,
          "responseTime": 4145,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "37998141-d993-44e1-89e8-68c25ec84477",
        "cursor": {
          "ref": "d06ebcb0-42d6-4564-9f63-a9f12d8a0bcb",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f8ea7e94-b4df-411d-af93-562c908448ae"
        },
        "item": {
          "id": "37998141-d993-44e1-89e8-68c25ec84477",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "25b479c2-59d7-4bbc-ab4f-d77e030d81ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4123fd-3590-4872-88a3-289f194f61f5",
        "cursor": {
          "ref": "f9b1fabe-b182-4d5f-bb14-5ea452af2f3f",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "36f63c3a-06ce-4622-bbbb-65c41e7efa3b"
        },
        "item": {
          "id": "ff4123fd-3590-4872-88a3-289f194f61f5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7fae6ec4-9270-48b8-b4de-837b13d330a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a30217-aa0f-4378-a8d7-bb8785acf033",
        "cursor": {
          "ref": "0dff5dc0-5c81-4416-88fc-e43c2a9dc61a",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e7676189-e814-4ec4-8e92-562a9521615f"
        },
        "item": {
          "id": "70a30217-aa0f-4378-a8d7-bb8785acf033",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dd56e3e7-8a29-44e0-a3cb-2954d283a657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b28d10-f8b9-41c5-8330-913a77f42992",
        "cursor": {
          "ref": "0c0db0ec-c59d-4c59-997e-e68415d622f8",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a4845ea9-d8e6-461e-9c56-639fd88a3afe"
        },
        "item": {
          "id": "c7b28d10-f8b9-41c5-8330-913a77f42992",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a34b5361-7e55-4073-95a7-cc799fd0bb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36fa834-a574-4c61-aeb4-cc1be89ff166",
        "cursor": {
          "ref": "b05626a3-65e4-4ed4-9e0b-50023c658a3d",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8806da1f-9392-4be4-baee-cd9694d7b58d"
        },
        "item": {
          "id": "d36fa834-a574-4c61-aeb4-cc1be89ff166",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3d96527b-f4bb-4b27-9d53-15841a24c1b1",
          "status": "Created",
          "code": 201,
          "responseTime": 2976,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "09e3ea74-5e7f-43e4-a254-3b89a5030ab6",
        "cursor": {
          "ref": "d8dc02fc-e774-4642-9dba-e20c7d636363",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "90b8d8d3-a626-4613-81f5-bd9efe70ea73"
        },
        "item": {
          "id": "09e3ea74-5e7f-43e4-a254-3b89a5030ab6",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "4446a690-d337-44d7-b846-9c8905fc6f24",
          "status": "Created",
          "code": 201,
          "responseTime": 6225,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "734c66d6-5432-4bbe-8749-e229aaa39812",
        "cursor": {
          "ref": "b32ff228-0c80-4237-9c98-a82b25fb8887",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "63fe733b-ba2e-4d96-87e2-bca994ab24a1"
        },
        "item": {
          "id": "734c66d6-5432-4bbe-8749-e229aaa39812",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "805a2dc9-d85d-4af0-8d71-4d3ff073c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1600,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba09fbee-473c-468f-a2a5-967898db49bf",
        "cursor": {
          "ref": "a60e2213-7c8d-4704-8601-dc8c87850cfc",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7edd2b2c-fbf9-467c-bbbc-e215fbc48818"
        },
        "item": {
          "id": "ba09fbee-473c-468f-a2a5-967898db49bf",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "11967ef2-8751-494f-8137-fba2de5ecdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5277b850-c076-4593-86d0-6cfdedf50e8d",
        "cursor": {
          "ref": "e5aac7ef-3878-4b15-971b-9b3bfa7edde0",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9d8f87f7-3871-4c16-a6da-703e9d383a4d"
        },
        "item": {
          "id": "5277b850-c076-4593-86d0-6cfdedf50e8d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bb34c9bf-6e38-492b-8f00-027442a2c817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1176,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb20e0f8-3c7e-4708-8518-2a9cf50da6cc",
        "cursor": {
          "ref": "76447f2e-c667-4c56-85ce-e5ff886edf9c",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "421c64cc-bd21-4f7c-a9ab-5f93b1edc081"
        },
        "item": {
          "id": "eb20e0f8-3c7e-4708-8518-2a9cf50da6cc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3e824e42-755f-4351-862b-977c8296e85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0370b59-3719-4b87-9f35-c773d70e4b53",
        "cursor": {
          "ref": "0580c5bd-033e-44e7-b722-92cd0a7a02b0",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ae27c26d-1207-4fc0-9d3c-3a34ea5c7f50"
        },
        "item": {
          "id": "b0370b59-3719-4b87-9f35-c773d70e4b53",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "662a006e-57f2-460e-b613-2f2e9b4ca652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e78cf2-d1f6-474b-b5b9-64888004abfc",
        "cursor": {
          "ref": "b1ee1aa9-3b4c-4959-98b0-5b0e6af38d5a",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2f941b04-56ed-4d1a-b4a2-d0f6fe4715b5"
        },
        "item": {
          "id": "95e78cf2-d1f6-474b-b5b9-64888004abfc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5c9d75b3-e6c8-4299-91b6-3817d2473d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109c35b0-d43a-4ca0-8a44-11ded95d3343",
        "cursor": {
          "ref": "173b97ad-5d51-4185-97d3-f8cf719759a3",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f4a090cf-76bb-4e1b-bf82-1633f6aac969"
        },
        "item": {
          "id": "109c35b0-d43a-4ca0-8a44-11ded95d3343",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "554d401b-6f4c-40ca-a5ea-763cf1e5950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146a35a1-7093-41f9-a5a3-7feae5974435",
        "cursor": {
          "ref": "7349b6ab-b926-420f-a522-390b869a5912",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ea2d2921-e80b-4c84-9072-9d240b54ab64"
        },
        "item": {
          "id": "146a35a1-7093-41f9-a5a3-7feae5974435",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "257ab7a4-1864-47fe-b5ad-4b436b1b7c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86da6a04-a48e-4f05-a734-eb3507d38f1d",
        "cursor": {
          "ref": "0b83ca53-8f99-4a65-9203-7bf98c17049d",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "77f8aba0-bb11-4a8d-9601-895ce7a9c6bd"
        },
        "item": {
          "id": "86da6a04-a48e-4f05-a734-eb3507d38f1d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fe0dd8a2-34eb-4b09-9094-67f44b0cbb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8169d2c3-741f-4f59-9721-289759cd174d",
        "cursor": {
          "ref": "51ecd64b-35af-491f-86db-63f3f30cf6d2",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "26f83d02-160e-44da-acb1-0fe631520139"
        },
        "item": {
          "id": "8169d2c3-741f-4f59-9721-289759cd174d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "44c9719f-1311-4789-88dd-d9e747352ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1367,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a8a5c7-9eec-4a17-98d5-9b4325fc05b9",
        "cursor": {
          "ref": "3e34143c-05dd-4108-b611-ea945ef0cebc",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "808b65c9-2bb7-43e8-9e8e-b8809cca19c8"
        },
        "item": {
          "id": "72a8a5c7-9eec-4a17-98d5-9b4325fc05b9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a14364d4-8977-4670-928a-00affac860eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a40909e-db9f-4112-8623-897b1cff8306",
        "cursor": {
          "ref": "1346aa9e-3810-4c9a-8ca1-9a431d2c09b6",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3dfcbe7d-d7f7-4721-92e1-3a895cb17db4"
        },
        "item": {
          "id": "1a40909e-db9f-4112-8623-897b1cff8306",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1fd61ef1-bb94-4a6d-9220-d560e32488b1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 3043,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:34)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:34)"
            }
          }
        ]
      },
      {
        "id": "8889f135-5038-4e6f-9d13-2b5fa7131a8d",
        "cursor": {
          "ref": "f102e8d0-1790-4fe3-87ad-050a33e8ae50",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c9a71140-3a16-49c3-939d-793fc7f0fbc5"
        },
        "item": {
          "id": "8889f135-5038-4e6f-9d13-2b5fa7131a8d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5b067a35-d680-487a-b6a3-2fcb6ca90867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206fc977-77ee-478a-a265-d7eb9f897463",
        "cursor": {
          "ref": "9487fda3-fbff-4bb3-8546-1a052b7476ff",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a4a07174-bfac-4851-afd6-92a9387bcc5a"
        },
        "item": {
          "id": "206fc977-77ee-478a-a265-d7eb9f897463",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4a3e3a2c-51ef-47b2-9306-fb24b740e4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01399ab-5d13-4794-8a0a-feebe58e78fb",
        "cursor": {
          "ref": "c9e37a60-6e24-4f5c-931b-b754caf2490e",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b1fccb50-fd90-43e9-8885-60b5bfd05d08"
        },
        "item": {
          "id": "a01399ab-5d13-4794-8a0a-feebe58e78fb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b5187ad2-ddca-4f58-904b-3290b16e12e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4229be79-6610-455c-9606-ef969bd1f935",
        "cursor": {
          "ref": "f0676ad7-299c-407b-b4fd-992d9c993417",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "79a07177-e5bd-4486-ba40-958c1fdc812d"
        },
        "item": {
          "id": "4229be79-6610-455c-9606-ef969bd1f935",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1c38eb1d-4793-49c6-a466-4958e43fe468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fbbcfd-392a-48ce-be3b-6a377750a33f",
        "cursor": {
          "ref": "7348cdde-a4a9-4ae2-940c-01869b061114",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3ae7b42f-67f8-4efb-9a8f-996b15b17256"
        },
        "item": {
          "id": "09fbbcfd-392a-48ce-be3b-6a377750a33f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "786826c7-9225-4c08-bb53-e0abfb0c813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccd712e-9017-4595-89ea-1200a8a18853",
        "cursor": {
          "ref": "604d8eb8-6139-487b-b83f-283d177b957f",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8e0e6fc8-2f5e-4eef-ad21-89d6d7053ab7"
        },
        "item": {
          "id": "7ccd712e-9017-4595-89ea-1200a8a18853",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4f265e3e-bed9-46e2-a805-0d9b2b106783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd7def9-378e-46fe-880a-9788b05fa270",
        "cursor": {
          "ref": "e0129c0a-d5ed-4067-bacf-28f58455225a",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "30f4b612-e06b-45a5-945a-6d4ed08ea385"
        },
        "item": {
          "id": "bcd7def9-378e-46fe-880a-9788b05fa270",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "32c95a53-8b28-4ffb-a20c-0e561b44cf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd594e54-1686-4458-a8fd-10da45b42863",
        "cursor": {
          "ref": "1deb87fd-61e0-48e1-9153-5514e590f7cc",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f0fb9f45-7866-487f-b008-63c211e3e492"
        },
        "item": {
          "id": "dd594e54-1686-4458-a8fd-10da45b42863",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "41c87698-8c36-45c1-816a-c90296ac88aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9893da77-2f5b-479c-b03b-9c2459051f09",
        "cursor": {
          "ref": "a589fe21-3999-4539-bca3-2c2b8156c514",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0336ee3b-6c92-4a0c-8622-ac9493c35964"
        },
        "item": {
          "id": "9893da77-2f5b-479c-b03b-9c2459051f09",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7b1377bb-5b4b-4e9e-b01b-039871da76fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808d3b33-0b66-4af6-be4d-1682e01219a9",
        "cursor": {
          "ref": "59efa72e-847c-4353-b77c-9ef42e3ef4ab",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c5e6dc56-9fbc-4a67-a06f-58189c37f853"
        },
        "item": {
          "id": "808d3b33-0b66-4af6-be4d-1682e01219a9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4ecc2211-40f0-43c1-b82e-fc38e862094b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d35b17-57f3-42c7-9676-361ba27cc8d6",
        "cursor": {
          "ref": "4fa92ab4-71b8-439d-8dbc-5c36a0c3371f",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b7d8dcc9-019e-4203-aaa4-b3445e8ed66d"
        },
        "item": {
          "id": "d5d35b17-57f3-42c7-9676-361ba27cc8d6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "32a229de-233c-4814-9ea4-ed68b7f93a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a30afa-5754-4fdc-8d3e-6cef143a0236",
        "cursor": {
          "ref": "6c76d4d2-304d-491c-a629-10b191c005cd",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "46b8e778-332a-410a-b2ff-9e1667e225ca"
        },
        "item": {
          "id": "94a30afa-5754-4fdc-8d3e-6cef143a0236",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "66177cf8-75a5-41dd-9b12-bfd9a9e44bde",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 691,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e16365d-8278-47f6-923b-75d85e0805ac",
        "cursor": {
          "ref": "0d1a1096-1d1b-47a1-a030-b7c2b37942d2",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ff55acd0-d21f-4a8d-8587-d6845d938fd4"
        },
        "item": {
          "id": "5e16365d-8278-47f6-923b-75d85e0805ac",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "95fb13bc-9274-4ef6-b7b8-662eebf4a1fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 593,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:47)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:47)"
            }
          }
        ]
      },
      {
        "id": "2426d460-f1b5-4eb7-812f-5f2e04e8c7db",
        "cursor": {
          "ref": "97841e6e-ab0f-45b3-a4ea-8afdf4a9977e",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b8d14308-c59b-44eb-9273-3d60eb80e489"
        },
        "item": {
          "id": "2426d460-f1b5-4eb7-812f-5f2e04e8c7db",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "00e5bfe4-bcb7-4438-9e06-861630f76341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbd6a2a-0390-43f7-b4c0-0cc0df84d184",
        "cursor": {
          "ref": "f3cac7d5-adc2-41ab-90d1-e2fa94ca552a",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3a3b2f4c-b5b0-48f5-a891-2cc79778ef8e"
        },
        "item": {
          "id": "acbd6a2a-0390-43f7-b4c0-0cc0df84d184",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e197c98f-1b43-4841-8595-099153f2db3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d464a6-6783-4491-af8d-1cdb42febd1f",
        "cursor": {
          "ref": "4bf8a72c-083e-42b0-a354-204f59fad653",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9c5e556d-c740-420c-8196-a99c32900aee"
        },
        "item": {
          "id": "28d464a6-6783-4491-af8d-1cdb42febd1f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b4357036-68e4-4309-b267-546ebff4bf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195bfaf0-64be-4a75-95da-ce7b13a8a6c7",
        "cursor": {
          "ref": "0b9c7b47-8ac3-4c03-8e27-dfaaed1e8843",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b6f46044-8f9a-43c5-8907-c988432e63ed"
        },
        "item": {
          "id": "195bfaf0-64be-4a75-95da-ce7b13a8a6c7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f7ed072c-92b5-4ca7-a729-a2b998b9f666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca22367-1eaa-4422-91e8-5964693a471a",
        "cursor": {
          "ref": "cbcb8ffb-0d5f-4a07-b603-260a98c50d82",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1c566b2d-acd1-4faa-be2d-e80cb7ac93da"
        },
        "item": {
          "id": "1ca22367-1eaa-4422-91e8-5964693a471a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "264a9fe8-a827-4b61-89f4-352966d7dee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee614f8a-d7be-482a-a3a6-0ccc4d019734",
        "cursor": {
          "ref": "66779fa5-c544-4f76-b267-3a024d7ddd70",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bcca089d-953a-436f-be9f-d7eaa3ab1524"
        },
        "item": {
          "id": "ee614f8a-d7be-482a-a3a6-0ccc4d019734",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0379ed64-d76e-45ea-967c-c6e6a304ee71",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 685,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494ed984-00e6-40b8-9070-3311b00a52a7",
        "cursor": {
          "ref": "1f97a054-8b27-472b-9264-a554de096aa9",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9863eb14-7070-4612-9d23-ba37a7108d85"
        },
        "item": {
          "id": "494ed984-00e6-40b8-9070-3311b00a52a7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "27234e3c-caff-4d38-9b8c-90f8496fff47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c2bec7-d879-461d-b15f-62502ae32fb8",
        "cursor": {
          "ref": "99b535b3-2ab5-408b-afd9-3e1714a7da5f",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4e1e57eb-476d-4186-aa3c-0ee5a53da7d9"
        },
        "item": {
          "id": "22c2bec7-d879-461d-b15f-62502ae32fb8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ea72db3d-b982-471f-a743-8ce9464d23a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b49e9e9-c094-45b8-8fd4-3347a5274c52",
        "cursor": {
          "ref": "2e39d050-8686-4a05-8c02-dd5bdbd1d717",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fa10aa54-2ffc-44fb-a936-6b0604c82927"
        },
        "item": {
          "id": "3b49e9e9-c094-45b8-8fd4-3347a5274c52",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4ad07ca5-466e-4717-9895-5e7dcd64f147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7d58b7-bace-4d13-a120-10071394db96",
        "cursor": {
          "ref": "d85abcd3-cb42-415e-9f21-3b5150d30786",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0c0b66f0-59fa-483f-bad9-3eb4182428d3"
        },
        "item": {
          "id": "de7d58b7-bace-4d13-a120-10071394db96",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "00cd8637-7eab-4624-996a-ba61d6c538f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d57ce62-d815-40e2-9214-23c004bd58e9",
        "cursor": {
          "ref": "0bd3109c-6766-4109-82d0-1a8fa45b441d",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "62e5145f-953f-4cfd-b3f2-0caef9b5fe1f"
        },
        "item": {
          "id": "1d57ce62-d815-40e2-9214-23c004bd58e9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3fb3870e-5a9b-4ce7-a2b2-ade0346cb73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00a1f2f-0c9c-4fb3-bbf9-47e8c7a3e120",
        "cursor": {
          "ref": "79993f9d-ec7c-49a9-ac95-78a18453284f",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "eb93d766-5a02-4f33-9882-662bb6a65c8e"
        },
        "item": {
          "id": "b00a1f2f-0c9c-4fb3-bbf9-47e8c7a3e120",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "815c874d-fff1-4fef-8647-ab93ddc4a913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417716c1-db34-4e15-a13e-6941b15b3866",
        "cursor": {
          "ref": "7e38bb2b-ae9e-458f-a5a7-1c23ff32e712",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d6fce076-5ffa-48cc-af33-bcb1e7d4468c"
        },
        "item": {
          "id": "417716c1-db34-4e15-a13e-6941b15b3866",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0c4cae25-017f-44e9-abd5-2138f0eba072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83682460-d8db-4cc9-b5a7-18927b702179",
        "cursor": {
          "ref": "00352914-ef7c-4e21-83e2-f3ad97a87bd2",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ffd48dde-430f-49e2-aaaf-cc0f6112f50b"
        },
        "item": {
          "id": "83682460-d8db-4cc9-b5a7-18927b702179",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c6f997a0-b788-4bfe-af21-db6b069d5c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622eab5d-bfc2-4f4c-b426-a6d02d938cd6",
        "cursor": {
          "ref": "920ecd98-eaab-417c-96c9-2a5190f13ca0",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "689cef68-51a5-42bc-9cee-bae9966a3131"
        },
        "item": {
          "id": "622eab5d-bfc2-4f4c-b426-a6d02d938cd6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f51d5deb-c6bd-428a-889a-15a27c606dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a37e51-c592-40a9-92a7-e6ba34cad7f9",
        "cursor": {
          "ref": "47b10d87-c7fb-486c-98de-3724cf1127c1",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d6417c47-8c62-4b66-9056-6b44e6b69b51"
        },
        "item": {
          "id": "07a37e51-c592-40a9-92a7-e6ba34cad7f9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5b3b6a55-21b1-4e7e-8a7d-a8ff3a9fafdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43204275-dd7e-4613-be06-3a2ef8cbf31f",
        "cursor": {
          "ref": "8488c763-036c-4306-8c73-c4f3197212d8",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "23c21c84-3f59-4f4e-b9f4-37a543156a44"
        },
        "item": {
          "id": "43204275-dd7e-4613-be06-3a2ef8cbf31f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e7083aed-a382-4cc3-8f4b-de22672b8506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf19c216-f99d-4663-9411-1fad8214847f",
        "cursor": {
          "ref": "ebaf2356-06b1-4b24-b08f-03155c55b9b9",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1f0ffc55-198b-4297-92ca-8ee9ce21732c"
        },
        "item": {
          "id": "cf19c216-f99d-4663-9411-1fad8214847f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f8568ef0-792f-47a6-9e54-f373fa4dd50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50575bca-d79e-4d6c-a5eb-716ec0a028d2",
        "cursor": {
          "ref": "5e25d804-59ab-402a-9493-5368f9ed3bf9",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f56b3873-8579-41ea-8a6b-aaad129e9df7"
        },
        "item": {
          "id": "50575bca-d79e-4d6c-a5eb-716ec0a028d2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "37bb3a88-cd22-4624-b659-2c5ba54861de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d33b45-5546-4ee5-93b6-5980f62add14",
        "cursor": {
          "ref": "6f4ccad5-9192-4fcc-8bc2-8e7efb98e884",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60fad72d-e15a-4c67-8da6-d323ce7d71c9"
        },
        "item": {
          "id": "d3d33b45-5546-4ee5-93b6-5980f62add14",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "300df613-88c2-46d2-af82-4fbb67815349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784533dd-2812-4a14-8cc1-ef430df9dd67",
        "cursor": {
          "ref": "36f44899-8eef-4d63-8519-a03c61241bbb",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "71de1118-a223-4ad8-9c8f-23de53b9b389"
        },
        "item": {
          "id": "784533dd-2812-4a14-8cc1-ef430df9dd67",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6a078954-801f-43b7-8faf-5ed06d44b97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841b9288-fd52-417f-8b13-07085605bcc5",
        "cursor": {
          "ref": "01d951b3-e4af-40fe-9ea7-2f0c6052d241",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ff437084-3c9d-425c-97ae-33f9a7c522c3"
        },
        "item": {
          "id": "841b9288-fd52-417f-8b13-07085605bcc5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4eb6e415-df66-43ca-81e3-5791ec7a3b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10c2bf6-8fff-4ae3-bfbc-a272abf2eed8",
        "cursor": {
          "ref": "dab7dd04-75cc-4e2a-81fc-348938c50835",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2f8e5abc-d39d-4982-a485-c95752c6ae6c"
        },
        "item": {
          "id": "f10c2bf6-8fff-4ae3-bfbc-a272abf2eed8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8a7d77d4-4d8e-4884-949e-a7f5f436fd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efe0761-9842-4388-9943-a2e6a9616947",
        "cursor": {
          "ref": "5193931d-d044-46d9-b5dc-5186175a5b82",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0be05ae8-5d2d-471f-b0d2-8cc14d8750f0"
        },
        "item": {
          "id": "2efe0761-9842-4388-9943-a2e6a9616947",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "45927231-c250-4144-add8-9e765e145819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0566c3ed-b34e-4997-be82-007c00ea0432",
        "cursor": {
          "ref": "35914fa6-fce2-4e6a-9632-d317a71b951a",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d4dea8e2-1461-40cc-a94c-351acd0cf011"
        },
        "item": {
          "id": "0566c3ed-b34e-4997-be82-007c00ea0432",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "92cab955-d16d-4dce-96b2-ffecf4764267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3921a6df-83ba-4fe8-aad7-7c0e8c1ef8fa",
        "cursor": {
          "ref": "41fafc57-b4f4-46e7-998a-dac6269bc9e7",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b7027060-a60e-43ae-a0fe-f86adf668e44"
        },
        "item": {
          "id": "3921a6df-83ba-4fe8-aad7-7c0e8c1ef8fa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c1ec0b70-89c5-44bf-8ff0-9e29ce2361d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2a1d1a-e847-42c4-9027-9423817d6d51",
        "cursor": {
          "ref": "de09e3db-f5fe-44cd-a4b7-8312c3eb03c4",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e669ffc0-1e9b-4b94-a1d1-bc295a41549b"
        },
        "item": {
          "id": "2d2a1d1a-e847-42c4-9027-9423817d6d51",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "09a43555-b9d4-4c19-8b2c-d51e47623fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab729e8-3971-4e32-9309-3375ae38e044",
        "cursor": {
          "ref": "7fc91325-689a-4f55-9af0-737bb153f090",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d7ef2f44-86f2-4f8c-a36c-19dbae5ed8d5"
        },
        "item": {
          "id": "7ab729e8-3971-4e32-9309-3375ae38e044",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bdd722fc-6a37-46bf-8a12-e41a2ba1729b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6eaa02-bc41-4b4c-af37-7efce0b98721",
        "cursor": {
          "ref": "17da2239-8021-4634-8fa4-cc4e6ce12fd8",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3985da23-4fda-4ef1-8e16-5bcdc1f146e9"
        },
        "item": {
          "id": "da6eaa02-bc41-4b4c-af37-7efce0b98721",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8e80fc77-9b8d-4723-a405-777b78974187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8683666-20bf-455f-a8f0-bad3c1549fce",
        "cursor": {
          "ref": "b33a35d4-ddd5-4470-b2c8-3e084adda5b3",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "806557d2-d811-4de0-86f2-4acc357af750"
        },
        "item": {
          "id": "b8683666-20bf-455f-a8f0-bad3c1549fce",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "88006b57-dbca-4a3f-809b-6ae7ceb0f091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3810dc1e-8798-4472-af1f-b1bb03733349",
        "cursor": {
          "ref": "64d6808e-b9e0-4e29-8c28-1981f146a508",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "279e6399-bbbe-432d-a0d5-6d4c0966b8e4"
        },
        "item": {
          "id": "3810dc1e-8798-4472-af1f-b1bb03733349",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ba1e1a3d-d043-4c7d-a345-710f7079973a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a653f1-9756-4e53-9032-881f294ca3c8",
        "cursor": {
          "ref": "feb60f5e-bc29-4943-91d1-5e46263cab14",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f71ae61c-2e8b-4a0a-ba5f-8d2f37c961f5"
        },
        "item": {
          "id": "86a653f1-9756-4e53-9032-881f294ca3c8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e2148e5c-871c-4e4c-9082-33c7e1acf980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f886acfb-6c1c-4fda-b5e9-a7489b6023f4",
        "cursor": {
          "ref": "87918012-3182-4ce0-8a8b-41d60b651345",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e12e04c8-eef1-424c-b45a-faa5ecfadb7b"
        },
        "item": {
          "id": "f886acfb-6c1c-4fda-b5e9-a7489b6023f4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7b489bd7-7ceb-4591-9824-9a953510d1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b18ecef-0cbe-43d2-90da-e63598275356",
        "cursor": {
          "ref": "6a1ecc8e-66e0-4512-8dfa-324a36347172",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1800d9bc-a78d-4283-8556-affd2306f5de"
        },
        "item": {
          "id": "1b18ecef-0cbe-43d2-90da-e63598275356",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1028bf9a-a0aa-49e0-bcca-3a95b608321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328849c8-f9b5-4f99-b3aa-0b91dad637ff",
        "cursor": {
          "ref": "d70f79a4-9024-4ff1-819c-c007317481dd",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ff2c5461-14af-4f46-b540-1624bb877b57"
        },
        "item": {
          "id": "328849c8-f9b5-4f99-b3aa-0b91dad637ff",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2fac02a5-cddd-47b0-89c8-f3e98d7c939b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15b57a3-26a6-4c8a-8c9a-b08d61dce79e",
        "cursor": {
          "ref": "ccb7f5ad-1de5-4f4a-98b2-0bf932372251",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "97254c37-8cd0-44cb-aa5c-c30593bc07f3"
        },
        "item": {
          "id": "b15b57a3-26a6-4c8a-8c9a-b08d61dce79e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fa8c3a87-02bf-4b10-ad89-03dc3e2be0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2305d284-d3d5-45d0-bbaf-24c1e410adb7",
        "cursor": {
          "ref": "f194eb75-fbc2-43cd-8851-49bd40ca5a1a",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "053f6aac-64b1-4623-8b6f-2a3b135cd014"
        },
        "item": {
          "id": "2305d284-d3d5-45d0-bbaf-24c1e410adb7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4569e56d-0a34-42f8-97a4-01d141312b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1155,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e7a3b5-25bb-43ab-a097-316abb2735d3",
        "cursor": {
          "ref": "adf78dab-ba08-47e6-ba59-9c5043e57e65",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9583f1b7-a2ad-49f5-a77e-aea766c8722c"
        },
        "item": {
          "id": "48e7a3b5-25bb-43ab-a097-316abb2735d3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "41ce64e6-e25b-4209-9a87-6b717150266e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1191fc0-deea-4a0d-942d-4f67bbe6a92e",
        "cursor": {
          "ref": "f7a6f101-9917-4297-b35c-fe10334da849",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2a537ab4-9fb1-436f-a4e8-0c2b8c27a95e"
        },
        "item": {
          "id": "a1191fc0-deea-4a0d-942d-4f67bbe6a92e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4518e9c8-812b-42d6-bb90-11fe08d563dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b23c0f9-7e8a-4281-a16c-3b6614da8372",
        "cursor": {
          "ref": "06b1b038-3253-49a6-adfd-3eca4e31b190",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "64759ec2-18ee-4bda-b01f-a4ee1571ed76"
        },
        "item": {
          "id": "6b23c0f9-7e8a-4281-a16c-3b6614da8372",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7c9a3e34-6a6b-4905-896a-b7125e4dd9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc05dbdc-ae96-487c-83b3-65f9795e9e02",
        "cursor": {
          "ref": "a28de5bc-2d1a-4f73-9cdf-87cdcd41fe2f",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dabe4223-523d-430f-acc4-8a98f9561d10"
        },
        "item": {
          "id": "bc05dbdc-ae96-487c-83b3-65f9795e9e02",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1e9fca3b-03ac-4131-8b67-b93cce88f7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa6d19d-4009-4b86-811e-44b3223aa4bc",
        "cursor": {
          "ref": "bcdbfc91-b2b6-416a-90d7-051f8dfdeab3",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b67379c8-b499-40cd-a732-2dfcf046e392"
        },
        "item": {
          "id": "8aa6d19d-4009-4b86-811e-44b3223aa4bc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "94aea4f6-88db-4685-a984-01518197a3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ec744b-82b0-4c49-8da0-7ec1aa233e41",
        "cursor": {
          "ref": "3eec4b48-1967-463f-b6ef-7a5c30a1d4eb",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ac550baf-ab7a-4bd3-bd03-68c325c23423"
        },
        "item": {
          "id": "a6ec744b-82b0-4c49-8da0-7ec1aa233e41",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e07cbf94-5f71-45af-a274-16de39ec51f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7825eb-38fe-4d0a-a213-25f465f2411b",
        "cursor": {
          "ref": "05ad3341-7fbb-4ba3-aa26-2b8e90e7f22e",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "070e93e9-31e8-410b-9406-fbc0650d10ba"
        },
        "item": {
          "id": "3d7825eb-38fe-4d0a-a213-25f465f2411b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e3a4e209-ffaf-4d65-9302-aa974c13712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48388ab0-c5a2-49f8-bf97-103ff306911e",
        "cursor": {
          "ref": "b2624805-44cc-4c86-93c4-814deb6d9576",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "96703548-09fc-4e04-a986-9188b77f05b1"
        },
        "item": {
          "id": "48388ab0-c5a2-49f8-bf97-103ff306911e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "009fe62b-1a56-44d9-a29e-18dc35dce708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c76e85c-66c5-4093-8698-d92192b1815d",
        "cursor": {
          "ref": "32ee145a-1f59-46f2-a29b-a5cadfdad984",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cede3e71-d127-471e-8de2-5c7c5a6e86ca"
        },
        "item": {
          "id": "0c76e85c-66c5-4093-8698-d92192b1815d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8819b21b-d460-413e-af5c-52d0429ab9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1d197c-442b-4695-a7d6-b03f5d9dbca6",
        "cursor": {
          "ref": "67a319ca-9da0-40cb-a707-021be21d907f",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "864c68e2-dc4c-4697-9b4d-67db194db7cb"
        },
        "item": {
          "id": "fb1d197c-442b-4695-a7d6-b03f5d9dbca6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "34c1d3b0-7d96-4451-bb06-52d4b16b8efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37a94af-206b-490e-a316-17bdf5e0c174",
        "cursor": {
          "ref": "0c2348d0-7855-42d7-93a8-1fb58d2580a7",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bae0fdba-c3e7-47ed-b7e9-cb7f37679d99"
        },
        "item": {
          "id": "b37a94af-206b-490e-a316-17bdf5e0c174",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d0c23873-2947-4783-919f-ec2eb612dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c58237-c4db-40d3-8ea3-ef40b62a3181",
        "cursor": {
          "ref": "2b8dd1c2-0468-4f3f-825e-6d2508662433",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8a3a87c8-9d47-4de8-aab7-dd30214c90fe"
        },
        "item": {
          "id": "14c58237-c4db-40d3-8ea3-ef40b62a3181",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "077cd15a-60a5-42d3-8837-8388c0b52cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffcae50-59ff-47b7-a1d7-2f794d63aba7",
        "cursor": {
          "ref": "9c7ef49b-72fc-40db-9dca-aa2bbc0f63b4",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2d430cb1-2cb2-42e9-8648-9119391421ee"
        },
        "item": {
          "id": "7ffcae50-59ff-47b7-a1d7-2f794d63aba7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eb4bf426-b550-4ff9-8c57-6c4472868e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545ef05e-e344-4ea8-986a-1c2a17c79b97",
        "cursor": {
          "ref": "3be78dfb-993f-4da0-87f2-494b1d35c7e3",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e1c538c3-8da8-4202-9efd-8f2def2a1443"
        },
        "item": {
          "id": "545ef05e-e344-4ea8-986a-1c2a17c79b97",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7af88b59-4329-4157-83c2-77697967ceef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231c97cc-db2a-4ad8-94f2-3b67e61744ae",
        "cursor": {
          "ref": "b29292f5-d823-43aa-9387-7a896af17fed",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "89f16c76-816f-4f52-b3b8-f5ea66ba2110"
        },
        "item": {
          "id": "231c97cc-db2a-4ad8-94f2-3b67e61744ae",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b56d49b3-882b-4fda-9789-5845f3e65108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1826e8dd-78ff-436e-9b51-e66a395afaf2",
        "cursor": {
          "ref": "3f6e804a-98e3-4f40-a1ef-c42066394eca",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4e56420f-9f14-4fc1-bfcf-33f192678ee0"
        },
        "item": {
          "id": "1826e8dd-78ff-436e-9b51-e66a395afaf2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4f3ee848-ab05-4fd7-8262-6f4005b59530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376591cb-9796-4242-9f2c-7b9fd274e681",
        "cursor": {
          "ref": "b07676f1-b5ae-4ba0-bd2f-75095975ab1b",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "16f2c67f-3f5e-4c2a-a928-36eaf2e870f8"
        },
        "item": {
          "id": "376591cb-9796-4242-9f2c-7b9fd274e681",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "46dca7d5-29cf-4fb9-b20d-2c135935d80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a4bef-5a3a-4351-932e-249e043d0bcf",
        "cursor": {
          "ref": "9bddd63a-b7f6-4198-9b7b-ea7b71d89380",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "99606de3-f949-4e1b-b77d-ec5180a58571"
        },
        "item": {
          "id": "979a4bef-5a3a-4351-932e-249e043d0bcf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b87c7ea2-c984-4936-8c50-a13287240ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376bad01-472d-4a5b-8738-8e872987e1b5",
        "cursor": {
          "ref": "524df95d-30b1-43f5-a117-a00b5f9740c8",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b9b787d7-f0c8-47cf-a803-9997f253fd15"
        },
        "item": {
          "id": "376bad01-472d-4a5b-8738-8e872987e1b5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3271423f-763a-4e98-a901-e0026b575a54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a09b37-4c1b-4928-9ac3-027e78446add",
        "cursor": {
          "ref": "fd8a379d-5c64-4f85-8854-db84baa188cf",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1f1e9c08-21b6-4fc4-8670-3e375dda9ab9"
        },
        "item": {
          "id": "e1a09b37-4c1b-4928-9ac3-027e78446add",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e14ccd9e-34a1-4e7d-a25e-d49054aa754a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 643,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a5c1ca-7b28-4305-9982-caa81ba5a8fb",
        "cursor": {
          "ref": "1576e5bb-a032-4965-9e0a-a14dfe63883d",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7152ab45-34f2-4580-a698-ac88b7625d0b"
        },
        "item": {
          "id": "a3a5c1ca-7b28-4305-9982-caa81ba5a8fb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1a9a5c8d-c8c0-4606-ab50-d3cf20f8922c",
          "status": "Created",
          "code": 201,
          "responseTime": 4527,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e62922-fa1d-45dc-8d2b-9016ef16b841",
        "cursor": {
          "ref": "65f3d64f-26f7-4d2e-9786-a773a51c83f4",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "be43425b-1290-434d-bfb3-237af70aa22f"
        },
        "item": {
          "id": "e3e62922-fa1d-45dc-8d2b-9016ef16b841",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a0b66057-a5da-4d9a-b726-bffe5af5a06d",
          "status": "Created",
          "code": 201,
          "responseTime": 4673,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc8d24a-6292-43d6-9b51-c8ec3a2329c1",
        "cursor": {
          "ref": "101b6af0-e4b8-4aac-883f-4d56721c0561",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b7b97ed2-54ed-47e7-8de9-cf0c3828bbbe"
        },
        "item": {
          "id": "7fc8d24a-6292-43d6-9b51-c8ec3a2329c1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9c3c321f-384a-464a-9f2f-68729ff2a877",
          "status": "Created",
          "code": 201,
          "responseTime": 5327,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacd65ef-83d2-41d2-980e-522ad674e2a3",
        "cursor": {
          "ref": "037a479b-d895-42ec-85e3-60db631422e8",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "011d1f84-27e3-4863-83c0-5c028741180c"
        },
        "item": {
          "id": "bacd65ef-83d2-41d2-980e-522ad674e2a3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4c80f6d1-caa8-4da4-bbd3-8892960a6d5a",
          "status": "Created",
          "code": 201,
          "responseTime": 5777,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "07012694-f2e8-4b57-9da1-e8c54693bba4",
        "cursor": {
          "ref": "512bead9-3492-4c05-b80b-31b91c71c51d",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "206dd068-b661-4901-befc-4ecb4dcbdb90"
        },
        "item": {
          "id": "07012694-f2e8-4b57-9da1-e8c54693bba4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "109e4e00-6992-4ce3-b754-81f3812d4bda",
          "status": "Created",
          "code": 201,
          "responseTime": 5976,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "6296d523-0c78-41af-a197-e240d777e9a9",
        "cursor": {
          "ref": "61d1f736-2ead-40fa-a0d9-26dc4ff2973d",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0adf0103-5c59-4134-87cb-0fcb865010fa"
        },
        "item": {
          "id": "6296d523-0c78-41af-a197-e240d777e9a9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f4c4a8ea-88b8-4591-ad9e-3217c4b89d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6296d523-0c78-41af-a197-e240d777e9a9",
        "cursor": {
          "ref": "61d1f736-2ead-40fa-a0d9-26dc4ff2973d",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0adf0103-5c59-4134-87cb-0fcb865010fa"
        },
        "item": {
          "id": "6296d523-0c78-41af-a197-e240d777e9a9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f4c4a8ea-88b8-4591-ad9e-3217c4b89d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa9f98e-1a36-43de-90d1-5f7b431b7374",
        "cursor": {
          "ref": "75ee7bda-f936-4137-a436-537fb3e4a048",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "65f17130-3a90-4dd3-8ec4-47c9bfc606a2"
        },
        "item": {
          "id": "baa9f98e-1a36-43de-90d1-5f7b431b7374",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b982034e-2de2-4bf9-9be4-7e811ea3dcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5380d83c-f471-4e27-9cb6-6a673d4c4ee8",
        "cursor": {
          "ref": "91f22190-6120-4ed7-b3a5-6937963729b9",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b6317914-8932-46d4-9967-dca9d862ee37"
        },
        "item": {
          "id": "5380d83c-f471-4e27-9cb6-6a673d4c4ee8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ab0588aa-f8db-46ee-9182-30675f577a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ef4307-045c-4573-a5ad-517b32368edd",
        "cursor": {
          "ref": "9d262e76-290c-4469-9eca-4d9c6b5c882b",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ab7fb06-e4ed-4091-b794-649be5621e83"
        },
        "item": {
          "id": "63ef4307-045c-4573-a5ad-517b32368edd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4927b623-ca0d-434a-8bcc-41d2244ac4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5f2651-0905-4fd3-bdd0-206a2aa71aa1",
        "cursor": {
          "ref": "1eaf1b04-7412-4b7e-b4c8-b1506d6ca1f0",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0907ef5b-c591-4b83-91eb-86bdf30d15e7"
        },
        "item": {
          "id": "1a5f2651-0905-4fd3-bdd0-206a2aa71aa1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8016a63f-93e2-4d59-bd3b-18088a0aa0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0962e239-b7c8-439e-bae2-edddf73906e9",
        "cursor": {
          "ref": "7f009689-3b2c-4a52-b941-b1b93bfc527e",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f57c7e92-35a4-47fc-9601-db376c1e500f"
        },
        "item": {
          "id": "0962e239-b7c8-439e-bae2-edddf73906e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "228a626a-887e-4f19-9fab-384eced82e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f32c1d4-b3e2-4588-8d5f-fbeb2be62744",
        "cursor": {
          "ref": "74f67a08-a25d-418c-b415-b28416cf691f",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b94c4bfa-7ab4-4979-84c1-061a8dcad038"
        },
        "item": {
          "id": "2f32c1d4-b3e2-4588-8d5f-fbeb2be62744",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ec421be6-7d1d-4486-a9d8-0eb5355e04e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23825974-9c93-4d36-9d9c-193faa673f00",
        "cursor": {
          "ref": "3268403d-92dd-409f-905f-2e7c6965709d",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9b696ae8-3e13-4b0b-9eb6-3063abed6bb9"
        },
        "item": {
          "id": "23825974-9c93-4d36-9d9c-193faa673f00",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a8ac2a6a-6740-4970-9a37-3a4e660e9746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833ae392-cc68-42d6-a706-430b4137355c",
        "cursor": {
          "ref": "19355e9c-9f69-425d-8212-2abb7741d20d",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "07c01582-0633-4379-98b0-0b4d51df978f"
        },
        "item": {
          "id": "833ae392-cc68-42d6-a706-430b4137355c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3cddfe3a-9a1f-41de-8bd7-56a787ef6988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af8860a-1995-4a31-b815-e58a27e8e6a5",
        "cursor": {
          "ref": "061cc0e1-02d8-4982-bfcc-bac3151b85a4",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e97d3d9f-364b-4868-98cf-0a6854d8a267"
        },
        "item": {
          "id": "0af8860a-1995-4a31-b815-e58a27e8e6a5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "753f71b6-1eb4-4ddc-a41d-936a7528854e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08578485-07cc-4344-ac83-133b55d6431d",
        "cursor": {
          "ref": "0ca379b3-a723-430c-a8aa-7535e681bd86",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7886dedd-3fb0-4fa8-9c7a-cdef1e3ed038"
        },
        "item": {
          "id": "08578485-07cc-4344-ac83-133b55d6431d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "16d7b018-ae74-4a5f-b890-cb2291e6e582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c87518-33e0-4acb-acec-71776f6e6a0e",
        "cursor": {
          "ref": "a640026c-af62-402c-8bc7-e413504711ce",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "22d3f242-879d-4ea1-bd1c-5c9c7245afdf"
        },
        "item": {
          "id": "b3c87518-33e0-4acb-acec-71776f6e6a0e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "78ea732e-a1c8-463f-9bac-bd6c98661e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e7da79-8c1f-40de-b2bd-14f745fe23b8",
        "cursor": {
          "ref": "7ea72e93-e491-498f-88eb-79bcae948548",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a9bca46d-c1fb-4698-a768-f3207b89c2c0"
        },
        "item": {
          "id": "d2e7da79-8c1f-40de-b2bd-14f745fe23b8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fe82b3d2-2a75-4d93-8059-78ac17591b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bc19fd-608a-4a9c-995c-c5da4f0712ad",
        "cursor": {
          "ref": "af206447-73ac-4575-8609-e8fdc0ac4328",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "681f0c31-9067-4f3c-a09a-8c76c043462c"
        },
        "item": {
          "id": "98bc19fd-608a-4a9c-995c-c5da4f0712ad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39a5bd16-f008-49bc-bb5d-a41acd20f2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b11bc4-0ecb-4ca6-9b5f-6044f6c08d6f",
        "cursor": {
          "ref": "7fbf032e-0c7e-427f-97b7-989b29deda93",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9def0101-305e-451d-acff-62c8f9b6ffed"
        },
        "item": {
          "id": "d7b11bc4-0ecb-4ca6-9b5f-6044f6c08d6f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2f455b4d-11ba-48c8-922b-2a050dfd37b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a44746-50b5-4abf-8612-864a9a5ae308",
        "cursor": {
          "ref": "313e506f-3b7e-460e-917c-8fc00a0fff5f",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ca2e3f9a-bd57-409e-82db-8a6d0bcc8194"
        },
        "item": {
          "id": "f0a44746-50b5-4abf-8612-864a9a5ae308",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "705b3cc6-6894-4aab-b449-12ac68a83370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19763317-7f68-43e6-a635-efcb4737d71d",
        "cursor": {
          "ref": "a3d2236c-a71d-4ae3-be6d-0925301d93e3",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "aa5f0d75-435d-4ff4-ad4c-6164e2740480"
        },
        "item": {
          "id": "19763317-7f68-43e6-a635-efcb4737d71d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9ab6b882-5add-48bc-af02-4a412b457522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ff4b7e-cdd2-42c3-a024-04ab8677cb1b",
        "cursor": {
          "ref": "fe41e0b5-0719-4310-8365-61849e850119",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d3199982-3c63-4f98-bfc1-fc63764cedb0"
        },
        "item": {
          "id": "a9ff4b7e-cdd2-42c3-a024-04ab8677cb1b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f0fb1d37-a240-4aea-8bdf-3ffb46dba5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa9b248-a1f8-4dc1-8833-4b348429f92e",
        "cursor": {
          "ref": "22e9fe22-177b-4356-a6c4-c5edf7dd106d",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0d724b70-4e2d-4d97-a4a7-9c1c66a48075"
        },
        "item": {
          "id": "6fa9b248-a1f8-4dc1-8833-4b348429f92e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "523d9d44-f04a-4e70-83be-a06622d21872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b589eec9-f32e-4957-b654-53bb243fa3b7",
        "cursor": {
          "ref": "68b196c7-7d83-4afd-9c71-6b98de8de6dd",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e26d7833-d76b-4ba0-a98f-2a0d395606ce"
        },
        "item": {
          "id": "b589eec9-f32e-4957-b654-53bb243fa3b7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "291a9d4c-224a-4b1f-b95a-615a48e53a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e66a77d-b85b-420c-8a1f-c8dc72de0b00",
        "cursor": {
          "ref": "c2bd32f5-9e6b-4be5-8ce7-4f22f6ef2afc",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5b408141-015d-4111-8708-52d9694c97b2"
        },
        "item": {
          "id": "3e66a77d-b85b-420c-8a1f-c8dc72de0b00",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fa0db897-4473-43d0-aa8c-779f6c4468da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1175,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7075f011-3bf3-49b4-a64a-4a9f3f773a1f",
        "cursor": {
          "ref": "df7bfd4a-259e-4c53-82c1-d4efe9cd7903",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6ac1acb9-8fa2-471b-b01d-1318e757e015"
        },
        "item": {
          "id": "7075f011-3bf3-49b4-a64a-4a9f3f773a1f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e8d47ae3-c168-483e-84d9-1489001a3b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b8cf4d-1153-4386-b2e5-522ebf74076d",
        "cursor": {
          "ref": "ff46a86d-3861-4dba-af10-f9a76630081e",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c55f699e-f770-475e-a1c5-7a4e91f56310"
        },
        "item": {
          "id": "37b8cf4d-1153-4386-b2e5-522ebf74076d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "319afdae-b976-4414-86b6-cd3159334ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1383,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacdcbb9-5fc0-460f-ae00-18983e7960b3",
        "cursor": {
          "ref": "2285e09d-3279-4735-b541-a6345ad3d47c",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f4e9d386-ec62-4f72-9839-e7a4b6f6d6b6"
        },
        "item": {
          "id": "eacdcbb9-5fc0-460f-ae00-18983e7960b3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eea8d38f-218a-430b-8ec9-eb0e369bca57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3599,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f57f7f8-f0d0-47bf-81d9-2f49f46fdcfc",
        "cursor": {
          "ref": "b02bd065-74ea-4399-806f-ec33866360c3",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2af4d97e-91f4-4047-9e87-5009444dcbf2"
        },
        "item": {
          "id": "6f57f7f8-f0d0-47bf-81d9-2f49f46fdcfc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "02101bff-ac6a-468b-a258-a045233a463e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4244,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb057a8-ff19-4411-ae91-85797fb71c69",
        "cursor": {
          "ref": "5243dde3-1dd8-49fc-a5fc-c655c0005692",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f8db1090-11fa-4af4-b05c-68461fd21b14"
        },
        "item": {
          "id": "9eb057a8-ff19-4411-ae91-85797fb71c69",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "78c92a2c-e1fa-46bb-8d1f-1f9cdb879f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2772,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50300e3-ad5d-41a7-b3c2-0236b03d0230",
        "cursor": {
          "ref": "db5bc9cc-b1b8-456a-9b5a-b971e8d69946",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0584e738-647b-4a80-be67-232efda10c16"
        },
        "item": {
          "id": "d50300e3-ad5d-41a7-b3c2-0236b03d0230",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2b09d1c8-6d99-4c00-8d4b-6ca01f5f93e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2408,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ff2253-c6bb-4166-8d9f-cae2410bc553",
        "cursor": {
          "ref": "02ee2b2f-1ac6-46ef-8f97-4ada79bdc544",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8b9cc190-520e-4014-ac15-e71349708fdc"
        },
        "item": {
          "id": "52ff2253-c6bb-4166-8d9f-cae2410bc553",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8d54e018-58a7-4c8e-9bce-1fd168306971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3268,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e1bbaa-91d5-4bb7-a759-9284f35b075b",
        "cursor": {
          "ref": "cf7fb4e9-6106-4fb3-b1d2-175352213b26",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "73369517-ea86-4126-a427-3cece74f42a2"
        },
        "item": {
          "id": "42e1bbaa-91d5-4bb7-a759-9284f35b075b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b3d7bb5b-9b8e-4327-b720-1d9aac7763bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3584,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a022fc66-d855-4464-8269-a901ed4868b0",
        "cursor": {
          "ref": "d449d2d9-61e4-4105-a6d3-f51ce80e546d",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ab488689-f4fd-447d-b898-1e401cd78a1c"
        },
        "item": {
          "id": "a022fc66-d855-4464-8269-a901ed4868b0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "65990dac-b07d-4945-be21-a1dd5722adb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2044,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c75982-f606-480e-895a-a9968070fe62",
        "cursor": {
          "ref": "eeb4319b-4d36-45e2-8a8e-516ecfb2fecf",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9fd74169-bda4-4d6f-a27e-b073ad866415"
        },
        "item": {
          "id": "27c75982-f606-480e-895a-a9968070fe62",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c08838f3-2dbc-4f7c-b042-a921d3c938bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca96d48d-d09f-42da-b774-32dd868a145b",
        "cursor": {
          "ref": "3579e106-0aac-45e9-8e9a-3a736e2c00c2",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7487319c-1d30-45bd-92fe-801926b94169"
        },
        "item": {
          "id": "ca96d48d-d09f-42da-b774-32dd868a145b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a2addc41-bb5d-4fd7-9e26-8361a4a41d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f374f-e80b-42cc-8961-c9c8386d4d9d",
        "cursor": {
          "ref": "f2d264b0-6500-4109-8613-02a030a302d1",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0740df7f-e1b7-4e31-be3e-4ee7e03ad6d8"
        },
        "item": {
          "id": "369f374f-e80b-42cc-8961-c9c8386d4d9d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e718e2fc-7b6b-4e1a-b14b-e290c2ec9e31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f360b94-70a0-434f-9cd5-0f097aaca4d7",
        "cursor": {
          "ref": "b77c560c-4494-4f10-a52b-a10edb3deab2",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9f26b34a-d4df-425b-85b9-086d40f6f862"
        },
        "item": {
          "id": "8f360b94-70a0-434f-9cd5-0f097aaca4d7",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "a0ac1d75-b5f9-4e5d-a84c-550a762303a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 891,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f5ad30-022f-43ea-aa75-4eb7ed47726a",
        "cursor": {
          "ref": "b84c113e-3ee9-46df-aaa3-94773d6e9b46",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "01f96eec-d3f6-4b05-a5de-fe8a8b859fdb"
        },
        "item": {
          "id": "c2f5ad30-022f-43ea-aa75-4eb7ed47726a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ce225083-3850-4752-8a99-a1149924fb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f5ad30-022f-43ea-aa75-4eb7ed47726a",
        "cursor": {
          "ref": "b84c113e-3ee9-46df-aaa3-94773d6e9b46",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "01f96eec-d3f6-4b05-a5de-fe8a8b859fdb"
        },
        "item": {
          "id": "c2f5ad30-022f-43ea-aa75-4eb7ed47726a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ce225083-3850-4752-8a99-a1149924fb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ab5301-5707-476f-aa58-cd7827898114",
        "cursor": {
          "ref": "7740a2e9-7f3c-4aa8-9112-e6b05ad4cf8f",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "22c0454f-d4b5-45d9-8c65-19ba0474450a"
        },
        "item": {
          "id": "c0ab5301-5707-476f-aa58-cd7827898114",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7684e3fb-0b95-42cb-8358-8ac27d6efcf4",
          "status": "OK",
          "code": 200,
          "responseTime": 594,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "49ba0ccd-e908-489b-a27a-38d7831a4bd1",
        "cursor": {
          "ref": "b9d2f6cd-3098-49e1-8f2f-e3d941bee39b",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f4e4f91f-ca05-416e-92ec-e1c42f502865"
        },
        "item": {
          "id": "49ba0ccd-e908-489b-a27a-38d7831a4bd1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "10f95495-edf8-4757-8009-d2b43e06a00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0d1d66-b23d-433e-8f97-92e0050b0d81",
        "cursor": {
          "ref": "b69b1dee-3c70-470a-822e-ef31f82a7b8f",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "140d53f8-1ee8-4678-9896-d58198d08da8"
        },
        "item": {
          "id": "7d0d1d66-b23d-433e-8f97-92e0050b0d81",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "66a19ecd-b27a-4db6-9d27-2a845de404c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0cfbec-0566-4669-92cb-45181d7fb4c9",
        "cursor": {
          "ref": "2f37ec7d-a7f0-43cc-accb-ba9fd36ce4c8",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d89b23cd-da1c-4b7d-8ae1-c7f9bfa6e442"
        },
        "item": {
          "id": "8b0cfbec-0566-4669-92cb-45181d7fb4c9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "42c79024-d06f-4368-b212-7423e2f8c2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e70e18-407b-4e10-a10d-c2f252f9812a",
        "cursor": {
          "ref": "661d1de2-4bd8-4dd1-a89b-b7c7baf51059",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "eaee9fea-d53a-48a4-882f-a2ff9b49c715"
        },
        "item": {
          "id": "64e70e18-407b-4e10-a10d-c2f252f9812a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "193e45d5-76a8-4a6e-93dd-cb15850a77e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c58bea-09e5-4dc2-90d6-2f8a2054a866",
        "cursor": {
          "ref": "978033fa-e08d-4231-bb02-52cf9087bcc4",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3552c52f-3782-49e0-b6a9-d13c654878a9"
        },
        "item": {
          "id": "15c58bea-09e5-4dc2-90d6-2f8a2054a866",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f58ddaf2-843f-4058-a37b-bf9bdadc4a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb008a01-1667-4b0a-ab22-8cca832e7dca",
        "cursor": {
          "ref": "69501ef2-44e9-4437-a5c3-7e084c28dfa7",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d2c08f08-ddbd-431a-b563-bfbfb1e77aaf"
        },
        "item": {
          "id": "fb008a01-1667-4b0a-ab22-8cca832e7dca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7fac6342-23d8-47b7-b129-06e0bfa12051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10388ba1-bb28-467d-af6d-18b43698e1f1",
        "cursor": {
          "ref": "e5379a91-cd53-495d-9d2d-76f72281fc31",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "43b82806-e926-4e47-840f-4864f1204a78"
        },
        "item": {
          "id": "10388ba1-bb28-467d-af6d-18b43698e1f1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "718f852c-0a72-4bc8-b411-8a9a008581fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88035f6-dceb-4cdf-80ae-b0109da1d617",
        "cursor": {
          "ref": "c6872c91-1771-4d06-8843-d89f14529437",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6112d456-418a-4d3c-ad39-afa7fa32a6b9"
        },
        "item": {
          "id": "c88035f6-dceb-4cdf-80ae-b0109da1d617",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dacfd746-bfeb-4ebc-a62d-cc4a91b87b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1712,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78428f20-3bec-43ab-b83a-4d62e6d8f5e4",
        "cursor": {
          "ref": "8de54242-94b2-41c5-8ef0-cd498cba6401",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e63a40bf-8859-4eb7-8d1d-da1e69db5ec1"
        },
        "item": {
          "id": "78428f20-3bec-43ab-b83a-4d62e6d8f5e4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "31015b2b-81f3-4e20-b8fe-685f02778d48",
          "status": "OK",
          "code": 200,
          "responseTime": 1896,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "8c683071-985b-40b8-9663-82574f08cf41",
        "cursor": {
          "ref": "f79efdce-69a0-480b-bb03-f47cc6453e9d",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2ce95db8-4d8d-48e4-b8a1-7e000c63411f"
        },
        "item": {
          "id": "8c683071-985b-40b8-9663-82574f08cf41",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "af9be0d7-61a4-47e9-80ee-027d052867ed",
          "status": "OK",
          "code": 200,
          "responseTime": 1522,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "7fb7c053-aa85-4fb8-acdc-51974632489a",
        "cursor": {
          "ref": "ae5abe8a-c7db-40c6-8e92-d51535b156d1",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "99a2ba7c-9bc0-48dd-a47c-769a6a214a92"
        },
        "item": {
          "id": "7fb7c053-aa85-4fb8-acdc-51974632489a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9899c6d8-08c4-47dc-a104-4554f1c59ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56474666-5d2c-49cb-a8c4-6124e2f9efec",
        "cursor": {
          "ref": "c4197d73-0856-415a-a823-99b6dbf394a4",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b8509057-ac43-4417-940c-f259ae5d7837"
        },
        "item": {
          "id": "56474666-5d2c-49cb-a8c4-6124e2f9efec",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "616256e6-4d4e-424d-993d-faa423043b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1869,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaa2815-dceb-4462-9fdf-3793d351bf41",
        "cursor": {
          "ref": "35eee78f-3745-4d05-8427-0593f921b6d5",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "977b7d7b-3d06-48e9-9d23-468774b266d5"
        },
        "item": {
          "id": "deaa2815-dceb-4462-9fdf-3793d351bf41",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b10f0f56-d9d6-4a3b-b786-63af9ab8b796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2944,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740ba4d9-4128-4009-8e41-a66ddf3e4ea7",
        "cursor": {
          "ref": "e1cf404c-3e1d-4e5b-97ec-6999fcd1789c",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "187e4f1e-546a-418c-8f24-e0104b9e3b6e"
        },
        "item": {
          "id": "740ba4d9-4128-4009-8e41-a66ddf3e4ea7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "15caa3ae-09ef-462b-89c1-78eaca86051c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3225,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa76733-a605-4a6f-b483-81b2a2f54664",
        "cursor": {
          "ref": "b697db05-d4ca-4c12-9049-e7ead0b96eda",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "15126398-4136-4829-88bc-335068f30aca"
        },
        "item": {
          "id": "1fa76733-a605-4a6f-b483-81b2a2f54664",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "950f5131-8bbc-4f75-8a1c-c174f052cc63",
          "status": "OK",
          "code": 200,
          "responseTime": 3280,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:160)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:160)"
            }
          }
        ]
      },
      {
        "id": "bfe714a0-2683-4209-9bf2-acbbea70521a",
        "cursor": {
          "ref": "d2c5f520-cc47-43e1-bedd-de48ba8ff171",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "72a65454-a7c2-404d-abfb-37e376cb4893"
        },
        "item": {
          "id": "bfe714a0-2683-4209-9bf2-acbbea70521a",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "3d20a5be-57a4-4eca-87ef-b9c089a83030",
          "status": "OK",
          "code": 200,
          "responseTime": 4553,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "d3ac048f-f201-4791-8649-7ae10b9103d9",
        "cursor": {
          "ref": "374831dd-17c7-4b59-8d90-4ece4772b99f",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fed59940-b6d8-4c48-a31c-100f158b6f12"
        },
        "item": {
          "id": "d3ac048f-f201-4791-8649-7ae10b9103d9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "92f8de1a-ef94-4bd8-9463-5a488f64faec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2174,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0b471c-1799-46a7-9f55-dc1a5ff42061",
        "cursor": {
          "ref": "8f8cb59e-af14-4d56-bf61-c5b415bf60da",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "736d7cc8-31c5-4ce6-9255-bc797093663a"
        },
        "item": {
          "id": "9c0b471c-1799-46a7-9f55-dc1a5ff42061",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e027b53f-89a6-4034-aca1-2afd3e79fb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1732,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f51e07-057f-4f0c-ae3b-22c32775e852",
        "cursor": {
          "ref": "aaa0becc-0e64-4619-8f24-e84b934044c1",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "05a1aec2-4dae-4659-898a-6336d967efe9"
        },
        "item": {
          "id": "e1f51e07-057f-4f0c-ae3b-22c32775e852",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "67209064-b073-4e50-b6ed-93f2171d889c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1334,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a018b0-d782-4eb2-9668-7356728cf6d3",
        "cursor": {
          "ref": "ce2894cf-c170-402c-9c94-02ea23728b00",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "792bc673-6472-4fe5-9d08-c1fad3a27383"
        },
        "item": {
          "id": "a2a018b0-d782-4eb2-9668-7356728cf6d3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2c2b38fb-49f2-4863-b9ba-d0d88b93e07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23be67a9-ee45-45ca-95aa-b66df2781fb8",
        "cursor": {
          "ref": "6509d066-723a-47c5-a841-90f9967808c8",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e79bffb4-8b06-4074-94f3-db8c351feb1d"
        },
        "item": {
          "id": "23be67a9-ee45-45ca-95aa-b66df2781fb8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "70ab71c7-b6af-4ee1-83b1-c5307dcbf011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1836,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be61caf6-4162-4990-bc96-d2e15bce7a4c",
        "cursor": {
          "ref": "6cbe6f57-a693-4dc6-aa3e-25bd7648aea1",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8a447d6e-17cc-48f9-84d8-03b693fae5ae"
        },
        "item": {
          "id": "be61caf6-4162-4990-bc96-d2e15bce7a4c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "04cf8eb0-8bbb-4fba-9ccf-096c447d2c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1402,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f2d706-d513-47c9-bcfc-c5da5473c0e4",
        "cursor": {
          "ref": "27a56f88-e965-4804-9f0a-93f5e06f2247",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d1a76015-6370-45d0-a8d0-7fdfc01a2460"
        },
        "item": {
          "id": "25f2d706-d513-47c9-bcfc-c5da5473c0e4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3d3839a9-e818-4cc7-bb8d-4931a66fc583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1521,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa240e04-8541-4e5f-a3d3-f22a24b75e0f",
        "cursor": {
          "ref": "8a70725a-95b5-4913-8ec6-0166bb5a576d",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "20efcfb1-e735-490c-ba0d-18e5a5f984d7"
        },
        "item": {
          "id": "aa240e04-8541-4e5f-a3d3-f22a24b75e0f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e7ea2362-1e5a-4f08-9870-f4d1e5f54bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddbee7d-2b48-4c5e-a9f9-98aa8cf378fb",
        "cursor": {
          "ref": "bc4d9e94-6b11-46f0-9f08-6f9f8e9dbf88",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5c952e4f-3651-422a-bd73-0c2252ec8075"
        },
        "item": {
          "id": "8ddbee7d-2b48-4c5e-a9f9-98aa8cf378fb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "336f6859-9ff7-4ccc-9768-17c2b2421483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ed5f71-9abe-419d-a67c-baeecc424108",
        "cursor": {
          "ref": "bba79deb-07c9-46d3-8620-9f66cf69f09c",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "45591584-841c-43aa-8c13-1a954c4d6fcb"
        },
        "item": {
          "id": "e4ed5f71-9abe-419d-a67c-baeecc424108",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7a52458b-b282-47ef-89de-91b5e4797ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d939b38-a827-4c4f-9be5-1669e79f3ad3",
        "cursor": {
          "ref": "7e6e8d72-6da4-4974-b91d-50158db5cad8",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "472a96f4-046a-48e6-a05a-50fa5d9924cd"
        },
        "item": {
          "id": "2d939b38-a827-4c4f-9be5-1669e79f3ad3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "05c13608-efe6-4879-99bf-741ad471a1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f37708-5ada-4442-8521-d9190e7453a7",
        "cursor": {
          "ref": "d89705a6-cdc7-4693-9a98-0af128b9d97e",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4d1c5561-d5a1-414c-8aa5-c30c8aeb300c"
        },
        "item": {
          "id": "75f37708-5ada-4442-8521-d9190e7453a7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5e018156-a351-4987-9c70-980583d42835",
          "status": "OK",
          "code": 200,
          "responseTime": 593,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "f1dab961-2069-4bfa-97d7-ca75c257eb99",
        "cursor": {
          "ref": "f31dc562-6cbc-4a43-a1c0-7c736242d5ce",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e1ee2964-4df2-403b-9733-e9dbb1f890aa"
        },
        "item": {
          "id": "f1dab961-2069-4bfa-97d7-ca75c257eb99",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "774bebce-1916-4344-a3b4-18453586a6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776f89db-e931-4e8b-9922-8a327fdb56d8",
        "cursor": {
          "ref": "1c3943cb-e50b-449f-9a47-267735167cc5",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "60131a36-c4d2-45e3-b2f6-5ff7b8083a1a"
        },
        "item": {
          "id": "776f89db-e931-4e8b-9922-8a327fdb56d8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "aeca6c41-c775-4195-9918-6cd256298f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a59a427-c820-45ea-8769-109daea5f8b1",
        "cursor": {
          "ref": "b8d47521-ff8c-4988-89ad-4d78a424e36a",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c2ff02b5-4d0e-4f46-97cb-987f0f739a7b"
        },
        "item": {
          "id": "2a59a427-c820-45ea-8769-109daea5f8b1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a11af5f2-0e06-43ad-90a4-ceb4a1bd3322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480050d8-a057-4313-ad78-b01fb732b981",
        "cursor": {
          "ref": "9f9c80e4-fb07-48d4-ab9e-583e4ae2a5fa",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fe6dfade-25f3-435e-926d-8ae38b208bfa"
        },
        "item": {
          "id": "480050d8-a057-4313-ad78-b01fb732b981",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8e60573f-0dc5-4f4b-8fc6-dd20cb5f3bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc722b3-f503-4206-8b46-4e950e9bd6ac",
        "cursor": {
          "ref": "dbce19b9-6204-478e-a931-3d08a231cb75",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bfbe644d-9f0e-4ea1-9a65-3a669e39711b"
        },
        "item": {
          "id": "9fc722b3-f503-4206-8b46-4e950e9bd6ac",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "31ed0b5a-d529-41e5-bcdb-520f9ed254e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1431,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9a8cb5-9a60-4a47-a051-59202602c054",
        "cursor": {
          "ref": "137985d9-3191-43fa-b041-6196b574b55d",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "30a9b7aa-4436-419e-b3e9-333ad25e6512"
        },
        "item": {
          "id": "2d9a8cb5-9a60-4a47-a051-59202602c054",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "685f5534-c92d-41d5-9394-c481269c219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1331,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be282bf8-52b4-425c-8861-d1223bc9a2b7",
        "cursor": {
          "ref": "1d8928af-c114-4a87-a905-4b126a53f45a",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fbed3891-09f5-4f92-b98e-056fab9ebe59"
        },
        "item": {
          "id": "be282bf8-52b4-425c-8861-d1223bc9a2b7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "093ae4e2-b76d-472d-9eab-152a4a6dbcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ddc758-3293-429d-87da-c1333f320916",
        "cursor": {
          "ref": "157a6684-b88a-43a2-b9fa-e78817b73b96",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "85c57da1-338f-4611-8345-ff2a0afab84e"
        },
        "item": {
          "id": "56ddc758-3293-429d-87da-c1333f320916",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "86cbaf29-8b49-44b0-a39a-802ec66106df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1275,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39bbc98-e75f-453d-844c-28458bc0359b",
        "cursor": {
          "ref": "7fbe4237-5e16-434e-a0ed-a643f7d945f2",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dcb6c308-a251-41e4-ba92-c6cc79fa6792"
        },
        "item": {
          "id": "b39bbc98-e75f-453d-844c-28458bc0359b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7c42eeb4-8961-4779-becf-503cc1f0d09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a22fc0-50f1-4610-87a3-a822184572bf",
        "cursor": {
          "ref": "50aeefa9-fb24-4e1c-aa01-2ba5b7d18e16",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "36e4ab07-d4c1-4f8e-8c74-85be5749b564"
        },
        "item": {
          "id": "e7a22fc0-50f1-4610-87a3-a822184572bf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0a00972d-8f9d-4be9-9929-1ba9dc4a823e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efdd482-7567-4b11-a3c4-28abf34a1f15",
        "cursor": {
          "ref": "4829d109-6278-415d-8265-81c0dccd2d0b",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a68a1d60-9f58-49d2-918f-5ca60c701a99"
        },
        "item": {
          "id": "4efdd482-7567-4b11-a3c4-28abf34a1f15",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8ee08421-7a90-401c-aefd-fd0307a314cf",
          "status": "OK",
          "code": 200,
          "responseTime": 572,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:184)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:184)"
            }
          }
        ]
      },
      {
        "id": "e8d0043b-d0f2-44ac-a181-92f0b62292d2",
        "cursor": {
          "ref": "1a55e4e0-ca24-46ed-964d-ff8f5356f787",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "695daf1f-e40c-47ed-a670-ec8b777b4fce"
        },
        "item": {
          "id": "e8d0043b-d0f2-44ac-a181-92f0b62292d2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "04b3b833-79e6-4795-b474-c1076ce2b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f424db-a940-48bc-9edb-8465d6b36be8",
        "cursor": {
          "ref": "ef95fc7c-fd2e-4cad-a73b-88a868e51de9",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "959b1db1-2d84-4816-833e-0dbf4e5e10ea"
        },
        "item": {
          "id": "27f424db-a940-48bc-9edb-8465d6b36be8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6deb7f1e-f878-4900-a83a-ca22131f3229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd36eae-4ebd-4c13-88f2-8f576ef1c81b",
        "cursor": {
          "ref": "2d8c7868-938e-4ee6-a194-66c82a9b74da",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "79a5c832-c982-4f81-972b-a959f4473a82"
        },
        "item": {
          "id": "9bd36eae-4ebd-4c13-88f2-8f576ef1c81b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1815945e-7578-4c32-a5ab-3cc8929b3306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b07a0e-8e60-4216-94be-ba08133040d4",
        "cursor": {
          "ref": "4f9422f8-66d2-4fda-b1ed-c9f0a457c20c",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "40a12a60-78a2-40a5-841b-21618eea6f71"
        },
        "item": {
          "id": "d4b07a0e-8e60-4216-94be-ba08133040d4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b320e8c1-fea9-455f-85dd-026f8d6e5619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba983cb5-f7f4-4410-aa66-3d5d8c951d4c",
        "cursor": {
          "ref": "dab51640-85e9-4f50-8b9a-ff9c6a452c97",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9d88cbb7-7626-4401-b82d-4a9a90b7cb9a"
        },
        "item": {
          "id": "ba983cb5-f7f4-4410-aa66-3d5d8c951d4c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8bc7aeb3-a6e0-4ec4-b119-3d07b27b5657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289a6292-afee-4fb0-bf73-cb1b867e91e2",
        "cursor": {
          "ref": "083db700-9dc5-4fd3-9bc9-29375a494114",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "180b835d-d2ca-4054-a5a7-b9174e383abe"
        },
        "item": {
          "id": "289a6292-afee-4fb0-bf73-cb1b867e91e2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "490b4222-67b9-45f9-bdc6-22e8a4e05f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee554d3-178d-46fb-8749-67bb11266f35",
        "cursor": {
          "ref": "74b90ee9-0158-4ab1-91ae-25b7461c5863",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9ba48b4a-f425-43a8-9722-f6ba07bb7c0d"
        },
        "item": {
          "id": "bee554d3-178d-46fb-8749-67bb11266f35",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5929f26e-f348-4967-9fc9-cf036123d2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fd6810-0921-4bae-a70f-40bdd2877f92",
        "cursor": {
          "ref": "e434c11d-70c8-4212-983c-4339b9010f5b",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "16dcfbab-6b26-4cc4-b85e-8617a9c7eff2"
        },
        "item": {
          "id": "60fd6810-0921-4bae-a70f-40bdd2877f92",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "82e033bd-85c4-4d54-98b1-154edd6b75a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aec521-5187-44a9-8d41-2ff5e30ca9ce",
        "cursor": {
          "ref": "22ce0a32-63c9-42a6-aeee-4108ddf9f52c",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a3bb9c29-317c-4e94-ab33-cebe821cdbfb"
        },
        "item": {
          "id": "25aec521-5187-44a9-8d41-2ff5e30ca9ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9a1e1385-75a8-4fc4-b7af-844c47e6e48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf46e5-5ea2-445b-8189-8b32d3549dff",
        "cursor": {
          "ref": "33d0314d-01b9-47f8-b589-4746488a6773",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "11015e90-82d5-441b-9951-99f7c7cd6d06"
        },
        "item": {
          "id": "acbf46e5-5ea2-445b-8189-8b32d3549dff",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "299638fc-c65f-4c6a-a4c6-8b2788ce59a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b58ff26-aaae-4ee3-901f-1324edcb3c8c",
        "cursor": {
          "ref": "c5cb30bc-7a4f-462d-8f1d-5db63f50f4f8",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "357bbf03-80f2-4471-ab33-1999ed574038"
        },
        "item": {
          "id": "1b58ff26-aaae-4ee3-901f-1324edcb3c8c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a130a43c-d1ce-4f74-9475-27fbc56aedf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac2eabf-5807-4a02-b7d0-5f2424083337",
        "cursor": {
          "ref": "0ad7ab26-f8b3-429a-8969-ec2ef242bd01",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "da019011-16f4-4d58-aa36-72fc17ba2e7f"
        },
        "item": {
          "id": "4ac2eabf-5807-4a02-b7d0-5f2424083337",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "269bf3c1-c721-49d6-b931-79890662f738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73350452-d48e-484e-b342-9e57fb372357",
        "cursor": {
          "ref": "f9510d83-3f04-4406-bf68-1c56d602f7cd",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e9aa3b25-f2f9-422d-843c-357e0f3501a3"
        },
        "item": {
          "id": "73350452-d48e-484e-b342-9e57fb372357",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b6986c63-d695-45e4-811a-3ed601a8acd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03c0cd8-fbff-43f5-abeb-4c3085930b41",
        "cursor": {
          "ref": "81ff7b59-c400-4dee-8c7f-73609db85f1b",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6cd350ce-12ba-4a20-b4ab-5270f34b77d2"
        },
        "item": {
          "id": "c03c0cd8-fbff-43f5-abeb-4c3085930b41",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "31088f24-634b-42e2-b635-bc3bf48499ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4608adf4-13d3-41ee-b89b-b1857f6a975d",
        "cursor": {
          "ref": "0ccdf664-8c86-4977-8e4f-78a602aa891b",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cf545824-c9a6-43c0-b2a0-6829ed6abd8e"
        },
        "item": {
          "id": "4608adf4-13d3-41ee-b89b-b1857f6a975d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b082d026-95cb-477e-bad8-6ee1dbbe6a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6677dcd1-3e90-4bc5-825c-e15237413239",
        "cursor": {
          "ref": "adc48411-74e2-43d2-9b56-2851bbac1342",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "041cb85f-947d-4a6d-803e-002ea40b0a2c"
        },
        "item": {
          "id": "6677dcd1-3e90-4bc5-825c-e15237413239",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4de82892-d0dc-47f2-9a0f-6a54f38ed356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8ba132-a092-454a-bc58-8161aa786732",
        "cursor": {
          "ref": "c3897ba5-0396-4de6-9419-61b208fa2308",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "679eb65e-6ac6-41e2-be3a-ec1dfa0f423a"
        },
        "item": {
          "id": "dc8ba132-a092-454a-bc58-8161aa786732",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bc349e2b-6088-4a4d-9c22-3a8eba5208f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eece06f-421e-4838-bd6e-34b5da2543cf",
        "cursor": {
          "ref": "74195e75-fe14-4699-837d-9ee5e3f6b6b0",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b53d2d31-da93-4226-81b9-fb87c03100d2"
        },
        "item": {
          "id": "7eece06f-421e-4838-bd6e-34b5da2543cf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "06f0e87b-744d-4bcb-8546-f318700c88ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073d1709-7a52-4c25-801e-96d0077ba7f6",
        "cursor": {
          "ref": "cfa9c9c6-e799-4935-8c39-0588e4e2cd97",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a36631f8-7b2e-4a06-ada6-cd98898f6580"
        },
        "item": {
          "id": "073d1709-7a52-4c25-801e-96d0077ba7f6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7bb67a9b-735e-4b31-9fd5-21f058b85557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa40f9a-8de6-4383-9eb0-de0ee959ea9d",
        "cursor": {
          "ref": "10e38f81-5411-4233-a106-86fe788ce936",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d2e4d01e-a4d7-48a7-b70c-60da1043a80d"
        },
        "item": {
          "id": "9fa40f9a-8de6-4383-9eb0-de0ee959ea9d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d36a3ef6-c9a5-48fb-a8de-8fe2d0d4bbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6579a292-a5c2-46ed-afa3-cb17275656eb",
        "cursor": {
          "ref": "7a96523c-e979-4c56-bca8-be38ea4423bc",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "975ff694-c388-4acf-8d31-92693c4d3b83"
        },
        "item": {
          "id": "6579a292-a5c2-46ed-afa3-cb17275656eb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b4deb590-94c9-4bf6-a805-29cc8c5781ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d247945-e202-4a29-adbe-f84ff3fe910a",
        "cursor": {
          "ref": "41b2505a-15d9-45a0-800f-08413f341184",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c6712b5a-0d66-4e35-8701-14c28492c6e6"
        },
        "item": {
          "id": "4d247945-e202-4a29-adbe-f84ff3fe910a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a84ec343-151c-4667-aba0-3d5f40eaf0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ac3b74-e11e-4cd7-ab7a-bb6bc73b676a",
        "cursor": {
          "ref": "409d6511-3e0d-4e9c-bae7-c81e3fe14769",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "99d6fbea-613e-4d4d-a786-727694f95413"
        },
        "item": {
          "id": "14ac3b74-e11e-4cd7-ab7a-bb6bc73b676a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa1f322b-d474-40e6-8d0a-ff8197296337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f651194-609d-4829-b250-8cd0e5c1854c",
        "cursor": {
          "ref": "f0796a17-6ac0-4531-b1f3-b43a86afe2e8",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "35b06c50-4f4f-47ac-85cf-2031a77a9368"
        },
        "item": {
          "id": "9f651194-609d-4829-b250-8cd0e5c1854c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f6c6faf2-5dc3-4561-a2fd-d5ce43fbb5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a72d03a-d729-42e5-8899-4a47094f73fc",
        "cursor": {
          "ref": "b41f221a-d96e-48b0-b3bb-2b332e9a568e",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c84402ab-6617-455b-af8b-7b4138c1c39d"
        },
        "item": {
          "id": "3a72d03a-d729-42e5-8899-4a47094f73fc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "41e18acb-21eb-4ff6-8ef7-42bf56203827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847fa9b0-a76e-4713-9d45-e098b1212d24",
        "cursor": {
          "ref": "74ad97d4-ad5e-4ad5-a506-a3650e6ce8c9",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ef1587b-66bf-4eb9-af0e-8a64b59ce040"
        },
        "item": {
          "id": "847fa9b0-a76e-4713-9d45-e098b1212d24",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "da45b02a-5552-4b00-b074-4eff17f82671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c61c0fe-e0fa-4e38-be9e-d270f3f4f08e",
        "cursor": {
          "ref": "66262034-9256-4ee3-af17-af324603675f",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cb87bb3f-e239-4cbe-aa93-637feea717ce"
        },
        "item": {
          "id": "0c61c0fe-e0fa-4e38-be9e-d270f3f4f08e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5c0c7fbc-550d-4d9e-a000-dc98a39e1601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e35a0b5-6ce9-4d13-94e3-054057eb3f83",
        "cursor": {
          "ref": "f4b2a127-d2db-40b8-af99-a18ad6f7c1aa",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f60fee15-9029-48e1-b2c1-25a5646cfbb2"
        },
        "item": {
          "id": "5e35a0b5-6ce9-4d13-94e3-054057eb3f83",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "005a65fb-c149-4891-84c3-0c6825b6f740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75203d41-a4db-4867-b92d-428775c54544",
        "cursor": {
          "ref": "3059404a-85ed-4b1b-a567-c02776aafc40",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "00adc242-a7ee-4df5-833a-f86eed29334b"
        },
        "item": {
          "id": "75203d41-a4db-4867-b92d-428775c54544",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ef905351-11ab-48f2-8caa-d8a22a0f3dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234a4c84-d09c-46f8-84a0-2d26ae3275f5",
        "cursor": {
          "ref": "8e32ab8c-197b-4c8f-b1b6-7ade8b37ec5f",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1a2c632c-a1af-4790-8445-c488f84218f7"
        },
        "item": {
          "id": "234a4c84-d09c-46f8-84a0-2d26ae3275f5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "35eedee9-4f94-4c08-b2f2-f91000c14a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4297eabc-4048-4cc3-b236-09a8e9f681bf",
        "cursor": {
          "ref": "a3a16783-6c6c-4dcd-9055-e1e9f6cea2af",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9608da97-af07-473a-bf56-ef49453d05e8"
        },
        "item": {
          "id": "4297eabc-4048-4cc3-b236-09a8e9f681bf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a20a1f21-a110-492a-b39f-10193d70b875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e20c23c-d40a-4312-871b-6542424e92c0",
        "cursor": {
          "ref": "d533007b-2945-4dc9-a687-5e86fab5f6a7",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "737738b0-014e-42af-8921-d517fbceca09"
        },
        "item": {
          "id": "2e20c23c-d40a-4312-871b-6542424e92c0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4279f380-e752-452e-be74-dbc385c5c999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6364d128-8f78-4c34-a6ba-e7e6df16944f",
        "cursor": {
          "ref": "aa897e0e-09e6-4466-b5b2-a2653c07c239",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7b3b485a-0707-4ba6-9898-d4480c2aa5d0"
        },
        "item": {
          "id": "6364d128-8f78-4c34-a6ba-e7e6df16944f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b8c33cb0-9c47-41b4-ab4c-8fa01bd42d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88057c74-e972-41e6-968c-e74fbc144e3e",
        "cursor": {
          "ref": "4ea8b256-897e-430a-b681-8ac09fda42b9",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2874ba9d-9a50-4746-abd6-750ac7d53396"
        },
        "item": {
          "id": "88057c74-e972-41e6-968c-e74fbc144e3e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4b5a9301-6c1a-4662-9432-9350bd7be389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a207f734-2834-4cbf-af06-2995a9abb7eb",
        "cursor": {
          "ref": "518f6c3e-9e3a-4b88-97d6-b58c5d9f4a6d",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "df8733a7-3b3e-4fc3-b274-3a7a09969472"
        },
        "item": {
          "id": "a207f734-2834-4cbf-af06-2995a9abb7eb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1a4a3125-4abb-4c15-81a7-09c973d948d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa63d83-21d2-45ff-8548-8c6b98933442",
        "cursor": {
          "ref": "e7b4ff54-2953-48bc-a9f1-e40590a53909",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e76d4809-80b3-41ea-9dc5-538b537631a8"
        },
        "item": {
          "id": "6fa63d83-21d2-45ff-8548-8c6b98933442",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66e47266-8c6a-4a46-a106-c811468e777d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7230f7e-af18-410a-90d0-6816ae58a326",
        "cursor": {
          "ref": "8fd6159d-cc1a-4a3e-8011-2d47ee2d1d12",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "19eaf1a2-01fa-4dbc-b1ef-ede836f9b454"
        },
        "item": {
          "id": "a7230f7e-af18-410a-90d0-6816ae58a326",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "504d1d56-a310-4bc2-aeaa-1362dc499fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b6b23e-1a44-4f4c-88ac-ca1061e14f65",
        "cursor": {
          "ref": "3b644e39-fcc7-4786-a15c-76e9911bfd4b",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "368ab5a6-f591-4315-b1eb-21daad61eb99"
        },
        "item": {
          "id": "70b6b23e-1a44-4f4c-88ac-ca1061e14f65",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "19cb1066-bcc6-4aca-99fe-613cc5d3e1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091afaf-e538-4530-9266-e3242d29d3bc",
        "cursor": {
          "ref": "a10a5804-2303-41ef-8ee7-fd34659d4a60",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1dfe5ff9-42db-4cdc-8b3e-c436d1fb9ca0"
        },
        "item": {
          "id": "5091afaf-e538-4530-9266-e3242d29d3bc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "14c9b74f-af2a-4fe5-a06d-c6cabb01c4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e7cb5f-6ea7-4fee-af28-4e89997d4290",
        "cursor": {
          "ref": "b8a23a80-7069-44dc-9051-9c3c7c52b820",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2646334d-0314-40f2-b396-a8e0b0a8c775"
        },
        "item": {
          "id": "70e7cb5f-6ea7-4fee-af28-4e89997d4290",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b1bae484-e2ba-4fab-96a7-1f41c5d8a317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f1ad88-67fb-4280-a8a1-30e2af0b9147",
        "cursor": {
          "ref": "f8754133-0887-437a-8ca1-bceccfc0675f",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f2af9bff-2fec-49e2-becf-3310fd964242"
        },
        "item": {
          "id": "68f1ad88-67fb-4280-a8a1-30e2af0b9147",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2d42a9d4-5824-4b76-9965-837b80a50ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab76bdc4-1c88-478d-a2f8-aec4e63ef023",
        "cursor": {
          "ref": "15963e34-380e-4756-afc8-4415effeb222",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "018ea7de-3132-4465-a2a2-b518b5f69281"
        },
        "item": {
          "id": "ab76bdc4-1c88-478d-a2f8-aec4e63ef023",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dd6b3066-74aa-4f61-9672-5ee5594fe1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad9a761-2172-4908-8f7d-55b979333395",
        "cursor": {
          "ref": "c063615f-bd66-4a1e-826f-2572ce96eba3",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a31c1282-a3c9-4c5e-b966-e0c0d0a6f7fc"
        },
        "item": {
          "id": "cad9a761-2172-4908-8f7d-55b979333395",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "63d42f37-da0c-4ae3-ab56-4bbb3720867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b855daf7-3309-4cb9-bd06-4166ecaf94c4",
        "cursor": {
          "ref": "90ca75a8-6955-4a28-a7fe-86773f3a89a5",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ebf9403a-31c5-4d17-977c-583de1dc3457"
        },
        "item": {
          "id": "b855daf7-3309-4cb9-bd06-4166ecaf94c4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8a0e5650-5f66-451a-83e9-ff39918e4f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebcbd85-541d-4449-b746-156cab87f9d5",
        "cursor": {
          "ref": "6fe193bf-306e-4acd-bed1-99dff8a82a0b",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1b5b8b82-17bb-4856-9e6e-c27a4a7d7175"
        },
        "item": {
          "id": "4ebcbd85-541d-4449-b746-156cab87f9d5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "65ad3c91-7d5f-43ad-8701-4fab5b80e698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182655cb-5ba6-4fd7-9c0d-1c1644386f52",
        "cursor": {
          "ref": "c05702a5-afd0-406f-868c-d807c2008a38",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2b5702b3-2d74-468b-8a70-f21aa16a3eaa"
        },
        "item": {
          "id": "182655cb-5ba6-4fd7-9c0d-1c1644386f52",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ed16e1a4-15ba-4160-a3cb-6d071251a5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3cea3c-0fce-4aca-975c-0a87d91ab635",
        "cursor": {
          "ref": "56817b77-184f-4090-b414-bd691705362c",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c5340517-e50b-41a0-8205-84958a0da08d"
        },
        "item": {
          "id": "fb3cea3c-0fce-4aca-975c-0a87d91ab635",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "47899f8b-8819-4050-a57b-b79558e26eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9291c96-3b42-44dc-a397-a850cb1948a4",
        "cursor": {
          "ref": "8e99a3c3-2504-4994-b582-116552fa5a2a",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f1843a9a-fb45-4df5-8f40-9e0109dde1f7"
        },
        "item": {
          "id": "b9291c96-3b42-44dc-a397-a850cb1948a4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "98b20695-3e6a-476a-bc46-63a745a10876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1705c3ec-f937-47a8-acae-633e835c5e86",
        "cursor": {
          "ref": "4982f4cd-cafd-4b8c-91b7-8df9d57ae6c0",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cd238800-dfc4-4b11-aba7-d3941078a211"
        },
        "item": {
          "id": "1705c3ec-f937-47a8-acae-633e835c5e86",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "630e29d8-e515-4460-a075-dc7ed020db5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c106db65-b53a-4a21-8a34-9622acf3cd15",
        "cursor": {
          "ref": "ac716c9d-6a0c-445d-a240-e41d5ce9481b",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cb1db5e4-7114-483a-9f53-996441d9ca3d"
        },
        "item": {
          "id": "c106db65-b53a-4a21-8a34-9622acf3cd15",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3e857e73-56fd-4cea-90ad-7aa39047f9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeba717e-a26a-44b7-81a5-6c43abd9fd52",
        "cursor": {
          "ref": "cba7f557-7988-4116-ae93-f7dc07d54793",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fe1ecfc7-ff77-475a-8561-a7f3994ac51e"
        },
        "item": {
          "id": "eeba717e-a26a-44b7-81a5-6c43abd9fd52",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "484840ce-786c-4d3a-9dae-3dda188d51ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af080ce-8213-4a3a-9df2-9382786bc346",
        "cursor": {
          "ref": "8c8bdeb2-7039-4336-bfc5-0011f2286d30",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "23fa8a30-4006-4979-a51c-3c2ea8cdcc67"
        },
        "item": {
          "id": "9af080ce-8213-4a3a-9df2-9382786bc346",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3a51d10c-5d1f-4ddc-98eb-2c2df786d864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b640e0e2-757b-4dd6-8c69-66f9ba01b7e5",
        "cursor": {
          "ref": "9990069c-0695-43d5-b109-ef7887a0decf",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "827cd309-efcc-4131-94bc-85a163a654b0"
        },
        "item": {
          "id": "b640e0e2-757b-4dd6-8c69-66f9ba01b7e5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e2fa08ec-5db5-4191-b9bd-6bd11d273a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5a1bef-0804-4774-bc3c-027eba4a63dd",
        "cursor": {
          "ref": "a3ef8240-7179-40ea-b84b-d2ebbb91ed52",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ad408a0f-0e65-4e21-bbac-eb602df733ce"
        },
        "item": {
          "id": "ff5a1bef-0804-4774-bc3c-027eba4a63dd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "68310c2c-2cfd-4014-b81e-22b9fe4c45b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017587b4-6e83-4094-b020-d6517936d598",
        "cursor": {
          "ref": "d494a9f3-6752-4f2a-acf0-d69775a008e0",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8b32127c-1270-47c1-b077-1597ccc416f8"
        },
        "item": {
          "id": "017587b4-6e83-4094-b020-d6517936d598",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "510d06c8-dc39-4da2-a639-6c2c63635b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ec1aea-89a3-4faa-8d8d-aef63b49ea0a",
        "cursor": {
          "ref": "865d55e7-f59a-4e3a-a31c-b9aaf84337c3",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "40a5497a-8828-43a3-9fc3-4e612c444a19"
        },
        "item": {
          "id": "00ec1aea-89a3-4faa-8d8d-aef63b49ea0a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b048711a-11eb-481e-b609-282e509cb1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b5cfd5-8c08-4e0e-b07b-d316090f6223",
        "cursor": {
          "ref": "be5e8048-6278-440e-b062-cd73d5c8935a",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "24411639-b62d-4dc4-b363-4918db4d7078"
        },
        "item": {
          "id": "e3b5cfd5-8c08-4e0e-b07b-d316090f6223",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4fa1e9e3-a2df-456b-b6c5-1e71065dfb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38da15c-48a4-400e-bc2b-2112257349fb",
        "cursor": {
          "ref": "914f40aa-41cc-4e9c-b5c0-0e557f22346a",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "23eae193-6ebd-45f3-80fc-7b5e8179989d"
        },
        "item": {
          "id": "d38da15c-48a4-400e-bc2b-2112257349fb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a01a8fa3-0782-411a-ae26-ee6bd7cf7193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d107987e-a3ed-403f-bd59-2545c41f4112",
        "cursor": {
          "ref": "4820ceb3-63ca-415b-b144-23c597317b89",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "befb90b5-50bb-49c8-937a-aa5944626db7"
        },
        "item": {
          "id": "d107987e-a3ed-403f-bd59-2545c41f4112",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ff828247-a072-42c3-9cbf-5d0dab266fc9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 293,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e5d50e-18e8-4edc-98fd-f2ce2b45c450",
        "cursor": {
          "ref": "3325b272-13f2-4c11-bde2-5712c7f03279",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1d29f577-f1fb-4a7b-9ce2-3ff815016168"
        },
        "item": {
          "id": "67e5d50e-18e8-4edc-98fd-f2ce2b45c450",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "73f1d223-82d2-49cf-8e72-aa13b8c13406",
          "status": "OK",
          "code": 200,
          "responseTime": 329,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b36d0e-b185-4d0b-9877-b722625c678f",
        "cursor": {
          "ref": "78818f78-007d-486e-840a-3b00254bc0aa",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "07bf4ecc-3e78-4204-89a7-25f3befcbcf1"
        },
        "item": {
          "id": "28b36d0e-b185-4d0b-9877-b722625c678f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ea740805-8e76-4ee6-8266-ea317a10345e",
          "status": "OK",
          "code": 200,
          "responseTime": 1737,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c8661f-c639-4ea2-b96c-235a41929b0c",
        "cursor": {
          "ref": "12a2a475-919a-4907-93b2-0d91b6a04e56",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "06acb695-271d-469c-a961-5694fe5df54d"
        },
        "item": {
          "id": "f8c8661f-c639-4ea2-b96c-235a41929b0c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b15b982b-a38a-4711-811e-409b3f382ccd",
          "status": "OK",
          "code": 200,
          "responseTime": 1802,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5093c326-85b8-44de-b17f-49caf828f2fb",
        "cursor": {
          "ref": "c93a12f9-420b-4511-9d09-104619e16427",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "acdfd134-e6ea-40ba-8e83-676422e943f8"
        },
        "item": {
          "id": "5093c326-85b8-44de-b17f-49caf828f2fb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e3cc766-0295-4e62-afd1-da045a1a2eae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5093c326-85b8-44de-b17f-49caf828f2fb",
        "cursor": {
          "ref": "c93a12f9-420b-4511-9d09-104619e16427",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "acdfd134-e6ea-40ba-8e83-676422e943f8"
        },
        "item": {
          "id": "5093c326-85b8-44de-b17f-49caf828f2fb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e3cc766-0295-4e62-afd1-da045a1a2eae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5093c326-85b8-44de-b17f-49caf828f2fb",
        "cursor": {
          "ref": "c93a12f9-420b-4511-9d09-104619e16427",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "acdfd134-e6ea-40ba-8e83-676422e943f8"
        },
        "item": {
          "id": "5093c326-85b8-44de-b17f-49caf828f2fb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e3cc766-0295-4e62-afd1-da045a1a2eae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ab47a7-3c15-4596-a05c-b367b77d6b1a",
        "cursor": {
          "ref": "18bbecb3-d8ff-40ba-b778-fb319d1668a5",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ecfee604-3bd6-4de0-b229-909e071c0d5e"
        },
        "item": {
          "id": "e9ab47a7-3c15-4596-a05c-b367b77d6b1a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f588f09d-916a-486f-b479-68372154bc3d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 287,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f7b3d7-8bb4-43ef-bb19-d4b62f696dc0",
        "cursor": {
          "ref": "339807b7-5bc2-4fcc-a354-f3671ffe8302",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4555175a-6bad-4b3f-ad88-286bf0355e91"
        },
        "item": {
          "id": "15f7b3d7-8bb4-43ef-bb19-d4b62f696dc0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "64275eaa-5d19-40d7-8ddf-0c4d2ef8334b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f7b3d7-8bb4-43ef-bb19-d4b62f696dc0",
        "cursor": {
          "ref": "339807b7-5bc2-4fcc-a354-f3671ffe8302",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4555175a-6bad-4b3f-ad88-286bf0355e91"
        },
        "item": {
          "id": "15f7b3d7-8bb4-43ef-bb19-d4b62f696dc0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "64275eaa-5d19-40d7-8ddf-0c4d2ef8334b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de31cc1-a041-42d4-b844-44a198c8cf3c",
        "cursor": {
          "ref": "bf618e78-6aa0-45c3-ab47-8fab1a9c2c89",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4d1afd3b-8af7-48a7-847a-82a839564b35"
        },
        "item": {
          "id": "7de31cc1-a041-42d4-b844-44a198c8cf3c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5d365dad-409d-49f1-848b-242aee984d93",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 568,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe5b28a-3b7e-466e-bc62-25aa1f4a3d2a",
        "cursor": {
          "ref": "3020c180-2a04-4491-a0c0-b8ba5e668f85",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "361b7a7f-cd85-478a-9b4e-8aaf1fd2221c"
        },
        "item": {
          "id": "5fe5b28a-3b7e-466e-bc62-25aa1f4a3d2a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7b0ffe74-8046-4ec7-ae74-cd4435e39c0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe5b28a-3b7e-466e-bc62-25aa1f4a3d2a",
        "cursor": {
          "ref": "3020c180-2a04-4491-a0c0-b8ba5e668f85",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "361b7a7f-cd85-478a-9b4e-8aaf1fd2221c"
        },
        "item": {
          "id": "5fe5b28a-3b7e-466e-bc62-25aa1f4a3d2a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7b0ffe74-8046-4ec7-ae74-cd4435e39c0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e58bcfa-7204-4b20-8841-ac41e188f341",
        "cursor": {
          "ref": "6cf99882-6c18-45f0-897f-34ea9b3f54f7",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f1172d55-a021-4f0e-8b9a-93c110304b92"
        },
        "item": {
          "id": "8e58bcfa-7204-4b20-8841-ac41e188f341",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ad39f6dd-bfdd-40a4-b75b-210935934139",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}