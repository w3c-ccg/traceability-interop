{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ac8dd8bc-8e02-4bfe-aa2d-af382c878adb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6a241916-efa7-4754-b869-642fc89ff72a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "277c10a8-3106-47a6-b22f-4197f5bc89c7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a3b0f90-4504-4722-96ce-2add0ddc3f3f"
                }
              }
            ]
          },
          {
            "id": "c9dfc656-f110-42f7-a410-d92a21a0283e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94bb1ae5-7385-42a4-bb1a-9011d8e2fc87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6a09b272-e5c8-475f-a818-ff23bb6258d6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1b75b4c5-9e85-43e6-b490-b60017cc567e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "213ee108-40b5-4e1b-b534-ccf77e0bfa09",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1db89fa6-80d4-4794-8850-fbd08ce1984b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cda67af0-7703-44de-8da0-20a5f26cce29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82a02120-b819-4186-a9b9-8ec65bdb6438"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6da76a85-3585-42b6-898f-09fd66f7b225",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58af6ba2-6c26-451a-8607-fc59a8a24e4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5d0a759-e077-4f9e-8813-e9d2be4d56d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "295706b7-b497-4aac-8b84-fd12804a53ee"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb2b0b36-d1ef-4e92-984d-836c2cc86187",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "799a5e01-c245-4632-a674-6092a75cc184"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baefe21d-090a-4df0-87a8-e799d08ecb91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "016403fc-f5bb-416b-aa7e-10fe703fa747"
            }
          }
        ]
      },
      {
        "id": "4a9a59cc-4785-4d24-8c42-cb64d531a1a1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "33190805-4490-4545-8c5d-f5aa9e8cbd0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea1c7f34-b882-40d2-8081-9b24188a681d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "106c5c7d-fe29-4b54-b54b-1534d0a7a7d3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c742ac-7f48-4537-8817-2649144a92c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e2cd9d6-7598-4209-acd6-703be1907e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2375a12-4554-4a36-a9fe-38a512f98ede",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c386646d-4e42-44e0-aac8-6f7a1ef607fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7298207e-195e-4aa2-8a97-2a5b9f49d936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a02233a-e690-4f22-a33c-fd4791bf1288",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89049be1-ce9c-47b2-a0c2-a737bc74ffce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4beb9809-c380-434f-ba53-93723e63166c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25755a1c-17ec-4860-9ec5-f250ac70d8b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b09503ff-dad7-4e8a-830a-bbd553fe279b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350d4534-645a-4940-ba9a-8c3b698165ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9fa0990-f453-472d-9440-8f404ceaba72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab3ce78-37ef-4359-96e4-fd27daaa9d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633986fe-1ea5-4a52-b0c5-fe2ae4d44842"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c6cc9af-d86f-48c2-bb1b-d675cd7568a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5055324f-ee04-4020-bb4b-975b83825534",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc38adfd-2619-40c7-b2b1-43ba8273774e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2cffa820-8822-4ef6-b0f9-a9a100edb4f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab95eb23-d28a-4b3e-8533-c5e4af73600e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fd3ced15-11e6-443b-b1fd-5dae55973446"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc5243d1-f29d-423d-b4a0-2ebc59b21b0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83f10146-aa4f-4fd0-ae02-68bf7d2f7661"
            }
          }
        ]
      },
      {
        "id": "83aa97a5-c780-4e7d-8863-fd431460e8b1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ac19015e-72d5-487e-b9e3-94f415478675",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50b233e1-558d-4a20-9c1d-c490fcb0fe87",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f7878056-ac20-4cc2-8657-3c35a4c0aeb3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c8b423-4e46-4eab-bed0-b5c1fc765dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aac2045-143e-470a-9bec-9f898a6e7f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dac120f-e318-4a20-a720-bccadd85bd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e1296d1-45e2-4a39-b313-58ab42e32d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb180e88-5828-4c72-adb0-e15242a17efd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47621479-bbe8-4e9e-a297-10360b469f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e54147-6249-4a0d-801f-b15c97c0ae18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc39fff-50f2-489e-8558-29a30440999f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14d5f3ef-3094-4c72-bc32-f7ca9670b2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66d49a9-1288-4449-8a7d-755997d02425",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fdf723-7758-4c01-8f51-4c277f0e60b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97314ea5-a39b-48db-997c-989ffb9d5af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1b07c5-5e7f-4b2a-b468-912967ce937e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff71683b-bfb9-43d1-b144-be49404c38e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b0a1f9-1138-4be9-bf12-872c9c79d840",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ac67aa-cd1e-40f1-b97b-8ec001ccf6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328c603b-85ff-4f59-b3d4-bd1fc443143b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455681cd-49d2-4ff8-9ce2-9a3ff71f30a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6bf7e1a-0fd6-4da9-b038-2af2ac49cb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4484681-d851-4389-a535-109bcab82854",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e6b1b1-dc00-49d9-8a79-54c91f6dc89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee10c46-cbb2-449e-8089-f74845d3dec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef0f1a9-ee41-4fce-97f9-9e675984150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5db17c95-1030-439b-aa47-efe5323b479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c4e263-320e-4d30-b7d8-8cc1741d65f4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b838e0b0-e2f9-4f5b-b88b-53a4b671bbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2153f78-2a0d-4266-8334-27a12b4cad56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936e2c9d-9a8d-4e79-a6a4-3f4e48f86f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4afa80e-59d8-493a-8907-25cc2458af70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5bb41e-2318-4412-aa0c-f7c250b1434b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5420b32d-5e07-4624-8709-6214cd1a1ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcc34c1-adcf-45c9-b14d-8a6abb5f65de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169a11b6-217a-4318-87e6-15930b116647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0299165-ac8f-4197-a02b-50ad6949f646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38202310-d0bc-44f5-86da-a12775bdbb5e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa81b90-168c-49a9-9a72-15b5d214ce66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de10781e-5f59-488f-88bb-554a532286b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfb1cc6-e565-46e7-8ac7-71ec29b3e40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "479d48ed-c8e6-4fd1-a159-b268820cbd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deff4b8-a661-4d7b-b9ea-cf5b3761cadb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee4c17c-4c65-4784-afaf-1bcd9aadba41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e50961-011b-47dc-9b48-d24ac9ade647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ce8113-b379-4c85-bbaa-ab57a0f755a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a1803a3-934c-471c-974d-15a080e7cb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d6fac-eac1-4be0-b0f7-604a8c1d8832",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a1ebcc-dca8-4384-85b7-e564f7725302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e20591-0117-4e62-94d8-a4e1002c6660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c0f04-ba9b-45a6-aae1-b9f470f0d1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d82bd362-2f34-426c-a180-d663e48519e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ffc48d-8e59-425a-a2d6-94b2bb0fb023",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5dbb75-191a-4807-b923-7eb719ffa992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43d57c8-9333-48ba-beff-8e3fb6c645be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59305c6-f5b5-4fd7-897d-460af0a30040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be0beab2-d882-4f76-aaaf-2bf138a0bdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97be0dab-9ee9-4aa6-8201-f12bd7ddbc32",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f407ed2-82d1-465d-ad85-07d94d05cf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c67993-31aa-4395-a342-c314cecc3cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9de727f-b1b6-4595-8c64-e5bc02d8dcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e34afd1c-9c1b-41f2-91a9-f23b9f2dcb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d0a350-8973-4772-b1d0-220a887444c4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7c79e1-fe2e-414c-ba91-402d594bad6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2556e1-58e3-4eee-ae4b-8dfb5f7e9cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848b6d9c-d18f-47f6-a879-a191c24725c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2bc7c6a-c423-4bda-a42f-0982020532b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acc8845-d377-454e-a38d-219d6a570848",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3b24ed-94af-4782-9593-be8f6b227ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a6952c-d8ce-4d0c-80c2-7f8bd1804af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035dd957-429c-41b4-8af8-6950bf460ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a22c912-af8d-42c7-9eb0-76f5c90f193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9696f52-cc8e-45a0-b012-15ef9c916b8d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000f0188-73a6-496f-b5f9-813beb56f2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d990df-1573-4ace-934a-cdc8803ab936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9eb92e-75c3-468e-accc-f37a5b6fb9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2b1577-0b97-4433-8a97-b8fc7f1d5881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e955f7e-0362-4396-9251-af15dccd468c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f99be3-4c33-4a5e-a8ac-50f567eb33dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69413c8-43f8-4083-925d-4e9ed1ca7e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0c5d62-a6de-4812-be88-d96685a54491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8f368e-2095-425c-8804-c1da9c53ce50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35df52c3-0806-4b9f-854d-7809f5030b42",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84acb46-7451-4b22-a593-951f3bd5aed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a500682a-7fb6-41e4-aacb-898da5ca0996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6ea708-33fb-4091-ab67-b0511f06e220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa9f747-73b4-4d69-8082-7ec212dc1ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4276c9-9d76-407f-abbc-ec2c91700ca4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f40f113-3b29-4f58-8dfc-5b85d58129f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77f3ace-5202-48da-bff2-a85fb94a6f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08191da-bec9-45ec-aba9-596517749d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "09ad22a0-3dd1-446e-8707-4fecb207744a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d8649f-a300-4a15-8c8c-2885f86eda50",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ded4a38-fb93-4dbf-b8c0-6345aa25a6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7f9cee-d2d2-403d-8e1c-17b974a37085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad539875-ec7c-4770-ad7f-b6b0d24cf5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c8ad3a-710d-4c95-a855-dc643277618a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fbafd1-38ce-4bb3-ad2c-a5a9aed3a6df",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2110296-2b94-4db1-be57-0530abb554de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388fbf7e-ff3c-40b4-8366-c35d7b04da1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedc6a5a-0d7b-49e5-b255-432d1f220575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b30442-4df4-413a-bef4-d35a21e7be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962e8a15-c682-401d-a64d-57c0d21da741",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053bcd5f-666e-482e-8682-2a02f89cfc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c904f26d-0e87-489e-8c4d-58cb5d221a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913ba43f-950f-4e44-9c04-fdc59d36860d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06eccbdb-4a0c-4868-9f5c-8ff1a3ffc5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e7dd27-8e44-434a-bf40-69ea237a7840",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3a5298-7833-47a9-a739-8d64185f67de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db87e85e-adea-4ebf-8aea-1ca281ae8230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161065e7-2e81-4b85-b817-47b67ff5b2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24238fe7-360c-4aaf-bbd2-8a62b908268f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df78bd3a-84db-407b-a1c6-43c7bae4cd38",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c5da09-72c7-4868-9e16-babc53c16b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d96d411-35e2-4673-b31c-0049bdf4ac94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502a71f4-bd3d-467a-b971-af7be6011dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa181dd-5e6f-43d1-93c0-3e7748d2f751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791e9470-c693-4ad5-a5dd-92700e508221",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d784aefe-87ff-4e24-84a0-a35a2ec9930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24a188b-3ee7-44a0-8b09-980aec368db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bf8ad6-e81f-4c7f-81ac-537363f65e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7da8aef-d1db-43cb-b40e-12fc4e9285b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ab5e26-48c8-4ecd-850b-a60a2e1fef6d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fad3067-34c3-44f3-a86d-d8f85fa7a6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28302b26-b8ab-46a2-bcda-b7040116c320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02cf544-6579-4735-90f5-1cf67e106b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63bd591c-64d6-44e6-b61b-109a2a482639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cfd6a7-a3b3-40a8-8258-502bce44ec87",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da987fb-ad5e-497b-9faf-dd048f1d4d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fd89ed-e05d-4bba-8446-a1250b91ef67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8923f9-77ac-45f7-97fa-108131a639a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "838ad5f7-a8bd-477d-aabc-9979a69fd79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c18659-a4b7-4a36-a771-aa6c7fcb7d8a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab8b9f1-5a40-44bf-839c-aa4ba29020c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1defac-9aff-429c-b30b-aa1dd667e283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e3979f-edf3-420e-bba8-15d8a14a7178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec323fe0-4be6-4d0f-9432-90680848273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afdd139-20c9-424e-94eb-93df6426be59",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817f596c-e10d-40bc-9c5c-7dc42c6d6718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68d0ee7-14f5-4384-828b-c75fb8e8cfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a524e720-bc7e-4175-932c-f7393d127033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9a9066-703a-449f-ae2f-c58f130fa38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a34ea09-f798-4c8a-a86c-8e5f93e3db03",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54c490e-5f84-46e9-8508-d071886c49c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6142284a-0f10-49d3-bb3e-aedb16db7270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9108038-25be-4472-a22e-ec95601f623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b45123e-4c73-4fb4-8d93-f6c62678c1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d4ddbd-872a-4a84-b84f-bae552b0e729",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e8865d-58ca-4eea-a916-15574bce79cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a6ba04-9d5d-4eaf-b3eb-bc05be9ddb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb698516-4623-43cf-9b50-a95971bceb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e849fc0d-294a-4c91-bb50-82f682a86374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db50aab9-8747-43e2-92aa-5604e5ee23a0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dd6883-fe3a-4a29-839d-bc837c0423dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddf6153-16a5-4cb9-a98c-a0f2e30ac999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b716c6f-c62f-4f57-80bc-5d1e84270db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5285255b-7d91-4b7f-9818-3e5e82cf759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbdb55a-79be-490c-99d1-406a3dd60d47",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5670b5-66d0-42c4-a0a3-a197450041f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9f566a-dfe0-4cba-9408-44e9fc523fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed27cdc1-60a7-42a4-94b5-f0367112d671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d7eaa9-106a-43c2-8008-64c55cf1c92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825f9412-9a72-404d-8348-0443e0513d76",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd48962-89fa-4295-8fc7-a1676b49fb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a83891-c3ca-4de0-a61d-85d3c17009e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69308692-309f-4fa2-b226-69b228cf9836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "348eb241-516c-48c3-9597-c73a710064a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0a17ad-30aa-45a3-80b5-f68838677ed5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8389a101-1cfb-42be-af87-d889668440dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757293a0-2a4c-4d23-b305-9d23a6e6c2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f3fd30-d7d6-444a-946a-715865c0206f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe6d9d7-3dfc-4314-b9a1-39994cd4df30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cb3271-c97b-4962-abd0-6a1f199d4715",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c8406d-14c4-4091-b21d-52ead677e719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150572de-75c6-432e-a2ce-38cf4e316f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6a8d20-df99-444d-b098-8d2764af30e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a8378c87-62ea-4389-b56a-a48078272fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb2840e-0543-44f9-b064-be3bc0c79eeb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ad9b7c-924e-471a-9aa8-692b9b88a2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fa0f369-2172-4e2e-ab6e-158553934f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9706f7-f211-4ccb-b8d5-a61e96b706a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ea7d17-1ff2-4640-8db4-a8897ea8e459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d78816-b0df-4858-8478-28f4ace1ebad",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442e189c-eb93-4f78-b860-d6654ad4275f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c18242-fdf6-41c0-92ba-4fca3fe56a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9460fb-5b63-4a2a-a90d-09355bcb2017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efaf8eb8-8c7a-4062-9ffc-4b2cbc806aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9263238-895c-4d04-a0f7-c83bd1203f87",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c780f11-76ff-4715-919a-a37691c863e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87eebdc-8056-4483-a9a4-159cb33b4fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d97b40-ed73-4440-bcf4-8d22841ea209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf77376-1a1f-469a-9bd5-354d6222268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdec8ea4-19ae-44d3-b77d-e2369d8d949f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d0a616-d0f2-43ca-8b8b-5f3eebbe545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b751edb-9c6b-4109-9cf7-7d5dca0a14b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe1929d-137b-4ea4-a4f1-6ac9cb0900df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5871695-2c11-4c06-8e4c-386f15478f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce03094d-de22-465c-a348-d3d58519101d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed197f64-3083-4cdf-996e-46a06b386e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c403da87-c38c-4592-94b4-3f0536091612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370d71ee-ffef-4470-8d3f-a9cd3e2751df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2a1e7a-9f50-4afb-b467-c4bfde4d631a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3fd9c1-3e0e-46c4-8264-101cc5ffcd3b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278a2ccf-82b2-40ed-ad8c-4e59210953e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a05f629-e462-4e6c-afc2-1936bdf6e03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f1d663-c6bf-4524-ba04-9ef696bdbbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6899af-050f-4630-aa5f-04f8c0af7850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcb58ba-a06a-4fdc-94af-f0519254290b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4d5c5c-1c8d-4bd0-884d-5735ec69c2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0c1985-2324-44ff-801e-544bf7323107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a23007c-4dad-4f25-acae-215b4317adf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "903b323a-e4c1-4a0c-a191-4b7b167c5c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900251dd-6688-4417-b93e-d8a45ea9c81f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1f68ae-9eb7-409c-a3b6-59232b2b0d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973864a0-d954-4f67-affd-9e4bc202a541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea6c404-230a-4e5b-b089-493c90bd7623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a940533f-62a0-494e-9cde-906a543244ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5096e2-958b-46c2-bb81-eadc797579f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8728a8d7-9f3a-470f-aba1-6b1d2dc11f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1153d6e-88fd-4daa-ae4e-8b9fb5007e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eab7284-5d87-47e5-90eb-22b1aae4c7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30308cc-a605-4c81-8acf-3618ad70e046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3d1910-4b47-491b-92aa-a9aa227067a9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a90b809-4541-456f-bef3-24b3de604052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c6d8a9-b350-4d38-8ac8-f0bfdbc6c0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de24bbec-753a-4410-b6fa-21dd09828dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "305f5a3b-95d4-4416-abc9-3486b65fe997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8ba651-b6c9-4ff1-86b4-a6989aa86244",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cabf53-b4b8-47c8-b330-91d5689de60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805a58b3-0f59-4084-a4c0-01f9e847bec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3319b16-d767-4bd4-836e-da36adc07f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "772cdf3f-d4a5-46bb-8879-af2a69afd750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e63727c-8cbc-4471-8a48-f18085fdf7f8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a795b8-b1e3-4371-b556-501ba913a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2934bcf-236c-4108-8ee2-f81906aab6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5552c463-73cf-4e4b-8d50-f6bfa8af0634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6142c8e4-01f6-44ad-a175-a2bb2ab6392e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae16b16-f4c9-4f74-bc41-d48a97efda3c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dc4c09-6b1c-41bd-bc8d-76e56924a025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5b9f9f-9679-49a3-90b8-2d556d9bf894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00901127-cb61-447b-bb81-1af167e060ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30912a03-2a73-4e2d-bf25-c8da6b644cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49bf46d-4ead-4e40-96f2-d1a6c872c885",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e485251-fd34-4ef7-aa57-eabdae852494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c572e068-3786-44f1-a2ff-86757231e490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16626f69-a0b7-4cb1-a7c0-c6a3ec852901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cb32dc-b629-4f0c-82df-75204c54282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8968b6fa-f94c-4268-bc82-358c23398660",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8403bf-ac6b-4629-8852-bb2489cc86d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63879e8-053d-41ae-9a3d-2b9261dcb0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5636643e-20d8-4a0a-9b84-0c83e7e7967f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a18d79c9-84eb-4066-90eb-7303817f81c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b66dc0a-1654-4370-b25a-c8a23117a08f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2890f683-e896-4b9d-ae8f-57df174c34fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130c08ac-9f04-4e1e-9c43-b4cc22e3c3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec03ea2-6a9f-4153-a117-2aa9fd80e8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "715a9709-b9e2-4846-954e-b07879f9c83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8182bae-5abc-4b13-b1a4-cbca593a6d96",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446d68d0-1840-4936-8ba6-13a0b1718149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fffab26-bd8f-417f-a929-1022d83cf1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9ed71c-1b36-4708-ae65-3d34d6a30933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e0f158-6dea-477a-b980-768ae63217ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028ccdce-e290-4ac0-a9bb-379d55cbe331",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599a0d98-97ef-41d0-b53f-397b210256f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a64877-53cb-41bb-93e7-3891b63271ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f16899-8822-42c5-ae89-f8dc2a674764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6ee8b7-a789-47cb-8049-813b73179d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1a3fc0-c9e7-4123-a321-f92af61abc1e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe42f656-326e-449a-bad6-7a12575d0d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69af314b-51db-4064-81bb-2c8b224b0292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740038e9-80fb-4449-9ce8-c6a6fd5ba2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35cf237b-42f7-4cfe-b74c-deb4909b64c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38da93e-8306-4408-afba-fd14d1dd24df",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca22f4f-29e5-4117-b129-3171d1727578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dabb982-bb73-4aba-a612-c10b6724a9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed42a19f-65e5-4141-a6a2-f7b12bf8dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7daad88-6bd3-468d-925f-f2de56804cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66995c5-abb5-4eac-8b06-7d9b384c1eb3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4503bfb-23f0-4003-9a46-1c0cf117747f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a91e0d-b740-4a68-bf42-34b3b2506bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a43a53c-b49d-48bf-aadb-eb9af32820b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f3862a95-c829-4ebb-ba01-71cac7a8c98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51085f98-93fd-48b1-a02d-ec06dd91e0e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf8789d-c756-4526-b251-8c034b105030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0739a521-f945-40a7-88e7-f5171854d7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa3705c-410e-418d-a94d-745e93a58a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ca59a5-b2d0-4f13-bbe6-4581747a3a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b4e63e-c8d6-42a1-a0ac-23db26a230a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2180acc6-5abf-42e9-a6f8-f79aa9e2878b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b30f385-600a-44cc-bc71-194f5cf69dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2949ea4e-cbae-4f8f-9dfe-4c950fc0143e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fce18079-7692-441d-85d2-c1637b027c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8299027-d334-417a-a37e-350aca529191",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369aa8db-dfab-4748-a1c1-563a78651873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d358b8de-29d0-4e3c-924e-87518315b3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5143cbc-4ba5-4a10-bd4f-8fbd5cc478b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae518ee-7102-45e4-ac81-34a82360f79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98208432-5fed-472d-a172-0bf5504f2d81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d145a40-806f-4690-b568-743bcfea1cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98dd5bc4-3deb-4655-8737-58cdfcf18e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984128f0-952d-4db1-bc5d-6720e6a8b377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "560379a4-9d6d-41ab-ac0e-d6cad720ac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69dd832-931b-4070-a49b-69459d3e65c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f0eeff-e131-4892-8422-908a6bdcbef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47819c8e-bea9-4ee1-991f-bd7e5c5ed2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c6e4ed-46b1-4282-8b6c-701b345c66fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1577c77a-d3bd-4dab-9cb9-3b1cc3c8088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c66aeb8-9960-4a5b-973a-8fbc7e075356",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa94cea5-1d93-4606-ac68-8463a8f09d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd876e37-d611-4a06-a0fa-fcfbd638ae74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd241185-0753-43e9-8b77-b0c5a2bd21b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9e7c00-911b-4d1c-a689-d8f3d03b276b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c4d49d-43a3-4940-83e2-2bc42e8e29b2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9285e64a-b15b-49ff-980d-2b8da556c664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b598e8-2716-4645-8697-e40a0211a307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9095f4e8-43a3-478e-a690-cf95ead768bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f507bfa5-f86b-423f-b037-4978970a0422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aae1092-f8bf-4822-bbce-ce8700a0c600",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054b51fc-d4dc-4652-bcf7-5ac6c82862fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22b7b2b-ac99-48af-91bf-4870c7d6ffef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa64c278-d9d0-4ef1-9377-d6ff9e5f13aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "935a24f1-926a-4e79-b952-9e4a38a064e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3247da5f-0244-4d37-8f6f-41277664a0b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1d4292-e799-45a8-9a57-ab84978b9afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d622b979-5e59-4d89-88c0-985d246b6a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257b00c0-1611-47d5-8411-5e186ef225db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ea2e4b-c077-4086-8660-a80f5aa88499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc08892d-11f4-4740-a53c-e36491444faa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34504db-2acc-4333-bda7-5c558bc0d5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0656bcd0-c727-4a0f-85b6-51b1b7d41946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00e9204-982a-4f10-9544-348969b3290a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b8ccf5-192f-4427-a2ed-c4eddd1e1bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683d2a3d-31ca-4b63-9b41-6380225aa1f4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae3468d-89d5-4c11-8bbd-ba0d57ee01df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc21f25-9775-4e63-b5ce-e6397c05261f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7dbd55-1cf5-476e-9375-2c30a3732f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3abc2948-a1d4-47af-8e05-edaf5aff03ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da998770-b5c1-48b1-9d9e-22143d944062",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa604928-350e-454f-9ebb-1ae895c9bae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876932dc-eda2-4f1d-9d7c-0fcdc29245fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410371ea-d4ad-45ef-84c2-7fcf2bda34ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "57db8c5c-0e5e-42a2-a6df-e71e92816661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aa7a95-079e-49f4-9460-d3e66068bf85",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f720d6-a351-4ffd-a7c8-f57138dfa124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dda18b6-df30-4151-8cc7-891bdff09816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e6319e-ddf2-4b87-b6df-e436bd5fbaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "003bbff8-4124-44be-88e5-0bd3c6130ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69a91d6-d29e-4598-ae22-b6e7920c1fde",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbf5495-960f-4f3a-8922-15abe2e1d70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3427d19c-b1a1-458a-8820-91f666b75c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adee3635-56dd-49a8-b1a2-775cfdc5de74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b21860-5c39-4357-bba6-1f30afe863ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e171c8c1-b13c-4d8f-8c6d-41f4993d46b1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deadc41b-7bfe-4999-985b-26025605e2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d83e0f5-c1bc-4982-8a6f-cf3e3fc52db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdea2cd7-9c26-48fd-a993-201d2c0c7f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66a0d3f-a988-4904-8dae-d01d24fea7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ea09e3-5988-4bfa-8e06-e1eaae110716",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee59c43-e805-45d0-8202-d5eb588f6b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02f4cb1-3a66-4cc2-99e9-57aa4b0b502c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898fd51b-e26c-475b-a89a-7d56fbd3a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f525fa-b777-434b-abd0-8b0761454512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6849a6-f4d1-4036-8926-da945c4dbfa0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81eabc7a-19d6-4543-a106-18401292ac3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f25986-24a3-4a27-a83e-9ff38fe401fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af34f97-5348-4a04-a431-bdf228b51bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d70cce4a-df7e-45a8-875c-bb39f7664d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558bd66f-8b05-4587-abde-9cdf807e8580",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b32ea6-bc09-4be3-b180-ec979b211c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabbac65-b040-428a-9f57-cbe79dd97fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67231f5-fbcc-43f8-b6e6-b9a51b750358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db08849a-5751-428b-bc64-8cb76ed2648c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6d98a8-e7d8-489d-8b6d-4c189ccb3a86",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de45b568-1193-46fd-af82-f72017064cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71a828e-4804-4b5e-8af5-0e74a2624da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04951a45-a7a1-4ca4-9c1e-080fb11b25d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9075fc-aa49-4cec-88ea-d64effb7a898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786b118f-cb5a-4399-9db7-87c3c82d8466",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4ffa7b-bfa3-4c7a-b521-322b0bd5aa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328c53a5-5c80-49e6-93ec-a615500bf030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a476e3e-690e-45de-a088-f03cb95fdd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e41324c3-371c-4554-be5c-3676bf430e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959087b0-82b2-4591-bac8-aa5dd9afab9d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e13dba-4968-434e-9d7e-d0ff9713b4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cedec64-1426-4ce0-94b2-54e865b3e960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f8e422-c326-4d1e-ba24-9cfd47727a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08e15d93-d2b9-485f-b171-0859134f2f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4059d068-2aef-4779-9f0a-eec7f9dcf503",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5109b529-9c43-49c5-851d-a66d3528219a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa7a47f-2419-45e1-b3b9-b1a113a46596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1484b462-42de-436f-a98a-3b69af30d237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72050b6f-a8f8-4240-afd3-314a84a37e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd97f5e6-35df-4280-bac6-bf00f882c3a9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabbf972-6a9d-4d7f-b7cf-626dde1199d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f2693d-ee51-4777-8a5e-85cdbce724eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac64bad1-08d3-491b-9f80-2097d6b4b08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa03d29e-f31f-4cca-984f-617e0d20a1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33937509-33c4-45af-8e2a-4f99f1705713",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc18b90a-4bb5-457c-8872-cd0546796cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7191d7cf-c8ee-4cd7-838a-c346a245a75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e8b157-9b95-47a3-9198-be149562d4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c06b90c-cb41-451d-a3b3-f72979fe838c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94a73bd-ad03-49b3-8b83-e133aa113d5e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7c49fc-8aea-45fd-b60b-a46b90c40ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967657ef-2567-464e-8b0a-7d650708e861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01746a1c-9c2a-4df9-a8ab-b75188c8673f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b38472b2-3cd7-4d3a-b251-a658d6053084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3483b9-4e92-4f3b-967b-764b933b653c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217ca70b-09df-4a70-831c-ad65762d33b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec6cd3d-9dbb-4d8b-b948-ab384b7a0e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5241917-5a44-4aba-b2c9-6705ded0d660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e620ddb-4066-4048-a31d-dc9343e7a66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec376776-93d5-4efe-8df8-184596b63666",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09bac32-915a-47df-a2a2-1ec5698424df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8d4acf-6f46-4a89-915e-21626c0e1810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c834ee-5698-4764-ba54-d89316cb61ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "868aa640-1675-49df-a675-cf0a8fb7a7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d728dc6e-bd88-439d-af7b-0884f4f43ed3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef06498-59c9-4fab-8943-2e9ab7fcac2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc4182d-8ebb-459b-9b26-e80da51514b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882b6f4d-465e-4636-8983-f5f0fae3c2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "681f1697-3d49-4f85-a88f-d231e9547ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f1629b-3524-40eb-87b5-cfba4ff2c1cc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e00381-a4f4-4d53-ac70-4be0eb00b9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed6c7b3-961b-4f1d-8430-d6b5d7fb96c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f780f243-f3b0-4127-9484-f4c612820a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8ec7f8-0c23-4f86-a5da-b4f59ebb5b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb2bf6-3309-478e-8d80-3973518a6e2e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b477bcc9-28b5-4fab-a435-dcc28a3a9625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39ba958-f27f-4464-a948-5163f8a34d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8dc873-c854-42c7-acd9-e71412808417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3e1488-846b-4536-be0c-bf47a89a7654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de30fe1-c50c-45db-802e-770ae4d7ddf0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad17f45e-6372-414c-8a04-6e9940d61a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8d5cbf-91fb-4ea7-9163-170ab59ed747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca66c29-a5cc-4fbb-8638-fa48074c6c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dea2ad7-6a33-4ecc-ade9-eb86e5aa8ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e378d8a-6820-40bb-837d-8aa5da18709e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359221c8-1427-402d-a971-cbce60f46444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78c9eed-7169-47c8-b59d-90f8bc97714c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fbd1de-ea38-4174-b7eb-e8647f4daa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f0b8ae-f276-4709-9ac3-0b3f9198b1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8028939a-f782-4f35-b686-90f3a53cd750",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd89a46c-69b0-48a0-ab32-1ed952a4f17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50d7b98-b875-475b-8a9e-24721c4a5047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8105ebda-9551-4955-b446-c3f3dc5d8181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23b5b862-ea6b-4fe4-ac18-73c19ff7094a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41f37fd-2a3c-4045-a539-8924b59bb966",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68bca57-dc22-4dbc-8548-7958209eefab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b178f21-2ff2-47c1-ba3e-e27425410f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003ae68d-3877-44da-bf0a-a1a30b1ac177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2227e482-90e6-4e8b-b981-00741176951a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb8396-d3e0-49b3-9685-4ae061970e91",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c7ac85-98c4-415c-b836-ebf3a8aaad5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2733586f-ae3f-4a29-9870-2955a7338834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9032ff-73ac-4ba2-acb7-892d28598f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8366ef0f-7c7f-43c3-a42c-06aa20b43c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ce9db9-dfed-4079-b118-28f6b40ddfea",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6782b199-52bd-4e47-b145-f88d8c617d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "269b149e-e67e-42fc-af6b-7603f45b069e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e157ffdf-175c-47c6-82b5-4d5952539297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19830780-6215-4222-bed3-de395c2ac777"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91f36634-304b-4f02-a19b-76061ccfefad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ade4c3ad-d584-4ea0-99df-62b82229b7af",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc0fa5b-0a53-4d69-b927-d12124760f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3fec6e9-5c71-4293-bac5-3eaf19d03468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ed4209-c1ae-45bd-a383-a984e106713d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79d853ae-109f-4471-8042-8f8db7e2f3c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60220ebf-73b7-4133-9fc7-81ea2398f3d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c69c941-f9d8-4b41-8943-f753f98d8672"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56f96637-2856-4ac3-bec2-d06ce3637500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "435e9ef9-3ddd-4cd3-83e8-7e1ea51a5381"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "270b918f-8df6-4079-9271-50081cf823d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8929b66-daea-42ba-a7a2-48f47f16b6fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a85bee31-f7ca-4854-96bc-ea17650a2fe5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20e83c3c-ce1a-444e-97f0-160a535eed75"
                }
              }
            ]
          },
          {
            "id": "be2dbc77-7d5f-41ca-83ee-2b8c7a5aa101",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a07c970-0066-482b-95fd-c2b43db939d1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34d70fbc-eea1-4dd2-995f-9ce55204fc6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b2acd83-9940-4f75-978b-e69125eac0b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88f588b5-defd-4018-aabe-2b8fa9607cc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76ff3c96-e43a-4783-9e7e-f429a2c1d7b0"
                    }
                  }
                ]
              },
              {
                "id": "b21b0f74-dae5-4f94-9039-a7594ea479aa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d143f80-d3e9-4c1e-860c-08434f105866",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bd066ad-d8ab-4b57-a69d-0015d405330e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29bdb630-8118-4003-b4a3-f5c60990466c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90753fbe-5c2f-4b15-98ea-2381355a4789"
                    }
                  }
                ]
              },
              {
                "id": "3b4dd999-b828-4829-98a2-c8a1b6dc4256",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a355d00d-0b4f-4580-8fb2-a7c2202eed9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8de24bf7-0947-4f6f-9f02-7fba33245d7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "647000d6-2f65-48fe-bbf0-bda15ebe4f30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae5c8759-e9fe-4133-b9f2-573021acb5b6"
                    }
                  }
                ]
              },
              {
                "id": "5772cb2b-0d4b-435f-832c-c276bdc68efc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13a389e2-20c3-4aef-b94f-11423b480c3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26851344-3b24-4c0b-bb7e-25184fd8be49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38900729-8a9b-4916-b687-5818c68cd193",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "96f0cc55-0156-4329-a876-6e2e4692a5f8"
                    }
                  }
                ]
              },
              {
                "id": "89251329-90f9-4490-842b-1c54a14c6dc5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44df395c-028e-470a-9b91-8539ab9682d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e650040-7cff-4b15-831b-88e272c74273"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e922306-20b6-48dc-851b-92d5ef88d073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f1c09e5c-29d7-447f-83d8-2e2271df612c"
                    }
                  }
                ]
              },
              {
                "id": "a1b71856-b032-4510-a923-c635b7c293bd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a3f2b49-65cb-4105-92f7-eac0ed9ac5c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d0164b9-b12c-4966-9e75-89bf3a3a88e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65b0d5ac-9625-48dc-90de-cbd707837dd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b82116ab-2d85-4a3e-a8f6-ca63570536d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7f7853c-0f9b-4d91-bf98-374c1a22237c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02a37b7f-a1ba-4526-8cb2-1d98a61b7dd7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72b66f5a-44e3-44f0-85e4-013f6b5c8c01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1e9a586-6479-4972-960f-831082aa0c88"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81dbd215-7a94-4aed-a908-4a0eee39dda6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "31d9646d-e6e3-4a5d-97ca-2c9d34cc0100"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d65a9157-4f59-4fc3-916a-35662d16e64c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "943a768a-eda2-45a4-b109-1760daf3bed9"
            }
          }
        ]
      },
      {
        "id": "59c2dd89-9e50-4c11-b01f-670bf22ff422",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1984c8a8-4835-4f93-b19a-64aa8a2897b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19154a6c-fc1f-4b7a-937d-911153dd2a7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0827a950-6fd3-4345-83f9-327c22195b41",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef75f85a-0379-450e-b3ca-e198b773bcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2761c9a6-826b-4f51-804d-4e3ff011115a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446008b2-4936-448b-8edf-f068c9ca8b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c55375-3c73-450e-afd0-7295a764b0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f55458e-2c4c-44a1-80b7-d2b91a9f1294",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a4fe9-a82f-4c7b-8f83-f58b035a8b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9af318-3415-4887-b38e-31c99458083c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91fe26c-7d01-4daa-b056-441599131df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11fd9a73-9676-4737-892e-75eb5293e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a3ae9d-202f-4adb-bd99-d4ea5ce4d6ba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a896c4-dc07-4ba1-94cc-ff823f7942b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833c5678-4d7c-4b40-ba4a-df00b31b9a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f7e70-d450-4289-9f19-620a9d582163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "286c89fb-39eb-4a7d-88ab-94f599bbd5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e930879e-dd1a-4c80-83fe-9dbc3a9eec4f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6a0bc8-89a6-4d18-8134-f4486c7b6af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34514f2-5390-4fca-8f6a-47c371b5c38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbceddc7-27ba-429f-9381-f8732abb0757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2f9b9c-5b27-4791-8879-6b7bb3c02f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210398a8-f171-4d75-aa9f-908b86393aeb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4011b281-0c26-4180-9aaf-1db52238566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cae5a9-8a92-448c-a5ba-c18b947bbd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1a1f54-1712-491e-9858-9d01f59090ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d0f420-0de7-4c86-baea-018538990be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fdc6d6-f5d7-482c-a8de-36015c63d8ed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b902f3-e175-48eb-8a63-b4a4e88d4dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7c08d5-c28a-4f43-9b06-cf8ec9fd13ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f52e731-9945-4a39-9cad-2d9198c12a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b135ed-fb68-406c-b8e3-d40e70f5981d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3861b70f-8cb6-4789-8ae8-65aaa456d0b4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dddd7f-411c-47e1-a3e0-38d4fe11eb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc3abf9-1f95-4dbb-ba55-0987b0b3ac34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24364258-d14a-4cc3-9b1f-8675626de146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3b9a30-126d-4dbb-8219-79d9d6368746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330d1b97-ec7b-4f9f-9307-db3492d29ffd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e23276f-484c-45bc-be49-d238301ba493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a28fbd2-0784-4997-a940-e2938e597076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eca3e1-b097-4c83-9e5d-f351846da67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab9d4fa-9269-4061-b6b0-4db8a92d01db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4262970f-b37d-478b-aa76-7d9c843976ec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fce2f1-dd83-443b-b4b8-1cc1285dde5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eab7f0-7fec-4daf-bff3-cbdb2f8f9f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016376c3-2d6b-47f4-8bdf-9bfccd99297a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae0d870-a66d-4592-b53f-ed16621ad400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9c091d-1b02-446e-aaf7-77a0d5752a03",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4d5f35-2256-442f-a4d0-9838afcaa449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d86385-67d4-4bfd-bb7c-83cc3c399c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a8cedf-7397-4071-8486-b6c6ec49a9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7a3c52-eb34-425f-9417-9c7087c10530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4287185a-b92c-4134-a7b0-1080f0e67cbd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c426654c-6eb7-4421-a86c-8d9c5064a3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e8b422-235a-4687-8827-ac9ad0995429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8b851e-fabb-4b11-a737-8479ed4d0ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd76887-d1f3-4c49-a8fd-dd4e35ae7cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0ec565-fd10-4210-a8b1-4ac74e3427ed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aad52b-e0e9-4669-9503-a8b2ced74baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0a46b2-99bd-4333-9829-4ed4075f56f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322e809b-7194-4a72-b788-dd9d1ccb90df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20e73db9-4d0a-42f1-b310-149f1d6481da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1feca34a-264b-4ecd-aba4-767e18504226",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9ca2a7-c3f5-41c4-8f95-2e25c7287b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d8419-780e-4032-b01a-1bec66f89a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb2c334-63b6-460a-912c-525276909813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c769d700-16aa-4650-be61-641494fb6964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d2d4f4-f173-4773-99ec-9b852cd45f35",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dcddbc-ddae-430c-b8a9-909f927d8ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e763e1f0-b0c5-4d7e-b83c-420f13b660f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1197444-20b4-4ddf-a263-1cdbcb87c55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f890bee6-e251-4d8d-8f0b-15cc1a92bcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37832cc-14b5-40f0-8eb0-75bc0d505499",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b819a5d-2b87-4613-be07-0998046769fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e3d149-4426-4148-b360-ff2376c02f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bfb52c-459a-4a45-8509-a59a575a673d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c882611-2ff0-4aea-b0e7-cb25a400b98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10deaa1a-fa00-45ab-9237-5fdf5c3b3d0b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349f6763-dfc6-4292-bd07-fde44dfe245d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21331c22-3c2a-4da0-ba50-217fcd4e522d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a74386-8c15-4063-81e1-0f8b2a28a8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b604a50d-5ffc-46c4-8970-0bca7ced0c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af74f241-ad55-46ab-8a9f-26b0c9599ee1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c003488-1bd3-417b-a593-1725041c2806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7c5c5c-e310-4503-a872-5b9ecf71c42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f72b369-9e0b-4e6f-aa73-1f17454e9660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9abbc4e-5480-4d6e-8132-c2462d67fa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0290b45-d391-4db2-8b92-eb1eb2add6a4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70beb346-e565-439d-a1c6-663cd2ae1d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4727a6bf-f4c8-4314-8448-a1737aaaddf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926acfbb-8cd6-42db-bda0-a5a846be9ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df29bb9b-eed6-428f-b0c0-adfed31053cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db02c120-4236-43c2-a1a5-d7a6e1c3976b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f20cd44-aac1-4b6f-8c3f-960ca4f696b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd5182b-7748-4c1e-9b92-1eb776b2916e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9512d02-b910-4459-92d9-c07c0c38df24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e936246-d205-4d65-896f-09dce7b8dae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973c9a6f-c80c-4979-8286-407b84060822",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d16bdd2-eee1-4fd8-a729-a316806b6141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8ec3f6-63cd-485e-8125-c89cff776f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48c6331-2ca3-4cc9-afa1-b82f552814b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "892566b8-7991-42f0-872d-0b5003bdf8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e1ece9-3048-41f1-93d9-d3b0bcf410bd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1b3df2-985f-409e-8a66-a0b9240f60eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19341317-a17c-4d1d-add8-0241a3889179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f5b11d-d1ab-4565-aabb-fb2654035ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d95291-dd78-4e2f-8a36-4edf35d4d422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2f6931-2961-4219-92be-1e858a655bb5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa717f4-0c3c-47db-b6ed-a106c39033ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a3ff55-2b39-4b3b-8346-6aa23930f804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edc3a02-e73b-42b4-97e7-ba7c6ece089a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa69319-8f80-4aa6-a7ca-791876e05b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f66940-dbae-4898-89bf-59e22d3fa096",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940f3497-4684-46ae-a2ff-cc9fa5d42717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97051c13-5ec6-4ebc-bd05-8297f4383790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fabf4a7-5ed6-496a-85d0-2c9e5d3e2d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ddab79-d4f5-4f70-8fba-c29554093f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447e2fbd-2574-4870-a7af-53be2f230ffc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230e2d1b-ccde-4fa7-9722-37016ea428bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f923070-9a38-472e-b362-8c73d4c39314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcd080e-37dd-4adb-9524-12c435066d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79a34af-b488-4ed7-9886-749b1a600a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c67e303-c018-4e67-bb01-10cc9f7029cb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60df6196-4791-461d-ae63-99d02687d0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc70d18a-64cc-499c-b809-ee161d6a2ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b36e441-f07a-4957-b9dd-1d415fe55a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "888959fa-2ddd-4d69-8a7b-848797240fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be01b36-f1dc-4602-b917-a5cc1b611763",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7824c6e6-5d5a-4181-9dd1-cafee1d1f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8461c22-1288-415c-852c-f410cb45a4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413a76a8-e3e1-41b9-ae41-74d375ad816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c0e292-17b3-4887-9147-f96a255872ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15addf99-10b3-428a-ba3d-50a6b480cd2f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da61013e-52a6-446a-afa0-9ca9f2507651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d6f06a-3f8b-4c42-8961-b47b99ab1b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f691c415-321c-4082-8bd4-c456450dbc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd98a9dd-ee5b-40e9-bdab-a09fb9948e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0700f4c-d927-4af0-9ac5-80b5a7c77df8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e4e9e4-b676-4f9a-b8e7-bd5d73c50cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d16f913-c1cf-4c2d-be9b-684fa4c137b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6774dc-d237-43c4-8da0-f6c9ec65d17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d02bf96-fdf6-4ef2-bc2c-1160517f8857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7e43e5-13c1-4e8a-a84b-c109a5092b85",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59497ab-954c-4093-a964-c04558e63f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81032792-d730-4e63-87ab-b41d0f50295c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d333a6-bb04-4c44-a21c-b5c346e00f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caca0340-ab80-4e63-8908-1a93df59623b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba0a3f1-156a-4598-ba65-76b801038c25",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3075e79f-3e8a-4b26-bebb-8aa5e82ea60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ea3ff1-da98-4324-820b-2d7747e78310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb62acb-77f4-4cd0-8ba8-e42901883f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c9652d-56e8-458d-9efd-bcb1f26362d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6c4cd7-4aeb-4932-949f-467fb4a01026",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4396dce1-a891-437e-a339-2c3745843578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10819ea-0b7e-4b20-bbd9-0f5032df4fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2760b97-da5a-4b21-aeb1-7ce100c4791e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d18367-445d-4a54-aedb-3dab5acc3089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7139e811-1363-4dc8-97d2-9cfeb62c9a53",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d266a1ab-706c-4611-b4e9-869234d106d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd29c74-e328-4eb1-9a8d-d99808978695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37adc9b-748b-4375-ae99-222954f5af5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f583a822-fd36-4450-a7f5-b26352b9d104"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d2066c9-971e-4384-bc2f-9559adf9942e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffb49063-5db3-4112-a5a0-024e456090ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d5107e-5bd5-4ceb-a1ba-3e9daae50ca2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "927285d2-a76d-4297-993f-6c96e5c20706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64968e3a-f0ef-4d8c-813c-037d78694e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b32a1cf-ce04-4714-b690-8fcdecac8734"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d3cd531-4880-4b32-8a96-4c3121596076",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b68530c4-325d-4c1b-8506-83efe5b6b80e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bb5f55d-897f-47d3-9794-cc15ba4a20c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45faf7d2-180b-4145-92e1-7dd7f039f0ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17e6ec3f-81c1-4ead-b485-d3544eeadee8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7fdd3f57-82ff-45e1-a978-2486512bdc34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8fb32d8-0721-44a8-8ed5-4c97beb4760a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a527ce50-9859-4fb3-83cd-7a2824ee701f"
            }
          }
        ]
      },
      {
        "id": "e2020ed1-cb2d-4a2d-9ea8-0afe3ea562a2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c74c4e66-2c91-46fa-8f7b-4bbbf2a1b783",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98f900aa-9313-448e-8370-c9f02cca29be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7d22d5f-c41c-4282-910e-6e027c3c73e0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63d3b4e-e25a-44ae-a835-8799852783dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb933217-8fda-4e76-8ab7-56f9047928b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7f89f3-d33d-434a-a938-2e3fa5d91078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c983a4-8a5c-43fe-ade1-b72d28ec61ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964b6ea6-3786-43d8-a2ce-b5ab77cd4751",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce62e3d4-b891-44f5-9011-622c58846e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbac2278-4ae3-4041-bb58-6992598d2f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d85f173-4fca-4551-9358-e232f3520f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee83b923-db20-423e-92d8-f5d45f256353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b245c4fd-7014-4cf6-8f4d-c11228ca10aa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e615a4b-a380-41c8-8257-8f083bb0ad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40741b0e-2e71-45e0-9fe1-8a51c0aab84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b509e2b4-4ae0-4a2c-bbca-83086aa181ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "014346e6-3f7e-4b03-b5a8-94121abf34e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744c7c63-402b-4e91-8092-a4619aac07c2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b45160-845a-49f6-9802-3e707a62bc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaae4360-e551-4e52-99aa-c42a170a00e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7124ff61-cf65-4e6b-beee-7ef16a9cf97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "567dab38-a8f1-44ec-83ce-25590161753a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d0b3e3-a1bf-4f1d-9d0c-e4c2d80bb263",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f167ef-8ddb-41be-b15e-4155b1594aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81c4352-e8ed-43be-8aa7-913287ce7ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb2dc7a-6fba-41ed-95fa-14464aac0999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cdf5a9-8e39-4200-9210-adf0e8451294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50145a4b-08c3-4a42-b964-7c4b70c1b88a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5209c52-96db-4bdc-a361-48583d487757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1514fdea-d0e8-41fe-93c8-8952e31e8a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b264a80c-b412-46ae-859f-785956b9f375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c347d0ef-1872-4ab6-a879-51139dfa3f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7323b0e-ef2e-414b-9a16-285594a774d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b8017c-c405-49db-9297-88f3bebeeed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23d9071-f8fd-45b1-88f3-7c2fb04732af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190d250a-4620-4427-bb9b-c5980bd02a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e323c7a-79fa-44bb-9548-b5d81a17db4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb47e4e4-96a3-4fbb-88de-47f01e8c22ab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb95fb5-c6c1-4fe1-aa0f-9194833a0d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08d7274-38ae-4aec-bcd4-da42eba43f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42099d2-62b7-4915-9c8f-68ab86cf1b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f871148b-9b08-4550-af55-aa8fcae2c809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684b7993-0248-4fda-845a-3e9212e50f4e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32147b87-80bb-46cd-a2fb-56666d3126f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2889726-7bd1-49de-9d3a-90361a4956fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2901a28-e8aa-4a6e-8fe2-973468fabfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3aee18-357e-4472-beac-6141b1e3a765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4534e882-eb4d-4718-8a32-76180c811931",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de14ecc-dd13-4613-bfae-8176066f5857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb52cc82-0a21-42f3-94d2-f5ec3b1810db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a100a9f-af72-4e44-833b-aafe5903448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "912db306-ee0b-49d0-8c1b-998c4b998908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8a4dea-3394-4c36-8582-8ee1a1fccb53",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b9160e-e7a1-4c34-8709-fb25e5aa3fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d0e91b-04d1-4ce3-a60e-6febdfc13207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2348bd54-e643-469d-a3f1-e943d6c4df7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "63913944-4cf1-4c63-83a7-6db70ee6208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0f00d1-ebd8-4213-b102-55617ad5ced9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610c7b7a-c392-4d12-b122-6d8ebaea65ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614ea5e7-9c4d-4201-a57a-128f08ff9074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144f2f48-0ac7-4bd9-bfe7-bb3eaa596d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c67ec55e-d75b-4dfa-9acb-9b2b265ddd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6b07c5-ea9e-43d8-86fc-cbfef6cfa7ba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76a5b6a-f7cf-4ca5-9b84-d7fce4aa7438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4854c8e0-59b4-42c2-955e-92fdeeec281b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad6426e-10d9-4508-a6d5-ea8f8d8dfd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a0950f-32b5-4c36-9193-fcbb9f500280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b468a23f-f732-47f5-90c0-0950456cadde",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1425222a-5fa7-4c2f-96de-80424d8aae06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e69f84-2f7d-4291-a232-6e1bb7a7abb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f239788b-0d90-49fd-87e5-b2202b0a8d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b35077f4-fada-4be2-98b1-5b4af7dc3029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b81f1b8-e977-4adc-9e1b-4ee71c5b2999",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1078d5ee-ca08-4627-b997-4ac174ecdcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9c0475-5e0d-4586-b432-bb09f1d6798f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c12872-e7d4-4623-b4ed-79f397f099a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f053619-9ec0-4fde-b1ff-481082383c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cbedc2-0b87-4c3e-8b0e-8cc36b050c71",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef4f7a3-98a7-49df-aacd-23f4e3030398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71432bd8-66bd-469d-b840-5f7811876ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdd8f62-f868-4b0e-bbae-082294a7ace0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9ef1a8-0022-4472-b73d-8d50e915057b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a06621-0bcf-4bee-ad21-93405dc4c5a5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35defb61-9e96-4ff6-89c1-93dbda6e6f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7084b3ae-f862-4373-9f0d-0d4d0e40ad50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18441d55-f87b-46eb-ba78-c06da9c15d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1989bec1-a0e3-42ed-b71c-24d24b245e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f377526-594f-4040-959f-5281fae63fd2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f723a4f-c9cd-4270-a1c2-3ff4085a7481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d322496-d127-4533-81ad-ec2d942ce4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3899ee-8961-41de-8623-ada06fe71416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb5a8e4-7476-4925-b088-4b25013db8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa994fc-a383-47c7-bf97-f14c122ea1a9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921c6d14-8aee-46b5-a620-9f33f3838160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f392142-a02a-45d3-935f-f4783f0a8261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3510dd-6b5d-4f4b-838f-804b6d871f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e3b11d-1a8d-4ab7-bb45-6e465b4f2c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f33361-2e34-49b2-860f-84bc9f2bb731",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9851da-1b7e-4d1d-b477-a04afe0eaab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d07c73-cc22-4040-92c2-93d8fdd7be7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dc85e7-e540-411a-8753-30e463c2f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ecab18-8083-4db8-9d07-9a937905a69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494ec67a-192a-45b7-8e68-3a40700781a2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3c8ac2-5def-48bc-ae76-6d9cd8ec1841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0dce0b-88a6-477d-b647-85dec23a6210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28660f8-3dca-4985-a6e6-bdcb76bf379d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8843e511-b3ed-4eae-93f7-74021d63f15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d785fb6-844a-4dfd-ac45-7774a090ce6f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa3a18c-9cff-4792-a1a8-7981aaeb0d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e01116e-b7b6-424b-9fcf-73275ab30c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c71876-b3b5-46e8-8ae9-905dc4e4b32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b42038-716c-441e-8833-94faff67dc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8124fae-54f7-4b31-92a1-1e97644eb0e3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d487ba-d752-41fb-a5bb-312fc4f506e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748c5120-2e7c-4c58-9a1e-7f479259627a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e8ab0e-2325-4af0-b0c4-bcde074a9b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f8afa5-ee57-47bd-8c59-206d6c0ac395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0402ce9-ff7a-47af-87c7-f90e6868b7ec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e74ec07-a7cd-4107-a979-f889987172d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e42a027-9270-4b5e-b3b7-9b58be2f7649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7664cfda-b4cd-43a2-912e-bd5f8ed29e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72939602-a608-41b9-a55e-5839104299e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffd98b5-fe8e-45fc-9cdf-f4fa5664e68b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4176d9e-1b93-4bf5-aba8-6d976f44f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f120098c-e71b-49a3-8110-5b432f2c5fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d033fb55-2da6-4aef-89b4-dc2d886e6cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95522f0c-4066-49fc-940d-863de489f1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6e4114-77ac-4dde-ba9d-8d9c72318a8c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac59aa4-c585-4ca9-b5e9-85edc70d9018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f664c153-6074-46d9-96c6-84765fb9bafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f591c4-17f1-4615-aa66-95f914b1cb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa51f96-a3d8-4264-b9cf-401f67bcea51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17949436-afdd-4659-95f0-1146dfcfd06d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f659d2ef-046e-45b9-a61f-8346c7b1d49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bf2c18-2bf6-4891-ba9f-ae53012fa0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3786e187-bc80-42a2-b7ec-ac7eceb08422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b94fdf8-a132-43c2-936f-7a8ac9f695f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a821858-7bdd-4ed7-b10d-99bda4e48563",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a38405-4c16-4d00-80ed-f88f6eeb3a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8a9103-1210-43d3-80ce-d4ae7bfa727b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595cb427-d7ee-4a05-bc83-aaee379ccebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d424416-bc14-45b2-b0a0-deb92a6df024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3d07e3-e4ab-4392-8193-098ec586001c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf152632-f6f4-4b05-a1ba-139134dfea00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f11f58-a675-4aa4-a359-87ed8725d100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16133e6d-aa6f-43d6-861f-4966a00f1dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de3b251b-4e3a-49ee-8ad5-f59a78af83ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19e8301-e8e5-4370-a344-8d7b3ddd0a1b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860b2641-55fc-4554-bc42-a5e766c3bec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b85751-9990-4382-9b74-8727057435b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1271e7-c754-475e-aa64-144b1d3cb9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cd450d-3c2e-41ae-b1e8-c24b187fe4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb22028d-88ec-4c3d-8ee4-1f04c84a09eb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc64873c-5de5-44c1-9f98-3414302c2f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ed5bc3-4d4e-4184-b54a-3f73c6acc111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae199721-bbef-4720-9586-7bc39b8b15a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "765ed994-f7a7-4abc-985d-a5fe50a92153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa0563f-1939-4c69-8852-a4c959d89e66",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40043e44-b53d-4264-948e-41b72da2ff76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dc29fc-c361-47fb-9c8f-24dee6ef507a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc7d55e-cf69-42cc-a2dd-fc7e05bf532b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56b36353-05b1-4d8f-832f-94377e33708e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eac7208-b2e2-4027-aad8-6a5cae5c14b7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54130e1d-34e5-4e60-bfa7-0eebe6bb9025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af16edd-0c76-4493-b7fb-9ecc6e9da840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70fae03-817e-4a5f-a197-07baea86db5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd9c994-1e64-4cce-b74b-800f351ce2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cac06d0-76e5-41e9-85cc-cba94c83b25a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83abc8d3-7e44-4461-88ad-996536527e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f9f199-4438-42e9-b1b4-231da7f52edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993bef54-30a2-4af2-b0f9-32381f7490e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0b9563-18e5-4121-85a6-d4f9ac4d307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f436ba-f81e-4be1-b372-3307dec0b7d2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d3edba-0d3b-4167-9d98-bd457c1038de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baceee13-06d6-4336-ad88-563d1ad7b4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f10e49-23dd-46a2-b9b6-a05f59d426ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f356d34-2448-4009-811b-62891ef66fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e4dd25-b793-4e4e-ba1e-fea52da26b00",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da7045b-49a3-4d71-8f1d-631738bbcebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedd91d3-1513-4c3e-8e1f-05f49d39a882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf21bed8-8a85-4b3f-b1a1-06190a6ae07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61c077f-cabf-49a2-84fe-6e8fb941761b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe1266f-aece-4a6b-92d8-b393b00ba1d1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d5b057-cf41-48c2-a864-e2124d975867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73eefe13-fc38-41c0-ba70-3caaa7e0d43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5502b2c-b34a-44c8-973e-182cb3013769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05fc5e9-41ff-4f83-9250-033bbdcde9d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "032cb22a-31d8-4995-bbbe-c7f66dba7fae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e919561-f5cc-4864-8f3e-490026770315",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0bd5ac-e35b-47ff-9453-9409668b5b74",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bff03e99-ff80-4fbe-a664-cce5f7737d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe59b94-3107-456b-95a1-85f233b9aff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "820e9561-814a-4dc1-abc8-e3d59eba3ef0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46664d7a-6737-4c7d-acd0-3a7e47f55381",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dcd91e9-efe5-4d4a-9e3f-6f59aeff0150"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46713656-ad0c-4c3b-8b62-7c6ebcc01ce3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e89c4632-5dfb-491c-b338-b6dd41afb105"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9293315c-20e7-4c36-a019-80a0175d790e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07044c91-d586-4390-a91b-3445831f9813"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45ebedd9-a1dc-4582-86e1-a202bd105a13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a58a9c3f-a142-4a75-997e-2519a8b2b779"
            }
          }
        ]
      },
      {
        "id": "2b3acf05-9701-401f-b7e1-3a583640aa5f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "886b1449-e770-4ead-9a4e-d67ff0b5950b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12da4fb1-a947-439f-a6da-be423c53886b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cad6e440-ea6c-40e4-9890-c0b6b1f9e2ad",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df6e92b-fb15-46a5-955f-ec0496c2f5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2efe22e-92df-473a-b6bb-03593c85596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9253cce-d490-410a-8f32-0f13e8cf35d1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c2ee10-6a6c-4f15-9ce1-c920263f2862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587dc2d1-41dd-4222-8a92-7781e8c09c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4b87d4-8553-4838-a596-3de8e163fb7f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1d0bf5-a97e-4448-8721-cd65d29abbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c15e071-c49d-4b33-92f5-2ca11c065c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286dfb17-96f4-4b36-a6a7-c23bc13af77d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca7cf45-4e86-4ad9-8288-59b024547f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914a34bd-e655-4473-ac37-678f170aae01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90046d5e-c63d-46b3-ad38-447f1fdb244c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905357fd-2c61-4082-a02c-06f971365c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2287360f-6747-4f38-916a-5abcd9d91950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61013020-e292-40f3-a796-512a2df4e834",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca67cc5a-9291-4357-bc1c-7b0ba3f659c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6698a270-b8a0-4ce6-9a06-4ac6f68d8f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4292286d-2433-447f-bb86-f2de77e0676f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ae5472-8f1a-42bc-8859-74e1556f852f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e19ccab-40f5-419c-8310-c85c9af1ce0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf7abdc-9cb8-4cb1-a2bf-553661e5594a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718041ce-2da1-41dd-8233-ac3ae29c080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0eaa24a-644f-4a84-969c-918a5a638ddb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0697b2d-1bec-40d0-879e-ede50d01daa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12344c6-8ad4-4c82-8e29-b6998ea79b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c4f741-d12c-4747-8457-0ec8fa57fc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ffe831-4a9d-4840-a949-c2cb8b2e5223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87185c55-1b80-463e-b78a-cb8dcd642a3f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d929ea71-b8d9-4da2-9590-7ff159a3c3f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42504072-593b-400f-ae22-a356f85c30a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b231e0-cdb7-412c-8518-2b4d88fb3551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475f3d01-c453-4dad-9a73-a4d55d84ac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63363ddc-8b7a-4ea8-aa8c-7347d40c1430",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06a7288-524f-466e-8a99-ddba3269ef3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecaf710-8e58-4141-8e7b-955d901fe9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671d1a4a-af55-4699-9038-83cd83471f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec80550-0e3f-4184-9700-409356ad8e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3798c6-b6c7-4d63-982f-3a9492aeb491",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21d0f23-d197-4156-bed4-b3c50c885c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df4abbb-9eda-467f-8063-5e01fe67f17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94b6d5e-acdf-4adc-aee9-cc3083ecb21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5e2c42-71ca-4792-a43d-752f48af9146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20531d8-4b2c-4478-8a32-807c335d587f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d137374-6217-47bb-aad6-391029244b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14849ae1-1fa6-472a-85ee-69194060e92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97733c8-9b01-4675-ac41-88be24f039b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f92593-a06e-4ed6-af66-609f5a280301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306dfb00-2417-49a2-bfde-b610b74cb952",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f4ea1c-a84a-442e-b2a7-130a7fee3c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39909dd-e550-4931-ba13-6eb4d3fbbce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fbd959-e044-4ded-afa4-96e4c4c324c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c7cca2-118d-4883-92ff-5740e88f7871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8744af-4405-4fe0-bdc0-3118d522beca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fc6456-5d3c-449c-99a4-da90e4796ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033595a6-2229-4c67-89a5-f954e6f49576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05c51e9-920e-4bef-adf3-2f5891f49673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc044291-39a4-48c0-81c4-6b18b2b4113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89067933-0728-4068-88dc-bd926af5e6cc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd56a300-0aa0-4887-a7cf-bb1dfe5a3d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe4c73b-caef-4678-9ebe-4277f4da59e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719138ac-3fd6-4073-ab7c-56d560cc04bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f0dd35-f118-4b49-887f-3c6c88989e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e902bd0-7dc2-4d8b-9855-c3e36f188b62",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abdb86b-8834-4a22-b8f0-74d533941470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0a260c-232a-4b2c-a17b-1336632285bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6b9e07-2584-4f8d-bf1c-12d268ca67e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2f49ed-4223-47bb-b041-2ef824dd18d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697fa59c-f04f-4cbc-9b77-2580e1fd3406",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cb29f4-0df4-4fc8-9fe2-4a92bf7410e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97154e0f-a353-4a9d-b578-c16bca02127a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6ed670-2932-440a-b44c-55a08e9be4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f756ac-5b8e-42bb-9a8b-9105c86109b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12b1f0e-6ddd-4027-adcf-a1b57dc86942",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8132210-33ee-4fdb-b471-eed70a07ced3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78158b98-4d1d-4959-a825-ddf50c76e552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40306a20-9508-4297-8d20-c4eaf580c3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260e0d70-df62-4136-adc5-e9b03f79c8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee9170b-9889-426d-98d8-0417c70e6b01",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ca6fe0-8b9e-4237-928a-dd94656bf98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138fbcb2-f058-4995-bc4d-074f1d10235e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529f471f-9c9d-48a3-a222-106a75796ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047d1dc0-1eb0-47bb-bbe1-9ad29ebb1353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e2198f-894f-47f9-ba97-bdd338ed941d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca00fd7-c5b2-41c3-a14e-24c229453f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f102eadd-04cf-4b2d-98d8-55aeedd0ecad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c29630-7a90-44c3-9d59-685513977dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b90eeb-01a4-43d1-b0a1-2aec5fdb814f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba47efb-d383-4737-8113-02f3197f5156",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fb9def-14d9-4121-aad1-662cf5789bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ef1c51-748a-42e6-b5fc-3a42514b9da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ff3c39-5522-4a29-998d-7f25208ac087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4a91cd-df0c-4d1e-923b-11dc18764fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d72a144-7b2b-49a6-bcf4-a981ff6ab2fb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b9d14-71b6-4316-9f92-085709db6b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3f993c-352e-4574-b3c9-bffa3942c5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa1d448-ddde-4ad9-9b92-d1824c4dde1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a95263-ab8e-4fdc-822d-6e4c8d23f60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae95fca-a22a-4a25-a9bd-73dc9f76febe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1227e41b-4742-4c64-b25e-0a2838e95e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b891992-671d-4817-b37c-6ecd9198e2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1607256-a424-4847-bb37-e1cef570e5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66475432-c38f-4c0c-8589-e3b758d185e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d73829-0c9f-4593-bf0c-9e5485f4b8de",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0498abc0-d530-4ad0-8b83-83582567e055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc84087-bef6-4a91-9b61-73454d7da641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1126b7-3cde-4f60-81c5-3ff49c9f9247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea72c540-0357-4339-b2f0-0b703b3eb949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8120f6c7-e923-41fe-8c7e-29d9bb58ab8a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6714b8-b4bf-4f05-ace4-745438d7368b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc018eb-ce93-4586-9f19-52fb9b3bf0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273047fe-350c-4c50-a0f9-d65a48e98193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24000dc4-8dd4-4fae-88d0-ef6a2867fc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29505ce-9070-4a5c-b776-2be0170e2d68",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5231d9-0d56-4635-830e-3d404ebd994f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028a9f35-e80e-4591-b7a9-a33fbfdbd33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0604a372-64d8-46b7-bc2b-3496bbc35cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9f4856-8a8b-4179-9d42-e9f7712e8a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4787911-ce1a-4cd3-97aa-fa003e7df49a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d17dc-9934-4f5d-9975-50a46d01e425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e9eb6ab-32c3-49c2-813a-324f9845cf89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba973ecb-7183-4dc6-9fce-6977a6ed41da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611f20f7-6b07-4ce6-be09-a6ed441153f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73f03bf-7ed0-46fe-a565-7dda0f3ab730",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b795fef9-ae3b-43fc-862b-7970d084170c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc0161a-ba58-45d0-90df-463cac10e2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aab274c-07d7-4166-856c-fda2a652171c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f02e94f-71fb-4862-8887-7a7fee36902a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd8cf85-6e48-4563-a78e-63306c0364d1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf13e7d9-07bf-45b3-9f78-6179524265a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e291b67b-3a1b-4d2b-ac5c-14841945c4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb11b057-745a-4502-81f3-8943cc747462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f812550d-ecd5-4da1-b98f-93ba2b29e918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c4592-6e62-4e4e-9506-f036d604f2ed",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9c287c-211d-4ab4-a4d6-b7f1846e5746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760130c8-915b-48c9-a5ed-3619a7cbd429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e46c01-fc37-4103-8896-5efdfda65089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0ba9c4-233f-4df3-891f-d91509299b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788b8493-5e82-4054-9882-5367a431dc6b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5bcdc2-9dd9-47ea-8654-fc963c55302d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e9d3783-0d56-48bc-9fc4-e827db5b1027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fe29a1-1f1d-4af4-bd4e-cc63da2cd8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eacf48-26ae-4402-8d18-cf0a6b242a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f58688-959a-423d-b727-aeea95d157b5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8906db35-52e4-4a63-abee-02b913b54b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e52170-5c1a-4761-8a60-4d4b49106e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015ff762-8725-48b2-b33e-ea553eb974b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96248069-c254-4715-a1f3-57a8f889d7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b630a7b4-087d-420c-bdf0-d137f07f9a10",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010af850-62c2-4360-9b5f-d9472cf31a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6be9489-1cff-444a-a9f9-1ec458cecf52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2b799b-af12-4760-9089-7abdd0c80384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb3c192-8872-4fe3-ab68-9a7c6152889d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4719a2-41c9-4e76-9311-1e4bc42da032",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7033bbe0-0713-490d-80e3-840119a88039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87288704-39c7-4794-8705-10c0380401cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed19a6e-9491-4452-bb1d-c1cfb1f3c2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0baf0e-5ba7-40ff-bd0a-f6592f0d2f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4be6fd1-ece0-4cd0-aac4-276eb1c8ed15",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6e3bca-6f61-4c07-b80f-1c860595ac0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d05c559-b62f-49a7-92ce-f23c92caeb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41406199-0dab-4fa1-8ece-cb8b75f067e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055b0c3e-5781-42d3-82cf-4fefc45e142b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bf85e2-0533-48b3-abbe-4d4f823a943b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afa6bd8-bdce-484b-8952-d3a0c6724018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470537a2-585a-45b6-a01b-dedb6ffa5569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f654496-1dca-4e7f-95ac-6807b7464370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d20f6e0-7436-4c91-a49c-028ac61f911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2345d73f-5560-49f4-a7c0-748713ecc9fe",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28774d25-8254-483b-acd5-f3a68ea3b05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa9b06b-f614-4f43-99c0-761f54f00d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3015cd-9e04-4300-bc8b-99c42c1b4db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba82ca80-744c-4d4a-899a-afc3240176d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f11846-685d-4a70-b3c4-cffe6f9b18cb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2499f0b-5d5f-42f9-a030-e6a6ad38f5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ed6542-5766-4789-8a2e-62899b2f7421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8a3d49-f6fb-4edc-a904-f10845ddd72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d80e0ec-bc1d-4cfa-bfc8-f59461920818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031fd7e4-91a1-4416-8b74-05499db3282a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ea3e86-a785-4bbf-918f-14c4fd0dc6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d79600a-9ace-4ad2-a3e2-89aa6d72d662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1d0cac-9ae2-4816-b912-8d17d1c6caa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b94c268-fab1-49f6-8bd9-b69b6453dd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3378eb93-5cc4-494c-bedf-166c64a48f88",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db00a866-b6b1-4b73-a539-c54d70bf7a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddc69f1-ed4e-40d5-9048-4a02ec642f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c9a8d0-672f-412c-bd32-132390f0b6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebafa78f-7544-4aca-b0a9-76aaceb01e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431acb86-9ba5-4af5-95d8-8db3c4de967a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a274581-1e46-46dd-89c6-9f134a5351e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b96105-3721-43e8-935e-aba65f418a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9ce1eb-625e-4c34-bfad-4d9af7bd9eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3d7937-5f84-48e5-b189-16148970f680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59a254d-9e56-47b2-97bc-163fc8e424e4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6328a1d-5c8f-426f-9b93-474a05cfedf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644337c5-cadd-459e-91b2-b23b41be8639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3c5c82-1728-4927-adab-ee612914ea10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c684f8-a30c-4330-b296-d85f19adbc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c2dbc7-c1f7-490c-bf50-ed53a02b7a3d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880c4498-b980-4f39-be89-ce34fbf34c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a1a53f-d2a5-455f-83bf-285bfeaf6bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d8a134-87e0-4424-a59f-8c01740f5e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2197cb4f-a8f1-4e95-a579-5e81cd0269ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6f7c4b-59e5-434b-9ea7-57d2c957c65e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5cd296-b3b8-4d45-a463-f2f5b2904830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8487db8-2eba-4d9d-ab20-f9dc8237dd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb4ec25-5aac-4436-8212-7a39de5a0640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0769cc9f-2bd0-4e8a-92d9-c476b7242701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca967ff-fa1c-497c-a606-f266389a0f21",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dca82d-60a0-4332-aa6e-e43f2312916d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd623c0-3a23-4a10-952b-534cc365cefb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcda998-5624-4e6a-a72c-8edc1c4fc39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20afbb5b-d12d-46c0-bd5a-acacf096dc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72b09e1-9ca4-498f-ae4e-1b1d14792f1b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338f2a85-4a4c-4251-9ede-a5b3b2e8d66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9fc3b9-30cc-4d73-8e67-a57db6dfd86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f14117-6185-4be1-a1aa-5d43d236d0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2ab830-e837-409c-a715-c4148d06d67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01e8feb-f499-4301-b47e-6d4f1755e257",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c173040-7c7c-4166-9873-20a47a0194a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a620f83f-5ffb-4e8e-bb1b-34bd97f8bc40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2861b18-4d2d-40cc-a861-dfa4321efb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46cd02b-ca7e-435e-bd35-3d1c69f1f986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed71a985-145c-4d09-81ef-620419a860b0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ed3952-fbf9-411f-ae19-2f0f5aa0ae55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098d1b79-f777-4184-8543-aaf258b4615c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeaa5ec-b1c7-4bb8-8784-39719b77e0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc823c0e-fd20-4337-9a32-ee47c9683bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d640d849-fb04-4fd6-abc5-95790877abc5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf2cd8a-6fd4-43e2-aa86-57eb57a3716c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8e2d4d-4055-4c94-aa94-58229b99ce55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd772e3-06dd-4c7c-8288-90539c388c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0490937-9120-43fc-8bbd-a4f6782ec5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3ebf7-f696-4ee7-b0c1-dbed3300aee8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c2b972-1430-42ab-9a14-1cb8a0988583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d74452-704d-415d-889a-68b0866c466a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8efe231-0d77-494d-b1f9-968537b2cf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd567bb4-36b8-489a-9335-978fdb534e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43621cb3-5e26-460b-93a8-bbaa53feb1b3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fe8ce9-8b65-4abe-ad86-2d7e7c5a3c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ed5df5-1c3c-4234-9571-1438e2b28cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149f2763-b242-4f43-929d-f9b8812c437f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf01b2d9-a148-4699-a962-7b2569492e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b2b892-2698-4d03-93ed-fc32d0458b89",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f872da6-b60f-487e-8b54-ba84f02d7880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9f3b48-930a-412c-b72d-e3f1d98b5bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f18d66-20cf-4d66-b4b7-72d8c66eb515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29d3dba-3fc6-42fe-a4fd-7ba3cd585d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd88b315-3ff7-46a8-af9d-631e3cb6f892",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5141b7ab-4f34-4773-95c5-b22b24a4ab89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b612c742-48f5-468b-8c1f-4cfbc121daeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "babf82da-fc6a-4c28-a61a-26262b669953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bbb9bd-6291-43a2-8c45-7bbf404e8897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3880a974-3938-47aa-a869-dd0fb5f88074",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e51feb-316e-4e2a-ba52-c000da3cd91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb70d9e-51cf-468a-9a20-552e74bbe9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462d8fc3-c27e-4958-b525-3605429c2c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a4559e-9017-407c-9c33-d1c3d3d2370c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8e56ca-275c-4061-8902-340757bd0cb8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc90394e-a6c4-407c-b429-8299faeb0008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70ac292-0dc8-406f-ab75-519d6277fc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccf2422-6008-4894-9314-9f1ba27e2f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ba9863-be07-43a9-932b-e0e83c51fb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71583f61-eec5-4fb0-86c9-76f30e391bd7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca44b40c-ab50-447c-95fc-99e8717aa288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5331627-710d-46e8-9ccc-6af9b44acafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38671e7c-fd7f-4cba-bfb0-c68e9d5cd0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4685c7-9f6f-4631-8a36-97ef7b177934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc62b92-3d28-4c76-aa27-ddebe3bf9951",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a35cd21-5598-40e6-866f-5bfd1a79d26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2eb92b2-1308-4a70-a903-bc330bdd4f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3432b476-50a3-4578-ade3-0e2dcfe44001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a61aeca-41d4-4935-a9b4-17ba52e970fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a567cd7e-3497-4826-a5ab-cdd83bb056b3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaed10f-bad8-44d2-94f4-8862b6f18148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf5fb9b-06ec-4e55-866e-397cf759dc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76b2cba-5f15-45c4-b482-6eed58fb15cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783e587b-39a2-46b6-9c04-869b9c6fd746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5830c5-eb7c-4f95-a7af-eb9ae8c7794d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e2431c-1a24-4d41-b480-2a1787de19a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e513a5b-56f9-45d0-88f5-c056506a7678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2356072f-24ce-4e84-9055-bea559993b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d2dae5-0415-4e8d-a162-801176a49e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02456433-21cd-4941-821a-20c04ec6e4ee",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48e35d4-326c-4a38-bd67-6c80ef8868d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9897784-d9de-49d8-b1be-759f6370d1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88aab655-c513-452b-874a-7087681e6977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7207a58e-bd2c-4114-968a-82e7fbe244a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d578cf1b-6b5f-4f0f-8aca-68da2f3476ba",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a0a885-bc6a-41a7-99b2-8bb5cf30357d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4501324-1617-4550-ac7e-0cfec3e2fc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696aa45e-7dad-463b-83bc-e593e50ae38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7b3a20-ddee-4031-b734-afe50b2e57b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec5ac1f-2104-4b0d-9ebf-2980fffdde9b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422b2fd1-7eb7-4cb5-96ee-92ec86b8012f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b030fb6-3dbe-40c5-971d-6eb4a62a6803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bc7ac6-036e-455b-8a39-9b67ff9f69a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e915f707-9c99-435d-93ad-7cde55e5133d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bff2ee3-b0a1-4d2f-83d2-320fe060ccd5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605750e1-5d7b-4834-918f-babd5b9f147d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b36d168-938c-4c05-b4f6-8ab497310ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c6b416-9e0e-4d27-8b31-ce7a6c259205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ba2c29-803c-48cc-a8ee-dcee6c195de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3e2a4d-e554-4680-b78b-03cbe648aa4c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7640e0f4-9efe-4999-9f08-7bd970f10d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c7d92d-af87-45ec-a2dc-298a49bc5a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f39c94-77f2-490b-9611-e6328d5d89ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8436dd-8c74-4579-91a4-8dbb6a7eb8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856919da-2b70-416b-892b-3ae7069fcb3f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb15ae9-6f92-44c3-b083-6fbcff266ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a296be35-b9a8-493d-8f0e-570297ebbc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbed057-69a7-4e44-8108-5471be43d137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664c10ea-86e9-48e6-8591-20036ccbdc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d27376-ab67-4143-9091-a696248a0e96",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4b89fe-fc08-46ad-b589-89425780a7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b71af6da-1ba6-4505-9970-897b438f2840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d092179-bc51-4839-920a-43fb34d68dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ca906e-996a-4b9f-acb8-f1a09b54575c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bb6c3e-101d-4f3d-81e3-9f937e0d55fe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743563e6-a682-4edb-ae61-62dd1fccff14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0847460-dc0f-4da6-ae52-5ca3689fa831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3680e53b-7df8-4190-ae5d-0cdd41483a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef07762-8d32-410a-8d66-146595eb2c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f751c19-ddbe-46d7-93df-495c0ec4a43f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c6ec38-16dd-4e63-8353-748b4cf43612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99603e7d-6ef7-4f45-81ac-548b1ff5f18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8173a65b-0904-4b2e-a0e8-70ee579ee142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201d5d59-2518-4a37-8e86-b1b258a1b6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bf4e88-8527-4b68-a2a7-e0e672256650",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cefb1c-8846-435e-8b30-c7d73b22d019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192c1b33-54a0-44aa-980e-34ae885ac6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a02616-3d18-42e2-8057-92688f958fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438afccc-2165-48e0-a801-08aaa39bc080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b44f52-b2b8-49ed-b3e8-644a23649e1d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe08246-8c05-458d-b09c-d93336a15a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c920cfaf-e93c-4ce3-a296-07ed15856eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4ee0b0-cc68-48d4-85aa-39c975209318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72793141-96de-4daf-8a56-f81f707f450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff7c42e-dd7d-4163-b397-a3a9424e516d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1e8568-2252-47e8-9932-44d913ef630f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5c018c-34cd-42d5-977f-ad8752f05a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd5537b-96e1-41a6-90fc-f5578abcb1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fd9aef-e7b6-4ec8-a9ba-36db10cf49b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd1da75-6369-47c7-9c2e-c8b55db20b4d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb593d2-1fad-4484-aef9-51ae67f7449b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d00bb2-b4e1-4d76-bcb8-40e54062a697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801ac8da-ab97-4e98-864a-b88a9e851e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5e1243-5127-4f30-bf4c-8b106e8c1527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb0050e-be39-4b24-b939-f4a0c6383bd1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a69001-0960-4eba-b76a-c4e7ae9d5587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a00e9c1-7d37-4ed3-8ab3-2651cdd1e3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb95f8c8-c833-4d53-97d6-fbcc7520b643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c4ff9d-7dad-4b27-bc96-bad736bcfc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feb8330-35b4-4428-bbb2-6a590ae8072e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afcbf72-4920-46b2-b0d9-20308bd7eacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6847cd8e-f197-4eaf-8f1a-6f6d345799fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638ca7ab-4e2c-4482-ad18-c63cfbc408db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc093b3-c5fd-4512-99b9-f70aeb7a878d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d42b2fc-e18e-413c-9089-310a34434b30",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd4c4e8-a6cf-4261-8bff-4de39e35a58d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed19e0e-542d-4459-af9b-269ae7cfb88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d747d0-ad77-4c4f-b63a-d1b28369561b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23918738-98ad-45e0-bcf2-7f4fd26a1009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0abab27-4aa7-4f76-96f8-07389ac0a6ea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f799917-3b22-4189-beb7-9e06838ff470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e0e63e-5337-4310-80d8-bbf8a26edecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afb9fb7-df57-4e74-b9e9-59d7bf0ee2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243dbabe-9fda-45c7-b903-c5cf2b9f360b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb0e490-e7e8-4950-9bf6-3d238cda1bb4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcbc9b7-57f7-47df-a3f4-cf71ab4edded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f2269af-56d1-407e-9ee8-a61cdb6455d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ca8898-9911-4d69-b330-e55f12b4170d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78269cf6-1989-488e-8245-bdffdb07b85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9673bce-216a-42ba-b1af-809ff74cb7b7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b38317-2799-4afc-a358-5102b59263b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd043b59-7346-4b13-97f1-3acd66bedd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd4820f-f932-48ec-aa5a-13c5c7a034aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c8b3cd-0e3b-40d7-98be-f79a3a547f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0538e0-a224-4786-8d94-206e35c32991",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74957fda-9ded-4f3f-9d87-9e7134d6c284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5dffe40-0642-4555-9e19-d17610fd0f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753d2657-73e3-4e22-81ca-282f2de521e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd1dedc-6339-4c77-9f02-2fe7a3509a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebec9d0-aeca-4ca5-ab26-c0ea550e70ea",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f025192-8fd9-4865-841d-50d5594e4565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63f387d-a632-4acf-b447-49bf427c5be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02439618-66be-4df0-ba11-7c5b4e46bd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65664731-0e4d-4542-adf0-4e27a4bbe23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8038c19d-e424-45c7-b917-9eef89280802",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ae6c7b-0c55-48f2-9901-fa788bb0ac4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5031188d-489c-4b18-b6ec-ab72de3e273d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2620a6b2-97b5-4818-85fc-238912f4742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ec8b55-539c-43c0-8691-2fd013329de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d20389-9cf0-4679-b11f-078028305795",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5df1e62-0c99-4d18-87b6-85db707b95d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c753d7-2317-4d6d-97bc-ed6c429c1359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed944dfb-f60b-4940-8b5d-da374473879c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a55375-776e-4f17-b097-28f299f0360a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78fea3e-8e4a-41a0-9c48-1b04e30e3038",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d890dcf-5f92-4137-adc8-4e43a58a4505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80582fcb-afb1-4729-99db-7f5b497558fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ec70b3-99dc-41f1-95c4-1eaf82aee4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9beb4d-5463-4aa8-8b89-8d045afef5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5c6489-c12c-4da0-a1a0-a15f9d709885",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3236431a-5604-4239-9a47-411d726bf707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633132fd-601d-47d1-bdcf-aef8b0c4be14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d065afa-3e2a-4264-b23d-83d1462ecabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab57865-c4fa-4fe0-b8b7-90b5f7f3db7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44f1424-72a0-4f35-8bbb-bbb5ab2d9ad1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430144af-23d6-4f92-80ce-ba95620ef822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9aa54d-5ac0-46a5-9990-bb933f45cfec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa900f46-9745-4252-9a18-abc7c19a9dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8a402f-f87c-4bb5-9806-75f00b95122f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b813d02b-c922-4af2-b849-66832e423af7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912393fc-f0bf-43c9-b480-6d6bc4718a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3841d54e-6196-4222-8f78-5e10ad20404a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e933d00-4a37-4f2e-8c51-76226152b6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebebc796-d4e9-4ebe-9313-0081905ab208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7062f96a-787c-4235-8a1c-e98342cc9c0a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d088fd8-18ad-4e89-b702-e9a04810c7bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027e98df-cb46-4d01-83fe-8e9eff81878a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8df4f5d-b4a3-44d4-8593-0e022cfd224d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c6d3da-7646-4578-84e8-d818a27c3840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332fed0b-2d7d-4359-937c-075d94690bbb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6e9221-4d2a-4046-8d7b-5105647671dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c641be2e-da5d-4d15-8ef2-7144f321cf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded600ed-b163-439a-a3f7-3e4f445d58c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3c186e-6ee5-4b22-beb5-075248c1f0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db02c418-641b-4dd3-80b7-2a0808ea8cca",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed93764-0a8f-49d6-81ca-e9f517c2d1fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2591678e-50c5-4222-a1b7-3a0e5ba4455f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bdeef4-c7a3-4bd3-a1a5-aab158407dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38edde21-a6b7-435d-a043-ad524ea61cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f491a8b-a0d2-4a50-933a-e5eac5109cdd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655b8d30-d58a-4ae4-ae2d-af680c20bca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07f2c2fd-5e96-47d3-b5bf-e8e5c4df212d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ee36df-f137-460b-a9ff-465f2f170833",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d0bf5c-d5e1-418f-b693-eacc2e5496f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e23142-d609-49bf-891e-f1c822cb6678",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646e6a42-ae76-4eee-985f-4ea291309c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab8ba66-01e0-4902-b9d5-a753ddf8e845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4ea9ea-f8e1-4709-b436-ad6063082ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d48b4d-78d4-476e-b667-5d616af04d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c6e769-f915-446b-91db-8c9fe6e99480",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c564d2-0e57-4cf9-aca2-d2a2ad317645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d6b81dc-5e10-420d-9501-039a6555ee57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a80ab5f-6cae-409c-b230-bbace146d074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19995bfb-de9e-43d7-bf47-ff6f2515c7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea81459-7e09-4e4f-97ce-243e9eca5cc0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b44134-3d3a-4b56-b764-123f31893659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1be8fae-f380-4236-a6e0-86dc972389f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ef3176-9089-4301-950d-f0e835d745e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056f573c-2216-49dd-bd81-07ca8b3631ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64936973-11ee-40c4-a08f-e69565fb65a7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69755dce-04b2-4495-9026-b79d59388dd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf46c22-5a84-474c-ae2a-612010f78b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb08ceb-0054-406b-b4df-263161f304a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe584367-8b5f-410c-a40b-dc208555cc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6bc32c-b860-4d9d-bcbf-bde7441e4624",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9dab3e-d2df-4c03-8a6a-adc6b24f7e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70308e5-3fa0-4e57-9998-3ae3e393c1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e54b874-7065-41da-ac4d-cba7c0388594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c708fe4e-9068-47f8-b0b5-501132911d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8626df08-7659-4b0d-bac9-ca93e1e1f82f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac3fdd4-48be-4cf8-abea-994d35696ca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016a2148-f1db-4093-a826-ebd4eeb6946a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4b95e9-c85d-4b43-a769-ece2481109be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7322477a-a9ee-4f70-b4dc-58349ff8ac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2149985e-9318-4742-bcb9-47cb6753de3f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca83bfd-f00d-48e1-b8eb-1d35e7aaf74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b16f777-708a-4256-8728-53cef638cb43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fa2363-61bc-4084-be6e-69773f1e02a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1eacf2-3f01-46c1-949a-33e6760c87a8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81ee23d6-8353-4538-ab35-a253a23e8d32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1839e136-a2e3-4fe5-8e3a-f9efb9f3380e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f92c8a5-e7e1-47bd-bf59-96ab0cb2151e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12f0756b-a2b4-464b-b644-e05370056f1b"
                    }
                  }
                ]
              },
              {
                "id": "93124e18-5265-44ca-830b-e5b68d93b21a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7631875f-d137-4997-afb5-64f47f6a1bc7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499def21-0c78-4dd6-b4da-6e803c3d7ca5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d1a09f90-3536-4874-9469-0ed78a9d5b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673a973d-82d4-4cc3-baec-5f27afea9178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dcffae4-5cd1-4fc4-ad15-a560742c240f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c72f888c-59ea-47d7-97dd-72ac969ce81a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0a90de1-81f0-45d0-b3b6-a5efc26f6e6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00ad1527-4120-46e0-8f00-d962d35fe343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "238e7798-7967-4190-9dbd-04d2fa2f2226"
                    }
                  }
                ]
              },
              {
                "id": "17459119-2213-46a5-9acd-6b422a5c1991",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "837d20d3-170e-43e9-b327-e22c22e2bd0c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c72f8f9-b00f-4778-a79f-07339fdc42d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "82febda6-2c3b-41c4-bb1d-831ee7f0850a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b3614f-f5ea-47d5-a393-4b4118cad2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d75e697-4fd4-41a7-9d21-300881356236"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7152a33-c194-4eea-a9d0-366cac112549",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9ecd6cc-de41-4df2-8d2a-b028503cd555",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eff65195-c6fc-4ffa-8b5d-d25342cfb28d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4bde2136-dad8-4c69-90ee-f97b3e873cbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a23df8c-4451-4ae0-bc12-df1f08acca62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02681606-b724-4261-9c7f-fbd9a3449c4d"
                    }
                  }
                ]
              },
              {
                "id": "67db3602-4f67-42af-9695-05996478c236",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a846727-5ce9-442c-b30c-bec9788fb1b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83a2b5ae-95ed-43b0-a471-d8a39d8e7110"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72edb61e-9c68-4995-a18f-d51c3c820c35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd5bd10e-64bc-4e32-9b9b-9ef278ae29b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce4828b5-8d05-4869-b05b-cac4d10b66b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c780dd1f-fbfb-4fe9-800f-11bfe41aa240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b8dcd14-5e54-4b1d-bc07-01eb3591a326",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ad88c61-2bcc-4e35-beab-b9c5393917ff"
            }
          }
        ]
      },
      {
        "id": "90de394f-8f7b-4daf-84d5-5782402bd93e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8e95813f-b07e-44c2-904a-00b907cbca18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33c2fd6c-83f0-4820-8323-197f08e9e2c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6a0330f-f507-43af-a34a-54731c2b015a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9447cdde-1340-4d86-b57f-348b0d37f635",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8160bade-47cd-4a6b-8d0a-ed416e078cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0816aa9-c56e-420e-b9ba-8187dfa49a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcd8b8c7-6fae-49bd-b485-522356930ec2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0110db72-04fe-45e8-8e21-c84b8ca92c61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c18d46a8-e21e-4a8f-b17e-e41a8112fa64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "316fd431-3fb7-4f19-890b-a009e34d9244",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f5e4fd4-1abc-42ea-8e5c-89f7a0501749"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b85f03f-3701-469b-851b-aa082648fa9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "57453e8c-1879-4a64-a1b9-f67e330f5cd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cd44500-6faf-4466-a5b6-8a2bcaed8b5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62d9bf75-6898-47fd-aebc-79a06f8d44cb"
            }
          }
        ]
      },
      {
        "id": "5cc1462e-25fc-4fe6-a7a3-e2c3846665cc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "38f748e5-82b1-459d-8aa1-c314dce9b335",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17061f71-9297-4570-8fea-0caed8fdc5ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcc7806a-a63e-4dcf-96ca-210ab94c5107",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88815e69-a4f4-4c38-bee7-3f5bdf9219e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db7fcca6-fe26-4574-b456-3d5b0598dac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1449c3c-4481-4be3-b232-d1d639c29f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1301cf9-365a-470a-8b43-60eb71380c4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b468af63-9f8c-4db2-8a81-11e552a85002",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6106c3d4-53b3-4ebc-82b8-3e7e54524ab1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9af4835-63d1-42da-b643-7492e9e6175a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26e43be2-57bc-4fe2-8ad7-ee8e5e622211"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5668ae6-82f6-4f9b-89dc-15f236b24212",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35494964-04b4-4527-8a12-9928313f01f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89827222-74f3-4992-9b0c-744991971d65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e7ba3d5-8de1-4050-bbd1-55f1484da500"
            }
          }
        ]
      },
      {
        "id": "8bad8ad2-4ece-4ab9-af48-9698681b93d9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "20a6e6d9-6adc-445c-97a5-e198e8f21aa9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e800428d-93a1-4b9d-8081-5629ebb69009",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0117b06d-88e0-464b-a89d-7cdb213fb291",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6f453c-41bd-4621-a732-2b08308a12b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a927f3d-76d5-49aa-baa7-bb55bee2643f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049e4101-541f-4822-be76-bd25a15ed685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b31b8f78-7a9d-4abd-bbb3-05ad7edea5ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22c8bdbc-2275-43ed-a0c6-f8ca775c6d88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5dc9dfa-15ec-442a-af1b-fdf9b400963c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d32b9f3-a220-49e7-a1f0-da0d99b7004e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a721c1-3df2-40bd-9db0-288d1b0ad167"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac5fa320-1f7d-4fa1-9a8a-b6d6ab6e91e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9390d0fb-9236-49ed-84d9-af7f88d1479d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3f5a929-e7fc-4759-97cb-2b74ecd1ddc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c37b3511-2f95-489c-a02f-88497f7e0d10"
            }
          }
        ]
      },
      {
        "id": "f20a32df-5268-425e-83b0-5892463e7223",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae4790dc-a2bb-48f6-a7b8-7e4d34666498",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31698ec1-63b4-4b90-be05-a7243ffc7388",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9ace0baf-a2a1-493b-a0e3-a264b48e58cb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c64f40c-fe37-4484-b84c-833a718849f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "180fe183-ea73-4a71-9945-4ffbe3b75bd5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 171.83802816901397,
      "responseMin": 14,
      "responseMax": 15664,
      "responseSd": 1071.1825348935167,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691973148374,
      "completed": 1691973208775
    },
    "executions": [
      {
        "id": "6a241916-efa7-4754-b869-642fc89ff72a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c8331a2b-6236-4460-9954-ee26ebf5ce2c",
          "httpRequestId": "9b53ffd5-5be3-4e28-8818-3071fd8849f8"
        },
        "item": {
          "id": "6a241916-efa7-4754-b869-642fc89ff72a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9c714d7a-6b36-48dd-b9a2-6d015128269b",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "c9dfc656-f110-42f7-a410-d92a21a0283e",
        "cursor": {
          "ref": "6098d36b-f250-4747-8829-3514edac109c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "367414da-3b3b-424e-b220-39a5c2c2bf93"
        },
        "item": {
          "id": "c9dfc656-f110-42f7-a410-d92a21a0283e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "156497aa-9f6d-4737-8c9a-d56495c72f93",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "1db89fa6-80d4-4794-8850-fbd08ce1984b",
        "cursor": {
          "ref": "1919b98f-7ccf-48b4-9fb1-bf80e88074b2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cf5bd32e-9ad6-4c8d-8f2d-d9fb1d753777"
        },
        "item": {
          "id": "1db89fa6-80d4-4794-8850-fbd08ce1984b",
          "name": "did_json"
        },
        "response": {
          "id": "4f50ddc9-0643-4b2b-ba23-3c047cec1e28",
          "status": "OK",
          "code": 200,
          "responseTime": 746,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106c5c7d-fe29-4b54-b54b-1534d0a7a7d3",
        "cursor": {
          "ref": "b3aaf148-f1ad-4c77-8b02-b1123d44c693",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b21e472f-132f-411f-8580-1d8cfa610ed9"
        },
        "item": {
          "id": "106c5c7d-fe29-4b54-b54b-1534d0a7a7d3",
          "name": "did:invalid"
        },
        "response": {
          "id": "98f96563-0b43-4d4f-af97-f4143c63ec1c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1374,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106c5c7d-fe29-4b54-b54b-1534d0a7a7d3",
        "cursor": {
          "ref": "b3aaf148-f1ad-4c77-8b02-b1123d44c693",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b21e472f-132f-411f-8580-1d8cfa610ed9"
        },
        "item": {
          "id": "106c5c7d-fe29-4b54-b54b-1534d0a7a7d3",
          "name": "did:invalid"
        },
        "response": {
          "id": "98f96563-0b43-4d4f-af97-f4143c63ec1c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1374,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2375a12-4554-4a36-a9fe-38a512f98ede",
        "cursor": {
          "ref": "14661b8c-0481-46be-be4b-26a2b9b7061b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d9d51114-ffd1-4a50-a4c5-84695310eddb"
        },
        "item": {
          "id": "a2375a12-4554-4a36-a9fe-38a512f98ede",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "45396744-0660-4cc2-8367-d161eadd0961",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a02233a-e690-4f22-a33c-fd4791bf1288",
        "cursor": {
          "ref": "f8dbae82-d481-4596-962e-fbbc7b15b69a",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "96afb3be-6859-4ed0-8a04-75e608b2b808"
        },
        "item": {
          "id": "1a02233a-e690-4f22-a33c-fd4791bf1288",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "822f6ef7-5c61-46f3-8573-276369371b4c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09503ff-dad7-4e8a-830a-bbd553fe279b",
        "cursor": {
          "ref": "3580567e-6d74-4a93-b6ad-97ded1cccd6e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4d49e907-25b4-4eb0-8f56-47ecf90f6810"
        },
        "item": {
          "id": "b09503ff-dad7-4e8a-830a-bbd553fe279b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1ea30d10-f223-4f09-aac6-59a7a6cc29a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5055324f-ee04-4020-bb4b-975b83825534",
        "cursor": {
          "ref": "5b2637e9-07f8-4115-bf1c-a328b3f02a38",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cb58b3fc-b6a9-45fc-a11c-d9363aeedc55"
        },
        "item": {
          "id": "5055324f-ee04-4020-bb4b-975b83825534",
          "name": "identifiers"
        },
        "response": {
          "id": "da4236a0-30e0-4546-adbb-5be466f97857",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7878056-ac20-4cc2-8657-3c35a4c0aeb3",
        "cursor": {
          "ref": "dae6912a-c46a-437f-96e7-cdeda512f519",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "42cbd70f-2ffb-4041-a256-525e76775a11"
        },
        "item": {
          "id": "f7878056-ac20-4cc2-8657-3c35a4c0aeb3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "23406c47-e996-45ca-95ab-a4b3662db7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb180e88-5828-4c72-adb0-e15242a17efd",
        "cursor": {
          "ref": "0ad1f4be-35fd-44e9-978e-3e9a309e0f93",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "410ec555-cfc1-4f6c-bd2c-21cce012c9fd"
        },
        "item": {
          "id": "fb180e88-5828-4c72-adb0-e15242a17efd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fef16461-b1df-4ac7-878f-61870c8a35db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66d49a9-1288-4449-8a7d-755997d02425",
        "cursor": {
          "ref": "9a8386ba-f2db-47ff-a557-d420d5a48aa5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "406dfc56-cd88-41a2-8c8d-c04545eaa652"
        },
        "item": {
          "id": "f66d49a9-1288-4449-8a7d-755997d02425",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5a9ab724-458a-4c88-b303-02008a561887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b0a1f9-1138-4be9-bf12-872c9c79d840",
        "cursor": {
          "ref": "961a7386-0779-406f-a34c-4f5aaae65215",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3ab3bc0f-a177-4691-b67f-a7bf02dc3cbc"
        },
        "item": {
          "id": "f0b0a1f9-1138-4be9-bf12-872c9c79d840",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1529f7c0-4d40-46f3-b05f-a8e6a7acd6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4484681-d851-4389-a535-109bcab82854",
        "cursor": {
          "ref": "86359ab6-3116-4c00-92df-d8d4d84b9799",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "55eba3dd-5ec4-4aad-a968-e23675f66f44"
        },
        "item": {
          "id": "a4484681-d851-4389-a535-109bcab82854",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bae382ed-a790-479b-9cf1-aad8ab7844c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c4e263-320e-4d30-b7d8-8cc1741d65f4",
        "cursor": {
          "ref": "35f80379-4746-4414-89ee-cc793926adf6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b4b12e95-9cf7-487f-b54d-7cc7ca52dad6"
        },
        "item": {
          "id": "04c4e263-320e-4d30-b7d8-8cc1741d65f4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "311504c6-2f4a-41c8-9a2e-29eac8d038f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5bb41e-2318-4412-aa0c-f7c250b1434b",
        "cursor": {
          "ref": "3311fcf3-2521-4018-b25a-62dd6fbf22b6",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6c65733f-fff7-4c2f-bd33-7a65affbca42"
        },
        "item": {
          "id": "3c5bb41e-2318-4412-aa0c-f7c250b1434b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e6eea0ca-f1ae-4601-9879-4fab96dee82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38202310-d0bc-44f5-86da-a12775bdbb5e",
        "cursor": {
          "ref": "9c9a26a9-802d-47a6-b1f2-353fc8627994",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "192d9249-a4f5-4f26-bb22-6de33aa35f2c"
        },
        "item": {
          "id": "38202310-d0bc-44f5-86da-a12775bdbb5e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b16fbb13-c1d4-4dd0-87cc-b995acdd4123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deff4b8-a661-4d7b-b9ea-cf5b3761cadb",
        "cursor": {
          "ref": "deff197d-1685-4628-bf0c-3fb63aeac82b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "268ff225-daed-4146-8fca-86e9fa35766a"
        },
        "item": {
          "id": "2deff4b8-a661-4d7b-b9ea-cf5b3761cadb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "59e831fa-89c0-4300-a305-cfae58392b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d6fac-eac1-4be0-b0f7-604a8c1d8832",
        "cursor": {
          "ref": "95d9232b-7c13-44be-bdd1-56bb4aee1b4a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fde51918-fcf4-4adb-bb47-583c8689beaf"
        },
        "item": {
          "id": "eb3d6fac-eac1-4be0-b0f7-604a8c1d8832",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "03888882-c28a-4570-b6f9-cda966f17a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ffc48d-8e59-425a-a2d6-94b2bb0fb023",
        "cursor": {
          "ref": "96afa97d-c3b4-47df-a5ad-474e1cc62257",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "92a2373c-278f-4f1d-964d-21baee62b237"
        },
        "item": {
          "id": "c1ffc48d-8e59-425a-a2d6-94b2bb0fb023",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8cedb6d8-da27-43a2-9879-46225242f6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97be0dab-9ee9-4aa6-8201-f12bd7ddbc32",
        "cursor": {
          "ref": "03c7520d-3f95-442c-a7a7-e45b26286902",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b8bd5869-1c03-4576-a82e-4141105721b1"
        },
        "item": {
          "id": "97be0dab-9ee9-4aa6-8201-f12bd7ddbc32",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "927c3b61-df79-4967-bbb0-123d42e2c33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d0a350-8973-4772-b1d0-220a887444c4",
        "cursor": {
          "ref": "fc089666-a4cb-469b-a7d3-8984751985e1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "341995a7-fddd-4b33-8208-3ac2f889bf1f"
        },
        "item": {
          "id": "22d0a350-8973-4772-b1d0-220a887444c4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f0257623-f032-488b-94a8-7c364e29efbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acc8845-d377-454e-a38d-219d6a570848",
        "cursor": {
          "ref": "95129902-f183-4d22-a387-6cee79a8be22",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "83994143-7d24-4375-bb7f-1ab91ea86f77"
        },
        "item": {
          "id": "1acc8845-d377-454e-a38d-219d6a570848",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fdaa71bf-b94a-4b24-8848-12fd38cb0511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9696f52-cc8e-45a0-b012-15ef9c916b8d",
        "cursor": {
          "ref": "59d63832-f959-4730-b91e-f2e74551ba2b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1ff0c141-664e-4466-ac50-446d6f41debb"
        },
        "item": {
          "id": "f9696f52-cc8e-45a0-b012-15ef9c916b8d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "df9b95dc-2a20-4c12-83e6-069cab6449d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e955f7e-0362-4396-9251-af15dccd468c",
        "cursor": {
          "ref": "69706fae-7551-4467-812b-ca3c8a5573c0",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6bb41530-d1f9-41f1-92ca-bfa787d8c7e6"
        },
        "item": {
          "id": "7e955f7e-0362-4396-9251-af15dccd468c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "792be7ca-83d0-481e-8a47-12d16d3bee6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35df52c3-0806-4b9f-854d-7809f5030b42",
        "cursor": {
          "ref": "509e0141-f0d5-46e8-86cc-bd8cc2d9491b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ae9d76c0-0462-4881-b8e9-75cc830e3a85"
        },
        "item": {
          "id": "35df52c3-0806-4b9f-854d-7809f5030b42",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0919a031-2bcc-480a-9503-e388e1df8bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4276c9-9d76-407f-abbc-ec2c91700ca4",
        "cursor": {
          "ref": "fa168d09-5027-4f44-9739-0c3d60c96f47",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1d8c72cb-9c64-4374-a138-d68a4daffaf2"
        },
        "item": {
          "id": "2e4276c9-9d76-407f-abbc-ec2c91700ca4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7d7cba8b-bbe0-492b-b0c9-b46e94c8f894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d8649f-a300-4a15-8c8c-2885f86eda50",
        "cursor": {
          "ref": "3ecb8508-78f8-4578-9d90-fb91fa2bb98f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "83786797-3dd0-47ef-aad9-fad0d15ef932"
        },
        "item": {
          "id": "89d8649f-a300-4a15-8c8c-2885f86eda50",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "36ca5a28-9fa1-4cd7-b4bc-69749a133e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fbafd1-38ce-4bb3-ad2c-a5a9aed3a6df",
        "cursor": {
          "ref": "0af9f9d8-ffc5-4fc8-8c36-47f715e15923",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "68212950-c809-44b0-b881-8cad6bdc12b9"
        },
        "item": {
          "id": "38fbafd1-38ce-4bb3-ad2c-a5a9aed3a6df",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c81957e4-d52d-415e-b7c4-fe0af39d112b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962e8a15-c682-401d-a64d-57c0d21da741",
        "cursor": {
          "ref": "f652361b-b56e-4093-835d-6afd61d7dcb3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "589d1753-c7e8-47ad-b3e4-a0a1adc03bfe"
        },
        "item": {
          "id": "962e8a15-c682-401d-a64d-57c0d21da741",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5f8376a6-eb05-418c-b5a6-70c370902e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e7dd27-8e44-434a-bf40-69ea237a7840",
        "cursor": {
          "ref": "9d672f4b-3b17-4d06-a070-f3f82d6a8ca9",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ff822526-9443-4906-b93d-1e5f3e0ffebd"
        },
        "item": {
          "id": "40e7dd27-8e44-434a-bf40-69ea237a7840",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "79c0ae32-ad33-4821-a9fb-1a88ebea45de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df78bd3a-84db-407b-a1c6-43c7bae4cd38",
        "cursor": {
          "ref": "148b5600-a3e8-4926-abba-b899a35b42a1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39f279a8-847b-4502-835f-c656db2bd4d0"
        },
        "item": {
          "id": "df78bd3a-84db-407b-a1c6-43c7bae4cd38",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "27fe6944-fb90-4f7e-a011-a89c41e2128c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791e9470-c693-4ad5-a5dd-92700e508221",
        "cursor": {
          "ref": "354976bc-e66d-4616-beb0-247aee4b20ec",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "569a539a-cceb-4375-a795-c582b7b0d13f"
        },
        "item": {
          "id": "791e9470-c693-4ad5-a5dd-92700e508221",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5fd80ab1-633e-4d26-a9d9-e5bb1136047c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ab5e26-48c8-4ecd-850b-a60a2e1fef6d",
        "cursor": {
          "ref": "0cfb7fd0-e817-47af-8b96-5463e077b518",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f94e1094-a383-4fe8-a96f-db2168026ad7"
        },
        "item": {
          "id": "90ab5e26-48c8-4ecd-850b-a60a2e1fef6d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "baab6c8c-8519-47aa-af62-9cf7f9625fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cfd6a7-a3b3-40a8-8258-502bce44ec87",
        "cursor": {
          "ref": "717f456f-349f-4b37-a442-093b6ce49ed5",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b83f60c8-88a2-4cb2-90fc-4cdfe8d6b64a"
        },
        "item": {
          "id": "75cfd6a7-a3b3-40a8-8258-502bce44ec87",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "32b372f2-ceba-48e8-aab7-f11455c22f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c18659-a4b7-4a36-a771-aa6c7fcb7d8a",
        "cursor": {
          "ref": "8dec0d42-3e52-48fe-9b42-1e291ba3cb60",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3a807cb5-f65c-40fe-bb62-b7b76a2df75e"
        },
        "item": {
          "id": "98c18659-a4b7-4a36-a771-aa6c7fcb7d8a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d632e006-e22c-4e37-b6e4-fbad37bf53de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afdd139-20c9-424e-94eb-93df6426be59",
        "cursor": {
          "ref": "204ef752-f6e9-4f12-ad60-5f43d7aa4ad2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2d847fdc-35a7-4a0b-b685-c8e9681bfedd"
        },
        "item": {
          "id": "2afdd139-20c9-424e-94eb-93df6426be59",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a7fd4ba2-7253-407a-b372-e5c42e334284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a34ea09-f798-4c8a-a86c-8e5f93e3db03",
        "cursor": {
          "ref": "00a2e951-589d-452b-90e6-a61760887761",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "67a3f251-c28d-4a27-8e46-bb01817ff037"
        },
        "item": {
          "id": "8a34ea09-f798-4c8a-a86c-8e5f93e3db03",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aea67f49-5b47-4f89-a230-998406cebd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d4ddbd-872a-4a84-b84f-bae552b0e729",
        "cursor": {
          "ref": "2d96a7a9-5909-4e74-ba5f-a890ff0da03f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "66253072-1242-40be-a522-62cb6d56e306"
        },
        "item": {
          "id": "54d4ddbd-872a-4a84-b84f-bae552b0e729",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7dd09b5d-660f-4966-a2e1-260d392a66d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db50aab9-8747-43e2-92aa-5604e5ee23a0",
        "cursor": {
          "ref": "25af3cfa-429b-4d55-8ec1-b88ab4d76e57",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4fdabd42-7aa4-4dd5-966f-2edec3d05ce0"
        },
        "item": {
          "id": "db50aab9-8747-43e2-92aa-5604e5ee23a0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8b4d3644-4230-4751-962c-f357cb262070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbdb55a-79be-490c-99d1-406a3dd60d47",
        "cursor": {
          "ref": "0924a2e9-128c-4259-99bf-387b29cd289f",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "73cc8584-c7b9-42c9-8d38-75f3a6f98c8d"
        },
        "item": {
          "id": "4dbdb55a-79be-490c-99d1-406a3dd60d47",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "683b13a2-486b-4f57-9e99-af29c7851e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825f9412-9a72-404d-8348-0443e0513d76",
        "cursor": {
          "ref": "ec073dbe-ad72-4440-93e8-56f3735c0c1b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ee29252d-8be2-437c-8759-6863848847a8"
        },
        "item": {
          "id": "825f9412-9a72-404d-8348-0443e0513d76",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "563843db-b1fb-433d-a84e-35358bc5847f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0a17ad-30aa-45a3-80b5-f68838677ed5",
        "cursor": {
          "ref": "d0e4d675-3a92-421b-b3fd-fbfd95cb2978",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2e9eaf0e-65ff-4484-b929-d4f5955ec000"
        },
        "item": {
          "id": "6c0a17ad-30aa-45a3-80b5-f68838677ed5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0ce02786-c838-4e10-9b8b-44501454ae38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cb3271-c97b-4962-abd0-6a1f199d4715",
        "cursor": {
          "ref": "bcec77eb-b962-47d6-8d21-9986be853d59",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c5b9d619-f5d2-4f53-9c7a-d4777bec829c"
        },
        "item": {
          "id": "a0cb3271-c97b-4962-abd0-6a1f199d4715",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "05cf6960-9536-47af-838b-2a9fac9ba018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb2840e-0543-44f9-b064-be3bc0c79eeb",
        "cursor": {
          "ref": "fca5487c-8f0f-4a37-bc99-5fd865209b7e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6420c84e-c188-48a2-beec-775a0b3664e1"
        },
        "item": {
          "id": "bdb2840e-0543-44f9-b064-be3bc0c79eeb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "268edbce-2d09-4f58-a82a-68ddefe905cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d78816-b0df-4858-8478-28f4ace1ebad",
        "cursor": {
          "ref": "afb99b57-0bf5-416b-b953-eadb926d2cd9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "12cf0d18-84ab-49c3-b8b7-f100c8cac18d"
        },
        "item": {
          "id": "46d78816-b0df-4858-8478-28f4ace1ebad",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0367bb57-c478-4996-9ee4-9d385b822bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9263238-895c-4d04-a0f7-c83bd1203f87",
        "cursor": {
          "ref": "4f3d231a-d034-445a-b67a-d9a52e161770",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "30c09cfe-4e19-4929-a33a-87c37dfeebe9"
        },
        "item": {
          "id": "a9263238-895c-4d04-a0f7-c83bd1203f87",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "48fff4df-3841-4fd6-b70d-ea8c3747db0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdec8ea4-19ae-44d3-b77d-e2369d8d949f",
        "cursor": {
          "ref": "52c827ac-e5ad-4731-a990-1c6551a36d9b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ae821719-91f3-4076-8dee-2dc62d536fb4"
        },
        "item": {
          "id": "fdec8ea4-19ae-44d3-b77d-e2369d8d949f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8b72bfb6-acf8-4b5d-980d-492ed5818285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce03094d-de22-465c-a348-d3d58519101d",
        "cursor": {
          "ref": "1918f679-a011-4572-b267-4370383d7ce0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fafc2ec6-4041-40af-afbc-603164163d5c"
        },
        "item": {
          "id": "ce03094d-de22-465c-a348-d3d58519101d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fb7dfd83-bbf4-4995-95fc-f7710d43820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3fd9c1-3e0e-46c4-8264-101cc5ffcd3b",
        "cursor": {
          "ref": "1971ad0b-bd02-43ef-b0a1-543adebeb1f8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "20c1b90a-f900-4182-b2a3-fcb37e4c0833"
        },
        "item": {
          "id": "ae3fd9c1-3e0e-46c4-8264-101cc5ffcd3b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b777a298-d657-4180-9175-21cbf7c33a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcb58ba-a06a-4fdc-94af-f0519254290b",
        "cursor": {
          "ref": "fa9a0302-5227-4621-9f87-02f3a3aadf27",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8b5e7fd9-aa02-49f0-afb0-965a2e1b904a"
        },
        "item": {
          "id": "0bcb58ba-a06a-4fdc-94af-f0519254290b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "33c5d1eb-84ac-425e-80cc-0e919c4b32b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900251dd-6688-4417-b93e-d8a45ea9c81f",
        "cursor": {
          "ref": "124f1e43-5cfe-4e86-9fbd-2feb7f46e6d4",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "44ccf200-aeeb-4129-9d85-23993bf28180"
        },
        "item": {
          "id": "900251dd-6688-4417-b93e-d8a45ea9c81f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3a8710ad-4f0d-4f11-9ff6-a51c1e0590e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5096e2-958b-46c2-bb81-eadc797579f1",
        "cursor": {
          "ref": "fdab37a5-b2d4-4fe9-807e-36cf8aec7de8",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f3e0849f-10e5-4b59-99fa-9b8100efe71f"
        },
        "item": {
          "id": "9a5096e2-958b-46c2-bb81-eadc797579f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a602e47e-076d-4d28-ad7d-699370930287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3d1910-4b47-491b-92aa-a9aa227067a9",
        "cursor": {
          "ref": "9799bfa3-29f9-4e63-8ae0-6b527d611509",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4ef76736-bfa7-4aec-bf8b-4d6955f80b09"
        },
        "item": {
          "id": "4d3d1910-4b47-491b-92aa-a9aa227067a9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dc9f8562-ffaf-4e08-8a52-3a46fc49e654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8ba651-b6c9-4ff1-86b4-a6989aa86244",
        "cursor": {
          "ref": "8b673cfb-476b-40ec-89e3-c9ba21cdb18a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c18e91ff-5429-4a2c-ad2b-07b059dcf9ac"
        },
        "item": {
          "id": "fd8ba651-b6c9-4ff1-86b4-a6989aa86244",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "21203278-96ac-497e-8009-2b401f129f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e63727c-8cbc-4471-8a48-f18085fdf7f8",
        "cursor": {
          "ref": "048e958f-1ae3-45e7-95c1-9438d5dd1dbc",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4a62bc38-b085-4e06-a4d4-a6138a27cdc9"
        },
        "item": {
          "id": "5e63727c-8cbc-4471-8a48-f18085fdf7f8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1f9332cd-22a1-4cc7-aae9-3bf6c3e2fbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae16b16-f4c9-4f74-bc41-d48a97efda3c",
        "cursor": {
          "ref": "026778ed-f0bb-493e-9c9a-4cf6d6fc00bb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "269850ff-faaa-486d-a03e-1f84438ae4f8"
        },
        "item": {
          "id": "9ae16b16-f4c9-4f74-bc41-d48a97efda3c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4a1d7d5f-36c6-4c5b-9d6e-8ed18b36ddf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49bf46d-4ead-4e40-96f2-d1a6c872c885",
        "cursor": {
          "ref": "5e24436e-135f-48fb-be75-90a69b7efa7c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eb92f916-7330-432b-a074-e18f550b6904"
        },
        "item": {
          "id": "c49bf46d-4ead-4e40-96f2-d1a6c872c885",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "47d8112f-4246-4c23-aa16-364809b6e599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8968b6fa-f94c-4268-bc82-358c23398660",
        "cursor": {
          "ref": "ddcafc37-064f-4108-98d1-f874cf740a88",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "725a4f2b-3b51-4cdf-8611-0af85af8ce58"
        },
        "item": {
          "id": "8968b6fa-f94c-4268-bc82-358c23398660",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e28a74cb-e504-494b-bc15-6fce6f1b3f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b66dc0a-1654-4370-b25a-c8a23117a08f",
        "cursor": {
          "ref": "76ba2f84-5860-4ab9-8af1-3f58ff642814",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a47c77d2-dfae-4ffd-ab22-1675a1201bbf"
        },
        "item": {
          "id": "2b66dc0a-1654-4370-b25a-c8a23117a08f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "73e1d607-eab7-48fa-93e5-bd43dbb9685d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8182bae-5abc-4b13-b1a4-cbca593a6d96",
        "cursor": {
          "ref": "6da85c4e-982d-4534-ba84-8c51956f0cce",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "06b5b180-c0c9-4269-9a04-35343e9f6259"
        },
        "item": {
          "id": "d8182bae-5abc-4b13-b1a4-cbca593a6d96",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "480251e3-4c02-4a5e-970f-d50ddc748977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028ccdce-e290-4ac0-a9bb-379d55cbe331",
        "cursor": {
          "ref": "bc4cb2a7-d186-4e08-8d71-25cf48138449",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3fe6ed83-6431-48f3-93f7-eb7bbfe32c0a"
        },
        "item": {
          "id": "028ccdce-e290-4ac0-a9bb-379d55cbe331",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "87694b1f-9e62-42cd-9816-583d62d9f972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1a3fc0-c9e7-4123-a321-f92af61abc1e",
        "cursor": {
          "ref": "95130e46-4c0b-4c4f-aa62-a742835e77c8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "218893ca-6013-41a0-bf19-729b66b37ace"
        },
        "item": {
          "id": "5e1a3fc0-c9e7-4123-a321-f92af61abc1e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "59845e3c-3541-45f3-ad40-a0684930c830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38da93e-8306-4408-afba-fd14d1dd24df",
        "cursor": {
          "ref": "a0ec056b-2c9f-4bcd-908e-866daeb8abc5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c6231d01-14ad-4422-b0fc-d2e824481f93"
        },
        "item": {
          "id": "c38da93e-8306-4408-afba-fd14d1dd24df",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1ce3d79f-eb26-43b2-bb92-64166e862184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66995c5-abb5-4eac-8b06-7d9b384c1eb3",
        "cursor": {
          "ref": "8a43c742-1b0d-4463-a2cb-98665c21c26d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ea826a71-bf47-4040-a30e-a0983b839e7d"
        },
        "item": {
          "id": "f66995c5-abb5-4eac-8b06-7d9b384c1eb3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0a6d2d11-375d-4569-b5c1-b27959c04345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51085f98-93fd-48b1-a02d-ec06dd91e0e5",
        "cursor": {
          "ref": "0897e574-53fc-400c-a7e0-5dc7d73b02c5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e04250b0-9fc8-45e9-9cd0-80a4bf90e4e1"
        },
        "item": {
          "id": "51085f98-93fd-48b1-a02d-ec06dd91e0e5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "baa605dc-ab82-43b2-bc71-473037131392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b4e63e-c8d6-42a1-a0ac-23db26a230a4",
        "cursor": {
          "ref": "b87d05e7-6f38-4500-ad72-f6849c799975",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3226f305-f226-423e-b922-67e382946a37"
        },
        "item": {
          "id": "c0b4e63e-c8d6-42a1-a0ac-23db26a230a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "91a7382e-5933-4100-bf4d-4aed8df105e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8299027-d334-417a-a37e-350aca529191",
        "cursor": {
          "ref": "d999e536-b859-4041-9968-05a831287117",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5c12fa8d-a4a5-4510-a9ca-54b3f348ad3b"
        },
        "item": {
          "id": "f8299027-d334-417a-a37e-350aca529191",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f23c9178-d72c-4da1-85ed-d0a8a83b2c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98208432-5fed-472d-a172-0bf5504f2d81",
        "cursor": {
          "ref": "c24750c2-493a-48cc-89b7-f6ea1b634a6c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "695c732f-a826-4e68-882d-178d19d446bf"
        },
        "item": {
          "id": "98208432-5fed-472d-a172-0bf5504f2d81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "92cd4807-6cd4-42a0-b17e-feb50aaa2c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69dd832-931b-4070-a49b-69459d3e65c1",
        "cursor": {
          "ref": "a441f93a-8cf7-4cd1-892b-2aefbd68bf4d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ad309d74-5fd5-4b74-96b7-59bd68a0b095"
        },
        "item": {
          "id": "f69dd832-931b-4070-a49b-69459d3e65c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "72b8ef40-04fa-4f59-9988-f8f15b145c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c66aeb8-9960-4a5b-973a-8fbc7e075356",
        "cursor": {
          "ref": "32536e87-eabe-4c50-9b1e-eac9470418e8",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2fbefa7a-ac5e-4926-a236-33ec813eae4f"
        },
        "item": {
          "id": "8c66aeb8-9960-4a5b-973a-8fbc7e075356",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0db10ad7-6725-4989-a26a-a450e01cda44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c4d49d-43a3-4940-83e2-2bc42e8e29b2",
        "cursor": {
          "ref": "5df78a01-bfb1-49cc-a1f0-93b76dcf87ff",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c10c1936-a8ed-4ab5-bb77-2ad75a8096c0"
        },
        "item": {
          "id": "18c4d49d-43a3-4940-83e2-2bc42e8e29b2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "357a95e4-bffc-4c92-9531-71057c1c0232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aae1092-f8bf-4822-bbce-ce8700a0c600",
        "cursor": {
          "ref": "068463cf-fc4e-415b-959b-d5d5e5e75cea",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "eaf72df9-b722-4a7a-af11-6a68de129604"
        },
        "item": {
          "id": "8aae1092-f8bf-4822-bbce-ce8700a0c600",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1ffc778a-bd88-46c0-b18a-a04971766bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3247da5f-0244-4d37-8f6f-41277664a0b2",
        "cursor": {
          "ref": "672c37a3-89d1-4b24-a2a0-5b2636a86a9d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "00bde4db-6a6d-4b0b-ab8a-95f4b2b6d1ed"
        },
        "item": {
          "id": "3247da5f-0244-4d37-8f6f-41277664a0b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "414d4e92-55f3-47ee-91a3-9f56e6561689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc08892d-11f4-4740-a53c-e36491444faa",
        "cursor": {
          "ref": "8153a834-b579-449c-b793-7553944e364a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f941d9c2-63e1-46eb-bfb1-a3af58f48977"
        },
        "item": {
          "id": "dc08892d-11f4-4740-a53c-e36491444faa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ad9f36ab-d747-4fdb-b9a1-b3988252be54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683d2a3d-31ca-4b63-9b41-6380225aa1f4",
        "cursor": {
          "ref": "0067e01c-0b6e-4735-8f7c-c89f26c19ff7",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "690031b1-1037-499c-af9f-66c4d44ba008"
        },
        "item": {
          "id": "683d2a3d-31ca-4b63-9b41-6380225aa1f4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "75ce46dd-3365-46f0-a0df-b5b8dadf784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da998770-b5c1-48b1-9d9e-22143d944062",
        "cursor": {
          "ref": "bf69d6af-d854-4bba-8885-a3e00f8d7b16",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9f4c8fba-0501-4845-96c4-3a1f471c81d9"
        },
        "item": {
          "id": "da998770-b5c1-48b1-9d9e-22143d944062",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d4a5c979-0e97-41c6-bfb8-76c9f0384d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aa7a95-079e-49f4-9460-d3e66068bf85",
        "cursor": {
          "ref": "628e20ab-94d8-4bad-9134-942090d540d8",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a1d277e2-3f8b-45bc-b502-0e5311b65a20"
        },
        "item": {
          "id": "b6aa7a95-079e-49f4-9460-d3e66068bf85",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d48dafb9-f254-4fba-b591-bda76f27b04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69a91d6-d29e-4598-ae22-b6e7920c1fde",
        "cursor": {
          "ref": "f1cfe14c-cd7a-456d-93c6-2251d7e4e966",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "731e634c-9940-4c84-9f58-7b163a28e872"
        },
        "item": {
          "id": "f69a91d6-d29e-4598-ae22-b6e7920c1fde",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a27737a5-f16e-452d-bf29-0d4fdff6dc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e171c8c1-b13c-4d8f-8c6d-41f4993d46b1",
        "cursor": {
          "ref": "26c8b85c-5d34-4b53-a19c-07e320845238",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "10642cb1-7399-4d67-a254-8333c564ed16"
        },
        "item": {
          "id": "e171c8c1-b13c-4d8f-8c6d-41f4993d46b1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "884f6477-4d60-48fc-9750-e678a6c0a5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ea09e3-5988-4bfa-8e06-e1eaae110716",
        "cursor": {
          "ref": "aad16f0f-6386-4621-88d0-ac1f0623c401",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6bf3b0ce-36e4-4fe7-b0c4-4a079ce0f6c0"
        },
        "item": {
          "id": "c9ea09e3-5988-4bfa-8e06-e1eaae110716",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0f9ee938-6d68-46b8-b60f-fff74194a174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6849a6-f4d1-4036-8926-da945c4dbfa0",
        "cursor": {
          "ref": "5ad39e32-e7c3-416c-ac8f-4a0661ebd954",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0fd4bf23-84e3-4ffd-8b48-2fc4a435dd2b"
        },
        "item": {
          "id": "5a6849a6-f4d1-4036-8926-da945c4dbfa0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5d1e04b5-3045-4d06-8269-6b82d9b6ebfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558bd66f-8b05-4587-abde-9cdf807e8580",
        "cursor": {
          "ref": "7bdfb97b-3e07-4a3a-8bb1-1232a12b584a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "901c2851-f028-4938-be7a-d60567d44669"
        },
        "item": {
          "id": "558bd66f-8b05-4587-abde-9cdf807e8580",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e40db7ce-9e8a-4dbe-9db9-3c12da82ac3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6d98a8-e7d8-489d-8b6d-4c189ccb3a86",
        "cursor": {
          "ref": "2f55a091-69a7-4abb-9b68-a57971b7264d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6db5af68-c5e0-4d89-9837-e39b29bea270"
        },
        "item": {
          "id": "0b6d98a8-e7d8-489d-8b6d-4c189ccb3a86",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fa550631-a8ba-4d01-9256-244e9f15f5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786b118f-cb5a-4399-9db7-87c3c82d8466",
        "cursor": {
          "ref": "1922dcdd-d0a5-4e8c-bad5-d368a4069008",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9dface66-ffe4-46ad-b005-4d371bf2d258"
        },
        "item": {
          "id": "786b118f-cb5a-4399-9db7-87c3c82d8466",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c203cf52-db1c-4b9a-9e6d-60c1013967fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959087b0-82b2-4591-bac8-aa5dd9afab9d",
        "cursor": {
          "ref": "8b746c12-04db-457f-9c12-7da0f43add80",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "903e7922-f2df-4c29-b671-cbf9b33accb1"
        },
        "item": {
          "id": "959087b0-82b2-4591-bac8-aa5dd9afab9d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "598757e1-23a7-4678-bbad-312d6f7e701b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4059d068-2aef-4779-9f0a-eec7f9dcf503",
        "cursor": {
          "ref": "03eb0ab5-1d4a-4ebc-8e13-fbba874e4557",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2d2ce785-9d9a-4471-9c3e-08a7fbf9601a"
        },
        "item": {
          "id": "4059d068-2aef-4779-9f0a-eec7f9dcf503",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cc370eed-9bd4-44ee-a031-7c3c52930036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd97f5e6-35df-4280-bac6-bf00f882c3a9",
        "cursor": {
          "ref": "b91b0320-85a2-4d66-99eb-246419317360",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "903910fc-8b39-4a11-8483-7745578b70c4"
        },
        "item": {
          "id": "bd97f5e6-35df-4280-bac6-bf00f882c3a9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "56a71df7-91b2-49b3-9835-d0ce062cfd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33937509-33c4-45af-8e2a-4f99f1705713",
        "cursor": {
          "ref": "251aa5cd-4e10-4989-8411-338fa93803db",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "791090ce-8884-4ec4-8682-a1143d003f37"
        },
        "item": {
          "id": "33937509-33c4-45af-8e2a-4f99f1705713",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "05a0f924-7e2e-4c63-b4e7-29bc9dae339f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94a73bd-ad03-49b3-8b83-e133aa113d5e",
        "cursor": {
          "ref": "f3b97827-6bed-4c7a-8f47-b9ed0f3de092",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "68548394-7b09-428a-a281-12d16f70ef3c"
        },
        "item": {
          "id": "c94a73bd-ad03-49b3-8b83-e133aa113d5e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8d0f96d6-371b-4c0d-9d37-cae653d3f5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3483b9-4e92-4f3b-967b-764b933b653c",
        "cursor": {
          "ref": "bddaf487-f8ba-497b-a54a-5a96d89d6dc6",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ce13b3bf-e3ca-4035-93eb-ff787c630eeb"
        },
        "item": {
          "id": "6d3483b9-4e92-4f3b-967b-764b933b653c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6eff23bb-be5d-40e8-b186-59e6b3c3996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec376776-93d5-4efe-8df8-184596b63666",
        "cursor": {
          "ref": "57497c10-97a6-4727-a4bd-7983052ab508",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "16a3062a-3bfb-42a9-a78c-421b3dfb7d44"
        },
        "item": {
          "id": "ec376776-93d5-4efe-8df8-184596b63666",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b7f4d412-7258-4a16-b1cd-b15f9230b216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d728dc6e-bd88-439d-af7b-0884f4f43ed3",
        "cursor": {
          "ref": "90f96d6f-e7ff-449d-ab14-9a3f6e99a108",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6681055b-bfc0-436b-a787-419ae5dac2ce"
        },
        "item": {
          "id": "d728dc6e-bd88-439d-af7b-0884f4f43ed3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cc5a5233-e023-450b-8e85-e2a1cf7b48fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f1629b-3524-40eb-87b5-cfba4ff2c1cc",
        "cursor": {
          "ref": "db11f584-524c-4efd-9274-683fd7375233",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0f5cf55a-a0bf-450e-bde3-34fc172f024b"
        },
        "item": {
          "id": "f1f1629b-3524-40eb-87b5-cfba4ff2c1cc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9017640a-f058-4320-85de-032a62121d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb2bf6-3309-478e-8d80-3973518a6e2e",
        "cursor": {
          "ref": "d3b0c4e0-666d-4297-996b-8c0a2326d9ef",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ca4c5ae3-6f54-4b1e-89fb-23bd4e34b749"
        },
        "item": {
          "id": "25cb2bf6-3309-478e-8d80-3973518a6e2e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2caa96cd-57d1-44b0-91f3-7af07b847a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de30fe1-c50c-45db-802e-770ae4d7ddf0",
        "cursor": {
          "ref": "14519099-6b4c-45ff-8386-be324555fece",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e501bd10-a58d-4085-81d8-1a060e450c70"
        },
        "item": {
          "id": "3de30fe1-c50c-45db-802e-770ae4d7ddf0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fdc1a348-e272-4758-ace7-77bf85d77ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e378d8a-6820-40bb-837d-8aa5da18709e",
        "cursor": {
          "ref": "66dd1e4f-ae1e-4622-b335-d985230cbc92",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "132d285e-60d0-4e53-a213-0f3993412ad0"
        },
        "item": {
          "id": "3e378d8a-6820-40bb-837d-8aa5da18709e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c05d7c91-add8-44ab-89f7-38fe3bc99438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8028939a-f782-4f35-b686-90f3a53cd750",
        "cursor": {
          "ref": "203c1cc8-b04d-40e8-a2c2-b83072773b32",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f1a6f59c-0120-4e8a-85c8-7d3561745faf"
        },
        "item": {
          "id": "8028939a-f782-4f35-b686-90f3a53cd750",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c7353444-7a47-4951-bce2-e5191c1bd3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41f37fd-2a3c-4045-a539-8924b59bb966",
        "cursor": {
          "ref": "9e0038b4-5145-47d0-b4d8-13f2eb3abc8a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9550d204-9eae-4563-9e53-04c94a8897b3"
        },
        "item": {
          "id": "f41f37fd-2a3c-4045-a539-8924b59bb966",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "396e9c54-1d16-4087-bb6b-032095692724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb8396-d3e0-49b3-9685-4ae061970e91",
        "cursor": {
          "ref": "dffd0a51-03c1-49ee-b1c1-3cc1afd98175",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "de276b99-d223-4e07-809e-325341924c17"
        },
        "item": {
          "id": "c1bb8396-d3e0-49b3-9685-4ae061970e91",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a1ac6d38-b5c0-43d6-a31e-5c8d46905f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ce9db9-dfed-4079-b118-28f6b40ddfea",
        "cursor": {
          "ref": "5d3a7473-4ca4-46c5-94f8-ddddd59b9a08",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7670656c-4592-4cde-a9e8-b2c6e5db8b43"
        },
        "item": {
          "id": "78ce9db9-dfed-4079-b118-28f6b40ddfea",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c0ad1721-4d0e-4aab-a40e-90ce6ced852b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade4c3ad-d584-4ea0-99df-62b82229b7af",
        "cursor": {
          "ref": "f294c426-d6b7-48cd-89fc-1ad5b71f4860",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "19d01d20-91b5-4846-863d-395255f20f63"
        },
        "item": {
          "id": "ade4c3ad-d584-4ea0-99df-62b82229b7af",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ea4134a8-e75d-4aa3-9e28-768f0e6402b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a07c970-0066-482b-95fd-c2b43db939d1",
        "cursor": {
          "ref": "c14d730b-5d0d-43e1-8451-ece6dbefd66f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "38d2b901-ec5d-4762-8891-3473b31fd511"
        },
        "item": {
          "id": "7a07c970-0066-482b-95fd-c2b43db939d1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d80ea237-9f25-4e8a-a9d0-e3a21944606d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "b21b0f74-dae5-4f94-9039-a7594ea479aa",
        "cursor": {
          "ref": "56f26288-2040-4542-9cee-409c9e19399f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "515cbd1a-bcf1-4ee0-845f-afc9fe347824"
        },
        "item": {
          "id": "b21b0f74-dae5-4f94-9039-a7594ea479aa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3941e239-872b-4f00-b139-c8d27745cf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "3b4dd999-b828-4829-98a2-c8a1b6dc4256",
        "cursor": {
          "ref": "d1739ed6-9d02-4f8e-92ce-fe7257ff9b0f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3f8908ac-88eb-47b9-810e-6762f09949ba"
        },
        "item": {
          "id": "3b4dd999-b828-4829-98a2-c8a1b6dc4256",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6afc81a7-4d99-475b-a4cd-1c8a1655e3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5772cb2b-0d4b-435f-832c-c276bdc68efc",
        "cursor": {
          "ref": "b532d3f8-0e25-419c-b762-fb62abd0c063",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "dbd602ef-b460-4910-a46e-ac5d380faa17"
        },
        "item": {
          "id": "5772cb2b-0d4b-435f-832c-c276bdc68efc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a73144e1-50ab-4c20-b071-5d2d741ebb74",
          "status": "Created",
          "code": 201,
          "responseTime": 15664,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "89251329-90f9-4490-842b-1c54a14c6dc5",
        "cursor": {
          "ref": "9f2d6777-fa31-47b4-bb4d-e828962fde8f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "70a4a5f7-ad66-46de-831c-ec1ba99a7f42"
        },
        "item": {
          "id": "89251329-90f9-4490-842b-1c54a14c6dc5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "25f2aaa4-d815-43ce-8956-d9502ad701b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a1b71856-b032-4510-a923-c635b7c293bd",
        "cursor": {
          "ref": "72396dc0-13ea-4012-9bf0-dd6c2caf5710",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "034691c4-cbc6-47c3-b293-8806f1e200b6"
        },
        "item": {
          "id": "a1b71856-b032-4510-a923-c635b7c293bd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6a522b68-22c4-46a2-97bd-93d7af770686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "0827a950-6fd3-4345-83f9-327c22195b41",
        "cursor": {
          "ref": "7a7c5a98-07a9-4cea-b3db-d454a43dd829",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "780daa76-88ed-4338-9dbc-27bc6163e046"
        },
        "item": {
          "id": "0827a950-6fd3-4345-83f9-327c22195b41",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "518af1f4-39fe-47b9-bef0-58bfc1f7b8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f55458e-2c4c-44a1-80b7-d2b91a9f1294",
        "cursor": {
          "ref": "40c3675d-3bde-45ca-a13e-8015249bafd6",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dff6022f-bc80-435d-bc85-65323e337a38"
        },
        "item": {
          "id": "2f55458e-2c4c-44a1-80b7-d2b91a9f1294",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c8810ad9-301a-4a4b-99ba-18b7e97fce8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a3ae9d-202f-4adb-bd99-d4ea5ce4d6ba",
        "cursor": {
          "ref": "6a867a9a-4c00-4c5e-a8de-c9b6a4f3d479",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8f054262-1c6f-4506-98a3-734297006e56"
        },
        "item": {
          "id": "87a3ae9d-202f-4adb-bd99-d4ea5ce4d6ba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7668ffb-090b-4b4c-8ed2-4f7ffe3ec2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e930879e-dd1a-4c80-83fe-9dbc3a9eec4f",
        "cursor": {
          "ref": "d0391083-bcca-4e03-a57b-a828886890f7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cadf3d7a-412b-4470-9948-5b031679bd4f"
        },
        "item": {
          "id": "e930879e-dd1a-4c80-83fe-9dbc3a9eec4f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2c3c435-1c45-4296-8e8e-994e61a18151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210398a8-f171-4d75-aa9f-908b86393aeb",
        "cursor": {
          "ref": "c43e7122-f37a-43e1-8ad0-c3c5b2c8b0e6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "95af62d0-35b5-47e4-91bb-ecf0d9e480ad"
        },
        "item": {
          "id": "210398a8-f171-4d75-aa9f-908b86393aeb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "401ed35a-f4af-4a41-a377-7873e306fd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fdc6d6-f5d7-482c-a8de-36015c63d8ed",
        "cursor": {
          "ref": "30b36870-07ed-44e2-9191-6f3161dc2a2c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "97417717-375a-4d99-8125-ddd42d3ffcc2"
        },
        "item": {
          "id": "70fdc6d6-f5d7-482c-a8de-36015c63d8ed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "03a7df4d-170f-4210-8dfb-636a1807ca96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3861b70f-8cb6-4789-8ae8-65aaa456d0b4",
        "cursor": {
          "ref": "c0cc0435-daa7-435c-b7cf-9e0cc42f8b5e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6f27ac43-d176-4b21-806d-c5f94ebf201c"
        },
        "item": {
          "id": "3861b70f-8cb6-4789-8ae8-65aaa456d0b4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a1037129-5e00-4c9f-a667-188ad35a61b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330d1b97-ec7b-4f9f-9307-db3492d29ffd",
        "cursor": {
          "ref": "453f660d-cde0-40a1-bd70-0f7ac4352fcb",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "91a8f092-a283-4ed4-9fb8-a358206c5805"
        },
        "item": {
          "id": "330d1b97-ec7b-4f9f-9307-db3492d29ffd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5b19cd58-999f-483f-ae59-d7e9869296eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4262970f-b37d-478b-aa76-7d9c843976ec",
        "cursor": {
          "ref": "2b8a8800-2e6f-46ff-bfe1-3e4b36e07eb8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "db59ec70-137c-4974-b6ed-085579c41449"
        },
        "item": {
          "id": "4262970f-b37d-478b-aa76-7d9c843976ec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0c566465-80b1-482a-acf7-d022c5487db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9c091d-1b02-446e-aaf7-77a0d5752a03",
        "cursor": {
          "ref": "39a15c35-d1e9-4d91-9e94-16ebfb9b2260",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "88c6967a-2f88-4479-a85d-0272f77c84b3"
        },
        "item": {
          "id": "8a9c091d-1b02-446e-aaf7-77a0d5752a03",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d6c9a128-ef2c-402d-b0e4-f63f4409211c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4287185a-b92c-4134-a7b0-1080f0e67cbd",
        "cursor": {
          "ref": "fd6ade06-9d4e-44ed-8d71-f8e1a23d62fa",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "09cb85eb-7951-4009-883e-b79d6b878fc9"
        },
        "item": {
          "id": "4287185a-b92c-4134-a7b0-1080f0e67cbd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ad6d5564-fd7d-473e-a251-b014553e7c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0ec565-fd10-4210-a8b1-4ac74e3427ed",
        "cursor": {
          "ref": "9a9ed9f0-bef6-4220-86f9-2fa466672e1f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "190c2479-ccf2-45db-9b1e-4eb353a849ea"
        },
        "item": {
          "id": "0b0ec565-fd10-4210-a8b1-4ac74e3427ed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fa022c63-9552-4e38-bd5e-d567a9968086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1feca34a-264b-4ecd-aba4-767e18504226",
        "cursor": {
          "ref": "e7522cc3-8001-4bc6-b10d-a9cecab8ca34",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "10148cab-6da4-40f3-9bfd-350c128cb199"
        },
        "item": {
          "id": "1feca34a-264b-4ecd-aba4-767e18504226",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ffb12e56-5a3c-4ed6-a7a5-41162fbae1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d2d4f4-f173-4773-99ec-9b852cd45f35",
        "cursor": {
          "ref": "e7daee0a-1317-49bd-af91-3bbc38583ca0",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5882d35b-782a-45a0-a727-4e36aee3cb77"
        },
        "item": {
          "id": "f0d2d4f4-f173-4773-99ec-9b852cd45f35",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4640aa15-be90-41ee-a637-1c3c47ad60f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37832cc-14b5-40f0-8eb0-75bc0d505499",
        "cursor": {
          "ref": "a308410d-c0fe-4707-87b0-ca5147233c4d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dd1224ff-c77d-4816-93f2-265b0c556ed9"
        },
        "item": {
          "id": "f37832cc-14b5-40f0-8eb0-75bc0d505499",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4c93c0ba-c098-4805-8eff-eceefef9ef7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10deaa1a-fa00-45ab-9237-5fdf5c3b3d0b",
        "cursor": {
          "ref": "8579d7c0-a49c-4c27-97b3-dcc8e2f6258b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6b633fa0-cac2-4955-9a53-96532a277da8"
        },
        "item": {
          "id": "10deaa1a-fa00-45ab-9237-5fdf5c3b3d0b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "807448e0-6cbb-4f4b-a335-8274c55c831d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af74f241-ad55-46ab-8a9f-26b0c9599ee1",
        "cursor": {
          "ref": "14d40789-9fa7-43b6-8adc-9058506202b9",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "95e8e52c-5283-40d7-a3f9-9066ae49d520"
        },
        "item": {
          "id": "af74f241-ad55-46ab-8a9f-26b0c9599ee1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1955b5d2-54c0-48c1-b092-2d0a7be860b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0290b45-d391-4db2-8b92-eb1eb2add6a4",
        "cursor": {
          "ref": "f538c0a9-a436-4809-816e-1ef28f0d8eaa",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "20810c83-6a7d-4f48-a4ed-cd2c16946218"
        },
        "item": {
          "id": "b0290b45-d391-4db2-8b92-eb1eb2add6a4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5065294b-94d6-42ae-8210-fbad323fcadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db02c120-4236-43c2-a1a5-d7a6e1c3976b",
        "cursor": {
          "ref": "c2afe5ec-5fb5-40eb-bca0-1923738ed875",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3ebb3a8e-3561-458e-9a2e-adcb5caf8447"
        },
        "item": {
          "id": "db02c120-4236-43c2-a1a5-d7a6e1c3976b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "79ec5376-a303-4bc2-9e30-c8ce11581ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973c9a6f-c80c-4979-8286-407b84060822",
        "cursor": {
          "ref": "08e4b6d8-3bcd-487a-bd92-a09bb62d4738",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2e484683-a9bb-4ab9-a2f2-f2c3f5b55665"
        },
        "item": {
          "id": "973c9a6f-c80c-4979-8286-407b84060822",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2f33ed1-d819-4426-a2e0-577d71f3311c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e1ece9-3048-41f1-93d9-d3b0bcf410bd",
        "cursor": {
          "ref": "e565805d-5532-431c-8d6b-842244545f94",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cf829185-abb7-454b-832e-cf9eaeff2396"
        },
        "item": {
          "id": "48e1ece9-3048-41f1-93d9-d3b0bcf410bd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3632c1f0-a32e-4c55-88a5-f3ab96427217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2f6931-2961-4219-92be-1e858a655bb5",
        "cursor": {
          "ref": "74cc2b1b-e8f5-4ac9-96f3-a97475ba2640",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a7e708a6-9c89-4318-8ced-41c603cbf24b"
        },
        "item": {
          "id": "9f2f6931-2961-4219-92be-1e858a655bb5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a01df0b-bc14-4c07-8116-3b98d2027575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f66940-dbae-4898-89bf-59e22d3fa096",
        "cursor": {
          "ref": "9605823a-08b3-4077-9d97-2c1f45785578",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "15f34435-7de6-43b9-9192-71584dc4dfbd"
        },
        "item": {
          "id": "16f66940-dbae-4898-89bf-59e22d3fa096",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dd94ad7e-b048-4ed3-a2b7-1febc3cedec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447e2fbd-2574-4870-a7af-53be2f230ffc",
        "cursor": {
          "ref": "f855c798-1de2-4718-940e-adb0e824ca81",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ca6fbdfd-c917-4291-9a66-fbc43513af07"
        },
        "item": {
          "id": "447e2fbd-2574-4870-a7af-53be2f230ffc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "81390289-e836-4aaa-ab99-65240d5e91bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c67e303-c018-4e67-bb01-10cc9f7029cb",
        "cursor": {
          "ref": "398ae5d1-4b81-4b0e-8326-f4fe58474ab2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a52c592a-cf48-438d-8235-5377d699b2cd"
        },
        "item": {
          "id": "2c67e303-c018-4e67-bb01-10cc9f7029cb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "08a86519-6301-4d1b-bc48-8db7be87ba93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be01b36-f1dc-4602-b917-a5cc1b611763",
        "cursor": {
          "ref": "1e6822c4-f17e-43d6-8270-45261039209c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8f4ceeae-15a2-45a8-be52-68627d395cee"
        },
        "item": {
          "id": "3be01b36-f1dc-4602-b917-a5cc1b611763",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "32b93b5d-6722-42fe-ab4a-105482b5d8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15addf99-10b3-428a-ba3d-50a6b480cd2f",
        "cursor": {
          "ref": "d28c0ed9-f2c6-4098-98ea-f9b7c0f451f5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "31761898-6a24-4371-81b7-92e92bfe64b2"
        },
        "item": {
          "id": "15addf99-10b3-428a-ba3d-50a6b480cd2f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6eed42a7-7fe8-4e90-8bb0-537c8a18a3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0700f4c-d927-4af0-9ac5-80b5a7c77df8",
        "cursor": {
          "ref": "0cde3047-cc63-42f0-8dbf-6993b306879d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ed2e11cb-ca26-492e-ae22-0e8e19fe5349"
        },
        "item": {
          "id": "d0700f4c-d927-4af0-9ac5-80b5a7c77df8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d31e8fac-fcc2-4954-82c9-adf4bc56d56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7e43e5-13c1-4e8a-a84b-c109a5092b85",
        "cursor": {
          "ref": "f71dce67-a65f-4bc2-be5d-f4de675a4325",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "504156ff-e54b-45c0-8062-0d45ec090e6a"
        },
        "item": {
          "id": "ac7e43e5-13c1-4e8a-a84b-c109a5092b85",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3cd96caa-491e-4d80-b3ae-1c065f2ab7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba0a3f1-156a-4598-ba65-76b801038c25",
        "cursor": {
          "ref": "067ff821-6436-467c-9633-e3d4a3694f90",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7fdc39d6-2cbf-46b6-ab93-e5c1be6d91d1"
        },
        "item": {
          "id": "eba0a3f1-156a-4598-ba65-76b801038c25",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8a056ae6-2f2f-4f2c-8145-8f2ed2aea1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6c4cd7-4aeb-4932-949f-467fb4a01026",
        "cursor": {
          "ref": "7f730b1b-9f6f-4f62-ae6d-c0a261fed5ea",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "343ba2a5-455c-49e1-99c3-4cb5d2a09f60"
        },
        "item": {
          "id": "ba6c4cd7-4aeb-4932-949f-467fb4a01026",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "06ece0a2-f37f-4dcd-9b2a-956f07b2468e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7139e811-1363-4dc8-97d2-9cfeb62c9a53",
        "cursor": {
          "ref": "35f3f510-bf74-486a-ac1c-c890bf4d135c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5c180e0a-b6d8-4599-b54c-35f616babe4a"
        },
        "item": {
          "id": "7139e811-1363-4dc8-97d2-9cfeb62c9a53",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "49ad8920-6856-44ff-b1cf-e16c69031241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb49063-5db3-4112-a5a0-024e456090ee",
        "cursor": {
          "ref": "78499301-3d7d-4859-82ee-22d5111d01ec",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9734bc2b-2f59-4d5a-8719-80a76686e046"
        },
        "item": {
          "id": "ffb49063-5db3-4112-a5a0-024e456090ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e1e93104-5785-457b-ad6a-f48e805b237c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d22d5f-c41c-4282-910e-6e027c3c73e0",
        "cursor": {
          "ref": "0eaf2a8f-dfed-492f-bd4f-33d5b6db27fe",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9d34b1a7-4110-43ab-92ed-093aabfbc717"
        },
        "item": {
          "id": "b7d22d5f-c41c-4282-910e-6e027c3c73e0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "290c3dcf-b4fe-45bc-9d3b-efbb295dfbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964b6ea6-3786-43d8-a2ce-b5ab77cd4751",
        "cursor": {
          "ref": "d5c1b2ab-4669-4ff6-877b-d77884618fee",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5ec4845e-dd1f-4e5c-baad-b8f19d50e068"
        },
        "item": {
          "id": "964b6ea6-3786-43d8-a2ce-b5ab77cd4751",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "64e86e37-0992-43d6-9368-81eee8035756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b245c4fd-7014-4cf6-8f4d-c11228ca10aa",
        "cursor": {
          "ref": "70d2b469-2f2b-4dcf-b8f5-d5e4605331db",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c4c0e374-c43d-4308-9c83-c7c8f19324e7"
        },
        "item": {
          "id": "b245c4fd-7014-4cf6-8f4d-c11228ca10aa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d4242088-3830-4f91-9731-c4c011c4625a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744c7c63-402b-4e91-8092-a4619aac07c2",
        "cursor": {
          "ref": "1d31c338-4ead-4ec7-90b1-390a97d526b3",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b793887d-8904-4f25-89f7-219f27e49a77"
        },
        "item": {
          "id": "744c7c63-402b-4e91-8092-a4619aac07c2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6d3d04b7-197f-4fc3-b5a7-cc8c630066fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d0b3e3-a1bf-4f1d-9d0c-e4c2d80bb263",
        "cursor": {
          "ref": "01f74068-1a73-493d-816f-1dd06b394ca7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "77e6d0de-b9a0-4120-b4b4-c37462406641"
        },
        "item": {
          "id": "58d0b3e3-a1bf-4f1d-9d0c-e4c2d80bb263",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f4c4835-e40f-4565-9151-263fe6cecde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50145a4b-08c3-4a42-b964-7c4b70c1b88a",
        "cursor": {
          "ref": "7a9e09d2-5de2-4487-96aa-b79d8a66e1dc",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f3468dff-9c85-4db0-b377-1023cea4bae3"
        },
        "item": {
          "id": "50145a4b-08c3-4a42-b964-7c4b70c1b88a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f93967e0-b595-468c-a5d6-ff9371a021e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7323b0e-ef2e-414b-9a16-285594a774d3",
        "cursor": {
          "ref": "36f2ece8-b0af-4204-810c-f61caccef941",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6db15b9e-c508-49a0-babe-dbbdbd84f377"
        },
        "item": {
          "id": "c7323b0e-ef2e-414b-9a16-285594a774d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8bc323f8-dda3-47a6-a8bd-e83eb5e25564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb47e4e4-96a3-4fbb-88de-47f01e8c22ab",
        "cursor": {
          "ref": "7fdec294-b3ee-4b8a-b319-578f7eef32bf",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5be0f7ed-985b-4cca-a116-cd848d866d1f"
        },
        "item": {
          "id": "eb47e4e4-96a3-4fbb-88de-47f01e8c22ab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6e95a5e3-24e9-4cc8-af6c-d4eb72290eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684b7993-0248-4fda-845a-3e9212e50f4e",
        "cursor": {
          "ref": "dfa9447f-24c4-4930-b88a-fe358b97cf21",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2ed1188b-9d3e-4a53-b136-df7383ec5553"
        },
        "item": {
          "id": "684b7993-0248-4fda-845a-3e9212e50f4e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f167aecc-7201-4fb6-a792-f695fcc16394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4534e882-eb4d-4718-8a32-76180c811931",
        "cursor": {
          "ref": "69c775dc-853e-4fdd-b770-082434f06210",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3a34f7f5-3eb4-4286-90e8-ce72ad6b108b"
        },
        "item": {
          "id": "4534e882-eb4d-4718-8a32-76180c811931",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bf7b26c4-a2fb-4bf9-ab2e-6e9f9e9f054e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8a4dea-3394-4c36-8582-8ee1a1fccb53",
        "cursor": {
          "ref": "beacb997-735f-4521-98cd-85df637ce12a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f4575b09-9a2a-4eaa-a8f1-43127fe9805b"
        },
        "item": {
          "id": "5a8a4dea-3394-4c36-8582-8ee1a1fccb53",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "48be3148-e903-4e58-b637-33ba290572b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0f00d1-ebd8-4213-b102-55617ad5ced9",
        "cursor": {
          "ref": "dcd17f90-073e-4a22-98bf-674c74cb8a2f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bc33a86e-b9d5-40a5-b6fb-f1f0f918cbf8"
        },
        "item": {
          "id": "be0f00d1-ebd8-4213-b102-55617ad5ced9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c695833d-4be5-413b-abdf-01eb2ee378b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6b07c5-ea9e-43d8-86fc-cbfef6cfa7ba",
        "cursor": {
          "ref": "472e7dd4-fcbc-4a0b-b69d-fca4fea3d815",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "530f3add-38af-4342-91d8-3fc452771d14"
        },
        "item": {
          "id": "8e6b07c5-ea9e-43d8-86fc-cbfef6cfa7ba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7aa13dc4-40b3-4e0e-9ba6-b77ed7935283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b468a23f-f732-47f5-90c0-0950456cadde",
        "cursor": {
          "ref": "69014305-9730-4d49-9f00-0301982c259e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d4c105c6-f1b8-4483-93d6-57043b82340e"
        },
        "item": {
          "id": "b468a23f-f732-47f5-90c0-0950456cadde",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b574256e-41b2-44c3-a93f-0c47aeed64cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b81f1b8-e977-4adc-9e1b-4ee71c5b2999",
        "cursor": {
          "ref": "f16f3579-7c8f-42d8-888a-067d8316b362",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dbe83435-e82a-487d-94e3-bf61ef9f985a"
        },
        "item": {
          "id": "2b81f1b8-e977-4adc-9e1b-4ee71c5b2999",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2ee4e5c1-07e4-4cb3-850a-5ee1227dd281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cbedc2-0b87-4c3e-8b0e-8cc36b050c71",
        "cursor": {
          "ref": "226db691-d04c-46ef-9466-87502438e785",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c4362577-9361-4baa-8e7d-50b335533c5c"
        },
        "item": {
          "id": "58cbedc2-0b87-4c3e-8b0e-8cc36b050c71",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aba6f130-cea5-4aae-9c30-84de1d3ca181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a06621-0bcf-4bee-ad21-93405dc4c5a5",
        "cursor": {
          "ref": "7178cd16-18e2-4926-9ed8-793948f01fa7",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "23d4e76b-6e57-49ed-a833-5e1583c46163"
        },
        "item": {
          "id": "16a06621-0bcf-4bee-ad21-93405dc4c5a5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b12d8268-9283-47b5-8279-7d773cb4904c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f377526-594f-4040-959f-5281fae63fd2",
        "cursor": {
          "ref": "146bbb48-2c41-497f-88e8-dfe233b111f9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6f977124-4bbb-4b5d-bd4c-0fe786793d5f"
        },
        "item": {
          "id": "7f377526-594f-4040-959f-5281fae63fd2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "736eac8d-823b-422e-8e93-d3ffa759ca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa994fc-a383-47c7-bf97-f14c122ea1a9",
        "cursor": {
          "ref": "e1a03573-19b0-4265-b835-2c262d9dfa77",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "191fa4cf-593e-4d73-9d2c-b6243befc962"
        },
        "item": {
          "id": "8fa994fc-a383-47c7-bf97-f14c122ea1a9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9df5958f-419f-4e97-9a0e-c8c39d635522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f33361-2e34-49b2-860f-84bc9f2bb731",
        "cursor": {
          "ref": "5765db1e-fe5b-4342-82df-42d4d96078a0",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b99ffb6b-ab58-4c63-b91b-2a0c3a06bb12"
        },
        "item": {
          "id": "02f33361-2e34-49b2-860f-84bc9f2bb731",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6f5f70fd-8d92-4659-a5f3-67aa760b7b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494ec67a-192a-45b7-8e68-3a40700781a2",
        "cursor": {
          "ref": "21f3ea23-341a-4c9e-902c-e72aea32edde",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "181b0c55-48b5-4e43-92c7-83a28a0b4756"
        },
        "item": {
          "id": "494ec67a-192a-45b7-8e68-3a40700781a2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bb5e5f8e-0117-491b-933b-7ef5cc56afd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d785fb6-844a-4dfd-ac45-7774a090ce6f",
        "cursor": {
          "ref": "f80cce43-8392-45d3-b99b-c2e6c6098166",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8e04be75-a21c-4a44-83bf-eba9c7608ce0"
        },
        "item": {
          "id": "5d785fb6-844a-4dfd-ac45-7774a090ce6f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "37e81906-9b59-4274-971a-299686188b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8124fae-54f7-4b31-92a1-1e97644eb0e3",
        "cursor": {
          "ref": "bf89c41a-5de1-48f4-bd52-c78ae87a7c3e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3b8d4a66-9020-458b-8295-4e70332c297f"
        },
        "item": {
          "id": "c8124fae-54f7-4b31-92a1-1e97644eb0e3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0d223baf-303a-4b67-8a1f-b06301b0741b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0402ce9-ff7a-47af-87c7-f90e6868b7ec",
        "cursor": {
          "ref": "05955272-203e-45ca-9101-b4d352f136f4",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9cb0b123-305e-40eb-8333-778b82a4379e"
        },
        "item": {
          "id": "d0402ce9-ff7a-47af-87c7-f90e6868b7ec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b3bbfc61-f490-4dc5-969e-09adcfe631f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffd98b5-fe8e-45fc-9cdf-f4fa5664e68b",
        "cursor": {
          "ref": "d1ead9e8-22b1-4153-89fa-451f8eb6ecb6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "aa0c3933-92be-4e00-9f0a-ef0387315b11"
        },
        "item": {
          "id": "bffd98b5-fe8e-45fc-9cdf-f4fa5664e68b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3aaec096-d3d7-4194-ad87-f348791b8434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6e4114-77ac-4dde-ba9d-8d9c72318a8c",
        "cursor": {
          "ref": "2d4ce041-79a6-47a6-82e7-24418d92e486",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "91b1ed51-69d2-4939-96f2-1552c2bc25d6"
        },
        "item": {
          "id": "5c6e4114-77ac-4dde-ba9d-8d9c72318a8c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4dbd006e-76a2-42c7-95c5-c175e649df85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17949436-afdd-4659-95f0-1146dfcfd06d",
        "cursor": {
          "ref": "c3b6e70e-89b6-4856-a0d2-8e3897a5e05f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c4676314-ce41-488c-98f2-65a782a1935f"
        },
        "item": {
          "id": "17949436-afdd-4659-95f0-1146dfcfd06d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5751502c-0d3e-45dc-9a84-cb54fc1e0b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a821858-7bdd-4ed7-b10d-99bda4e48563",
        "cursor": {
          "ref": "c04e5707-275d-4df5-a65b-3d8c091d07c2",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c0995a46-9b5d-4698-8a42-ab26e8c3cd59"
        },
        "item": {
          "id": "2a821858-7bdd-4ed7-b10d-99bda4e48563",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6ab6016f-9e3c-4997-a87c-5a15ce3db06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3d07e3-e4ab-4392-8193-098ec586001c",
        "cursor": {
          "ref": "08c9a7c4-7f08-4c29-955c-6282908d25e4",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0fe1663c-e690-422c-8639-26f3274d40a2"
        },
        "item": {
          "id": "3d3d07e3-e4ab-4392-8193-098ec586001c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4fdae8ff-16d5-4bb4-bc62-69cb8a727911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19e8301-e8e5-4370-a344-8d7b3ddd0a1b",
        "cursor": {
          "ref": "5aeede4b-f222-467a-a003-3adc2a9f7cb8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7fb95e7e-60d4-45dd-a495-1be69d95557a"
        },
        "item": {
          "id": "f19e8301-e8e5-4370-a344-8d7b3ddd0a1b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3996cd3b-0903-4e85-89bc-b1a15eb5e4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb22028d-88ec-4c3d-8ee4-1f04c84a09eb",
        "cursor": {
          "ref": "d4caa320-694a-46d6-b258-6129eaab08f3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "132013ce-71fd-48c4-abe5-688efefc14d0"
        },
        "item": {
          "id": "bb22028d-88ec-4c3d-8ee4-1f04c84a09eb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "014ecacb-971d-4ed6-9e02-5e001f6dca1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa0563f-1939-4c69-8852-a4c959d89e66",
        "cursor": {
          "ref": "4d43f916-efd1-46a8-ab0e-3adca0b49c8b",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "16cc53bf-7093-4919-ba0a-4f6a2f379317"
        },
        "item": {
          "id": "9aa0563f-1939-4c69-8852-a4c959d89e66",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ffb57c97-05ad-4e3a-abf8-38cff893aea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eac7208-b2e2-4027-aad8-6a5cae5c14b7",
        "cursor": {
          "ref": "66560a87-2563-4f1c-8882-1c63dc944e33",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c35e789a-a8b5-49c7-bd5a-f7ab36b237d0"
        },
        "item": {
          "id": "5eac7208-b2e2-4027-aad8-6a5cae5c14b7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "df62e959-2f5b-4b7b-813a-1658bff6c393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cac06d0-76e5-41e9-85cc-cba94c83b25a",
        "cursor": {
          "ref": "1e1582b2-fa02-4ba1-9bde-b73ef8c6ed4c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f8734685-fb78-410f-b5aa-023198f331ee"
        },
        "item": {
          "id": "4cac06d0-76e5-41e9-85cc-cba94c83b25a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "74aed1cf-4c2f-4d0e-b05e-272ae1106fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f436ba-f81e-4be1-b372-3307dec0b7d2",
        "cursor": {
          "ref": "9080294d-5a54-44fb-b92f-50f41060a0db",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e7216331-94fd-44dd-822b-b5e2cfb97765"
        },
        "item": {
          "id": "d9f436ba-f81e-4be1-b372-3307dec0b7d2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "58e78939-1a73-4783-945b-0275ae2e85c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e4dd25-b793-4e4e-ba1e-fea52da26b00",
        "cursor": {
          "ref": "6e87e268-28f4-4252-8826-04eef684717a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "583d2e57-87d6-4f2c-8f80-f04bd0bc24f7"
        },
        "item": {
          "id": "38e4dd25-b793-4e4e-ba1e-fea52da26b00",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d00966d7-7909-48d8-a432-ebdae5b58b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe1266f-aece-4a6b-92d8-b393b00ba1d1",
        "cursor": {
          "ref": "2a117eff-5551-418f-a3d0-5d0f16ba0b5b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "00cb5497-b076-48e4-8d29-9242d3c0d66a"
        },
        "item": {
          "id": "afe1266f-aece-4a6b-92d8-b393b00ba1d1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8d4fcc3c-031b-4909-b2bf-fa793938cc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e919561-f5cc-4864-8f3e-490026770315",
        "cursor": {
          "ref": "c64180bd-cf57-4bb0-add2-ae1bb5f326ed",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "44c1d99c-382e-4954-8769-35e42a5af82c"
        },
        "item": {
          "id": "9e919561-f5cc-4864-8f3e-490026770315",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1acc583c-b094-48be-a9e4-97a6c08d5c89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad6e440-ea6c-40e4-9890-c0b6b1f9e2ad",
        "cursor": {
          "ref": "8c624482-5b71-4dc9-b4c4-8f3d402b2b31",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d7b578eb-aee9-4fcc-b69b-50ccd74f8da0"
        },
        "item": {
          "id": "cad6e440-ea6c-40e4-9890-c0b6b1f9e2ad",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5c323f14-64db-4843-935f-af8f857ee1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9253cce-d490-410a-8f32-0f13e8cf35d1",
        "cursor": {
          "ref": "161b3942-f8b0-4295-ac57-f0b6fb244469",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8bb8bade-3453-40ab-9e6c-2dfeba5adfd2"
        },
        "item": {
          "id": "d9253cce-d490-410a-8f32-0f13e8cf35d1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cdf09853-9c0d-431b-bfb2-f686dc01b6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4b87d4-8553-4838-a596-3de8e163fb7f",
        "cursor": {
          "ref": "bfe21163-1768-42ac-baee-0ed42e227503",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6c3bac57-bc5b-47d5-88bc-1e18da5d0f1b"
        },
        "item": {
          "id": "3b4b87d4-8553-4838-a596-3de8e163fb7f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7d6cc6fd-ca88-46f8-9195-5ba99a0dde05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286dfb17-96f4-4b36-a6a7-c23bc13af77d",
        "cursor": {
          "ref": "9c6bc62e-d8b7-4909-9098-a79a2b5be151",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fe39772b-e3d7-42b2-80cb-9adadd8c7a71"
        },
        "item": {
          "id": "286dfb17-96f4-4b36-a6a7-c23bc13af77d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4ca3fe30-aaae-4982-8f62-97cbf229bf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90046d5e-c63d-46b3-ad38-447f1fdb244c",
        "cursor": {
          "ref": "fc9d5ad9-1bd5-412e-8ada-ea24d77ae702",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "731a6dca-217e-4bae-bda4-90c9f697aef6"
        },
        "item": {
          "id": "90046d5e-c63d-46b3-ad38-447f1fdb244c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6aebafe4-805f-43e2-9a92-17f48abee39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61013020-e292-40f3-a796-512a2df4e834",
        "cursor": {
          "ref": "1e52cb2e-bdc6-4d77-928b-90c8e512c3ca",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c5ee5ec0-ccc6-4a0c-9281-295554695c21"
        },
        "item": {
          "id": "61013020-e292-40f3-a796-512a2df4e834",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "09959874-db22-462c-ad1d-e184c9f80a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4292286d-2433-447f-bb86-f2de77e0676f",
        "cursor": {
          "ref": "b68df5b3-14f6-453b-bf72-7fe5ed58b357",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "964d452c-8214-4b13-bb24-0a300f562ba0"
        },
        "item": {
          "id": "4292286d-2433-447f-bb86-f2de77e0676f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5c6a7de2-22bd-44ee-99ca-35112dfdc4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0eaa24a-644f-4a84-969c-918a5a638ddb",
        "cursor": {
          "ref": "000c73b1-e856-411c-8b21-26302de9b688",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "42932e94-62aa-431e-96f7-6b40416c1574"
        },
        "item": {
          "id": "f0eaa24a-644f-4a84-969c-918a5a638ddb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "212af332-2f31-4f93-a07d-38f4619f5e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87185c55-1b80-463e-b78a-cb8dcd642a3f",
        "cursor": {
          "ref": "40afe009-485d-48da-8874-f3b404442d07",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d0e40094-ba2c-4dbd-8031-82c7816ffca9"
        },
        "item": {
          "id": "87185c55-1b80-463e-b78a-cb8dcd642a3f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "05b70eff-d11b-488c-aba5-4789889a2777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63363ddc-8b7a-4ea8-aa8c-7347d40c1430",
        "cursor": {
          "ref": "a4cd5da9-c53f-4cb7-90d7-4a3dca6e6468",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "55c372bc-d4b8-48a0-b067-e61219361188"
        },
        "item": {
          "id": "63363ddc-8b7a-4ea8-aa8c-7347d40c1430",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0af89d87-8ab5-409f-b505-b9e679328bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3798c6-b6c7-4d63-982f-3a9492aeb491",
        "cursor": {
          "ref": "7f6032f6-71bd-416e-a85a-4505c12eb095",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3eb4dbd8-5f69-4122-ad9e-0713be221008"
        },
        "item": {
          "id": "6e3798c6-b6c7-4d63-982f-3a9492aeb491",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "101919a1-1deb-47f8-be08-420535abcbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20531d8-4b2c-4478-8a32-807c335d587f",
        "cursor": {
          "ref": "1f83153d-1f18-4ce7-9008-e83d6c84daf5",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b0be4d57-4a3e-459e-8f96-ca66844801ce"
        },
        "item": {
          "id": "b20531d8-4b2c-4478-8a32-807c335d587f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "54d2215c-aa61-43a6-8142-b3128fd00850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306dfb00-2417-49a2-bfde-b610b74cb952",
        "cursor": {
          "ref": "be0ea735-8ee9-44e5-a845-c40a5ca64ac2",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f718b514-485b-4d1e-a56a-858fd63cd547"
        },
        "item": {
          "id": "306dfb00-2417-49a2-bfde-b610b74cb952",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "42da4534-08b0-4f72-9d2b-9cd8d515b036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8744af-4405-4fe0-bdc0-3118d522beca",
        "cursor": {
          "ref": "b5fdaef1-9ad0-4896-863c-28d0699f62c8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f969c1e2-73a4-4fe9-8251-cfc58f01fb29"
        },
        "item": {
          "id": "6f8744af-4405-4fe0-bdc0-3118d522beca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c688da26-5ae8-4345-b3e7-27d4dac4e30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89067933-0728-4068-88dc-bd926af5e6cc",
        "cursor": {
          "ref": "b4a48514-79f7-46e9-b874-afc44f552d8c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "650cabf1-724d-431b-8fa7-7ded01487a25"
        },
        "item": {
          "id": "89067933-0728-4068-88dc-bd926af5e6cc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c720d960-fc78-4bae-b994-72185f444a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e902bd0-7dc2-4d8b-9855-c3e36f188b62",
        "cursor": {
          "ref": "4152f507-3bb7-487f-8b6b-ebebe096949f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1d6d32e7-72a5-47a5-873b-ee7b5db2acae"
        },
        "item": {
          "id": "7e902bd0-7dc2-4d8b-9855-c3e36f188b62",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7518f877-9d4e-4857-9407-1adaac29fefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697fa59c-f04f-4cbc-9b77-2580e1fd3406",
        "cursor": {
          "ref": "a29b56c7-a740-447a-ad56-85995cb826aa",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c1992b64-b7b4-447d-af2d-0d21d26281b3"
        },
        "item": {
          "id": "697fa59c-f04f-4cbc-9b77-2580e1fd3406",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "45863b59-9679-4597-b8b6-795bb38f795c",
          "status": "OK",
          "code": 200,
          "responseTime": 325,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "f12b1f0e-6ddd-4027-adcf-a1b57dc86942",
        "cursor": {
          "ref": "bbdf843c-e1b3-40e7-9d1c-2f3e5443b8ac",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3fae028f-df9a-4dcf-9137-a99a38c1bf29"
        },
        "item": {
          "id": "f12b1f0e-6ddd-4027-adcf-a1b57dc86942",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b9e50e10-a3f3-4455-993b-f393acc4a75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee9170b-9889-426d-98d8-0417c70e6b01",
        "cursor": {
          "ref": "a403bacd-c5ab-4776-afb0-462621051e5b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4105923c-4a18-4752-9553-56ff79aec0f9"
        },
        "item": {
          "id": "7ee9170b-9889-426d-98d8-0417c70e6b01",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "18a16a72-584d-42fa-ba53-ebaf472a86f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e2198f-894f-47f9-ba97-bdd338ed941d",
        "cursor": {
          "ref": "15cf06df-c28b-44d6-9c71-57c2d1428aed",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "98092057-d5d3-4432-8966-1b290ff4c7e6"
        },
        "item": {
          "id": "76e2198f-894f-47f9-ba97-bdd338ed941d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2b651324-6c82-4f67-8913-33e8cd790484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba47efb-d383-4737-8113-02f3197f5156",
        "cursor": {
          "ref": "2bd2cab2-c50f-4f6b-bb5d-2afd02340169",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "84dc2911-5f9a-4665-96c6-946556b977ed"
        },
        "item": {
          "id": "2ba47efb-d383-4737-8113-02f3197f5156",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4db81998-ac92-40ae-9eb1-5a8e5ced04c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d72a144-7b2b-49a6-bcf4-a981ff6ab2fb",
        "cursor": {
          "ref": "7e7acba7-9ef1-497c-9698-7d3d534c5f3c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0c4cfee3-5458-4eab-8e88-b257db94c158"
        },
        "item": {
          "id": "9d72a144-7b2b-49a6-bcf4-a981ff6ab2fb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a2743b4f-89d3-47a4-a335-2e9c4776d434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae95fca-a22a-4a25-a9bd-73dc9f76febe",
        "cursor": {
          "ref": "14c8feaa-779e-4888-b413-6db9f2221d67",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ed94535-2b88-4ca6-b906-67995a78937c"
        },
        "item": {
          "id": "3ae95fca-a22a-4a25-a9bd-73dc9f76febe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6541c245-1646-443d-9627-1b305eb97ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d73829-0c9f-4593-bf0c-9e5485f4b8de",
        "cursor": {
          "ref": "618523ae-4f90-46c3-a7ac-071feb5a9ea0",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "184bf037-1cea-4104-aa21-a33b7f9979c7"
        },
        "item": {
          "id": "11d73829-0c9f-4593-bf0c-9e5485f4b8de",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "783b4b05-93d1-443c-8799-f7553e714f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8120f6c7-e923-41fe-8c7e-29d9bb58ab8a",
        "cursor": {
          "ref": "448df243-26e1-4ee0-8b30-3c5c312ba802",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7a1fc525-dde5-4b5d-a595-1ef0c215fc48"
        },
        "item": {
          "id": "8120f6c7-e923-41fe-8c7e-29d9bb58ab8a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "63c1c2d6-a9f8-48fe-917d-3b76c08c9958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29505ce-9070-4a5c-b776-2be0170e2d68",
        "cursor": {
          "ref": "4ab4bd75-f701-43b4-bcac-bf5231b2e83a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "786567bc-9553-4ed5-adc8-75521ff57143"
        },
        "item": {
          "id": "c29505ce-9070-4a5c-b776-2be0170e2d68",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8a198e91-4b70-40fa-9d92-4293223926e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4787911-ce1a-4cd3-97aa-fa003e7df49a",
        "cursor": {
          "ref": "a5eab5b4-0f33-4fbc-bb67-f637daf671b3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "918cf68c-a7c5-4729-b8d9-a53cc1711873"
        },
        "item": {
          "id": "e4787911-ce1a-4cd3-97aa-fa003e7df49a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fad686ba-5013-4527-b148-14a83d441908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73f03bf-7ed0-46fe-a565-7dda0f3ab730",
        "cursor": {
          "ref": "7387d8c8-19b4-4891-9d86-12b100afec2a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "07993e8e-787f-41b2-8816-8f5543953e7f"
        },
        "item": {
          "id": "d73f03bf-7ed0-46fe-a565-7dda0f3ab730",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bca9aa2c-36da-4646-b76c-f60ba5eb07a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd8cf85-6e48-4563-a78e-63306c0364d1",
        "cursor": {
          "ref": "41dd7ff7-7475-47c6-80fd-3d1085a8c3df",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "99fe63a9-67fb-4397-a8e6-8f51ad496b34"
        },
        "item": {
          "id": "cbd8cf85-6e48-4563-a78e-63306c0364d1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5976bbab-bdf6-4d85-994b-2c338ade9fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c4592-6e62-4e4e-9506-f036d604f2ed",
        "cursor": {
          "ref": "e69380ff-6b4d-428b-84f1-f274c3a69dfa",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4fa3c08b-d961-4a4e-b45e-24bea428c0f4"
        },
        "item": {
          "id": "d13c4592-6e62-4e4e-9506-f036d604f2ed",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c62ec64b-bdb9-403d-a489-f94483ff0022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788b8493-5e82-4054-9882-5367a431dc6b",
        "cursor": {
          "ref": "e57205e0-abd3-4988-9ff6-498b97830ef6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7dfe7dc0-1403-4ef7-b3c5-c25a4a411586"
        },
        "item": {
          "id": "788b8493-5e82-4054-9882-5367a431dc6b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ae9a65c1-dcd0-4e69-bd2f-c1cc463a512c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f58688-959a-423d-b727-aeea95d157b5",
        "cursor": {
          "ref": "3a90e1e2-26a0-4adc-a44a-6cc9a91e977e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b7a447fb-d9e9-4a4e-a65f-cc821622ac1b"
        },
        "item": {
          "id": "85f58688-959a-423d-b727-aeea95d157b5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "63a0837f-f5d3-4c77-b446-ed6ce4f1393f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b630a7b4-087d-420c-bdf0-d137f07f9a10",
        "cursor": {
          "ref": "38851c63-8dae-429a-abd1-bccd1309dbae",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9777d252-3846-4174-ae4a-c497cdc009aa"
        },
        "item": {
          "id": "b630a7b4-087d-420c-bdf0-d137f07f9a10",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "451ee8db-3fe0-4f88-8fa4-27cddc14a887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4719a2-41c9-4e76-9311-1e4bc42da032",
        "cursor": {
          "ref": "570caf38-f615-4875-ac6d-fd4caa624ea5",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0aefe783-b337-4aac-badf-60e029a73149"
        },
        "item": {
          "id": "fd4719a2-41c9-4e76-9311-1e4bc42da032",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cdd6fbed-d78f-4a2b-b345-212a6c4c5c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4be6fd1-ece0-4cd0-aac4-276eb1c8ed15",
        "cursor": {
          "ref": "34fadaaa-ded1-491f-b49a-cc74efb9aae0",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a1f47006-bb78-4107-851d-7fabf04129fb"
        },
        "item": {
          "id": "b4be6fd1-ece0-4cd0-aac4-276eb1c8ed15",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7654c8a5-6b53-4336-8d2a-0e9a9bb97329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bf85e2-0533-48b3-abbe-4d4f823a943b",
        "cursor": {
          "ref": "d7a708ba-787a-409f-a9a6-29cff53f712c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8f8265ff-7688-46db-8d7f-c00f1d39909a"
        },
        "item": {
          "id": "94bf85e2-0533-48b3-abbe-4d4f823a943b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cafb4831-0155-499f-be81-96915b2e1c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2345d73f-5560-49f4-a7c0-748713ecc9fe",
        "cursor": {
          "ref": "34f18b18-8540-4f12-9fb3-2c6eeb47504e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cea43fc6-fded-4221-a6fd-cd5565c1664b"
        },
        "item": {
          "id": "2345d73f-5560-49f4-a7c0-748713ecc9fe",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1a7c509d-a317-49fc-a198-624f644ac1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f11846-685d-4a70-b3c4-cffe6f9b18cb",
        "cursor": {
          "ref": "611bc167-f1be-4d06-b445-b8c6b1dea8a6",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e74aa0f0-facf-48f1-8670-abf547b381a5"
        },
        "item": {
          "id": "f0f11846-685d-4a70-b3c4-cffe6f9b18cb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "75b1b6d4-5b68-411d-aa4c-924ff2f7b1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031fd7e4-91a1-4416-8b74-05499db3282a",
        "cursor": {
          "ref": "86deb675-f038-410d-9197-800254b428f4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cf8084aa-9a48-4e88-be1e-1797c9ca1cbe"
        },
        "item": {
          "id": "031fd7e4-91a1-4416-8b74-05499db3282a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0b25f0d9-7184-4091-8147-53edfb5f8b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3378eb93-5cc4-494c-bedf-166c64a48f88",
        "cursor": {
          "ref": "5842f90c-ab47-4169-8313-f6632a798cde",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "79a0b755-e63c-48b1-8f58-631f2f94dd20"
        },
        "item": {
          "id": "3378eb93-5cc4-494c-bedf-166c64a48f88",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2a4b790e-e7c9-491b-b458-c293e1bc8820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431acb86-9ba5-4af5-95d8-8db3c4de967a",
        "cursor": {
          "ref": "2db0cacb-0938-4318-9638-3dab1c1d4b42",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "afb55d34-90b9-4fc7-b747-cf22db5c9538"
        },
        "item": {
          "id": "431acb86-9ba5-4af5-95d8-8db3c4de967a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fa7f9ec5-f7d7-41eb-8849-76fc205a8497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59a254d-9e56-47b2-97bc-163fc8e424e4",
        "cursor": {
          "ref": "4c5f6ec8-074a-4cc8-adbe-9412e25283dc",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "352bdd4f-ad45-41b7-8055-823e830d772a"
        },
        "item": {
          "id": "b59a254d-9e56-47b2-97bc-163fc8e424e4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5c085c44-6b09-437d-8b3e-d9d029a1860a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c2dbc7-c1f7-490c-bf50-ed53a02b7a3d",
        "cursor": {
          "ref": "4d8a0db0-b677-48a8-9edb-df8923fab551",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "28a6e155-54dc-4f21-8571-8f3abb483e72"
        },
        "item": {
          "id": "68c2dbc7-c1f7-490c-bf50-ed53a02b7a3d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9466da03-430e-42c7-9cc6-8815b810e07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6f7c4b-59e5-434b-9ea7-57d2c957c65e",
        "cursor": {
          "ref": "2034c3e5-80b3-4f7e-8be3-b000352f25d7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dbf58420-aa76-4e25-9ebf-76c889a04bbb"
        },
        "item": {
          "id": "ef6f7c4b-59e5-434b-9ea7-57d2c957c65e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "23e2eb8e-4398-49e8-9cec-5965bd744f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca967ff-fa1c-497c-a606-f266389a0f21",
        "cursor": {
          "ref": "e50a371f-1134-481c-93c4-cb6d0302954b",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "78ca4ee2-fbfd-4cfb-8da2-a6e27e300949"
        },
        "item": {
          "id": "0ca967ff-fa1c-497c-a606-f266389a0f21",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a8c60c91-3dba-4b5f-96bf-6810adbd1289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72b09e1-9ca4-498f-ae4e-1b1d14792f1b",
        "cursor": {
          "ref": "c35b16f7-0c78-4892-b262-479a70e4b7c1",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2326addb-da5b-4b49-a6fd-58577639b340"
        },
        "item": {
          "id": "f72b09e1-9ca4-498f-ae4e-1b1d14792f1b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b6189c80-00dd-4f1c-9798-49e4829044ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01e8feb-f499-4301-b47e-6d4f1755e257",
        "cursor": {
          "ref": "5b9f4d67-f50c-4449-8eb9-a23ed27ab643",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c31a0834-fb25-4fed-8bc6-1a7ecfbd3b86"
        },
        "item": {
          "id": "f01e8feb-f499-4301-b47e-6d4f1755e257",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8e5c9e69-eb61-4599-b57a-5c0ed9d9d1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed71a985-145c-4d09-81ef-620419a860b0",
        "cursor": {
          "ref": "97f53157-f810-4890-b418-b930c9b383bc",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c6104ef9-b10e-4dc4-9d3f-2b94563ccd4c"
        },
        "item": {
          "id": "ed71a985-145c-4d09-81ef-620419a860b0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "005bf514-8ea4-4ef5-bcd7-1ed5fb847dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d640d849-fb04-4fd6-abc5-95790877abc5",
        "cursor": {
          "ref": "deabe8a8-c10e-4ce1-af44-3be5bc60c251",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fa2c1b1a-6c68-454f-bb04-5fb523dfbb32"
        },
        "item": {
          "id": "d640d849-fb04-4fd6-abc5-95790877abc5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1fa09a7c-84a9-4dfb-9ca1-bb2fe5e7cf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3ebf7-f696-4ee7-b0c1-dbed3300aee8",
        "cursor": {
          "ref": "c3afb9f9-42fb-4475-9848-c1327eaaf530",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4579a7d4-623e-4a9a-9516-812a963caa6c"
        },
        "item": {
          "id": "b4b3ebf7-f696-4ee7-b0c1-dbed3300aee8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "11069cc1-5fcc-4e1f-bf54-4c46ea1e5022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43621cb3-5e26-460b-93a8-bbaa53feb1b3",
        "cursor": {
          "ref": "f8d22938-2a35-4cf1-8493-4bbf7f4f4037",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "05d136f3-75ac-4dde-9f23-aa759eabac9d"
        },
        "item": {
          "id": "43621cb3-5e26-460b-93a8-bbaa53feb1b3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dbea9d6b-fc71-430a-9068-7cc6e611ba96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b2b892-2698-4d03-93ed-fc32d0458b89",
        "cursor": {
          "ref": "f2b55e71-7918-4091-8052-73e66c4ab198",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2b695107-64a2-4a2b-bf03-e941da93123a"
        },
        "item": {
          "id": "94b2b892-2698-4d03-93ed-fc32d0458b89",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "640acbb8-3dbb-4e30-b13b-240764478d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd88b315-3ff7-46a8-af9d-631e3cb6f892",
        "cursor": {
          "ref": "21598c1e-deef-438e-a4d3-3e9b3490009a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4da4d173-b071-4f8f-80b9-a40e2ccb9180"
        },
        "item": {
          "id": "cd88b315-3ff7-46a8-af9d-631e3cb6f892",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ffd14e8e-1173-4f19-9e1b-09215f831857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3880a974-3938-47aa-a869-dd0fb5f88074",
        "cursor": {
          "ref": "e2335e49-41ac-42fd-8720-1af3351fb723",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "83e5e26d-d45f-46cf-9e81-e3a1b752afaa"
        },
        "item": {
          "id": "3880a974-3938-47aa-a869-dd0fb5f88074",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f1237b93-bcde-4f03-8b86-8fa1d6de79e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8e56ca-275c-4061-8902-340757bd0cb8",
        "cursor": {
          "ref": "8ac2bede-9e5b-427f-b435-545bf684fa16",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f32b382-2762-495b-b4c5-f0593ed6aacd"
        },
        "item": {
          "id": "fe8e56ca-275c-4061-8902-340757bd0cb8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0c9fcdaf-e369-48d7-900d-c43cac846bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71583f61-eec5-4fb0-86c9-76f30e391bd7",
        "cursor": {
          "ref": "c3f1ecb7-97ba-4ce3-892e-91ef0e6d6a2a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9158a65b-7b08-40aa-be59-7e0e6630bc1b"
        },
        "item": {
          "id": "71583f61-eec5-4fb0-86c9-76f30e391bd7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ecce2fe6-ec37-480f-8a5f-69dbf94a2b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc62b92-3d28-4c76-aa27-ddebe3bf9951",
        "cursor": {
          "ref": "16a94182-2742-4f57-8377-be33bc7d3434",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8f25360c-eb61-423a-a4ad-fdb91594eb82"
        },
        "item": {
          "id": "0fc62b92-3d28-4c76-aa27-ddebe3bf9951",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5ceb722b-8484-42d9-9e3d-122b0d4478e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a567cd7e-3497-4826-a5ab-cdd83bb056b3",
        "cursor": {
          "ref": "a2e1301d-e7c7-48d6-92b7-a0915b32d9f0",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1c87927c-e4d9-4eed-89aa-dd74a891b5ae"
        },
        "item": {
          "id": "a567cd7e-3497-4826-a5ab-cdd83bb056b3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f556f92b-0d77-411e-81d1-ac256dc1e37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5830c5-eb7c-4f95-a7af-eb9ae8c7794d",
        "cursor": {
          "ref": "e8a9248b-1e4f-4c88-a4c6-a2ee1334d508",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b6627a42-8923-481c-b853-3c4650b3af46"
        },
        "item": {
          "id": "2d5830c5-eb7c-4f95-a7af-eb9ae8c7794d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "84ed6fcf-e2a5-45b8-b2fb-499ef04c14cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02456433-21cd-4941-821a-20c04ec6e4ee",
        "cursor": {
          "ref": "6f8342b6-a151-470e-aeb1-7c415ea2ef60",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e497e3e0-9055-42e9-8fc1-6b741fef81de"
        },
        "item": {
          "id": "02456433-21cd-4941-821a-20c04ec6e4ee",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b621eb80-d120-45e3-8850-481ab687b33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d578cf1b-6b5f-4f0f-8aca-68da2f3476ba",
        "cursor": {
          "ref": "36ff6468-b580-405d-b032-c79f881b1350",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1fbd51fd-f8c7-484b-928e-c9e06bc3e8be"
        },
        "item": {
          "id": "d578cf1b-6b5f-4f0f-8aca-68da2f3476ba",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d57da106-9376-4c6f-9b31-4dcbf2c2c960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec5ac1f-2104-4b0d-9ebf-2980fffdde9b",
        "cursor": {
          "ref": "7ea6bcef-f9f5-4c14-81b4-6bdf862ccadd",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "293cd0e5-18cc-46fa-98dd-92b66a721405"
        },
        "item": {
          "id": "dec5ac1f-2104-4b0d-9ebf-2980fffdde9b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ac3782a7-1333-4aff-8d59-df9a2ecae27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bff2ee3-b0a1-4d2f-83d2-320fe060ccd5",
        "cursor": {
          "ref": "83bd598c-1ed5-4c27-96df-893741f4c433",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b2e4caf8-28d1-4609-b7a0-abd6c930757b"
        },
        "item": {
          "id": "2bff2ee3-b0a1-4d2f-83d2-320fe060ccd5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f573ea8e-ca70-42b7-be94-d095798da5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3e2a4d-e554-4680-b78b-03cbe648aa4c",
        "cursor": {
          "ref": "5a956218-c6e5-4f5e-b90e-69d754cd6912",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d67c0968-e58a-4a8e-b618-bb0ea0da1ca8"
        },
        "item": {
          "id": "0c3e2a4d-e554-4680-b78b-03cbe648aa4c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "526d33e7-6e1e-44f2-9280-2797c9b56267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856919da-2b70-416b-892b-3ae7069fcb3f",
        "cursor": {
          "ref": "6911425d-dab8-40f1-8876-95165960e7b4",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "af308082-4e4b-4aa9-98c5-44bd694e3508"
        },
        "item": {
          "id": "856919da-2b70-416b-892b-3ae7069fcb3f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e28a8cf2-f8c6-415b-b0d5-783139163734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d27376-ab67-4143-9091-a696248a0e96",
        "cursor": {
          "ref": "3467dacb-7736-4096-ae1e-ec5eb6f0775e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9c9f42f2-9d75-4086-8fdd-106754c6de54"
        },
        "item": {
          "id": "c2d27376-ab67-4143-9091-a696248a0e96",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3030b73a-e238-4ef0-a812-04b24c5fdbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bb6c3e-101d-4f3d-81e3-9f937e0d55fe",
        "cursor": {
          "ref": "c25c09f2-425e-4e94-b2d9-fb66a216901c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "33ebaad7-27fb-42ce-a293-ab4ef9b88e73"
        },
        "item": {
          "id": "b7bb6c3e-101d-4f3d-81e3-9f937e0d55fe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e31f02fd-65d9-43e4-bcea-2366968eda2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f751c19-ddbe-46d7-93df-495c0ec4a43f",
        "cursor": {
          "ref": "cf4e2002-2f89-42e9-95fd-288626c46b57",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dedd8600-afa8-4108-89f1-c3d6f734819f"
        },
        "item": {
          "id": "3f751c19-ddbe-46d7-93df-495c0ec4a43f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "43f441d4-e9d9-46c2-9ea3-c5f37a8fb99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bf4e88-8527-4b68-a2a7-e0e672256650",
        "cursor": {
          "ref": "22f2c4e0-fa4b-4476-92f9-9dd0f77d88ac",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "74902ba9-5c10-4799-bba9-b092b52869dc"
        },
        "item": {
          "id": "71bf4e88-8527-4b68-a2a7-e0e672256650",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "732ec8f1-c997-4c41-80ff-d83c7dffcd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b44f52-b2b8-49ed-b3e8-644a23649e1d",
        "cursor": {
          "ref": "32fda832-bd96-46fc-b955-aaae23eb38a9",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c70dda4c-d5b0-45ac-9e13-35da53096eb2"
        },
        "item": {
          "id": "48b44f52-b2b8-49ed-b3e8-644a23649e1d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c8616e5d-684d-47a8-9032-b8366752edee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff7c42e-dd7d-4163-b397-a3a9424e516d",
        "cursor": {
          "ref": "f1698601-bdb4-4326-8a92-1cc57121d1b5",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "858f41ff-ffa4-4bc5-a5a1-9a9e6978be88"
        },
        "item": {
          "id": "aff7c42e-dd7d-4163-b397-a3a9424e516d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f5e34718-235a-4182-ab10-9f1bf91e84ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd1da75-6369-47c7-9c2e-c8b55db20b4d",
        "cursor": {
          "ref": "6581c33b-a9e5-47c4-aef9-2d0e628ac104",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fcfb24cc-cab0-4c51-9849-c1282278df11"
        },
        "item": {
          "id": "9bd1da75-6369-47c7-9c2e-c8b55db20b4d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4bc9e41e-26f1-4fa9-ad07-bc91a29fc844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb0050e-be39-4b24-b939-f4a0c6383bd1",
        "cursor": {
          "ref": "73e25ac7-8d0e-4d28-805b-8213d7364cbc",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c7d4f96e-63f1-48d1-a9ef-9a7ae9b1a47b"
        },
        "item": {
          "id": "0bb0050e-be39-4b24-b939-f4a0c6383bd1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7334a8d2-652a-47ed-a06a-a05529189965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feb8330-35b4-4428-bbb2-6a590ae8072e",
        "cursor": {
          "ref": "3656d356-35c4-43b1-8263-633abc2328f3",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4920d838-7874-4366-ba78-148ed95410bb"
        },
        "item": {
          "id": "3feb8330-35b4-4428-bbb2-6a590ae8072e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3cce35d5-b68c-476b-97ca-7db31bb6e070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d42b2fc-e18e-413c-9089-310a34434b30",
        "cursor": {
          "ref": "82ba1815-afa2-4caf-8803-1d769c2551ab",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6ab301d8-8878-44c7-98ab-b5d2532572b1"
        },
        "item": {
          "id": "5d42b2fc-e18e-413c-9089-310a34434b30",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c94228a0-4b0c-419f-8db0-9e7b7d7c2d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0abab27-4aa7-4f76-96f8-07389ac0a6ea",
        "cursor": {
          "ref": "474cf29b-a163-43d8-8be1-4dd159b712d9",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "dbd5daf5-d33a-4bd2-9033-2bb100b8eb1a"
        },
        "item": {
          "id": "b0abab27-4aa7-4f76-96f8-07389ac0a6ea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8f2bc977-ca2c-4fc9-a4f2-c7b6098a64e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb0e490-e7e8-4950-9bf6-3d238cda1bb4",
        "cursor": {
          "ref": "2acde958-d70a-4bea-8c60-e74c610f208d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "29f8b70c-29a9-4c45-8043-ae104c7bfbcc"
        },
        "item": {
          "id": "deb0e490-e7e8-4950-9bf6-3d238cda1bb4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "76cf2377-6304-4c89-b2bd-831d79f2157a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9673bce-216a-42ba-b1af-809ff74cb7b7",
        "cursor": {
          "ref": "718e330e-90e1-4093-abb9-8e0a0ab6d04c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c2859f26-3b4d-4013-a80f-bcf0a3317d1e"
        },
        "item": {
          "id": "f9673bce-216a-42ba-b1af-809ff74cb7b7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8bd17302-826a-4678-9572-32bf919a0ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0538e0-a224-4786-8d94-206e35c32991",
        "cursor": {
          "ref": "f8be71f7-75c3-492f-8336-5111b9cbb273",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "47bd0868-8543-4dc3-8221-857f6a1e153a"
        },
        "item": {
          "id": "7a0538e0-a224-4786-8d94-206e35c32991",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b6cc7709-de1c-4b53-b993-660ced20caba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebec9d0-aeca-4ca5-ab26-c0ea550e70ea",
        "cursor": {
          "ref": "128661b1-63e1-4b1c-8086-0143a5585bb6",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "661caef9-8113-45cc-a0a4-10c010e59ecd"
        },
        "item": {
          "id": "cebec9d0-aeca-4ca5-ab26-c0ea550e70ea",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ed37046e-00b0-4d4c-8b56-40a5f763769c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8038c19d-e424-45c7-b917-9eef89280802",
        "cursor": {
          "ref": "88d5ae95-f2d5-4eb2-971d-f07259f56b9c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "941ecaa0-7b5f-4e31-b9ab-a5b11ee9a119"
        },
        "item": {
          "id": "8038c19d-e424-45c7-b917-9eef89280802",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fb9f23dd-81a3-4e07-8234-c7bc6b29bd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d20389-9cf0-4679-b11f-078028305795",
        "cursor": {
          "ref": "0b137654-f30b-406b-8a47-493c0111b99f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fcf33a71-5d81-4a61-8880-6bcd0d5963a9"
        },
        "item": {
          "id": "51d20389-9cf0-4679-b11f-078028305795",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "daaddb09-a3d5-4d87-a7f6-0da1aa9a6c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78fea3e-8e4a-41a0-9c48-1b04e30e3038",
        "cursor": {
          "ref": "79d2807d-0db9-46ce-8a27-d227311fdf26",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3ded3a63-18f8-403b-8ee4-fca2db360731"
        },
        "item": {
          "id": "b78fea3e-8e4a-41a0-9c48-1b04e30e3038",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f5fc3e19-e1e7-4c3a-a5d1-4076d61ab2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5c6489-c12c-4da0-a1a0-a15f9d709885",
        "cursor": {
          "ref": "f5dbb2d9-f36f-46b5-9f4d-49139f144b47",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "52b02911-c1a6-4ca3-954a-4871a19fc9cc"
        },
        "item": {
          "id": "dd5c6489-c12c-4da0-a1a0-a15f9d709885",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "df246a51-4888-4555-8a23-9b058d719833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44f1424-72a0-4f35-8bbb-bbb5ab2d9ad1",
        "cursor": {
          "ref": "40785e10-31aa-42fe-ad4b-b69447e75250",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b480ca9e-31ca-4bb6-81e3-1dd69edab573"
        },
        "item": {
          "id": "d44f1424-72a0-4f35-8bbb-bbb5ab2d9ad1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e0b8b2ff-1888-4143-8ced-9f05cfd70ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b813d02b-c922-4af2-b849-66832e423af7",
        "cursor": {
          "ref": "c2e981ee-b48a-413a-a939-26c0f2539da9",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6fde00de-e5b0-4aa1-b333-66f862c606a3"
        },
        "item": {
          "id": "b813d02b-c922-4af2-b849-66832e423af7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "81540f64-88d6-420d-a4ce-2b8bc5217a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7062f96a-787c-4235-8a1c-e98342cc9c0a",
        "cursor": {
          "ref": "b09cf208-eb22-4b5f-acc6-4b66c9b6b63c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bcca5b6f-690c-49d5-9e82-6e083d929a7b"
        },
        "item": {
          "id": "7062f96a-787c-4235-8a1c-e98342cc9c0a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "aea890ed-b8cb-4698-9b42-a4e37d022a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332fed0b-2d7d-4359-937c-075d94690bbb",
        "cursor": {
          "ref": "a096abde-22c4-4c7d-9d4b-2bfd7c5cd235",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9c82dac7-d004-4a81-ab7e-7e2f8d543088"
        },
        "item": {
          "id": "332fed0b-2d7d-4359-937c-075d94690bbb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "20f3377b-2ef1-4f8a-8606-90931fb99f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db02c418-641b-4dd3-80b7-2a0808ea8cca",
        "cursor": {
          "ref": "80512d98-d618-4e26-9d11-eea5c0c0fed8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2fd86b81-0510-47ad-9fd1-749e78317c00"
        },
        "item": {
          "id": "db02c418-641b-4dd3-80b7-2a0808ea8cca",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5337d574-87e6-40ec-a39d-381176f7e3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f491a8b-a0d2-4a50-933a-e5eac5109cdd",
        "cursor": {
          "ref": "7fb2f5b0-54ec-44a3-bbeb-476a59f56304",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "22798a7a-3ee6-4f62-9b2e-d09948580d35"
        },
        "item": {
          "id": "1f491a8b-a0d2-4a50-933a-e5eac5109cdd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "154509e1-4674-41a0-99d6-e332dd30f2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e23142-d609-49bf-891e-f1c822cb6678",
        "cursor": {
          "ref": "adbb98b9-c82d-4583-8217-1cd8e70d5be0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "54ad72fc-3feb-4a18-bcae-94cb9ce0bf12"
        },
        "item": {
          "id": "60e23142-d609-49bf-891e-f1c822cb6678",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "73f6d831-915e-4421-bdf9-18fb2d84ba57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c6e769-f915-446b-91db-8c9fe6e99480",
        "cursor": {
          "ref": "71eee815-5ca8-49e7-8cd4-d91bb0ebb5d4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e3a447d8-ddef-462a-8c40-b60a36d0ef35"
        },
        "item": {
          "id": "00c6e769-f915-446b-91db-8c9fe6e99480",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b26f14fc-92f7-4e17-b26a-6cd957cd5fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea81459-7e09-4e4f-97ce-243e9eca5cc0",
        "cursor": {
          "ref": "34818ea2-b49f-4547-a0c1-3751323ac046",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ccd5e56a-f027-4338-9103-3d534f4010e2"
        },
        "item": {
          "id": "3ea81459-7e09-4e4f-97ce-243e9eca5cc0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "45ab773f-228f-4630-9b41-c79e76365c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64936973-11ee-40c4-a08f-e69565fb65a7",
        "cursor": {
          "ref": "c830ebb8-ef49-457d-a971-e70299890ad3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ffcf9ce5-2e67-41ad-8c34-037b38411a48"
        },
        "item": {
          "id": "64936973-11ee-40c4-a08f-e69565fb65a7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d326822-2349-4096-8c5b-5e8ce255d5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6bc32c-b860-4d9d-bcbf-bde7441e4624",
        "cursor": {
          "ref": "9276c4b5-aa90-44ed-bd9b-a8fb49b96909",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8926d66d-d451-4277-80cc-5380848b2485"
        },
        "item": {
          "id": "2d6bc32c-b860-4d9d-bcbf-bde7441e4624",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dbbdd9d3-9398-41de-8024-1832031a64e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8626df08-7659-4b0d-bac9-ca93e1e1f82f",
        "cursor": {
          "ref": "83453902-be52-4e0f-815b-cf50c13dfbc7",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d6d38e9d-32fd-4d68-bc77-632b479c91c1"
        },
        "item": {
          "id": "8626df08-7659-4b0d-bac9-ca93e1e1f82f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "038d4d24-0258-461b-b454-4c32e697b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2149985e-9318-4742-bcb9-47cb6753de3f",
        "cursor": {
          "ref": "472cd2a1-7ebb-43f9-b26c-6d921ebb7f38",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8020c712-1bc5-439c-9d58-f34eb6244dd9"
        },
        "item": {
          "id": "2149985e-9318-4742-bcb9-47cb6753de3f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "09be1ff7-0c28-4f5d-9e2a-c9aef12b9cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7631875f-d137-4997-afb5-64f47f6a1bc7",
        "cursor": {
          "ref": "5d21c655-f475-459d-af61-8e7d52b1eda0",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "281a514c-acd8-448a-9912-8803aca20e4d"
        },
        "item": {
          "id": "7631875f-d137-4997-afb5-64f47f6a1bc7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4734a849-10fd-4b57-a9b3-2e928fe88192",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837d20d3-170e-43e9-b327-e22c22e2bd0c",
        "cursor": {
          "ref": "ddce1250-c07a-4821-bb23-2885e6b19fd1",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6ab08650-c575-4b8a-847c-33768b3e95f2"
        },
        "item": {
          "id": "837d20d3-170e-43e9-b327-e22c22e2bd0c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bc25a0ec-26c8-470d-b60a-46d7106b9365",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ecd6cc-de41-4df2-8d2a-b028503cd555",
        "cursor": {
          "ref": "4808d5da-c16c-43e4-970e-1327ae4480d6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d49e57ee-08b6-4eb2-ae61-2a41f7518e73"
        },
        "item": {
          "id": "d9ecd6cc-de41-4df2-8d2a-b028503cd555",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9c785160-5e82-4ee9-a9e0-a014ff581c48",
          "status": "OK",
          "code": 200,
          "responseTime": 7992,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67db3602-4f67-42af-9695-05996478c236",
        "cursor": {
          "ref": "4130e4a4-a4b8-4409-9ff3-61762c9d289a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dbb904db-2cd6-4c60-8ab2-c1e8a1a13880"
        },
        "item": {
          "id": "67db3602-4f67-42af-9695-05996478c236",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1c5cbb51-e0ba-40d3-9ba4-666cfdd8c52c",
          "status": "OK",
          "code": 200,
          "responseTime": 3531,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a0330f-f507-43af-a34a-54731c2b015a",
        "cursor": {
          "ref": "d8d7434c-8872-4159-9631-dbb0f5c776d1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8d131099-046a-4c4e-8997-67b5002b6681"
        },
        "item": {
          "id": "a6a0330f-f507-43af-a34a-54731c2b015a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39b5d12b-976d-45aa-9418-67cd45108b1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a0330f-f507-43af-a34a-54731c2b015a",
        "cursor": {
          "ref": "d8d7434c-8872-4159-9631-dbb0f5c776d1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8d131099-046a-4c4e-8997-67b5002b6681"
        },
        "item": {
          "id": "a6a0330f-f507-43af-a34a-54731c2b015a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39b5d12b-976d-45aa-9418-67cd45108b1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc7806a-a63e-4dcf-96ca-210ab94c5107",
        "cursor": {
          "ref": "94b5192b-d866-4087-8ac6-ccd3f10e9a6d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "45b5f7e1-313a-4f9a-8445-e1102f640fbc"
        },
        "item": {
          "id": "fcc7806a-a63e-4dcf-96ca-210ab94c5107",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9889838b-b911-4124-9669-1417ef9c0f36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0117b06d-88e0-464b-a89d-7cdb213fb291",
        "cursor": {
          "ref": "77bb328b-7dcf-4a2e-b07b-7be034e2524b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "03cd89f9-5095-48b9-9fc2-5ec549fc034c"
        },
        "item": {
          "id": "0117b06d-88e0-464b-a89d-7cdb213fb291",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "38382031-2ed2-4d0b-a3f9-557880d5cf11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}