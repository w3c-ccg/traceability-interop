{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2767e902-d4be-46a5-9116-0d262b0ee9dd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ba203c58-b014-4b8f-b452-c04f6ec36f22",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9260747c-7895-4aa2-8b14-f47fbb16551b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "249c59db-104a-49ca-8297-c14c59b921e8"
                }
              }
            ]
          },
          {
            "id": "cffece75-18ea-4321-99a8-2abad808e617",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f5138f4-9653-494a-9f41-818aea6bf6e6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d6f57971-41e7-4784-ae09-7e760b0c0ea9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f661b049-bbf0-486c-9096-610e33a0eed8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d6768b42-7f68-48cc-b583-29d86cfeb14d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e985725-af06-433f-b55e-ef7c9b3d1aca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d221949e-531c-4db1-8aea-4c976815d3ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "403a883c-d707-480f-ba8d-f51d723212ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1386db56-43b4-4bfd-90aa-6538c6140f31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cee78aa5-c7a3-47f1-b458-6a3380d99c66"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50dfa8c8-9cd6-4b19-9e84-44dffec43c03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32495ae9-f8e7-42ec-876e-8fc5631ddbc9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1f4ad80-4598-4d79-bfea-2ca48e6c6996",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fd5ee5ac-09eb-487e-9015-413dd520d6c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef2daeef-2737-4883-bc40-45c148609fc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "057b5294-6c0d-4f98-92ca-47a140e03e82"
            }
          }
        ]
      },
      {
        "id": "fc1de09c-9192-426c-a99a-44d4b5e2f112",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cc456119-a111-4578-8524-0f33615f273c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7eb0150d-61cc-4e4c-9f7e-cc7e75ac6ce4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0fa3740-f3b5-4da6-981c-9276b18d436a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e6a548-b948-43df-b59c-bbf25448dec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14b5f43d-c07e-4330-be11-2fbdeb52f670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a003f0dd-c8a5-4ec6-8db6-b2504e60d6cc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2529af40-7b71-4e8b-bd0a-8df5dcfd26b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f1698b8-977b-4acc-9c56-aa6c2a636b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc69bc7-cf37-40c4-b791-f224420b8977",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200b2069-9e16-4a8c-895d-3d12e1250fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a9e0ce8-1986-47dc-9d6d-89ecaeafaa51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb3f62b9-6a77-4f64-87dd-c48b7ed4bc3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98dd57fe-e35e-4320-8322-5b19d2aa0eb9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6beba55-35be-4532-8396-87a3d2b54988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7627f551-17e4-4a8d-b918-fd59fa30b234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce4ef9b-12d3-4002-8f91-9a6edb03f427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18d221a-f5c0-4540-9e94-e026a4252b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca003178-0194-4670-a3b0-abf102e32d72",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf19044-447d-4424-8bd8-c4028c734136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a157cbb-4628-4bc9-8f89-7db9840adbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee035a8a-05f1-4a3b-89cd-63bf243ec19b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "92b5e18b-5dd2-40b7-ac61-3e64d9ff1af7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc0b7ca9-1b1a-4a4d-85d8-2878fdd8a8f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b093b2e-2eba-4b7c-8995-0f70645ccb21",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cf92b70-c0cd-44ed-a6bc-3bc34d009917",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1e403704-fa41-48e4-842f-02cd71e48a12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2d5376f-398d-4847-8f61-cb843b545bbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "3666f572-ca50-4b74-9311-3ebe3544cabc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d2594fd-f785-4377-a5bc-0c7202a3dceb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9570ed37-9def-44fa-97fb-4bda51b4e633"
            }
          }
        ]
      },
      {
        "id": "e918f227-9b45-4f54-ad74-e57c71b775a0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2c159f43-fa73-4015-a401-896f58c243f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f5c8684-b5fa-4d14-8d1c-418bb99b1530",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7c14b533-b214-437e-81dc-c9f2aa66706d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f88e354-06da-4cec-8172-947d0447c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fe41a3-87cf-4c6c-91ba-e8c4aedb481d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae74fb3a-5326-42be-afc8-6a988e5ce57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c32a9b8-f44a-4e92-9029-725e5fc96853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a902353d-27c7-489c-8f46-1862172d4bdf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991dedd4-4feb-4e18-a02a-dbbb411b344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fec0b6-ea2c-4d01-90dc-f7cf4d0b71b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb66310e-2145-4e0c-84ac-cd8deb4a7d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "311f33cc-18ac-4db7-9a57-e9c4528c240f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f3dd40-2352-4da1-a66b-8d4d03ffb7d9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe62745-4e7d-4dc8-a3af-7df23ae7bb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26328752-45da-49ca-99c2-ae9d6e62023e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc9d3dc-03ff-47a1-851e-496f90e6905c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb61f559-d2ed-4a19-8bf7-534e865b9982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752267c0-0294-4c2f-b901-4f94c13cb927",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519bdbf8-aaff-473a-9b4a-43f0aae1577b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86870149-87c6-490b-bbe9-0539a123caea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3a4351-0464-4efa-a190-12cf16bb90a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9903722-5392-407c-aacb-efcb279cc3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db49c1c2-9e38-4503-9520-fd736bb095f5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf32838-72b1-4b3e-86ba-eaeab2b3c0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ad75d7-1173-4562-aba5-d91305e2f76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b92e4e-75aa-475e-b962-6c794ffe3239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86db9f27-ab94-4d3d-8fb4-9425ce388301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d791c4-4ccb-4da7-a0af-eccdc1276061",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc7a5c3-4d5f-4c6c-bdb7-3f8ade3786a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c493cef-d0f6-44d1-a3d8-42017a6e6606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96935ca0-f2de-4299-ad2f-77d82dbb5cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6215345b-c748-4d72-b471-580acb9f38af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08df3b8-da20-430f-9762-cb3e643d409e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752ac7b0-4828-4f37-9616-b41e2d177c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0241646-a71c-4acc-8da7-72a701db60c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada374d9-e8dd-4b53-8a98-c06bf968cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2e26393-b744-4301-b422-6a5ee5ecec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0637b540-271d-45d2-8874-a53bc610a973",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2957f3ed-a2ac-4cb6-bbde-0764f34a699c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6850fe7-e0f2-45a4-882e-ccbcd7768ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfc3dd8-6671-4414-a778-9cef1c5f0f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e701cfe-8e3a-4113-ad26-d251c3d016b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237187e8-145e-4075-92e3-16c5ce8f6ef1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd15425d-35e0-435f-b480-47a9bf033b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3954a642-836d-4263-9e62-eb76c7827708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17529fc7-bd4d-482f-b1d5-f56e42f3c16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "107189af-a126-4e8b-b10f-93b5c1004cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4440f8a0-bd21-4983-9ae9-e00258dfc5f0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae8f680-ad5f-4a53-a743-989c6849f935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c544a2-f70d-42d2-9e1e-72434d875b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec11cdb-de44-4c76-b354-f29c649173e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c09f5acd-d99e-47cf-b60d-2fa86fbdc569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ff3120-db51-4554-ae2f-fa6400f93ae7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0423563-b51c-4cf4-9a43-dde41a129041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8097361-0286-445b-ba20-6c7254732f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1609de1-394a-4ca8-81a7-b973c3bd5e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a006e0d5-055b-43f1-ad04-3bbe521ecfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d3a7e6-2e19-4b3d-9473-d0b6b1c8aa36",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549219c9-b0e0-4633-8489-f12f8e40faf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbb05a8-0d94-4439-93e8-c42cdbcd80f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec25008-2d31-448d-8270-5a37184d8438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45fe8b9a-1622-426c-8ddc-0755ecdac067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731c960e-663a-44e7-9ad4-84b19d7d5282",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5c2506-8f06-4de6-96e8-279e1aac8323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fce097a-0f85-450f-85f1-e9111013b387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48879abd-59d5-432b-9857-561c236250ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2590373-384b-4481-8d81-7f987354e6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0078b81-b584-4773-a94f-c0d755f4cd6f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5708c43c-044f-4685-b074-bca554940ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b57a0ce-a9ab-49c6-8b57-bd3500616acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ec8662-e751-43cf-b472-d02c5e484a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e20923e-b9ff-4f5f-9f61-6c1d5caeb5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185f6988-0e2e-43c9-b901-be451d0b2d17",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b53f286-4d61-4df9-9b03-7a120ad02ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0660dbf-c668-480a-8a56-b780c8aa71ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38660a4c-bb9c-4be3-8efc-54a0f793d472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff708a45-1054-4d58-a4b7-f727c387b390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b0b182-736e-4a62-ace4-e8fdae4f25a9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f8770a-8588-4542-b8ad-b1d060fca900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea29773-712f-467f-ad79-75f7a2d519f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb0082f-8dfd-4e65-b133-d9030011f833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d541846c-4e0a-452e-82c1-3ff6458c5ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3a7cf2-d954-4108-967e-bfd2e62af08e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df4b2e8-206c-429a-a5a8-d50f424d2331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb00144-08ce-46f0-9a78-29fd57d67967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871ffd8d-ddb0-4845-9f45-928713075916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63365991-a4b3-4c04-a921-09f77212073a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf80b02-2d77-4f1f-9793-cbdbe42ad285",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab790cad-dd22-49df-b570-c34d8720ef4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0aac6b-2e5e-427b-a8d2-02219ac9c004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56221e0a-8d36-4248-87b1-f2e2e514a62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbfeb97-61e3-42e4-8a69-51bf78c776dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bca09e1-04c1-4996-962f-123395ff106b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43b4894-262d-440e-a958-1f64e89ca3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4296bc2-c0fb-40f4-a306-0d10425a44d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235a5fd1-f0ca-4398-9dbc-8c5af9bfe6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4229cd5-8911-4a15-b9d6-baa4ec5202ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e89dedd-67f8-433b-a456-2b7c8c4c75f1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcfeec3-a75b-4ed1-b3f4-c0a531944133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42dc9538-584b-455d-8626-393c3077af38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b96bb5-17ef-4039-a253-7343f13b01c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a90671b1-a0ec-4ef2-9712-2fc532e1caa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6687df9f-cf76-45d6-b09a-9083b8aa20aa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91230de8-39b9-43b9-82dd-8de5ed0f4ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ac9a7e-fead-45d5-bfd8-f7c18689bbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7aaffc-19f5-4aa1-a97d-856dae741365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "598b17cb-a642-4173-9e81-b964c21c73b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62894f17-24bd-4349-abea-ad38d58ece50",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e651fad-d4bb-456f-bce6-d2536c9b144a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1905ab95-deaf-4a36-9c1b-e1ce5f417c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28914a5-75a9-4043-a579-f8c85f5ee4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c360618-4d71-4a3e-ba55-acad093cf01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f1a7a9-e063-4362-b3d9-231c0bd419be",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccaebdf-cd98-45d9-980c-624eda5b5b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76b7e59-7b7c-4079-b4eb-ed87ab045903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bfceba-b54a-4036-a650-7791a20bcd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05243abe-9ef3-49ed-9e9c-fbff1f6cee46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efbc8d2-3460-49ee-928e-7e2ea2e36929",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93d25b1-5473-488c-9e92-41925ecd6aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487bdfe1-d1f6-488f-ad30-995c82d50acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe6170a-3b0e-4720-98b7-ddd78b43d954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f5183c-adf0-4af7-9f49-b9dada8586d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180f2a0b-9ffe-412e-bfcc-da9e5b5b0ac0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ce2901-2892-4b6c-a2f6-7d02286a90a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24233461-0c78-4b44-b918-42a7f09d9295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919f027c-5560-4586-9c99-aedeba216bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b934e45d-7cba-4124-b749-339212c99bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f7bd9c-c12c-4ee3-91b5-ec2de192b107",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4a6fc2-dfb7-4787-b63a-610f4a76ce93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f94da65-471c-4f24-ba7d-8e1d068a3fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb77bba7-de7b-4e4d-80ef-1858ff0d5d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5b88e2-549b-460b-894b-ef58e204fa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0baf6342-6a90-44c2-ad25-f75e81d3ad49",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81241df9-a56a-4592-b0d2-b491b2402462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ea4f4a-06a0-4735-868b-650975f114a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d65f2a6-f322-42a6-b3fa-2a8440fe6693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a993f0b0-af4d-413e-831b-40c7b3ef0593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cd1159-7f30-4d47-b7fa-3b410da9ba56",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d082f876-d7b7-4908-bbe1-6ff7211ce784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31efe272-9ee7-42e2-8b7a-69d2a7a554de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727bca1c-342c-4756-908d-6a44fa6fc4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b353b46-56c0-421e-b8b3-acde332e4f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0feaa264-4788-4c39-946b-57ecfbe2910f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f12fc2-c1f8-4358-821a-9fe2513fa773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598a0435-f843-4d2b-9d6b-960247a2adb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abf08ec-f033-46bd-a8dd-61ce7c22abd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "354716ef-e446-45f4-8907-d325bb0c654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fe9dcf-62b7-45da-84fc-5a1f8dc48838",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4969f31e-e854-4ff9-8618-3215de24d573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b2c27c-d17a-421a-9e13-1c49d345cec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cedb17a-8c6b-47a1-b064-1cf022d4e250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fef115a-43cc-4fb8-9acd-9e019c9788da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58e47bd-a6f1-47ad-90a6-c39f3edc63e6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c429247a-074d-4f40-911b-5e1b21f8503c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cfeb2b-ee49-4bfa-bb7d-38b1e3d07a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247026a-fb52-4b3a-8177-f7cab13ee1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4762eb9b-4856-45f8-a2bd-fbdc44259023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8302b7-c6e8-42c1-b1a3-f379283b76bb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2a68bc-08f5-4841-8278-2f1fd35839e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b171ac5-564d-4275-b504-f4b4e791f16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45f890e-0262-41ad-b9e4-5d7a04c2c3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e87aeb25-49c6-49f4-96fc-c9965a6fc581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45158186-a984-4445-9c22-b71f95162f6c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4921f53e-736e-4821-8c6d-e3aef9c6ab14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6d8ede-b926-408f-a5f9-985d3db346ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d09c47c-d266-4252-a852-c514c147c5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb8135e-a80c-43c8-a3cb-c2c27facd6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434188fa-71f0-475f-9caf-67f75f08d15e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99cdf44-5e71-4cd8-adc3-37ac7e37cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c429c0cb-739a-4635-bd8a-2576d87682c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24db0e0f-fb68-4d50-bbac-43dadfc32d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5657ece-8823-4506-8a52-3802292e8078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a241ea3-225f-4350-9f1e-013ee27e2d7e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa45e850-a49d-4c9c-8031-5b5fe1967cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018ad9b4-9e77-47ef-9305-c7a444e559fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a9104-641b-4e29-9fab-566610f8c542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cca848ba-ffab-4f3c-b394-6496b02af6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659abbb3-aa2f-4fd3-9554-a77aeb1c1ad3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d74b36e-71e3-4ef3-adc4-4fceb440ee6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc0b4a2c-436c-42a7-b518-d5d01a577446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48f9cd1-d07e-437f-a301-940aeb16d574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bef66fc6-0028-46c3-aa8d-d7d3bdd3b9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6b609f-ea03-4b8f-835f-3281a493e156",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15750b2-e82f-46a3-be7b-b889349c66c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4886fc4-39ce-40dc-a670-6da455457305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afab886-3463-4fa9-a392-5c76c78e38c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4986e537-29e8-4ebc-af8d-e15bb15f25f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303692bb-68d4-4be6-bc4d-96b5751ef759",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade3574a-6d82-4566-9ae0-0e890d11dbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c5d51b-07e8-471b-a797-6fff70536302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc18a4a-cd9e-42ec-8e46-a7e21e5dc4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e152bf3-c5fe-4575-b853-0fb8e150cfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd424da-68dc-4283-99a8-3ad9c5dca153",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7192f82-12f1-444f-81f5-0ffb27e8f75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf05b59-1663-4219-8ed8-695ba76a7b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d8481c-9f1d-49db-8ec1-b699ad52a718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5241e7-c89f-414a-93ba-0b7d09fc1a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd94c6e-f899-490a-9758-782b92aece74",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912207e9-b8da-43c6-80f9-773bd3392645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274ae459-bf6f-4042-bd54-6e8a0610fe91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2297129-84db-4296-8aa1-ca0f54fb87e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2529433-a67a-4a6c-90f6-3f35c8a2d940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b11e16-f495-40e7-bfcd-be37b4b919ca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f0b3ec-7a25-436b-a7fd-ae75353e96c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b263601f-6337-417b-860e-c06091cf1569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d2b0d5-da65-415a-a39e-d43f4b2f6178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4368edde-52a2-4f48-b4a3-91b3bd490cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a022dd0-cf64-4bba-b0e5-ab78ae807802",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cecef3e-2ca9-41ca-b01a-cef0165aa73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace7ca32-ce0d-4748-9deb-e852edcabd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cb660f-f50c-4faa-aa74-6882fa83ed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "764960b3-64c9-423f-8167-27c6f1cb5844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb6c847-b375-439a-a99d-55319625e55d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3866eb07-4488-405d-8dd5-5f87dbd0c8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc461cd-669d-40f5-b808-2cea6335e8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c649e973-df88-4114-b873-daada53015c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1234a99-fa59-4855-a1c2-e371f284fbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a040a5-c6dd-40a3-9462-3578d412b185",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73693375-77a3-4590-be65-ab1a7e4f3618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be622388-5c6d-42d1-b403-54536a4a07ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bcb884-8e38-4aba-8136-bc8941735080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e409c40d-2fb2-44ba-bebd-8709d8fca920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f3f14d-50f0-4300-ac0e-50fa5f7f53ee",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065e2ccc-21d6-447c-9a46-a75de5b15886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34700c3-c027-4db4-abb8-804cdbeed12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502af3ca-7fb0-4bea-b5c9-2836c257f93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede7e53e-88dd-48cd-8d79-56f5577ddaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f49355-c2bc-43dd-9471-1b700962c86a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd147bb9-569a-4abc-938e-fb2e9cb9e1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c5a041-8a1d-4da8-8856-8cd39e362f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f14294-89ab-4915-bbd1-c1a344fc0c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6ef029-ad27-43eb-a34b-f3155851c96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a9b04d-46a7-4869-bd32-4b4048d54255",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d2e652-3596-4f3a-b05e-1d91ed86faec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071689b3-d609-4aed-a9a4-307095dad3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d011654f-2e5d-4f49-b0e9-93317c0bbbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da741e28-aa86-45bb-830c-34dfb8ee8d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ed0c70-f335-46f0-b1a6-4b5bec34f048",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecb34f8-d415-45a9-80d3-acf14b6afd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c287653-4d33-46c7-aa24-ef383eada211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c34f0d-9287-4f05-9226-c07ec6664bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a664ef-4c2f-42b2-977c-f31b0c3b41ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8124760-887e-4afd-905d-8de287bb20d9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd16f4c-c7e7-4f61-8f85-af2f628ee341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fb6263-ac27-432e-b241-bf64538b7f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f410c0fd-b89e-4f01-abdf-0508136d3f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9908c10-056d-41b4-892d-79bc4766a8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea478b8a-b7ff-410f-b357-8a4f0deed2ff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efb1a5d-285d-4c87-ac87-5c188d13621b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900e8c55-d2f8-4f1a-91cd-9a48b67bad85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3350e224-e1aa-4615-9550-f042b49ecd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6118ee20-83d8-4a3f-a5ec-d0833f0c3004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf39fa5-a251-4e42-b7ec-492fad90b69c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d908a76-3eb2-49d1-b660-1781e4c8cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0334df17-bb3a-4e0e-b544-847c06c00914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61b294f-38aa-4090-85d7-909a7abc0648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa60c15-4e89-46c6-ade4-647aa0ac03c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1632ee90-7944-4aa9-9e8e-366621fc982c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9783ad78-d64c-4025-bb34-3c095cad6fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05bd511-a021-4792-a9a6-1a3769fe16d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1be9489-c427-41c7-bd19-b38ff3050c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd6179b-53b7-4596-965d-4754f340ffa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e082e0c7-ed13-48f9-a906-80a60cfa934f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13ec1b9-a95a-4ba3-9e96-b3dd6e16bcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e8cfab-7e95-4c5c-8470-e665d0c2cec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654d8cc6-d0c2-48e7-8e04-12cfada712d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c3caf7-fd12-4e8f-97a1-ce6c796c9f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261a5361-3f94-4e6e-a7de-d318bd4ba33a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b854af02-69f1-4011-9a7d-1ab922208cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc40cc1e-fa88-4bda-9d6a-52311b52e1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64689368-48ee-4581-b94e-779fdd10433b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ff3341-1f2d-4e4f-9376-46a354e4ace8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8904a888-6aee-4cfb-971c-132d17290807",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1072372-443f-4d69-957d-dd25fe6fcabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d94e0c1-0aa5-49c4-ae91-0c16c26b1e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25476719-0ae8-4cea-9983-240ec8d1b6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0470ee5-d8fb-4948-bde2-0480dddabf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6875b404-eb29-498c-9168-d4498f45d6a3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a4219e-9498-41db-8639-3c08ec4363c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f14af7e-649f-4eb8-b04b-0af7de727ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ebbfb8-04c1-4c09-b488-57a948287693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa08ca2-b876-4ad0-a6b5-081bcd574a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e06075d-91e8-43d7-af14-cc463e83ab2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fa1e84-bdf8-44f1-8ee8-cb2375843a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c69f51b-ec48-4dd8-bc96-17e50d34d9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7194a101-670f-4150-a4a1-410f8d89dd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79550332-e6a6-407c-b8c3-15d1032c9c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db44837a-aaed-4985-b1df-1d531c175673",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9191a14f-cf7d-40e2-97b9-86710c681970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a16ac6b-8e9f-41d2-8991-4253eea704ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86066935-b03f-4776-a76c-24dbc0752bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1630590-d15c-4c72-88bd-7fd28a7f5708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d9b29e-0b89-4fad-9dc7-c72f51c231e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7198e100-611f-475a-9f36-181f2e7a7bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c0ac10-8a8a-4f77-a1fc-5c114711467e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a37a6ea-e155-4382-a3fa-e4292906d00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6b3ea4-e7ff-496a-8281-b6433dec167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b114be21-a220-4f30-8a4b-b711c14b2b41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7b63d0-df29-45fa-9b1e-2ad970dfe123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d028cb-c7d7-46a0-b128-c5586c9235e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e297a515-3037-4e0e-9da7-205d61d010ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd361561-61f8-483b-b174-50145b171e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b391440-0fcb-4625-a242-5d75625dfebc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bebf3b9-89c0-4c62-b072-8f516db87a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1db5e4c-b3be-4166-aa09-9c71a888e862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d906262e-8a63-40e9-81c6-2f4b5c22a953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea541e1a-99ce-499f-8641-cab10184afb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cc6cc8-0948-4b87-be26-bb7fc8fab045",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539a715c-afeb-4ae2-ae17-244ad8126bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aee16e-c6b6-46a5-af50-e35a0638bc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960d757a-5823-4504-9852-a7cbacc12ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c56eff-4012-445f-a6b3-5bf1ad1ebb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0016a0b-6a2d-454b-bbfa-b6bed572dfc5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb19b51-bbf6-40d3-9f28-b517790a3ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d30951b-f78b-4bec-a3b5-6f8a23fd2324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd94109-9546-41dd-bd85-6618afbd4ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be635da5-19b5-478b-a217-59edbd5699cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cda1e3-9fa9-49ad-9a07-0b9204dc06f9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587276bb-9cb7-4f78-bfb2-fdbfbafbeb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e06a1a7-1ac8-4e9f-b07c-22234491a821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac51c28-bad6-4f8e-ab85-dac7a12d546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de015812-d0fe-4881-af97-e0c059e35907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c78526-d3cb-43b2-b098-7d941c1395f3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2ee3eb-46f6-41a7-8498-2746ac219efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a39b4e9-08c4-4797-8fb9-bf14eea71201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15eee79-c6c7-4cd7-8aeb-f5f2454040ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f16cfbc-b959-4efc-96ec-407438864fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f3eb6c-919e-4897-b76d-980fcd25b780",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8b775f-aa3b-44cf-ada0-b6fa53348d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5db16a6-a373-4de3-80a3-93182e7fe9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c019da8-ad26-4383-9b95-a7b6e29b17e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "115e3683-6ebe-48cd-8380-3525bd382589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212657b3-2603-44b0-b490-4503b860407a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a452e2-75b3-412b-8e49-68d00f3c80b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c18ea29-309d-467e-a273-a3b092101aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6a2fa0-55d3-4e4a-a3f5-69f858816d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e60ab2b-5f39-4e6b-9bdc-ed30c7bade88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e022f225-02b7-4079-9912-f841d9cc858b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e585a6-d450-49d2-9488-17e92f67dbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac915e7-9cb4-4d3b-a257-3ff3e1c7f761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afac0ff-6532-4a85-8ff0-a45f0502995e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0962f245-e3b6-4325-87fa-8d2eb514bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d60c620-1ce6-4b5d-b266-b33378a3a9ee",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeec62e0-e66b-47ad-8607-4dc84e1baf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0542fa-d992-4982-a6a3-d6d607371744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd7f5b5-7990-4d1b-b628-792a427cecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85cf66b3-5d9d-4e7e-92d7-bcc77cc279a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81b7f35-cb0a-438b-b3e7-5b5dcf002888",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae14b379-f90c-4f2a-bb0f-24d55e141a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7756b09c-5854-4263-8913-f41d52c6958a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29363699-862c-473d-bb0a-8788e9e3af31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "354e2161-4d02-43bd-805f-bb6295bc5974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e309fb-be8e-4e56-b02d-9f7676026741",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8f1f6c-745e-4fac-8f32-5b3d35c2b29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f92ae8-d4c6-43d0-b2fe-1661f785217f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebac47d-607f-4c80-ae35-fdcc0e06bebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8898859-97b7-443f-a7dc-72c0de402938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21aacba-cf26-44d3-a66d-73c3a3eb56ae",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48c896e-8c4a-4d23-b138-2c54a21d9236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74274f4c-8b18-49f5-8f1e-c89853f2eb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdfeffb-513d-44ea-823f-088978fd5db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57060e07-dafc-458e-87da-cf181f1b5ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd654f7-1001-4e2c-8b62-6fe8768517e8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22c295a-15cd-4acd-97b4-ce91889589ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8488608a-8645-44e6-b5e4-cec888b1e50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b7ac66-9d52-463d-8003-c096c76f3fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1507642a-762c-44a9-8448-f4038583cb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c60b3de-8ba6-4c49-9ede-abf4e9f6ba8b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50d156c-b9c3-4e06-961b-6ee60aae79a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196e7330-fcd0-4a87-87a6-947c4c80dab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a4e234-0e34-4b7f-93bb-69080526a262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f98bcbab-72a9-4b77-bfd9-3c49e33013ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a36033-f5a0-4822-a4d6-92384ef91668",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e09d2b-f49f-44ce-9ce1-d98afd6fbd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae8becb-6c46-40e7-b19f-8b022f2eb459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a29800-2fc6-482a-845a-022a300b72bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d6167d-3b9e-439c-b979-d2bce4f62f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bdf1ee-ae98-4d75-886b-e5ff575be38b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2621913a-0650-4b37-8f19-aadfcd7e7f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3ff422-311b-47b5-8aa8-d03e2dd6606a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12547d12-76fc-499b-881a-7ed0a48296bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54130d71-16bb-4a2c-ab60-6609bb54f37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d740302-2318-42d3-958b-a459d87706a2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1c7823-2b38-4c45-acff-3399b0208c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c013fa3-b54e-46f7-b536-13f74834a4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35098cf7-48ce-427d-aa1d-56f76985f9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e77f6d-793b-45da-934e-0a1097badf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c487ae-b1d9-4f2b-bebc-482388ca728d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0e0814-33f1-43cb-882d-cab147f7f46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94342fd3-dc32-418a-b535-078b87de2305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c536f7-3b8a-4f82-b234-aada755b705f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b43279-c8e3-4164-b025-bb93dc384850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39030e23-ccda-47bb-9c27-e574af91596a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc6280b-ce46-4d3b-8e48-8b5938f91f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77a43cf-769d-4d68-aae1-fe0e0c0c60d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193474a0-7562-449b-b77f-f4395f12e54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66e34820-2a3a-43c6-825c-4636d1a673ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d630d8b-8188-4e08-a673-35d7aa9546ac",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba5f370-628e-4c03-a050-b1ba55e7d4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4450379c-7453-4cfb-8bb1-77a0c872020d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbebfb81-5fa4-4171-bf72-97c78846d36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32b3296e-299b-4567-b62c-8b7e07aa9f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73008bd5-af04-4019-8799-530bc71bfd28",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd51ce2-9a43-413d-8c88-720719c9a396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39ec943-ff5e-43d3-8eae-f03cee6ad652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddee76fd-a546-4541-82ff-0fa07fd2517a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41725ac-4821-4031-befb-d1c3271ec2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c85f3fe-9cc5-418b-9912-6512ebe2e6d6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb91067-1b8c-419f-aaf7-08a2baaa592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c476a7-0d5b-4885-bc67-15266d9e9fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5717a3c9-3643-48b4-bceb-a1899bb99b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4802c79c-923e-43f7-a37e-c95946882ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5310f3-0e22-4ca2-83d3-c300cb190739",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee782733-0940-4244-9f5b-c911c1df201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff580c7-bbc4-49e1-9513-bf5080099198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9b359c-6670-4f9c-934e-636dfe237070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33baa3db-0b18-423c-8b98-c14f0b7ba5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c10da1-2885-4b17-8774-18535380c495",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0ff436-cfb1-4f96-acd6-aca938a8a5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d48c9e1-dc0f-41db-af3f-aeb203a6d360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fa6984-38f2-487a-ab67-7030b1675cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f559289f-38e5-4616-a842-a94f87f709b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaa2f9f-fbe1-40d4-ada0-3fab566ea369",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d88650-fa70-452c-a4f9-ed1885ee3e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f95b58-f8ef-402f-97fe-c50f68e387b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6ae3be-a2b9-43dd-8ee0-56a2265e4f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a889268-91b1-486d-92c5-14359fb587a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca3f606-6b6c-4b37-9986-9b403e0afdd6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee098ec-33f8-44c5-b0bc-64a43830279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0e5f4b-028d-4654-bc3b-63a7635f41b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e205cc53-0c7d-49c7-90fc-4e1bb0c48ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be8bdeb4-58eb-433d-85e8-eba2494ac988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba384db-f4ef-4197-9441-dba8c75f02a4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e1863-64a1-4865-b39b-4ce9d118a44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be62a93e-51b8-4651-9347-0c92c1ca9d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb3dd56-5283-4840-841f-c45c05e3384f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c79af6b-e5f4-4f70-a33f-d42f80af42e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0c6842-df04-4511-8b44-f6605e6e9a77",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace924b6-f05c-4279-aa29-cdaf55f26099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3577eab-e582-4772-ba28-db499a39aaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9695854-b9f1-4200-8453-e5bb9c7d473e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7abb0dd-8d5b-4d29-b053-7d098be31eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03284682-e649-4f3c-b9e2-61dbc761bc20",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38d1bc6-ffb7-4730-be70-07fa4b322cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6df90e-c4c1-4d60-9c87-f9df4a185650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c2dd96-73f6-4078-989d-31130116abb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0f16a5-8386-4825-8590-490e739ec72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637cb181-e13b-4607-a26a-01f523493125",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45c4019-38fc-444c-be85-7ec8efd84a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac94fbdd-d9f8-4818-8d9a-d5742d5cb2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f05de48-32b1-4f10-bfd7-60579845100f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db03f7c2-8f53-47f0-a210-c41c27f09c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca14fcc-e8ed-455c-9748-dcbb5d24212f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f109e38e-e7da-4dae-a326-c06c4bf46a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f805034-dd00-4521-9766-1e760b31e75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0dfdc9-379a-457f-9796-7c6d9055fcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f468f665-0948-44ac-bf5a-9585f177c294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d745247-3044-444c-9777-805cc513ea3b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fb41de-1f52-488e-8766-8febf990897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2174d0c0-fa7e-413f-b949-7fbcb8b86045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c5e776-0d6d-4ad2-94d6-e7a2b5ce2a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf8d9d5-0ed8-4f96-90cb-258f0351a3dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a190b9f-f487-4397-a636-b5c8b0940928",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efdea225-46c5-41db-930f-b5557ab4a337",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8800f6-0d6e-4d95-8ad7-9685318466dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6978b1de-4e55-4eed-bf4e-cdc95e5c85b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866f55e9-6686-474d-991f-69e31be158c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e2b356e-1dde-470f-a42d-7e1be3bdb431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a846076f-7dc2-4f93-a898-c3fb96eae168",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947ef9ee-352e-428c-9966-59e42503cb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787b59ca-7b40-4598-bae9-46542721d682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df70a8d9-3b64-4fdc-b457-239b922be147",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af080ee5-58b2-42da-812c-45c223de90ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "428df1c7-193e-4ffc-a2aa-4b23280eec63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae0b9a77-4f04-47c8-8415-4768dd6dddff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aae6fb51-c8ed-4458-8f3c-060cdc11f226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70174784-031f-4198-a4b0-01c2c41865eb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "078763ad-4fa2-4ace-bb88-20726a53ec1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6feb8ef0-6f11-4406-962d-83b8f2c56a45"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "12a579d0-625b-4c07-b0c1-63f33b1013e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b78ab661-5c2d-4525-9d09-68bb2d933441"
                }
              }
            ]
          },
          {
            "id": "ec42b2c9-1406-401f-bd99-f39dd5467f61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43a3e088-5383-4b73-8f30-573e7ee2890f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b08daf1c-e592-4b85-8ebb-2c5201d85264",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "716f1b43-870d-4023-b09e-a67ede7d24a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55f6c43b-31dd-4776-a748-5ae942bdb264",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13e93fed-6be5-4ad6-8a24-187ae419d760"
                    }
                  }
                ]
              },
              {
                "id": "c67346d0-5a46-41e1-9527-4763d46a70af",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d25e72c-134d-4c52-8dad-fd5a6ed858d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c0119be-6cdf-44fa-b820-37bdb3550d51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d5c7a46-9faf-4492-ad8a-112ff762659d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93ba5f6b-0a13-473a-a306-960d4857053c"
                    }
                  }
                ]
              },
              {
                "id": "79c8259a-854c-40ec-89ff-cb4675bbef01",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6006ecf-7425-46d7-b883-7b823beaf2ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c200ab83-ac23-4eeb-b8d4-6fb38d0da617"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec3f5564-30c0-4633-a932-548341823431",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62d593f6-2ac3-40a8-b42f-baae8b5a97f2"
                    }
                  }
                ]
              },
              {
                "id": "272a3e56-f94d-4917-a7e5-b9ed5d34c5b3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9df122c-3286-44f1-8747-dc20f3286b60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a64d85c6-1c22-426a-8380-ad044499d380"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3b9465c-7a13-46f6-b1d3-0501dd333661",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "99916816-55ed-44f7-9e83-8bdbd0f48cb9"
                    }
                  }
                ]
              },
              {
                "id": "0ea7ec33-4945-44a1-aac3-4d6b5b6325e3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e185ed50-1214-4a28-bacf-b43d8cddc826",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "568b6fc8-e139-4ced-8e2f-eb81d39dc127"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c903095a-08da-4c66-9706-b8ebf9f3e134",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d3a8e29b-0afc-41af-9939-4d48c1c5f8a3"
                    }
                  }
                ]
              },
              {
                "id": "0e510de6-cc79-471b-a06c-1519ac61d3b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "740537e7-1ef4-4fe8-9ac5-5f6eb1351dd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85e28557-4884-45f6-9050-13f1050b3c3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "220a7d43-296f-41f5-bf7c-4aea3ee3f4e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2438a083-7db9-4450-92d2-3cfddb8fa203"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9472d213-ce87-4c86-9972-740f2f21c801",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a119e33-6adf-44fb-b422-0500e8b1fff5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a14b8a0f-6567-4d66-93ed-3c0e9edf4ea3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3728ac06-b6a9-496a-bcb7-1f92a4a3faf3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efae5140-8949-4a57-9025-0f7efaee662b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5babc9dd-2b9a-4ca1-8b8e-9fcbae8565e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bcdf22d-723e-4b06-b5f7-26888b59baf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c04cfbbc-d223-4c51-bf9f-bbda03327011"
            }
          }
        ]
      },
      {
        "id": "5cc0e110-a2d7-47ed-b96f-922aaef31da5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "112a282a-fa34-4cb5-8164-6b7aab0cd6bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48d1f3e7-a667-4be6-ba03-31ef5f88df2f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f283ffad-b0b9-41ec-8c62-1718381112fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e29c32-0d75-4530-ab24-18fd5145b875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff9b12e-e767-43c6-bd27-c06be982ea6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca063a-c5c6-4d95-ac67-5a47cbbf82bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7d2050-5b0f-47fd-b836-6c6f37fc8272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0d6995-c4e1-44ad-ab9b-122b2d722734",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4966629-9f26-4199-a70a-13f6d41ee145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295bd252-7a0f-42d2-a17d-54f57dca0039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201a74f2-2a50-44b9-b2ce-69ec2f47cca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62168d0a-c43f-468c-97c4-f3e00f028796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7866b03-d75e-4125-ae7b-1989e02d9e9a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca954be4-817d-485a-a783-010e1ef26860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8316f081-432b-4fe7-bb8a-27bfc423c375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d642b93b-abc6-448b-8b56-6efc5bcb6a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adda1491-a325-4036-bfdd-dd9cbbaf0b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef0cf7b-a108-4b4f-ab45-7e240f44b2ef",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63aff2e-6589-41e3-90e7-90ec2ebfa6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdf358a-502d-4f3d-96b0-9d601bbb2b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed19227-5fea-48ba-88a1-cc522a6070f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "894e99d1-e389-4e0d-ac04-edd88ddbdb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f177fbb-74e7-42aa-bb93-9f35eb0ce502",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2269cab-f27b-4901-91d9-bd836d9f0af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466bae7e-9b19-4e3d-9656-53bd18ae8302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2c1037-1b41-4285-95b8-c4487982509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21413b03-b602-4f45-8dbb-47f4d0f4afa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99735c7f-1c89-424d-a65e-864f77420d35",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013f09d6-d89f-4d77-b3b5-cbfa8c06da9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9447b8a7-325d-481f-a42f-6dc765a7d2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece66584-e9d0-4e5d-acb1-cf31d45cff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "869a0c05-997a-464f-a527-bcc82de563ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f189f45e-30c0-4602-b8c4-46a82d2c177d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dea58b-05fa-42bb-a6b2-b09660567152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154aae4b-9d1c-43a4-b728-1ac6e2401ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee8d322-0f13-48f4-b16b-f4b9dda29cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8970e8f-cea9-4d50-b313-ee6594f8a695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b239701-731d-476b-9f22-d7905acde0d2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9d6448-cfbf-4a09-baf8-e5e671ec676e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8824a23a-a3e2-4c11-aa90-36aa80fb7e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f84cb8-c422-485c-995e-06e36da9dd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d91a936c-02b8-4f8f-b487-1526b44935b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d83370e-0f81-459c-805a-6e205ee0d66d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8f7397-7e55-43e2-b5fc-b4427fb984c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb565ce-6c8c-459b-86f4-4a9c8ab5c534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa08e1f-29b1-4305-abc5-07af272e719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1c1944-87ac-4cb8-ab4a-74986f8124c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da31501-faad-4cad-ad95-de3bf369a6bd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66475368-6102-4861-a106-679325824e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482d01d6-33d0-4f9c-9313-1576081ee6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1989faa-4a5d-477c-a7a5-66f1048f74d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3dada5-9310-4db2-a835-9163d709aba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e50b9c-5d76-43f0-b002-c0cd2d667140",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3b01b5-2b05-47eb-9da2-006b1d6330fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6bd0f8-f059-49a7-a44f-7992fd665791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240f2e69-cb76-41a5-92ff-9e9fce8e9beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "895241e7-c5a6-427b-bf31-70a86d652fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c339f224-e0d2-4c98-8e83-e77fd35ff54c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7286a38f-9d42-4e24-adba-3a2bd88b4c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c92a9e-817e-42cd-a27b-08d8a379e992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae00319d-e47a-4352-b5a1-5698755ec563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43254688-430d-4c57-b0a4-0e533e2b92fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dca854-9bd7-4596-9a0e-60061375cd58",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c325b900-e303-4bab-b6fc-144bec6ca263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf330ef-6dbc-4e41-809b-2284407dc668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb1f85d-5d17-4c5f-a72b-a0bf40a33e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "166c0f5b-aac9-4a75-ac09-ffe9cfa9c5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7313bd2-f120-4119-972a-7c9de5bbb20a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11477fc9-27a5-45c6-b30c-715c68ac9b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceaef25b-3cd9-453f-a362-9f8c78d0f05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8a5539-da69-4d77-8ba2-dbf4cefeab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ce3768-4f99-4ffd-8e94-d8fc3edf2244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e37a6f-107b-4bd0-808d-237e5aff11d7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b578cf02-6649-4321-883a-10b6b43e55ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d502e3d4-7f68-4c65-a90f-ea59923eae26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faee9101-045b-4b8b-b4ba-d61629892ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc1e7a8-1758-41e0-add8-3e9a48dfad4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38771c5-1211-4c32-b283-1713682a07ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0efb49-5071-4f48-bfd8-dcad64e8712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1015ae84-8d4a-4b07-b4a4-d038d3d16e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3166396a-7892-4174-a5c1-6d1d90b42005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b18e7ea-94e3-429d-aab1-bf529936f929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760de033-aca2-4e0d-9d81-4fa5693cf8ea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a2312d-7864-42f2-9467-5094d913377e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0579e08b-dc62-4661-9ebe-66cb09511ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b388ce0f-8e0e-4192-8ac3-41a745592118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad769a9-16d8-4b01-abb4-622298cb6d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a81168-5a55-4754-b16f-a625faf11019",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300121b2-d84e-4654-903b-0eabaef5b29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41be0d5-c392-4330-a7e7-e1fc71209256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3bfccd-b24f-46e1-afb2-dd87cda01581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "329e39ad-986c-4696-97d8-68aebfaa2ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dabf4e3-4de4-465d-ae13-efa2ed3599fe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a09ad9-76a2-441b-afb5-81aa22090485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c04a01-d130-4d4b-8931-37593ea7d17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b6fbb5-8192-4516-9c97-b8614ecf70b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0991272e-4430-4dab-91f5-51045a831a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfeefcb-e5f7-4122-a55f-b185f6542df1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1050ccb-a8cd-49bc-8b32-633e99568662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a776820d-c543-4843-a5b9-2afb056b745b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679c16c6-acee-424e-a0da-d518d4a58f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c09acd2-226d-4a30-ae85-a4270338c6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29893a1-b3c6-41a2-acf9-18831cab5263",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ae3a78-763b-44fd-ad54-1c2153653d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cb2dae-f95a-4a9d-83f0-76cf17e787d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d549f56b-2001-4966-9514-fe6de9466dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ee5eea-3401-4b46-af41-a5e41b284a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311ae87c-9291-4e93-aca8-6edfd5e36545",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cd6522-3683-4c9a-9d8f-ea87d647866b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfed0a4-52c6-4d47-a253-f25e619a0ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8985a4-2ad3-466b-9fbf-d453b9838009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "673bd8f1-4c3e-4e37-b932-18b80851cfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9048c9-94d3-4d74-a892-cd7eb9b7101d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a9b0a5-18b1-4369-aa4b-07ff283ae183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd36524-af45-4de6-880a-9adaf1510445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5062b1b-84fb-4e79-abd4-ce864c527973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8ecf4d-5909-4ed2-859a-257f10094f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec406d7-5c91-47b5-b7cf-2bd18911a35e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57bdd4d-a63b-405e-aa32-df94536668d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2be7e7-eba3-4cb5-a300-523c2d9ea9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1a0b6c-f912-4363-b740-98be3670309f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd396a4b-5542-4820-9ef1-6bb022994793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43047007-ffff-4a89-8aeb-623df61bae68",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed267151-8f59-4489-83c3-d6d801218ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e06534-ea0b-4c41-8c79-9d36441a848e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aec2041-434e-48d6-aff5-0a67dcf532a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa1a616-bc8f-4105-98e9-31275f3e08ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5eb5f1b-0eea-480b-8e13-8f2b2380c414",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650ba88b-bb0a-41e3-9747-f8292c5dd531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35966dbf-6558-4b18-92a9-f9effcfda223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9fa934-dc10-41b5-b079-de0ba0b9c72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c8a369-b067-4e8c-8f56-81ee6347d74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac6d14c-64d5-429c-94e1-c0b6b23eea6f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e325ba8f-1e21-4e4d-874f-651304975453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a32ae55-6509-4247-83a3-53194662b1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1236096-cbb9-4e79-9322-555ff7a85645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdf514c-63d8-45f8-b2ce-4ff6d29fb891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a19d89-9ffb-456d-b23f-d25ddd0bc541",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b416c11e-db0e-4d10-ac61-725cb586a379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f1dba6-f980-4746-9bcc-89f8fb512a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d171560-446c-4e08-bd92-bfc656a74ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca5b53c-549f-47aa-872a-46b09f8db496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037786e6-165d-4d86-b570-49c27e54753c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41e4430-3448-4577-8361-fb320600cbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4ee73d-f518-4a64-b32a-abe833e6a886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf71fd7-6d46-4467-bd4b-57c16434a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecae5c2-bf5e-4051-b78a-fde2bfc6c524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f276184-1274-48ec-bc34-2144a8983db2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047ef3f7-84a6-431a-86fd-e761d57b8472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ba012b-111d-407c-beaf-2be98c5d4467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17c1c1f-1da8-49d8-9d22-94b54f6544dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8dd289-e973-425e-aff7-740e67c60449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6118a602-9de1-4592-891e-42606b2c6d03",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c70698d-862b-40bf-83e9-8314c39eccef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f13fb92-a98f-488d-a3cd-630642761454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a8918a-f103-4374-bb3d-db58515c56bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "000fe34c-298c-4c3d-803b-137a9c655ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f8972e-632e-43d1-9ca8-5d1cb2ff834b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeefc09d-2022-4c9b-9a58-2b6333b5282f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d6acb8-1e7c-4d35-9cb0-093b8c206776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b31ae09-b8f2-4a18-9a73-20f2b086d67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7e992c-a1a4-4b32-a194-ba2a358f4cf3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8aa8e2d8-3261-4f38-b3ca-04956c772449",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24b45062-4d62-4dda-8516-4081ba2634db",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7fc565-71c2-4fee-a59a-ce88a93ae459",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5a868a53-fbfc-46d6-a5b5-dc174a6158bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb737bb-c0d3-4ea1-8bbb-853e4e250629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6425a11b-3a7d-47fc-afd7-3e6570bcdfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3f3040-b914-4114-8c0a-a56b61ef2d79",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ed1aa7-a538-4907-b8e9-71a1396f3460",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "115a51f4-cfb9-426e-867d-c9e8c88b51ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1100dd25-24ef-4d7b-939e-0dd581514a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0ca4c8c-739f-4be3-a633-bc8290faafc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0fb2ace-fdea-4c62-8cba-340c3ace3d03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14afce0b-1787-4c18-95fe-e91a5225f7e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4af31590-6e1f-4590-9553-067ac53fdf31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb96c3e9-d71b-419d-a661-4ebac02bb71a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bddbb88-4eb9-4597-90fc-d54058cc65b9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5da6ef16-a3e6-4b54-a122-9038fa076bf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "501064e6-3364-472b-bac1-0b004c1c5b78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cb25ca9-3d10-437a-8ab2-42e5a05ae3f3"
            }
          }
        ]
      },
      {
        "id": "6f59df79-8de6-4c19-85e9-ec0913928c1c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "96791a6f-a98a-4040-8fcf-d397f0d994c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "059e159b-0872-4d15-a242-206972aa39e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4db7281b-69da-4cc1-8977-c2cd15d6224e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5138ee-17e4-4e38-b523-e20fbe70e283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4156c9-9298-4eeb-b637-9f4f50fef119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06df2b11-0283-40ba-8b62-9c66232bd641",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974f4d29-77ee-4e62-9f4a-d8e2041a0d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a925f6-cb9d-4cd7-a605-715216bb151e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b882481-cafe-4126-aacc-d421f2434aad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf4d119-c40d-48a6-9839-fa6ec518d143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5aa57c-a631-4197-87c3-ebf7430422f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f119712-f3d4-4c4a-acf0-192db23c83bd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b173b3e4-e2c9-4d84-9277-120d1996de7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb74d583-fe44-4646-99f0-dd6a17ad0fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a577cecf-a84d-4d57-bcad-85855641950d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f51cd88-38ab-4a67-bdc5-c233c38ebd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71e00bd-86ae-4c7e-a239-23cb86e6809f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66901549-db49-4a17-96f5-7acdfd9b61f0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef3a0ba-cc7a-4732-9314-e78393968b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a43aae8-3298-4692-b30c-2dfd2dfc8a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29774cfd-ab64-4b8a-b711-444bb63cecc3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf8a59f-a058-4ace-9871-b9238bfae098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe390780-89e5-4820-a479-9003006fa11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ba43f3-0581-497c-b688-a0ee4086b5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6760560a-7454-4f91-8394-f1a5fce1d8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5f396e-7497-4cb5-8876-0d947d158c5e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ae5060-6e72-409c-ba59-26f10be9b092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f538f2ba-b5e2-4745-9773-fd644aeb1e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3214304f-6117-43b5-9079-2859e485b3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329bd182-b690-419a-a938-5f8adcb6acb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a567724d-89a1-4395-a857-3302335e1371",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957bae72-a866-4adc-b9ac-a742ae8b9e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da4931e-3951-442c-8bd3-d0febd227c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a85f02-9d57-4c8a-8eb0-9db679715ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7c48e2-9c66-46cd-93b0-eeff13e2afe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420f33cd-919c-4738-b3ac-14f98d9ede29",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4584d038-232f-456d-a59f-1b796105c105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "251e65cc-2282-4584-bdf0-f3a15c010c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7728d51-58fa-4c9f-8dc0-c47e658ee15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085607e0-e747-46f0-b552-25db2230a122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78957408-72e4-41b3-adc1-b8b8be9b1fac",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d982b84-cfba-4c0b-8f27-03e84fd60d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca25372-ecf9-4c9a-b6eb-1b45f4e79463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e393870-cff7-48b0-8394-c0c63c5cb614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd44a7a7-5144-4274-8007-251d364f8d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0003ff-1b8e-4492-8372-5921ce76bcd9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76b9e11-658f-4721-a94f-9c5e66333520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37661bcf-eb52-4e36-aff7-ef484782d485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41eec21d-25c5-41da-896b-71e86094f1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8501c9-cc06-4a64-98e0-e3bb7be72570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a217f9f-75db-4d5e-9388-1d55598abe60",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef65a95b-62f4-4ed2-a1ce-fe398dcc4b74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b71c5a-c864-41db-8dd9-3c831113200a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947f472c-4a49-44c5-9c7d-88a9a78a6e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e671dcea-0303-4336-a50b-1806a67398d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a468992-315d-4b30-a859-0fe2d08cf502",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561648f0-bfb6-49d9-878b-18a06a7116bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a43c7d5-ef63-4f8a-9c92-ecb240328b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eca0f6-4479-4be4-917a-7ea0913a09ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4a606e-1604-4c6b-9fc7-91a042eebf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2270b83c-27b3-4136-8b2d-fad0c6ee2f98",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f05d927-491d-48f9-a9cf-bac04b6e694d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e502aa-e38a-4294-a0ff-8d91c1e6af64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034528f4-b461-4854-b67e-503b80fb086e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3864abd-4fbe-4557-a8a3-6158498bf5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e5c638-fc88-4b26-940b-95cfa19bb062",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674c30f3-7a6a-47c6-8d65-3b986282bf86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de479712-473c-4ac8-a940-b07e97d0d099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc23a783-ff6f-4e1b-92b8-cb1ae60f838b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480e6508-54f6-49da-9892-de1eacc0e6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070fc2d0-bb1e-46c0-b0b6-8225b9b5f7aa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7ae90a-3201-4aff-9c49-2d0aef62ef30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69951082-8e70-4cff-9381-22fb2dd75d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3aa352-8a9d-45ac-82f0-364c20b6b5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487c0b9f-d53e-4ecf-ba70-69f9888bfbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9aed3d-cbce-4bb7-adc7-3dac252297db",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b7bd6b-154e-496c-9167-39bc18e66c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320775b8-e0d7-4eb3-8ba9-9cf38c015781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4353a176-d62f-4a1d-8425-a9d0f4b1819c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957dfc7b-6c3c-492b-af5f-3bad832228b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f6fdea-d19c-4632-b676-627ca1dac340",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a3bbf9-3a40-406a-a45c-c77cb7278b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd98e10-2086-47da-b93b-6ba6268da8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0875bc2b-6853-4720-8414-866dfe130615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cdbd1f-919d-4395-b11a-fe60b4b1d263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5899be63-286b-42a1-b25c-721a73f1cec0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd28ff72-34e2-4403-953d-310a343c65ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28157847-691c-4a39-86a5-eb793ae20b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8fcaba-ac17-4d3c-9cdc-fafde8112dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90aa7ab5-7421-4a09-8261-ae89630400b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e60f45d-c4ca-4539-8d89-49f93d0aa56e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3bfba0-e789-41f0-ad0e-f44d800c5341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4d4f30-a7cc-4220-aeed-5f0531bbe12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b20371c-8a5b-4a88-b77b-2c83ffad1d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e3d6fe-48ee-4b92-b3ef-033fe46ca8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5806d561-ae92-48c4-b39c-1607949f3501",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08ab081-0f9e-4b07-9f35-a89e0d44ae69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b1d8ad-8789-49b4-9816-c18618fdc461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21b8b2a-b68e-433b-8db4-b315bdb0684a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55bbc02-91b8-4ba9-90de-84f6478850b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf4b832-54d1-421d-b33d-92acfe19a960",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f766e9-5a63-4349-8ae7-b5b12f5dfd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b1ac37-8eb0-484e-8dd4-8b51805f1893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44775f3-c2e3-4154-9b47-da4329a3dda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26af01d1-4be9-419d-a119-8e620f2ba56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e666ebc-f0ee-404e-8ab2-2d184fa7726a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0425b7-0f17-4bf0-bdef-68d6d79e340d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93544155-f4a4-4b8b-ad00-877245809ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09830636-30d9-4fb5-8b27-e123f4ff8dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98905912-189b-4cde-baa8-48cd321e31e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e1f481-7699-4a32-968c-cd710a9d173b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc21764d-5b0e-4103-a8be-190039fe2aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31fe8096-0bb2-4b80-97e4-772aae172344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232baad9-9cfe-4ba7-8a05-7003cf74022b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df58897-5db7-452d-a8ca-b61ed1792226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f18e471-db10-4ccb-a50e-214889767188",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80221c23-c1ff-4858-98f7-7c032ac99c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b115b4a-12e6-4751-9842-fc88d381a4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b178fbf5-08f4-42f2-8232-e6c606623342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee13fe7-f274-4287-9b32-3363feee5ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398e4983-04f1-4fbb-b72d-99a26f51f525",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b531848-6087-4fb6-a29b-c2cf11bf1318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa775b20-5a8c-47eb-ae22-be2f0d0189ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf240e4-a052-4f9c-81a4-84704de9c543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7691a45-1033-4fd6-968d-8039462a6597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699d1594-0219-4669-af2a-109f8474f532",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b724317-ca42-4e43-989b-bb836f85a3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03b27a0-20e1-4887-ba53-03f2dacdeddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d47b48-4da3-4269-97ff-7f077250575a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c36d38-3fc6-4afa-9f3d-e7d194b77e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edc4d48-f1ad-423d-85ad-269e5c801ffb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdedb6d-8aa5-46b0-b13c-aa5c9b4e6acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8eaf45-978f-4b4e-acd3-635f6dd05761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49fcb73-a09e-4f01-9596-3c9192cc93d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a5aafa-12fa-4cc2-848f-19b7d6f520c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0a9d99-3664-42e5-bf16-3559473d9b37",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3717358-971d-4a86-9016-e7ebc4fecbb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9809cd95-c0b9-4d29-9cce-c452fb42ce79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adacb635-ea7a-4453-a549-c0d8f240fc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dd6394-080d-49f6-b74f-e7492e554002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01aa761-a9db-4c15-990b-d15ffd9b34ef",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68f8015-bfef-4686-8440-6b64f21d1de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c74f545-b4c7-4341-b394-bc91b6c4421f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8e321b-e60e-4a47-ae43-411e16223c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd86873-4b15-4223-a802-00a3b70ec2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758ce5dd-a6c5-4806-8722-e0646edbba88",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb4899d-2398-42d1-99b4-ced83c78a076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1d9814-a9b8-4c42-bbe8-c8b475cdc269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfdabfe-4c73-41e9-8d31-aab7c5361b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c949f1b-6339-4b28-8142-6e8fb05805de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f44b096-6d95-4e09-9c88-88c2f5164993",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd4c4b3-805f-4382-afa0-3b2e9d4118d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d99cc4-d157-4eb7-a3f6-8545fc152db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb9ec7a-1b91-4cd5-a84f-dd1d9cdc12d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa869d0-28d3-4ebd-bdf2-d7588a64f286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233bab08-187a-48ba-940c-82e546f66df3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a4bede-08ff-4a54-96cd-2474417c7f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0614256-96bf-4ef6-8a2e-4b7d89c6c0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4693d0-a7ab-4b21-a9cd-7ea7a3dccf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f955e4c-5031-4223-bbfc-87c59b6db6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208de724-5d0b-45e2-82b6-f4f432dcc066",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b86f14b-faad-48f6-9895-55bdf4fb23ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd33de7-22a6-4f36-9a17-701ffd6a604b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999b7234-e84c-4635-97a8-ec2053bc0d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82f5e14-29b9-4c32-96b0-93f3c8ec96c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708a0c52-a13a-4e7a-9a69-0fc795c4b5cc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2cbdbf-f542-482e-83af-baf99648d25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9f9f42-0a71-405c-bf95-92c9d79c7f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabdac80-0393-4185-bb0e-e4e1d608f624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282f68d5-7628-4a3a-8e2b-df4e7a7edf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635b6a1c-f849-4969-9c15-a7aaecba9dca",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a3f3c1-dfe9-4fa9-aeda-4a93593374ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06258340-0cc5-4a9f-8983-62ad4b0991bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eed071b-15cf-467c-8c69-317d9acf376d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf627648-9130-465d-9324-848efef9acbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d844812-e28b-4789-a9ea-d033c178fc93",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9050a6-1e84-449a-89d1-8255944a8342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3453581f-34ce-4d0c-baec-7f811f168d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804b09c3-4f73-46b4-b616-2e09564e9c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698d7d80-7004-468c-811b-436045a08f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba603018-206a-4239-920b-21953c61e59d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6a6fb2-980c-4df7-bd75-6dee272c653d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79538a8b-ca5d-42a6-8db8-a4ec499253bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdc9301-469b-42ed-aa5d-6d17f3444a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fea33d3-c7b9-42b4-a5b6-692a8dd55679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977c82bf-0ca9-4102-b3f0-9fa9296f3efa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2fa08e-11f5-415e-aa0c-6c8a4431cce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0822656-940f-4e66-9308-8b1775110224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8508879-293b-4548-9fe2-1159712cc6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fa116c-cc2d-413c-ba5b-ea59d11f55f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc93a91-0392-4e0c-8785-3f717d98b728",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8241c96d-94ce-4870-a7e7-697ee9d63301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e40fd81-6433-422a-8792-0efc08c9c5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291ce6fb-271c-4955-961d-deb98a844149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79051685-41c2-4d00-bc56-50c6eb0a961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8b569f-7b31-4d78-b518-8a09b5c9904b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f89142-0988-4352-8be3-b43f35677eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19daf51-1343-4796-8a5d-fc95b0a4a64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa909f1-4388-4f1d-8c56-51127bec3ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1a0f55-0936-469e-89fb-3816028a56ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa7e260-9ea9-410f-9b0a-e22f38216402",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c333caa9-987c-4eb9-8dd5-1e9f32074814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1460ae0-4703-4894-9e1c-07031ff63814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004f2ccb-f348-4768-8b4d-fee8cf08b7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a5e5ba-5c05-40e1-87b1-2ef8fbebdc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da4f633-9a9c-445f-b8d3-30454aba5e37",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab7b680-414a-452f-ac0f-695a66eae7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb04239-ec3b-4be7-98c8-357871f82af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644fe990-cf2a-42fc-8944-5393efd85c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f5c975-b787-4f6d-9fc7-38114e949ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0981dd-2c3c-46cd-affb-2a9b1d05b81d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a276b2-47b6-429b-88e0-9ecfbfde2cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574d4647-1921-4e49-8480-5d9ad1c8c48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8b8854-fb36-4d8c-b103-423f2257a20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bcd141-6b07-428f-999b-2969bf0b8259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47874b3c-c3f4-4db8-835b-bb315d2c4afc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa208fb7-ac49-4b66-9464-5430f4fac351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c7780d-c1db-4b00-be9b-8aed08718628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02d08db-7762-4aa4-80d6-96a4dca7ae9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3797e8-ec07-416b-aa32-6f9abce28561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be4f305-8a19-46c3-867f-e97530c7d8db",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971c2d17-c3b9-4abd-bef4-5e123a39510f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d7b796-f3ae-459a-9145-96586c990054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02223137-069b-432c-b7db-acd717476668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babd3042-5860-4854-a0d0-b6a1a187ad52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3917f839-1b1f-4995-9c70-3ffbf176a5b0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1426e26c-4a7c-4047-8df1-6535c615bfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2851cdf1-00cb-460f-b3c5-dad80447e0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7d6fde-455e-4aa4-9939-4269985d14dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dab6b3-0f2a-4cfd-a65f-c06f3ef69bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ddbaad-c8f4-47e7-afb2-5a06ce1029df",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f7227f-ee7c-4220-a51e-7560371f826d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ef944d-0b07-47c0-b8df-07aa3438c230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb74ac00-5f3b-4838-a378-737d58ba1312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bead1c5-7509-4b3a-8d22-71e640a40762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780dec14-61cc-4e44-8d91-74d0f1452600",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e20daf-f02d-40ab-b47d-4eb69128c088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c911cec4-59bc-48b0-abc5-fffdc9b5561e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244bea0b-dca2-42bc-b8af-7a8aa55b7876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29a2311-fcd3-445e-8d89-26122b34691e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7357aa3b-8088-485e-af11-d519992a84e7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a58b6fc-907f-4ab8-98b7-2d7351d0180d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df51a182-5094-4352-a0ae-b0d01541aa12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6f91f7-3129-4e6f-86fb-7c321cdc52c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7c83ab-871f-4aa7-8281-bdf90b7684b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da5df75-eccc-4778-97ff-cdf1a5dfb9f3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2803b19-9450-48f3-bcf5-55072fde99cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674a41db-774c-4389-a131-08d0474ffda5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f963a944-5d3c-475a-b698-c7ce9455ec99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e27ac2a-e990-4b89-953c-9445b15c3d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9da5279-2f34-4bfa-834b-207003decfd2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ad7f4a-3f19-4773-be04-605f77625d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6eae679-3c2d-4baf-9ae5-8b382482edd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd802b1b-0c16-4f5e-8fda-8795dea6fa8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8316765a-872e-4f49-a017-4073819bc78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa7deb4-0c61-40bd-8864-31cb94de38ad",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b168bf4b-7acc-4f69-9da7-cb2099898fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88d5af1-46b5-47bb-9859-19a9ba613839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473a19ea-a76b-4a52-9b2b-6373d1066dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92975d9a-4d46-4a4f-9214-00ea02b8ebff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a6de1-44f1-4387-b432-fb253d79431b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c10720-b845-4cbd-a5a5-107362e7b754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9d9fec-c2ef-4241-9ee2-02e99bdb6775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec21c5b-087a-4ffc-bbf6-f3a9a2644fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba762010-0394-4130-8643-8d2b5d5a3e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbc92f3-3c62-41ea-a63e-260684a159b7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a2b3fe-1832-4159-b4ec-92e5b8d84751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efe597d-62b8-46de-af7a-04ca9a51dab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0e4948-b871-4863-a2ca-d6daa08e86e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec24e7c-7f75-4dec-bbee-1a641631681d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f37897-1255-4c8b-adf7-7de30301545e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cb263c-7c0c-4197-bcb7-2a71f84ed1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fdfa0b-2c52-489e-af91-b7323639e45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59677161-3d94-4b8f-9992-e06d4f59bf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40da854f-dd94-49fd-9670-e01c5caf9b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1a26ab-3e6e-4bf7-bfc8-a745d8f434f9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fbcadf-4cdd-4c4c-8007-0ef58d2caf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65526609-64db-4ea9-88c1-7b57e48cefff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa95309-9721-4b20-bd4a-56cdb1f09609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa09217a-b316-4a45-9edd-ed1d658bc860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ccdfcf-c81d-41c2-bba0-899988914b10",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841d3124-2e49-49ed-89e5-e38645f56dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85e3b31-74fe-4c9b-9b68-c613a0e7bb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ec4eae-0fa5-489c-ab9a-f8baa3154b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e510a05-60dc-4b6f-a85d-5ae2f761198e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b544cea4-30f7-4251-b0de-01623eb50bb3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b2788e-66a8-4b9d-8383-8e0985601f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338bd9b6-19d5-413c-9013-9dd548824e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d39df52-9631-44c4-a8b3-e3db854d2031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a665538-dc32-47de-9c5e-f9261d3cee32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6147ab-2ea4-458d-a237-d98389b1af7e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563c8ea7-cc0e-45f7-8bb1-750c9b727307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25046b82-c4be-4da5-a0fd-f8e5959f1b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d3db6e-df79-4be4-a910-5e01c4732234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91032a81-c00c-4b99-812f-cfc2a6368736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71391680-842c-4e66-b62d-3e88eef0a8e5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af5b000-7abb-4b49-b32a-ee0c8f48b692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ea615b-ced0-4efd-9d1d-c569c5264e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8551b923-1754-42f8-b775-96804085179d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f47bde-1056-466e-b528-b8eefb9d87fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef768a5a-2f70-495f-b332-55b39431653e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19192d1-c21a-4271-add5-518a7f94522f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ceb33b2-a8c6-4a60-b7e8-d61571dc6a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e6ccad-8770-4dd9-b08b-731aee6bbf7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49b0d56-5e7c-4645-8d7d-ff246a196b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627000bc-7115-4ede-b72f-9eab84d0612c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8670c5bb-c26a-4f41-9481-6ae4716ae752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43be2ac3-bfa8-4dbe-b0d2-7e65708265c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe62e24-1b7b-4590-a5b6-e379e0cda7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c7e59a-2896-411f-9774-ad1c0692304a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90dd755-d3a2-44bb-a3dd-d9cf42a5a3be",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0877b6a-bab7-4d57-9561-fca22f3f9727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4252fa95-7838-48c4-940e-9c5171293542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20da7010-25d0-42b4-8608-197148c95f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb956bf1-d3fb-47d0-a789-55a49bef4ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bad9d6-8368-484a-9b52-83d4ce97af1a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ea7065-e943-4ae1-88ef-3ca5106f3d84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "480f21b3-d171-4ad8-8da9-da078aec1947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e7cae0-d856-45cd-aa86-c450c6865cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3565c7ed-f43f-4409-a1a1-15fdf8672a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90549559-807d-4cee-b5a3-02fe0bd4ed06",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a006942c-6670-4093-8437-36aa8dc13648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b04773-58dc-4b3a-9334-b0416e2d99e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42ac3d1-a190-410d-8d7e-cb5120a1b9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dcdbeb-06cc-4bac-913b-dddc0b5cee15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c1bcb-77dc-4b1a-956c-a47988271b1f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0856ca32-bba9-4dff-8c92-7e8c892446c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e358f1a-0c46-4b88-8832-99b3b967bfa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95fed26-cc57-4a40-9d3a-2358f4d60848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bcb5f9-3d88-47de-803a-6f38544bde0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692cec1d-479d-4898-8a78-755d0d9c6c8e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d483bffd-9cf2-49bf-b486-3afb76565726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9041aab-21f8-460c-8274-dc1880f03ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d974248-960a-406a-a882-512b5c8b34ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b58ca4-d3eb-4dd5-9b31-f18f6d8b7f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d3f3ac-0248-4637-8ca2-9aca3925da14",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec8f0a7-c978-493a-9d08-aaecf3e7f66a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9368fb0a-fc42-4e48-96d8-b9a9c534bfa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7152b7c9-710b-44de-98fa-4202bbd6c734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07489bf9-0202-4e55-b6ee-6d5f2e1920c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac344c4c-6c1d-4bb9-a976-cb3af90dba93",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba147e2a-38b5-4bca-a06c-c7b8244fb01b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "630e5460-4a36-45a1-91fd-7dfb828e8add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c521b8-684d-4311-ab45-fadb27d667d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e34340-56db-4984-88b4-f9b58d148773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3100f010-2fc9-4bf8-bb2c-7f5841f2f614",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7717cd4f-df0d-4103-ad90-64b9ad8bf5fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8645fd0c-a496-4dfe-ae74-202325cb0bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db3d0d0-d58a-4d30-8143-aed900a7dfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41156cc0-f563-4d0b-8afb-6b1138433890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec005376-4ddf-45b8-8616-e9e371aa3d7f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe63125-825e-482b-9564-1adc0a5a89e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc0280cf-c301-4fc8-a8e7-56666dea8dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a5d3b1-9645-4645-a8f2-bc4f5a785fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964c7283-64dc-4555-ac57-dafb572ea52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99c43a7-bec8-4d53-8f06-1009575ab91e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dbbcfb-5bdc-4f9a-a749-ac9bac4076da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d565bcf5-a06f-475c-9041-5f78a2622013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0c1575-a2d0-4103-90c4-f08a754e3e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab512631-4beb-4e48-89b5-bcdcd046872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05505d8c-8814-4040-a806-a04502cf5414",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92ff808-1ae8-4440-b57b-06fa8e01b7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4cdd671-1a70-4af6-9f31-9e87a86807e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32427001-3295-44e4-b8a0-9010feaf0cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e2ef82-9575-43d3-8604-5800d5ef3fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9e74bd-f669-4dc3-8c9b-56de663a4708",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc9e146-3094-4dd2-8774-5a2fe9a79314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c493f6e-72ad-44e1-b004-d0d9d3bc038d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07faa4f-355f-4cab-834f-2bab4a07aa57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998ddb7d-9c54-45fd-b1cf-a4f3bfb06142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02928f16-7d87-4312-8bbf-96148b7a9977",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e8713c-b311-4d17-95d2-5345559a7117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a881dcee-790e-4b6f-aa16-8c6b1e622a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2f8915-25c1-403a-833b-93ff435df7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823f536f-ae47-4d46-bb7f-2321d4fa58d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd3a602-0b15-4b86-aaab-33133e0b2ecf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43e07df-f044-42ef-8826-f441ad12628c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b49775b-991b-44f8-8d00-a88ec0dbbb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d594d49-884c-4328-a0f2-2d4839153da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47a28ef-7ddf-49d6-a970-e090ba338ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc1d16c-2f56-4c11-9a4d-44d89636a1e0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab8fb8f-be11-49f0-9f47-0f1eb46e2aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f0db1d4-e9fc-4774-9b7f-c4b41c0dd0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4366c979-4acf-4786-8b37-78e8acfcae1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac37777-1798-4ca8-81ac-dbec8f49460f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5fe0ef-6f89-46cd-92c4-f3ba059065e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba8fc39-e00e-472b-9c5e-74dbff0bf99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c447f1-becb-4dc3-9939-23362daa8133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9c5eb8-225d-47d5-85e0-5efb09dc53d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8ecd2b-98dd-4f81-887b-171c78f9606a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a8172d-da4e-4e4b-9022-472082a2c7c1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baf9509-ee8b-41ae-9739-0c38f1efd5c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e75849-3dab-40da-b8cd-fca1e1174854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680c1efe-2e51-493e-9686-ac192ccb3b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849cf3eb-5ac3-4cf7-b5bd-87e68c0926a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2684e90-ae98-45f0-a3f2-58311279e4cd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0adaf4b-d172-4917-87ae-eaf8c640ac8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "343ae3f2-47c6-495b-9984-158d4c2e4725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d351519b-1cf2-468b-9ac2-2fcfe040f385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba86a93-d050-48ae-9d9b-7a4e73d25ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c402b22-8744-4f1c-a740-578d1d281fa3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26677e1f-4d49-4c13-9c6f-73f5334da044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1548a285-2588-4b26-b06c-ced76d8b06c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ee64b7-097c-40a8-9b7a-0e9dc40b0f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92822a7-1ebd-4b38-9b9b-d0cf383a3207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f002f7-2855-4704-a549-2a0af464690d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c492f14e-972d-4137-aa40-9507cf41a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ec69e7-124e-42dc-bd45-da3be0085997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8355f05-bc63-4e97-9b64-965090c6723b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e307f3-0a2b-466d-9566-928e7e5bc94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e992a5a-7161-4db5-a1f9-06d72fe9da7d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b2ae95-9534-4ceb-b490-9830080428b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2f6d64-4168-4e71-8778-dad6791c1c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaffbb1-305e-42df-bc4a-076643138624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f7ada1-20a3-454c-9d3a-e399ddcbeb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a951dd28-f641-4e89-a3ab-6a5deffa2c94",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9bd429-f212-42e1-911f-bb7477a1495b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0db4d4-c344-4ad1-af8f-4ca77a99b6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80792619-90e4-4729-b24f-26214f21f695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adc6ca7-499d-44a7-a57d-793056dc3c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dce09e2-6ca4-4b93-8e94-490795944490",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0de9c3b-172e-48cf-b296-f4c1aff563c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810e2805-11e1-444c-b694-55cf27bcf24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4329c404-087e-493b-8dc6-f4b161edfa24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f914fd77-a97b-4934-ac8c-8f8a9451c0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6726322-59a4-420c-acb1-1d6dd0e46445",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1bf386-df84-4d1f-bb27-4103f387d198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38685534-0e4d-4775-bb28-61afe5a3f3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b8353b-7c04-44ae-af6e-40163f7a31a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15178eba-9bc6-4207-ba16-bd395df65ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e52dbaf-ba76-4c65-ad96-4ab4409b847e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bbb956-da32-4a68-ab1e-cdb318af39a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39953b4-3507-4bfa-a8e3-dcf91d0c05e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73848c5-8735-4245-82ab-88a6ff842dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be40f71d-f3e1-497b-88e2-1af81fdb1a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e196e382-654e-4165-8520-ebc4e5bb188e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d006cd-2543-4938-bfab-ab9e4ab01c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "facf88d9-8bf9-42bc-91bd-31677c1a663f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5293cbe-849d-4b4c-8106-b1aaa9b5d6a9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84fc633-ae03-4c7d-a3ca-14c57c1a6974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba48726-7439-4b02-880e-1352b9eb2951",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ab4a5b-e44b-4751-9183-41ed70c521d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b84ba4-a399-4a5e-8c3e-13758695600f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2ff47c-cafe-4ffc-880c-3f191e4793ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70688a54-9a54-424b-853e-d95622c87ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168c8209-6060-43b6-83e9-0137b2a1da11",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d1ff64-c664-4a59-8cb8-c55ced9deda2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f66a7f5-f6b4-495f-a271-88c2dc4a8c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2daf25-57ec-4b4a-93a4-e348d178284c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a207516f-534b-4d6c-8c60-83438fb2e52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aca1f58-184f-4116-8d09-9c57bc6d6841",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7c4c18-dfae-4b15-95c1-533873d7a1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3881b70f-5e4b-4f94-b980-874b7966ec8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f231731-932e-4c16-8809-60ae74c68a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fd57e3-65a5-4d7c-8d8b-b4636dd61b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b84bde-fe02-49f8-a79d-e56d217fd635",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e76be5-d341-476d-88b4-55334d50a242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e5a3946-4196-4961-84d5-1f8a8e689dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd28b90-dfdb-4744-85c0-fa19c4d14db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e595c534-bd0d-4e0f-bf2f-2c3857ae61d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac58adf-f545-4d6a-80b0-f5666e440190",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a108fa65-736d-49dd-865b-cc2f95016d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c782205-bfd7-4afa-a97d-08b639865f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55664b47-12c7-4571-a992-91e4d883518e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb171c0-a681-45d1-8385-6681574e9dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f9612c-4b4e-4bf9-acc7-93b7d319e7f4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307cf344-22ef-4b3d-a3f7-9b9a772c272d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008b43ae-f4c8-4d22-bf8a-433f2ab7439f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d0b7f1-79e5-41d6-98a7-069d5a2556ca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28345c16-4c2d-4db3-8428-1e8f27a95ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015d769d-3d33-491a-b8e4-16940961d5fe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d1a048-36cc-4d54-85e3-ed34b432eaf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eab6b0c-54ad-40a0-9126-e8dfb50d46a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1b2c39-5581-4bf6-8faa-a71dff5ac8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d75bd1b-7f22-482d-a8b5-d7dc1ae12368"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "360e8baf-2e52-4db0-96f8-a1de340081b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "216af02b-1703-4989-9273-bcdacecf193a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b853199-019b-4705-a90d-8cdc5ea10705",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2071913d-3c0e-43c7-95c0-017c430a186e"
                    }
                  }
                ]
              },
              {
                "id": "1a022fb4-7a66-42c7-8ae8-e2e71f95b747",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d59ebfc-96d4-4290-874f-1da7b21e57a4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93194261-70b9-4661-b466-0c6f0ac1a58b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "413d547a-dd75-4a54-9505-a6abb1f2da61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef30696-203d-45ba-8ddb-a8cde1847526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60f3a2c2-33c5-4f40-b38d-d2eb07fa16ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37619091-a5cb-499f-841e-e5a1271dcb7f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6d3cb4-b76c-4c07-9a6f-486ffe805c5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f5673abd-85ab-4721-a3e9-0922f049b438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff55ef5c-f921-481a-bbde-5562f363217f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dffdb34b-9f1b-4436-9a80-7650a6eb9d06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dfbfd5b-736d-4743-9b5a-a5d82dec145b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de4fddca-86b5-4521-8933-460a0d712fe4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0b1b180-06e7-47ee-a225-b20e83ab412f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12b8219a-7a16-4983-b734-9e1e94e14cd0"
                    }
                  }
                ]
              },
              {
                "id": "92b0681d-b044-4974-aa5d-15cda55e89d2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0fc451e9-e140-4d10-9956-942300373da2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ebb3b6-bdfc-4f76-a6bf-66f012716fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1014b707-8375-4ce0-8a0e-23583c500062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094cf2bd-295a-4012-8dc5-199e9b357f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39de51be-f5a8-4d9c-a1f1-ef32d5b0078a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "946dfcc3-fe7b-4dc1-9e9a-05bb7d395b9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d64e3e8a-a3b3-4a26-9233-cdfe56da3fcf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d29f1684-7cfe-4f8a-ae82-3e05583fb1b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "89a6e685-33f7-46b0-9ef7-14c2396acd80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57e40ae0-ef3d-4b78-accc-e44dc1d92ff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52623bd2-b12c-499f-be4b-a6ca45d9c4e9"
                    }
                  }
                ]
              },
              {
                "id": "5d5143ae-35ae-4626-b7ae-b21d918d7c6b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c1dd3b0-9b20-40a8-bd76-7274f7c58f1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "71a901a6-14a7-4396-991f-948b5e959340"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc972c8b-de29-4d7e-9225-f452e35dcc4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4557680e-a3c7-4f3e-a9ef-b64fd906ca21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0c0aa0f-be4c-4ec8-9927-d20d59c5037d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d860553e-9bce-4e2d-ba31-1d98445d2f7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "714370e6-0a89-4380-99e8-0cc8a3e7d212",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4daa56f-c9b6-40bd-854f-5e5c47556c92"
            }
          }
        ]
      },
      {
        "id": "b71f6e7c-dcc6-429a-9a83-59928ce7dec8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "049be84b-0f87-4dd3-97ba-a21a4c270e26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06a53c42-033e-4e2b-a13f-41ee3b8a0736",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fa9549a-f167-416a-baf2-cdf1374e98b9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ea2a48-0bfa-4a00-82bd-a2874f63b3c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "92c613eb-80ef-40ba-914c-4e775089810f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a48b39-bec7-418b-85e0-53e20ae4fedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e55e2ab-e53e-4906-9b89-0874aa6e2ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431bdca6-19db-491a-9e64-e332e647beee",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fab48c-f3f6-45de-97ce-e15d752ff49c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3b4f606b-dade-4a0c-85a1-e5d5bcbd10db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc60d42b-c04f-4565-9dae-738245c75c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7fc1d57-881a-4fd5-91b6-b2bf68ed1bf3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb5db697-050d-41df-84a1-54352eb7cd25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26579780-e50d-472d-8011-af3f8d3c8945"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "038edb16-642b-4684-9eca-9d2610388357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4f6a751-09dd-4c18-a6da-df83bec10bea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "565e2562-4502-45ee-bd73-cb3e98066ec5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6f9215d3-067c-45c0-86c7-c272562540ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec64b2a9-1907-46a6-98cb-26161b12f2fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e56f1bcb-3622-4fa4-9eaa-ce5c463bd775"
            }
          }
        ]
      },
      {
        "id": "218ab6a6-dea8-4d99-abe7-bcb7c1abf92e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ffe5ff15-b525-4874-b38f-0858b2a1d159",
            "name": "Negative Testing",
            "item": [
              {
                "id": "301095ae-4e54-4af6-8edd-578cc0da96dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dc4653a-71bc-4490-9b3f-bddb0ab248a2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d89389-4cfe-4382-9c08-f05712adcba4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c548a0a1-1e30-4c78-a129-18a17cbb5e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7693969f-afcf-48fa-999e-46398cc7cdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2f10ffa-a312-4f3f-bf0f-6121cbf66268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd4d961-7310-444d-ac68-d65602f5ad65",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad27c15-b658-4185-a801-3b5d1d7acf4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1a422f5b-f7d2-46fd-b1e6-2e1eba60976f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a86377-695d-48d1-ba39-4875248e44e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa587905-e7c9-4d77-bc7e-3524e7c50067"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5d23778-515f-439d-af24-29de20b999d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5c06c3e-373f-4e18-ad98-2f9c1b47694b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b8adf9-2a02-481f-8a23-eec4cf60b5e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd3ba009-2fe6-44c9-80df-bb7c988997c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fa96815-229e-4183-8e84-1ef0da1a106e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c327fcb-ecf6-46d5-b9dd-01f622a6f8fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14803e4e-a200-4a35-946a-2bf9dfcbc319",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cefa41d-7796-48ab-a625-4166fe55b3fd"
            }
          }
        ]
      },
      {
        "id": "67c6f28a-b015-476e-9975-1f45faf2d867",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "92f624eb-175c-4827-9d5a-9360cf2b56a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b89d5a0-9c38-4796-9a16-84338e8949ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "200fbe16-26c1-4625-a211-be1909766ad2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b002143e-0721-4436-97de-deff855828b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "805db852-971c-4ddc-8250-7197f4fcccda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d619c1bd-2b6c-442c-be53-002361dce7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d513eb9-0799-4a22-9c89-9eee35321f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53012a5d-491b-4b77-a67c-c9ef962367e3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b713e39-041f-42d6-a933-ac49ccf124b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bba9a11c-fa20-4666-ba31-e4df46e2c9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e441536-118f-4be9-bcc8-63fc3fbcff87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b1cb6c9-f772-47af-86b7-d2d3544cd282"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcf0ff9e-c4f0-4853-8c26-3b8058a69a0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1b0c21b-2103-4ef9-b42a-19d0eb1b090c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01f42a0b-c513-4c18-b796-2ba12c8c878c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0037eff-ca45-4431-ad96-994a3cb6687a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8b71fa7-d493-4b74-bf9f-042378aacfca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c266052-8b25-4085-a569-29fdb76b50f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f70fae71-0271-4124-ab54-932fb8f1d355",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86b67b27-f2dd-49ea-9826-691355d3adae"
            }
          }
        ]
      },
      {
        "id": "106322c5-03ee-4310-af9f-e806d97e789a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aeef48b6-860d-4d7f-be7f-78c63d7546e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e9adb24-201d-424b-b19b-24f3f895a43e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "79ca5365-6368-4e9f-b31e-d555ca136300",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abb1f36a-7fd8-4e63-bce3-521fb0699554",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12b58e53-d1c2-4ea8-b3aa-f575a910fcca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 708.3692307692307,
      "responseMin": 10,
      "responseMax": 6111,
      "responseSd": 763.368684374742,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679963949773,
      "completed": 1679964144348
    },
    "executions": [
      {
        "id": "ba203c58-b014-4b8f-b452-c04f6ec36f22",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ba19fcc8-0bf3-4a3e-bcaf-cac7e8d2bda5",
          "httpRequestId": "4e07645e-e58c-4490-b3db-0af8271d2d9c"
        },
        "item": {
          "id": "ba203c58-b014-4b8f-b452-c04f6ec36f22",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "52fae8e3-8839-4e7a-b8e9-c4cf935871db",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "cffece75-18ea-4321-99a8-2abad808e617",
        "cursor": {
          "ref": "2ac47bef-2530-4272-8fb4-923cb61195dc",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cdc7394c-c7b3-402e-8f32-3b693a481ab6"
        },
        "item": {
          "id": "cffece75-18ea-4321-99a8-2abad808e617",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4d127f26-50c9-4dea-9b6b-345d52ea21c7",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "7e985725-af06-433f-b55e-ef7c9b3d1aca",
        "cursor": {
          "ref": "c84fce79-104b-4971-9a45-5c4634e0847a",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "db5e5d13-6e7b-4296-a195-455669409bf2"
        },
        "item": {
          "id": "7e985725-af06-433f-b55e-ef7c9b3d1aca",
          "name": "did_json"
        },
        "response": {
          "id": "41779440-7248-4ced-9559-d90eccb41a4e",
          "status": "OK",
          "code": 200,
          "responseTime": 1151,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fa3740-f3b5-4da6-981c-9276b18d436a",
        "cursor": {
          "ref": "082c2509-89e5-4c1a-852c-9859346c065f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e13adeb0-2e94-4aeb-b1c0-4d4bd62c7fc6"
        },
        "item": {
          "id": "e0fa3740-f3b5-4da6-981c-9276b18d436a",
          "name": "did:invalid"
        },
        "response": {
          "id": "7cc9f6ae-d2b6-4296-a305-1c45cec413a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1645,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fa3740-f3b5-4da6-981c-9276b18d436a",
        "cursor": {
          "ref": "082c2509-89e5-4c1a-852c-9859346c065f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e13adeb0-2e94-4aeb-b1c0-4d4bd62c7fc6"
        },
        "item": {
          "id": "e0fa3740-f3b5-4da6-981c-9276b18d436a",
          "name": "did:invalid"
        },
        "response": {
          "id": "7cc9f6ae-d2b6-4296-a305-1c45cec413a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1645,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a003f0dd-c8a5-4ec6-8db6-b2504e60d6cc",
        "cursor": {
          "ref": "b3987eb3-32d8-4534-8322-7b0036542770",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "232964bd-39c9-4ec8-97a8-97223531bc10"
        },
        "item": {
          "id": "a003f0dd-c8a5-4ec6-8db6-b2504e60d6cc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4ff0bee3-dd53-4690-ab6a-f555298ec21c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1349,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc69bc7-cf37-40c4-b791-f224420b8977",
        "cursor": {
          "ref": "8af943c6-dcee-4ffe-883f-1a918d51d183",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dd24a401-c8a9-4bb7-845c-5f0c0e13fae0"
        },
        "item": {
          "id": "5bc69bc7-cf37-40c4-b791-f224420b8977",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c6a50056-8234-4a8b-9a45-6359b743f70f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 571,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd57fe-e35e-4320-8322-5b19d2aa0eb9",
        "cursor": {
          "ref": "4562b39a-4065-41fc-9698-4dcfd79fb5c0",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "59142847-5a01-4110-989b-ae3106a7a009"
        },
        "item": {
          "id": "98dd57fe-e35e-4320-8322-5b19d2aa0eb9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "59ffc8d9-6665-4f29-a1ce-38b1f8e77774",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca003178-0194-4670-a3b0-abf102e32d72",
        "cursor": {
          "ref": "239d0b37-7320-4585-ad53-bb7a6fd89b4d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9a8e424a-708e-41b1-be65-20259538da61"
        },
        "item": {
          "id": "ca003178-0194-4670-a3b0-abf102e32d72",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "47ed1ff4-390d-4f7d-8fe2-97e15c48f834",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 595,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca003178-0194-4670-a3b0-abf102e32d72",
        "cursor": {
          "ref": "239d0b37-7320-4585-ad53-bb7a6fd89b4d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9a8e424a-708e-41b1-be65-20259538da61"
        },
        "item": {
          "id": "ca003178-0194-4670-a3b0-abf102e32d72",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "47ed1ff4-390d-4f7d-8fe2-97e15c48f834",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 595,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b093b2e-2eba-4b7c-8995-0f70645ccb21",
        "cursor": {
          "ref": "8cfd1a9d-28d2-4bf6-acce-4f68fc134204",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b855bea-09d4-4def-8b0a-749cd99faaf9"
        },
        "item": {
          "id": "3b093b2e-2eba-4b7c-8995-0f70645ccb21",
          "name": "identifiers"
        },
        "response": {
          "id": "1541493a-2363-4920-aa23-da05c75d08f8",
          "status": "OK",
          "code": 200,
          "responseTime": 1081,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c14b533-b214-437e-81dc-c9f2aa66706d",
        "cursor": {
          "ref": "6333dd51-d4df-417a-8d92-f472e0669554",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0c30cd56-61fd-4848-b0b7-7377d31d61b3"
        },
        "item": {
          "id": "7c14b533-b214-437e-81dc-c9f2aa66706d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "539da35f-a000-4357-96d5-6050b2168805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c14b533-b214-437e-81dc-c9f2aa66706d",
        "cursor": {
          "ref": "6333dd51-d4df-417a-8d92-f472e0669554",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0c30cd56-61fd-4848-b0b7-7377d31d61b3"
        },
        "item": {
          "id": "7c14b533-b214-437e-81dc-c9f2aa66706d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "539da35f-a000-4357-96d5-6050b2168805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a902353d-27c7-489c-8f46-1862172d4bdf",
        "cursor": {
          "ref": "7d9c2152-c79c-42bf-b026-652217758c5b",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "efe72b58-a453-47ba-88da-407d47f180dd"
        },
        "item": {
          "id": "a902353d-27c7-489c-8f46-1862172d4bdf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "493335f3-cb4a-4a2f-b4ce-f4fdb4536a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f3dd40-2352-4da1-a66b-8d4d03ffb7d9",
        "cursor": {
          "ref": "5fa07339-f6cd-4571-80cf-1c9e6b88c18e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dd258b75-6743-4922-b205-86ffc2958787"
        },
        "item": {
          "id": "20f3dd40-2352-4da1-a66b-8d4d03ffb7d9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "976600b6-9057-4356-bfe3-b3d93913ffde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752267c0-0294-4c2f-b901-4f94c13cb927",
        "cursor": {
          "ref": "fc2bf366-8fbb-42b9-bed8-454cc44aeda1",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ff44843e-0f7d-4090-8951-017d21e5dc85"
        },
        "item": {
          "id": "752267c0-0294-4c2f-b901-4f94c13cb927",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2889008c-fa9b-4edd-84dd-6a337575b74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db49c1c2-9e38-4503-9520-fd736bb095f5",
        "cursor": {
          "ref": "39b8236a-d14b-4a73-b1e9-80ac6a9b4617",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "708a531d-5b9c-4b7a-9efe-af68cfe26d97"
        },
        "item": {
          "id": "db49c1c2-9e38-4503-9520-fd736bb095f5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8efa4a5d-83de-4018-ad71-78c802cf89fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1131,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d791c4-4ccb-4da7-a0af-eccdc1276061",
        "cursor": {
          "ref": "c858816c-8d39-4285-af5b-6b368980031f",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "540a5d32-36e4-447b-90b7-f2b21e48d6a6"
        },
        "item": {
          "id": "a8d791c4-4ccb-4da7-a0af-eccdc1276061",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "97e6e0d5-6b9e-4029-9a78-41f916ec2f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1112,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08df3b8-da20-430f-9762-cb3e643d409e",
        "cursor": {
          "ref": "175f3f27-8de4-4ba8-b9c2-efad848ccf86",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a749540a-6aed-4c4d-9a37-ccc09388d3ab"
        },
        "item": {
          "id": "c08df3b8-da20-430f-9762-cb3e643d409e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9cab09e8-1759-46b6-aa97-a8829755519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1759,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0637b540-271d-45d2-8874-a53bc610a973",
        "cursor": {
          "ref": "5f8329fd-c144-41bc-8443-dceec192564e",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "af8fb254-0841-46bf-9ce3-1956fcd75e41"
        },
        "item": {
          "id": "0637b540-271d-45d2-8874-a53bc610a973",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "01f5b226-774e-43bc-a3f9-022dff9008a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237187e8-145e-4075-92e3-16c5ce8f6ef1",
        "cursor": {
          "ref": "029eec8f-5f2f-43db-99ad-3a7b79100174",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c82ee5f-2c9e-4505-a67b-80b65deeaf61"
        },
        "item": {
          "id": "237187e8-145e-4075-92e3-16c5ce8f6ef1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e6a82d87-c8a0-4975-8cac-de3516702e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4440f8a0-bd21-4983-9ae9-e00258dfc5f0",
        "cursor": {
          "ref": "d2f102d7-5153-47b4-af81-3cb86e0f539d",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f3db97e8-7dc9-42c6-9eb1-acfb11496652"
        },
        "item": {
          "id": "4440f8a0-bd21-4983-9ae9-e00258dfc5f0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "19f8ec2f-c8c2-4fc4-bb98-6553abe4ae3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1469,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ff3120-db51-4554-ae2f-fa6400f93ae7",
        "cursor": {
          "ref": "e9e2288d-9f13-4e2b-9878-c3b324f7cdea",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a57ffa2d-459f-422e-9fa3-e15e8c9f361b"
        },
        "item": {
          "id": "f2ff3120-db51-4554-ae2f-fa6400f93ae7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8e225971-0db8-497f-8f8c-a618b36e1e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d3a7e6-2e19-4b3d-9473-d0b6b1c8aa36",
        "cursor": {
          "ref": "d22e1249-85dd-4564-b7a4-36e539dc253b",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e21a9560-3f11-4d07-a1ba-11de6035f75e"
        },
        "item": {
          "id": "51d3a7e6-2e19-4b3d-9473-d0b6b1c8aa36",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bc15ec20-ac28-4170-a13d-d92287d191de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731c960e-663a-44e7-9ad4-84b19d7d5282",
        "cursor": {
          "ref": "5e8576fc-3da7-4c1c-9424-d8198dceac87",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "67c0a462-39c7-4eee-8d5e-cf1d2c2d8808"
        },
        "item": {
          "id": "731c960e-663a-44e7-9ad4-84b19d7d5282",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fa3a8ca9-6d29-49b8-a882-e6e1b4ae4a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0078b81-b584-4773-a94f-c0d755f4cd6f",
        "cursor": {
          "ref": "4ea8cd03-bc1e-404b-89b1-a883f1753ff4",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d9420aa7-10af-4d46-bf3a-53b5fc27bb19"
        },
        "item": {
          "id": "d0078b81-b584-4773-a94f-c0d755f4cd6f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e2ee6eac-a4c6-43ee-bf86-559c96f7cbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185f6988-0e2e-43c9-b901-be451d0b2d17",
        "cursor": {
          "ref": "09f3c80d-b090-45fd-ae0e-924e6e61197a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7bf1ba23-152a-442a-9962-99c7a2c7d45d"
        },
        "item": {
          "id": "185f6988-0e2e-43c9-b901-be451d0b2d17",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a9ed6974-83d2-49d2-ba91-3e7dec1f9610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b0b182-736e-4a62-ace4-e8fdae4f25a9",
        "cursor": {
          "ref": "ef16763c-ab78-4afc-968a-f1b7a76eabb3",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d5d4328f-68bd-4215-a5e4-98de605a6c13"
        },
        "item": {
          "id": "81b0b182-736e-4a62-ace4-e8fdae4f25a9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "20c7321d-4f1e-4fb8-a26e-352bde8901f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3a7cf2-d954-4108-967e-bfd2e62af08e",
        "cursor": {
          "ref": "9f3dae5f-e2cd-4e93-945c-24d23cc90ae1",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dbe0e073-c1a6-4bcf-a0f8-3c84920681cb"
        },
        "item": {
          "id": "7b3a7cf2-d954-4108-967e-bfd2e62af08e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "54c80bea-990b-479e-8ad9-10dc215dd849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf80b02-2d77-4f1f-9793-cbdbe42ad285",
        "cursor": {
          "ref": "3bec7639-1918-4bb3-b24e-025697343624",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2ea8364d-44c3-44ac-8156-ebb72ea6aa11"
        },
        "item": {
          "id": "acf80b02-2d77-4f1f-9793-cbdbe42ad285",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1aa62d16-d742-40d0-8b2d-a8c6b07b4f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bca09e1-04c1-4996-962f-123395ff106b",
        "cursor": {
          "ref": "be8b9f14-2568-4833-9de0-30efbca7a709",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "43ab3a81-b002-4f90-b8d0-1079a6f69880"
        },
        "item": {
          "id": "4bca09e1-04c1-4996-962f-123395ff106b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "550c939f-dcd0-4c74-824d-13189830cd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e89dedd-67f8-433b-a456-2b7c8c4c75f1",
        "cursor": {
          "ref": "71691c03-ce34-41d7-a6a7-44bee8d14fb8",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b807b0e7-f2a0-4033-831e-d49693d632c3"
        },
        "item": {
          "id": "0e89dedd-67f8-433b-a456-2b7c8c4c75f1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0229970d-b7f5-4d27-ab05-b7ce3f445ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6687df9f-cf76-45d6-b09a-9083b8aa20aa",
        "cursor": {
          "ref": "276c8f56-1af0-4ba4-a9b1-51ab9c80c80d",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3962ef86-10a4-4085-8ec3-0fb6f7cf29f5"
        },
        "item": {
          "id": "6687df9f-cf76-45d6-b09a-9083b8aa20aa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e04020b2-aa4e-4f6a-a1fd-bb4c9600f689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62894f17-24bd-4349-abea-ad38d58ece50",
        "cursor": {
          "ref": "5f41ee98-58de-428e-beea-6dc0f7a60b72",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6ca653a8-5741-4fbb-b455-7ad5ae3ffc71"
        },
        "item": {
          "id": "62894f17-24bd-4349-abea-ad38d58ece50",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "acaebea2-8942-4d44-93ab-4bd33c828b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f1a7a9-e063-4362-b3d9-231c0bd419be",
        "cursor": {
          "ref": "4e2df97a-f367-4ae5-8e94-5d2b2e92dbfe",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a9331842-12fd-442e-b50f-407f678eb3a4"
        },
        "item": {
          "id": "46f1a7a9-e063-4362-b3d9-231c0bd419be",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ad2acee4-0378-417e-80a8-ed9af50c6a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efbc8d2-3460-49ee-928e-7e2ea2e36929",
        "cursor": {
          "ref": "40b5fadf-30ae-46c2-96bb-aeb4e3b70c66",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "da794c1c-2ad9-40b0-baf4-2a89a7479a71"
        },
        "item": {
          "id": "5efbc8d2-3460-49ee-928e-7e2ea2e36929",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "282177bc-79d1-46ab-90ee-1f61da6d54bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180f2a0b-9ffe-412e-bfcc-da9e5b5b0ac0",
        "cursor": {
          "ref": "a6406588-4ee0-40e2-99d8-bd66cbab500c",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cc6bf230-ce53-47d6-b627-827d67c9f25f"
        },
        "item": {
          "id": "180f2a0b-9ffe-412e-bfcc-da9e5b5b0ac0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1240b67e-0755-4ec5-9e25-221dd2473c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f7bd9c-c12c-4ee3-91b5-ec2de192b107",
        "cursor": {
          "ref": "7b0f9585-c7ee-45d7-af49-de1dabeb3c52",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a588b207-f56b-443e-8ffd-9c18e722a065"
        },
        "item": {
          "id": "33f7bd9c-c12c-4ee3-91b5-ec2de192b107",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e39c07fd-1470-4720-a194-de939886cb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0baf6342-6a90-44c2-ad25-f75e81d3ad49",
        "cursor": {
          "ref": "41b329df-7b3d-4dca-87f3-8b3563f25a7e",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "74866ff2-fce4-4845-b15b-13ff38c5dfef"
        },
        "item": {
          "id": "0baf6342-6a90-44c2-ad25-f75e81d3ad49",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2dab318f-66e3-4213-b6d2-148524026bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cd1159-7f30-4d47-b7fa-3b410da9ba56",
        "cursor": {
          "ref": "9ee50622-a86a-4605-b59a-7379c4d2782a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4c805f6a-30f4-4cf3-8287-b7d490f37e45"
        },
        "item": {
          "id": "52cd1159-7f30-4d47-b7fa-3b410da9ba56",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6bc92be1-17dc-4454-b676-c636cede55fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0feaa264-4788-4c39-946b-57ecfbe2910f",
        "cursor": {
          "ref": "b6fe99e0-e2fb-4245-a925-2e9c96de1963",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "747a3b8a-b856-4e72-8bf9-bec7f895c35c"
        },
        "item": {
          "id": "0feaa264-4788-4c39-946b-57ecfbe2910f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c412547e-c636-4ef8-bd04-6d74c4d23a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe9dcf-62b7-45da-84fc-5a1f8dc48838",
        "cursor": {
          "ref": "4ba27df5-7048-4c23-ad80-2a712e381463",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "27de620b-3a33-4499-8a0d-f057a79759d5"
        },
        "item": {
          "id": "c0fe9dcf-62b7-45da-84fc-5a1f8dc48838",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3956723c-b787-4126-b7e3-f4776535dcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58e47bd-a6f1-47ad-90a6-c39f3edc63e6",
        "cursor": {
          "ref": "7d30d4b8-73d8-4091-8cdf-d1e64434928a",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7e534197-e9fa-4b2a-876b-c5218b192a83"
        },
        "item": {
          "id": "c58e47bd-a6f1-47ad-90a6-c39f3edc63e6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "38069c14-ea49-4114-b39b-d6c12aa8fcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8302b7-c6e8-42c1-b1a3-f379283b76bb",
        "cursor": {
          "ref": "e8d43537-cff8-4477-9112-a09cd9ae03d8",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f50b7e6e-8d89-4715-88c8-57e2fb2f8aea"
        },
        "item": {
          "id": "ab8302b7-c6e8-42c1-b1a3-f379283b76bb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a350ce4e-8202-4daf-a83a-964ce302553e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45158186-a984-4445-9c22-b71f95162f6c",
        "cursor": {
          "ref": "852ddd08-b06d-488f-b380-82d7af9603fc",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ada0e5e6-b831-4997-a9de-e341acf13ac6"
        },
        "item": {
          "id": "45158186-a984-4445-9c22-b71f95162f6c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9d353acf-ac05-4518-9118-2de8ec03c688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434188fa-71f0-475f-9caf-67f75f08d15e",
        "cursor": {
          "ref": "686bf075-813d-408d-9504-3de8c993e844",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b46d56b5-1090-4035-978e-ea31528ae3f5"
        },
        "item": {
          "id": "434188fa-71f0-475f-9caf-67f75f08d15e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ff4f25cb-b7a8-4f34-8aed-b74689dc28b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a241ea3-225f-4350-9f1e-013ee27e2d7e",
        "cursor": {
          "ref": "d74d6e6b-0ce3-445a-811e-565dc452ed91",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1d2d70fc-b31a-4548-8b91-df59327759c2"
        },
        "item": {
          "id": "6a241ea3-225f-4350-9f1e-013ee27e2d7e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4acabdfd-0f00-4b64-b63f-eac777581bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659abbb3-aa2f-4fd3-9554-a77aeb1c1ad3",
        "cursor": {
          "ref": "9d044ae9-6511-44e4-8c11-2f9389838817",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "036ef7ec-831f-4423-a043-cb2f151c11e5"
        },
        "item": {
          "id": "659abbb3-aa2f-4fd3-9554-a77aeb1c1ad3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4919a912-1c75-445c-bd64-4f94161c659b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1042,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6b609f-ea03-4b8f-835f-3281a493e156",
        "cursor": {
          "ref": "d45b6e62-a6bb-4f61-86a7-7bf0b5a12588",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7e56a26a-f8e8-4e9e-b534-dd827674646a"
        },
        "item": {
          "id": "1f6b609f-ea03-4b8f-835f-3281a493e156",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9f771bc1-19ce-41a0-b623-5047dc014319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1177,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303692bb-68d4-4be6-bc4d-96b5751ef759",
        "cursor": {
          "ref": "0cbdba73-ab19-4698-bb7c-8acaeebdead5",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cd2edd49-3742-4ecd-bd89-509ed9f779f6"
        },
        "item": {
          "id": "303692bb-68d4-4be6-bc4d-96b5751ef759",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c8ae5097-c97c-4243-aee3-06214ef25b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd424da-68dc-4283-99a8-3ad9c5dca153",
        "cursor": {
          "ref": "89ae1247-5910-4205-bea0-14533ef31912",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9fc6c9f7-132e-4fa2-9028-5721ccbd369a"
        },
        "item": {
          "id": "4cd424da-68dc-4283-99a8-3ad9c5dca153",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e54212e0-1ff9-4773-8c5e-0a9d1dcdba00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd94c6e-f899-490a-9758-782b92aece74",
        "cursor": {
          "ref": "83f490a2-c1c0-49b6-9f11-79c6bae44345",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ef0573c5-ec11-40fe-b1bc-dbaaf1c66df8"
        },
        "item": {
          "id": "1cd94c6e-f899-490a-9758-782b92aece74",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "64889edf-e870-4b6f-800d-ee5ea94a28d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b11e16-f495-40e7-bfcd-be37b4b919ca",
        "cursor": {
          "ref": "756282e2-16f2-4618-9696-8d09d1aaf366",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "18095826-e650-4cdf-87df-ae7acb95710e"
        },
        "item": {
          "id": "01b11e16-f495-40e7-bfcd-be37b4b919ca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0dc35034-7a44-4411-a30c-facbdafcde71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a022dd0-cf64-4bba-b0e5-ab78ae807802",
        "cursor": {
          "ref": "f8a0103c-492f-40af-9385-ce2ac90c7f65",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "076d541f-072e-4706-9316-908b1d5c9254"
        },
        "item": {
          "id": "4a022dd0-cf64-4bba-b0e5-ab78ae807802",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b4d241c9-3bcd-4dc3-b0f5-811fa9d610f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb6c847-b375-439a-a99d-55319625e55d",
        "cursor": {
          "ref": "125884dd-7e27-47fb-b107-e636b2308090",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "31ef6cd9-be81-4d44-baa4-f24f8b7d982f"
        },
        "item": {
          "id": "7bb6c847-b375-439a-a99d-55319625e55d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a3257077-6364-40d8-a676-18c6aecafe49",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 666,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a040a5-c6dd-40a3-9462-3578d412b185",
        "cursor": {
          "ref": "4639a14e-bcf9-439a-b444-8d28c996c5a0",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7af0ed70-659f-4954-942c-47a0194df41c"
        },
        "item": {
          "id": "40a040a5-c6dd-40a3-9462-3578d412b185",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "681254d1-5757-43dd-b1cf-89aa98c533cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f3f14d-50f0-4300-ac0e-50fa5f7f53ee",
        "cursor": {
          "ref": "5f29530c-e1ba-456f-9633-4ea388a5e430",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f5d6d4df-a277-4f0f-aadd-52acf0e5cf62"
        },
        "item": {
          "id": "c2f3f14d-50f0-4300-ac0e-50fa5f7f53ee",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d1b6ac6a-5662-4a92-99db-41a2d1173cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f49355-c2bc-43dd-9471-1b700962c86a",
        "cursor": {
          "ref": "75080b58-a632-4b57-8f8b-6af7ead55ebe",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "305137ec-f71a-44c5-b824-1836e105f459"
        },
        "item": {
          "id": "d3f49355-c2bc-43dd-9471-1b700962c86a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ce5f1056-8635-4bec-9c71-03721babb8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a9b04d-46a7-4869-bd32-4b4048d54255",
        "cursor": {
          "ref": "c9c34cb7-b43a-4212-a596-cee03e7a0e76",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "78384390-bb9b-4c9a-9af7-fc0de025c361"
        },
        "item": {
          "id": "51a9b04d-46a7-4869-bd32-4b4048d54255",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e2ea2a9a-555e-44e1-a2b8-04fccbba3022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ed0c70-f335-46f0-b1a6-4b5bec34f048",
        "cursor": {
          "ref": "6056adce-1d37-4c8b-ba7d-089c5f946410",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c33e795-ea9b-4488-9bd1-9c192c8e1d89"
        },
        "item": {
          "id": "66ed0c70-f335-46f0-b1a6-4b5bec34f048",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dca27e06-3125-4873-8d67-b76e6d80b887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8124760-887e-4afd-905d-8de287bb20d9",
        "cursor": {
          "ref": "562fb07a-f563-4c3d-9065-06712752b60e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e3b217e9-a283-4694-a7e3-9cf34ecb7717"
        },
        "item": {
          "id": "a8124760-887e-4afd-905d-8de287bb20d9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "12349fc5-711c-42da-8106-77a07bf76b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea478b8a-b7ff-410f-b357-8a4f0deed2ff",
        "cursor": {
          "ref": "d8c4c1fb-9c33-4c0f-8b53-91fc7d7237d5",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c6bf2938-472b-478d-ac59-1311692349ae"
        },
        "item": {
          "id": "ea478b8a-b7ff-410f-b357-8a4f0deed2ff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "953b915a-0595-4187-8cd1-5c970017a1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf39fa5-a251-4e42-b7ec-492fad90b69c",
        "cursor": {
          "ref": "1b87d5ad-dfed-4e9c-9cb9-1c09165bc1c3",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1b042a9c-b8f8-403d-9234-c4a569de88a9"
        },
        "item": {
          "id": "3bf39fa5-a251-4e42-b7ec-492fad90b69c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "53a59335-e639-4c46-9924-49a6d2011cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1632ee90-7944-4aa9-9e8e-366621fc982c",
        "cursor": {
          "ref": "c993c9b4-d420-4122-8398-4f66aa758527",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e5763262-c9c1-4747-8131-757a9a67a3be"
        },
        "item": {
          "id": "1632ee90-7944-4aa9-9e8e-366621fc982c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2bc6a2ab-16d2-418f-a680-90cf7dd63c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e082e0c7-ed13-48f9-a906-80a60cfa934f",
        "cursor": {
          "ref": "076a790d-ee04-4e51-8091-abdbd0e8c71c",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f516f92-33ed-46aa-9443-b40732671f94"
        },
        "item": {
          "id": "e082e0c7-ed13-48f9-a906-80a60cfa934f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0d751af5-0d80-4a85-9103-262b41d899c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261a5361-3f94-4e6e-a7de-d318bd4ba33a",
        "cursor": {
          "ref": "0b58f8df-4db2-4a3a-b5e7-1e4d3c930c5e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "71df024e-129e-4055-b55b-450b775431c0"
        },
        "item": {
          "id": "261a5361-3f94-4e6e-a7de-d318bd4ba33a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6546a803-2323-4982-9c6c-c34026077336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8904a888-6aee-4cfb-971c-132d17290807",
        "cursor": {
          "ref": "74474580-cc10-4048-8624-bdc6d82936fb",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7bffb3d3-4a28-4eb4-aab0-3ab50204eb71"
        },
        "item": {
          "id": "8904a888-6aee-4cfb-971c-132d17290807",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dd359886-9f27-46ca-adb4-e5a9c0c5d6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6875b404-eb29-498c-9168-d4498f45d6a3",
        "cursor": {
          "ref": "693a668d-1d8a-4d06-b565-a0a81293d2b5",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "92e9d670-c75e-4790-b268-059f8734b3e2"
        },
        "item": {
          "id": "6875b404-eb29-498c-9168-d4498f45d6a3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e29a00b5-e159-4c6a-b9ef-4ecff9fb73aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e06075d-91e8-43d7-af14-cc463e83ab2d",
        "cursor": {
          "ref": "4eafb034-b215-496e-8acb-06c01c822848",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0ca55dc4-609e-4ce1-b5c7-36b4dfa0f0b1"
        },
        "item": {
          "id": "7e06075d-91e8-43d7-af14-cc463e83ab2d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "368cc97c-072f-46f1-8113-966b4e9dde1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db44837a-aaed-4985-b1df-1d531c175673",
        "cursor": {
          "ref": "9907d9c3-aec2-4293-b6ee-0c5cb2f131a8",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "089fc80f-2c16-46e9-a08d-00245ce6affa"
        },
        "item": {
          "id": "db44837a-aaed-4985-b1df-1d531c175673",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3f82873a-ffc1-4343-a602-65b2e7fe56f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d9b29e-0b89-4fad-9dc7-c72f51c231e5",
        "cursor": {
          "ref": "110edc60-7fc8-4529-bfbb-e3bc0067e2c2",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "611ecfac-08ef-4765-94f7-4fa234564143"
        },
        "item": {
          "id": "e8d9b29e-0b89-4fad-9dc7-c72f51c231e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c9a781f6-2e7c-48a5-9206-b86b357c61d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b114be21-a220-4f30-8a4b-b711c14b2b41",
        "cursor": {
          "ref": "41f95095-af39-4720-a418-f280f1bc3e9c",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8320c4bb-ab32-4db1-aa0c-d56316d89565"
        },
        "item": {
          "id": "b114be21-a220-4f30-8a4b-b711c14b2b41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9ead0be5-63d3-460d-aeef-b2a167e56522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b391440-0fcb-4625-a242-5d75625dfebc",
        "cursor": {
          "ref": "361de55b-dc3b-4d17-bcd7-385300ffb1ae",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e80da6f1-f56e-4951-b55d-78509f7f5d40"
        },
        "item": {
          "id": "2b391440-0fcb-4625-a242-5d75625dfebc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "968ab6e0-30c5-438b-9389-02627b3b4be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cc6cc8-0948-4b87-be26-bb7fc8fab045",
        "cursor": {
          "ref": "43491a16-98f0-473e-b9b5-fbb2e160701c",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6ac26bbc-d54f-43ad-b233-ba78160a04df"
        },
        "item": {
          "id": "42cc6cc8-0948-4b87-be26-bb7fc8fab045",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1e99ef8b-7bab-40b5-8c2c-8b7e15f77048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1014,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0016a0b-6a2d-454b-bbfa-b6bed572dfc5",
        "cursor": {
          "ref": "457970b5-58a3-48ee-96ca-5fe2f3e77289",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c8c36a31-d479-4c4d-8118-777d0ad3647e"
        },
        "item": {
          "id": "b0016a0b-6a2d-454b-bbfa-b6bed572dfc5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "88da3b4d-43fb-4208-a6e0-c8526780cdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cda1e3-9fa9-49ad-9a07-0b9204dc06f9",
        "cursor": {
          "ref": "709163ab-efe2-4d2d-9e56-ae588250cb6c",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "23f158a2-fabf-4af9-bc5d-d8719dab1517"
        },
        "item": {
          "id": "56cda1e3-9fa9-49ad-9a07-0b9204dc06f9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d930e826-7452-4b4b-b1d3-1cf5435cf065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c78526-d3cb-43b2-b098-7d941c1395f3",
        "cursor": {
          "ref": "98067137-72f0-4ee2-9c31-3d87a6816299",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "20baabec-5650-47ea-8f22-1e6cdd6854ae"
        },
        "item": {
          "id": "d9c78526-d3cb-43b2-b098-7d941c1395f3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e36b03f9-5baa-4ca3-9573-64142e7f2ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f3eb6c-919e-4897-b76d-980fcd25b780",
        "cursor": {
          "ref": "bb605e6a-ba63-4fa4-a9e3-2e153d8b7e70",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "56edc5fd-d9d9-4a2a-82cc-18b92dbdacf1"
        },
        "item": {
          "id": "70f3eb6c-919e-4897-b76d-980fcd25b780",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5b004262-6e95-4496-91fb-ffa8e318be8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212657b3-2603-44b0-b490-4503b860407a",
        "cursor": {
          "ref": "a224f6ea-9c98-42fe-88c0-e7c203cca61b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d7dd6809-5f1f-4f63-b5bd-f1c0ec17e267"
        },
        "item": {
          "id": "212657b3-2603-44b0-b490-4503b860407a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "67fc7ddc-d1a8-44fc-930d-b98f905e7178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e022f225-02b7-4079-9912-f841d9cc858b",
        "cursor": {
          "ref": "6189d112-ac95-4aa2-be91-244d95949673",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9a8e1277-3541-4312-acb2-2cd0443e443b"
        },
        "item": {
          "id": "e022f225-02b7-4079-9912-f841d9cc858b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4fba91d0-9fff-41d1-81f3-bb4776aa4bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d60c620-1ce6-4b5d-b266-b33378a3a9ee",
        "cursor": {
          "ref": "a65e3f96-eb15-4aba-9397-3074c42d1a79",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7e11528d-cf9e-4445-bf30-3879d3cc6e71"
        },
        "item": {
          "id": "4d60c620-1ce6-4b5d-b266-b33378a3a9ee",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e220e1e0-d5d0-4418-9c4f-00ad361570d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81b7f35-cb0a-438b-b3e7-5b5dcf002888",
        "cursor": {
          "ref": "7648cdde-6b57-4472-9da4-283efe7ffb05",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "94ae00f0-7624-4641-8399-bab520bae936"
        },
        "item": {
          "id": "a81b7f35-cb0a-438b-b3e7-5b5dcf002888",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e6ae0502-b5a3-4ede-a67a-0ad62c2ff9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e309fb-be8e-4e56-b02d-9f7676026741",
        "cursor": {
          "ref": "e28b7ffe-c935-4e61-a403-b681ab1ba87d",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "898896c8-b5ca-4eb0-91ba-4814c32ea060"
        },
        "item": {
          "id": "79e309fb-be8e-4e56-b02d-9f7676026741",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c7bac9c1-4622-4a7e-ab77-59cec02cf405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21aacba-cf26-44d3-a66d-73c3a3eb56ae",
        "cursor": {
          "ref": "9857c6e4-9782-42ea-a296-6e615e49fbcf",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "86f7c359-e9f0-4380-8cda-a5825969a505"
        },
        "item": {
          "id": "a21aacba-cf26-44d3-a66d-73c3a3eb56ae",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "842e92c3-9a79-471b-8269-ffe3302d5207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd654f7-1001-4e2c-8b62-6fe8768517e8",
        "cursor": {
          "ref": "daa20d46-c585-4307-9122-5c25909c1b92",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "893424b0-4a43-4d97-9b88-6b424985357e"
        },
        "item": {
          "id": "ecd654f7-1001-4e2c-8b62-6fe8768517e8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "004036cf-f9da-4b48-8dde-8b2b1bf77dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c60b3de-8ba6-4c49-9ede-abf4e9f6ba8b",
        "cursor": {
          "ref": "edddea80-b814-4d03-844d-6c185f9df037",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aac787a2-4848-4ab9-b573-274c2c21b7b3"
        },
        "item": {
          "id": "0c60b3de-8ba6-4c49-9ede-abf4e9f6ba8b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "60d89efc-1fb7-4339-bd82-192dc090156e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a36033-f5a0-4822-a4d6-92384ef91668",
        "cursor": {
          "ref": "9dcbd541-d723-490f-a49f-8144df727d4e",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a7449d99-2372-4728-857b-25bfa3de8e8b"
        },
        "item": {
          "id": "d6a36033-f5a0-4822-a4d6-92384ef91668",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9e927586-c06b-4050-a61e-f6019138f73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bdf1ee-ae98-4d75-886b-e5ff575be38b",
        "cursor": {
          "ref": "345eeec9-cb9a-4e6d-8fd8-1d17ad8786a8",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d8f8af30-a935-442d-99e7-42e347ceaba3"
        },
        "item": {
          "id": "94bdf1ee-ae98-4d75-886b-e5ff575be38b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "35cf720c-9eb8-48f7-badd-577f37ddd216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d740302-2318-42d3-958b-a459d87706a2",
        "cursor": {
          "ref": "99b67b8a-14a1-457f-8ec9-ce6e2c8dac34",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "999b16be-2753-4826-984d-e64b79cfd5e8"
        },
        "item": {
          "id": "8d740302-2318-42d3-958b-a459d87706a2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0a5d4464-02f3-45b4-bd89-06ac348d43f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c487ae-b1d9-4f2b-bebc-482388ca728d",
        "cursor": {
          "ref": "5e9851c4-cb8c-430f-a870-9f3b1a9e5828",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cf4bd70c-6ccc-46c4-9424-1b2f41f5c3d5"
        },
        "item": {
          "id": "72c487ae-b1d9-4f2b-bebc-482388ca728d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "21d76419-850f-4569-8a45-47f8329e21b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39030e23-ccda-47bb-9c27-e574af91596a",
        "cursor": {
          "ref": "becaecc2-7f78-4b73-9c01-a1b04f992c57",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0a118bfd-4524-48ad-beef-fc434fd721df"
        },
        "item": {
          "id": "39030e23-ccda-47bb-9c27-e574af91596a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "60eb8b75-509a-452b-8cae-30038051b9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d630d8b-8188-4e08-a673-35d7aa9546ac",
        "cursor": {
          "ref": "6ae836de-4acd-4fc5-ac1d-b00c597aca71",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a3240bcf-bd46-4f66-b8de-3d3b5e0f57e1"
        },
        "item": {
          "id": "9d630d8b-8188-4e08-a673-35d7aa9546ac",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cd24ae71-6375-40da-aefb-1a29cac54dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73008bd5-af04-4019-8799-530bc71bfd28",
        "cursor": {
          "ref": "7354f25e-8e55-40aa-9890-9de7353158c4",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3b3d2976-6c5a-4187-825d-65cd8adb901a"
        },
        "item": {
          "id": "73008bd5-af04-4019-8799-530bc71bfd28",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "19d6d297-6dd1-4d52-8754-0c4fa510e65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c85f3fe-9cc5-418b-9912-6512ebe2e6d6",
        "cursor": {
          "ref": "229dde7b-f100-40cd-80fb-3a6e17c38060",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cd07e6a3-a2bc-4604-bc38-39e00689123b"
        },
        "item": {
          "id": "0c85f3fe-9cc5-418b-9912-6512ebe2e6d6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e9e2a770-a048-4d64-bcfa-2d9e63dc7218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5310f3-0e22-4ca2-83d3-c300cb190739",
        "cursor": {
          "ref": "4226152c-5b46-41de-bb99-5235d5f64a6b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "966f4a0f-183c-40e8-9b26-33731ecb78b8"
        },
        "item": {
          "id": "7d5310f3-0e22-4ca2-83d3-c300cb190739",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9b6c35dd-babe-4c0e-9720-ca90ea5540e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c10da1-2885-4b17-8774-18535380c495",
        "cursor": {
          "ref": "0c57f96a-9ab9-46e7-b914-018f03046273",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "02e2f0e0-fe44-4758-a003-7aca653a61ba"
        },
        "item": {
          "id": "75c10da1-2885-4b17-8774-18535380c495",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ac9f7bfd-dc51-46cb-ab40-b42a81c38be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaa2f9f-fbe1-40d4-ada0-3fab566ea369",
        "cursor": {
          "ref": "ac80a35a-ab47-4560-b18c-847483526eea",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2491cfdd-84ba-4741-84e5-084100363c62"
        },
        "item": {
          "id": "cdaa2f9f-fbe1-40d4-ada0-3fab566ea369",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "19619532-e758-4bdc-ae19-00bed9bdcb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 925,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca3f606-6b6c-4b37-9986-9b403e0afdd6",
        "cursor": {
          "ref": "3a7bf3b4-4d33-4f5e-9871-0bf44a95f253",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b35fa161-1ec9-43b8-9895-d86fe9d2c055"
        },
        "item": {
          "id": "3ca3f606-6b6c-4b37-9986-9b403e0afdd6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7bf1e945-4fbc-4ce0-98f3-e13be44e551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba384db-f4ef-4197-9441-dba8c75f02a4",
        "cursor": {
          "ref": "140daa4d-9b27-4e76-8bc0-532982d51a5d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "99fb417e-df9d-442f-9218-30804ae4a7d6"
        },
        "item": {
          "id": "7ba384db-f4ef-4197-9441-dba8c75f02a4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "796715f7-da1f-40cb-9c0f-3b15f5e478b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0c6842-df04-4511-8b44-f6605e6e9a77",
        "cursor": {
          "ref": "c560ee55-1f4d-4b7c-bba4-dae2682918fe",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "42eaa687-2e2c-4cf5-9d66-7e9ae288c6ee"
        },
        "item": {
          "id": "7d0c6842-df04-4511-8b44-f6605e6e9a77",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cde9556c-8b02-423f-b719-7b7da7157f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03284682-e649-4f3c-b9e2-61dbc761bc20",
        "cursor": {
          "ref": "43018888-9843-4013-97ae-e04555154dd4",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9c5f08af-cca2-4f63-bc1b-00cd520281fa"
        },
        "item": {
          "id": "03284682-e649-4f3c-b9e2-61dbc761bc20",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "06b6ed87-2607-4c65-9b51-cecb564edcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637cb181-e13b-4607-a26a-01f523493125",
        "cursor": {
          "ref": "75658fff-b13e-489c-b09e-4a9683177da9",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eaa4dd17-b694-4d17-9b3f-4ecd34e15e83"
        },
        "item": {
          "id": "637cb181-e13b-4607-a26a-01f523493125",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "155a3633-b9e5-4aff-bba4-5a153c6f7445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca14fcc-e8ed-455c-9748-dcbb5d24212f",
        "cursor": {
          "ref": "817350b0-da88-452a-90fe-f2f64f9fbe52",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5452f86b-ab30-402b-a606-0258f29253b3"
        },
        "item": {
          "id": "bca14fcc-e8ed-455c-9748-dcbb5d24212f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a1e2b9ae-5479-4c15-ad94-c5e5ddccf91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d745247-3044-444c-9777-805cc513ea3b",
        "cursor": {
          "ref": "38228b27-b6c1-4804-9967-a5d5ce37ac96",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4c6d66cc-3877-4d77-81bc-7814d045a928"
        },
        "item": {
          "id": "8d745247-3044-444c-9777-805cc513ea3b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "36e76912-c397-42e1-bad9-0aa74c4c9e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdea225-46c5-41db-930f-b5557ab4a337",
        "cursor": {
          "ref": "cf885d44-36d7-4192-a374-dc461f435661",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b31533d4-50ce-46b1-b0a9-cbc9fc5cd9c9"
        },
        "item": {
          "id": "efdea225-46c5-41db-930f-b5557ab4a337",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "af317806-90b2-475a-af3c-22abfa9096bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a846076f-7dc2-4f93-a898-c3fb96eae168",
        "cursor": {
          "ref": "4d0e003e-9a4f-4160-8071-0990b2b28d52",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e081f345-82ff-402a-ad45-002e36d0034e"
        },
        "item": {
          "id": "a846076f-7dc2-4f93-a898-c3fb96eae168",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8eab3e66-412c-4379-97ea-7cc006952d7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 611,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a3e088-5383-4b73-8f30-573e7ee2890f",
        "cursor": {
          "ref": "00431266-641b-44ed-8d37-35adb108db04",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a22ebc3f-7604-4a37-b64f-d621890cdd1a"
        },
        "item": {
          "id": "43a3e088-5383-4b73-8f30-573e7ee2890f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "68c3f1f7-be77-46fb-8b73-c4d92dee3203",
          "status": "Created",
          "code": 201,
          "responseTime": 6111,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67346d0-5a46-41e1-9527-4763d46a70af",
        "cursor": {
          "ref": "2e4c63b4-ab52-4586-8e98-c78cac341d72",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fbfad2b0-390b-4bde-b7d7-9f17c0fbd00d"
        },
        "item": {
          "id": "c67346d0-5a46-41e1-9527-4763d46a70af",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5f355981-fee5-46be-bcf4-3888cc582ea1",
          "status": "Created",
          "code": 201,
          "responseTime": 5568,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c8259a-854c-40ec-89ff-cb4675bbef01",
        "cursor": {
          "ref": "af962dd0-baa0-482c-a162-cb51c934faf8",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dede0945-5d7c-4cde-8b0e-40ee43aa988c"
        },
        "item": {
          "id": "79c8259a-854c-40ec-89ff-cb4675bbef01",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "99e4c432-3752-42c8-b182-158cd17d13b5",
          "status": "Created",
          "code": 201,
          "responseTime": 4599,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "272a3e56-f94d-4917-a7e5-b9ed5d34c5b3",
        "cursor": {
          "ref": "36fa3179-9c68-401a-82f2-b75039f95d7b",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "daee095f-c1b3-46b3-a654-d52c3a973f9b"
        },
        "item": {
          "id": "272a3e56-f94d-4917-a7e5-b9ed5d34c5b3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9a049f7d-d001-4cff-b07b-39141dff7fc6",
          "status": "Created",
          "code": 201,
          "responseTime": 4260,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea7ec33-4945-44a1-aac3-4d6b5b6325e3",
        "cursor": {
          "ref": "eba85f61-8713-40e8-b55f-2adf8d2a3fc6",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3e8b0c7a-e20f-4597-9cf8-5f1cac8f89c1"
        },
        "item": {
          "id": "0ea7ec33-4945-44a1-aac3-4d6b5b6325e3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d5f2cac1-114d-4877-b9c7-e41eca4283c7",
          "status": "Created",
          "code": 201,
          "responseTime": 4918,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e510de6-cc79-471b-a06c-1519ac61d3b5",
        "cursor": {
          "ref": "b5992153-9cdf-4e49-aeee-0863eb8a8813",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fa7e44e8-d81d-4b32-84ba-dff25b7943f7"
        },
        "item": {
          "id": "0e510de6-cc79-471b-a06c-1519ac61d3b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e880d17f-0fa0-4f66-ba5d-6937940b032d",
          "status": "Created",
          "code": 201,
          "responseTime": 6091,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f283ffad-b0b9-41ec-8c62-1718381112fc",
        "cursor": {
          "ref": "83231b9e-c8dc-4cb2-9f10-3373eddeaa75",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "52a9fe24-753c-46f0-9775-02866b150789"
        },
        "item": {
          "id": "f283ffad-b0b9-41ec-8c62-1718381112fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc24a9f8-6ca6-46db-8273-96928de5dca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f283ffad-b0b9-41ec-8c62-1718381112fc",
        "cursor": {
          "ref": "83231b9e-c8dc-4cb2-9f10-3373eddeaa75",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "52a9fe24-753c-46f0-9775-02866b150789"
        },
        "item": {
          "id": "f283ffad-b0b9-41ec-8c62-1718381112fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc24a9f8-6ca6-46db-8273-96928de5dca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0d6995-c4e1-44ad-ab9b-122b2d722734",
        "cursor": {
          "ref": "fe38d5d7-ce40-4d9d-8c5b-f17d85873db6",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "876b0c30-dd41-41e4-8f63-5dbcbbed9ef8"
        },
        "item": {
          "id": "4c0d6995-c4e1-44ad-ab9b-122b2d722734",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6d4f7104-ea8f-42cb-b642-c8aa6e10d1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7866b03-d75e-4125-ae7b-1989e02d9e9a",
        "cursor": {
          "ref": "9c1bc30a-9df3-449f-ba64-b2a26456bfa9",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "acbc2eed-b5f5-496f-bf73-8773a98b9862"
        },
        "item": {
          "id": "b7866b03-d75e-4125-ae7b-1989e02d9e9a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c10e67c5-8975-41a2-96cc-d31d2de1c259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1139,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef0cf7b-a108-4b4f-ab45-7e240f44b2ef",
        "cursor": {
          "ref": "18a177c4-9c5a-43c5-91c1-7614f30a8a48",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "24e2eee7-a6f3-4c6b-9789-677a9862bdab"
        },
        "item": {
          "id": "7ef0cf7b-a108-4b4f-ab45-7e240f44b2ef",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "abdde3a4-1fbe-4662-847a-c6cb207c6332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f177fbb-74e7-42aa-bb93-9f35eb0ce502",
        "cursor": {
          "ref": "0dd981f5-501b-47ef-b6c6-8b871f86b0a5",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f0ed387e-5466-42f6-af44-d57fc4f8964f"
        },
        "item": {
          "id": "5f177fbb-74e7-42aa-bb93-9f35eb0ce502",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f5ee47ff-b5a6-469c-bd00-bbbd9515764d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99735c7f-1c89-424d-a65e-864f77420d35",
        "cursor": {
          "ref": "03d5a7ba-2b86-4021-9fa3-c9226fa3d280",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d249b396-a39f-4824-acd2-53e9dbbb967a"
        },
        "item": {
          "id": "99735c7f-1c89-424d-a65e-864f77420d35",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4e08b1eb-0e1a-4624-b4bd-f647521f45cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1020,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f189f45e-30c0-4602-b8c4-46a82d2c177d",
        "cursor": {
          "ref": "e6bf457e-a013-4716-bb53-f57b8523177b",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f2c500b0-1748-4e09-9ac5-3bf2bd095144"
        },
        "item": {
          "id": "f189f45e-30c0-4602-b8c4-46a82d2c177d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "57d3066f-cae1-43a4-83fe-48b5e887b9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1093,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b239701-731d-476b-9f22-d7905acde0d2",
        "cursor": {
          "ref": "ddbbccc8-98a9-4420-a779-4d702905ca26",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d79a34de-2d37-45b0-9bc6-fae186cf8d28"
        },
        "item": {
          "id": "8b239701-731d-476b-9f22-d7905acde0d2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3fc6d30-4f85-4897-9885-f445422e571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d83370e-0f81-459c-805a-6e205ee0d66d",
        "cursor": {
          "ref": "b1b87f20-aadf-4a8e-9d04-56d6453fe5fa",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d1450a74-5a11-4858-a42c-668810b93d15"
        },
        "item": {
          "id": "4d83370e-0f81-459c-805a-6e205ee0d66d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a2b828c1-6376-460b-af66-12a6de76c89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da31501-faad-4cad-ad95-de3bf369a6bd",
        "cursor": {
          "ref": "054cd846-9a70-4c39-a06f-546d150018ad",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0e3f800f-ae6f-40e4-929c-f0bc2fc6b48b"
        },
        "item": {
          "id": "5da31501-faad-4cad-ad95-de3bf369a6bd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0d35a292-2441-4841-9914-3fd971effba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e50b9c-5d76-43f0-b002-c0cd2d667140",
        "cursor": {
          "ref": "35bc2ee3-abfa-428a-9bd4-41fc1b113643",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "28196084-609a-4fa4-9066-e85916e91474"
        },
        "item": {
          "id": "a0e50b9c-5d76-43f0-b002-c0cd2d667140",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "acb7b43e-82ac-43eb-abfb-95dadc72ab53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c339f224-e0d2-4c98-8e83-e77fd35ff54c",
        "cursor": {
          "ref": "9a12aa0c-3a84-4936-ae0b-8f5c44ece7ac",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "31304787-030b-4cfc-9940-12f881c5f29d"
        },
        "item": {
          "id": "c339f224-e0d2-4c98-8e83-e77fd35ff54c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "879e28e6-048c-4c4e-8d55-98b568fa8bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dca854-9bd7-4596-9a0e-60061375cd58",
        "cursor": {
          "ref": "8c3adc33-dca5-4ef1-af88-7cf81475e8c7",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e939f33d-59de-4a9a-a766-b1958f3010b1"
        },
        "item": {
          "id": "98dca854-9bd7-4596-9a0e-60061375cd58",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fcccc506-6e8c-48df-a998-bf8f8918dadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7313bd2-f120-4119-972a-7c9de5bbb20a",
        "cursor": {
          "ref": "9f380c13-3433-4ef5-ae81-448e9fedffa6",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9b83b2bc-a7bf-4318-91a1-68c3afaf3fa4"
        },
        "item": {
          "id": "b7313bd2-f120-4119-972a-7c9de5bbb20a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7e5340ec-fd84-4c94-a208-aa6b46771673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1132,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e37a6f-107b-4bd0-808d-237e5aff11d7",
        "cursor": {
          "ref": "0b9779e2-11d5-49d9-9b6a-312ec1d8f97e",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ad89bcf8-8c7f-4a94-a871-940353f69009"
        },
        "item": {
          "id": "05e37a6f-107b-4bd0-808d-237e5aff11d7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "def5a2ed-4a1f-4464-a4a6-3bcfe4083b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38771c5-1211-4c32-b283-1713682a07ad",
        "cursor": {
          "ref": "74d30989-379c-4aa9-acd7-2d2f8e8e8c0d",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f1d1ee07-873e-4c9c-94e5-51f969fddbda"
        },
        "item": {
          "id": "a38771c5-1211-4c32-b283-1713682a07ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6d4ea4cf-7efe-4c89-bcb7-cad072f019db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760de033-aca2-4e0d-9d81-4fa5693cf8ea",
        "cursor": {
          "ref": "47e7dd13-0cd1-4659-a3d1-deb8e436288d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99c1cb0c-9eb1-48e1-8ea5-b3fc8927c421"
        },
        "item": {
          "id": "760de033-aca2-4e0d-9d81-4fa5693cf8ea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2caa25f1-7934-4fc9-9d98-94deb4feeee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a81168-5a55-4754-b16f-a625faf11019",
        "cursor": {
          "ref": "a20aa065-b657-4bb4-8a52-02fc80fab80e",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1f97b8ed-c91c-4c82-9827-18f3756784a0"
        },
        "item": {
          "id": "76a81168-5a55-4754-b16f-a625faf11019",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c5df5e19-a966-4c69-a6cc-527dc01f5f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dabf4e3-4de4-465d-ae13-efa2ed3599fe",
        "cursor": {
          "ref": "12e3e5d1-b7ec-42c5-8f70-95e3ffca6b6e",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "418a2c53-4772-4a78-b201-892ba8248ccc"
        },
        "item": {
          "id": "4dabf4e3-4de4-465d-ae13-efa2ed3599fe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "504a12ef-db12-4c1e-8a9f-fbdff1f690a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfeefcb-e5f7-4122-a55f-b185f6542df1",
        "cursor": {
          "ref": "5654f095-b197-473e-bfef-b97692c8253e",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "46b0370c-4437-45ac-9d64-53244e5fbf85"
        },
        "item": {
          "id": "bcfeefcb-e5f7-4122-a55f-b185f6542df1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ac650cf-168c-4a89-ae0a-b408c5193a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29893a1-b3c6-41a2-acf9-18831cab5263",
        "cursor": {
          "ref": "1463aa11-7dce-46f1-a08c-17acab7f7b8a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2afd07a5-4662-437e-8cbb-dd04c2329e81"
        },
        "item": {
          "id": "c29893a1-b3c6-41a2-acf9-18831cab5263",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d7ea2187-331d-4b3d-b4a5-c6cf1dda30d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311ae87c-9291-4e93-aca8-6edfd5e36545",
        "cursor": {
          "ref": "32d5409c-ecd9-4d5a-891a-03089a2dbdad",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2d0fe7cc-21ef-47ea-8cc5-d6cac0a294f8"
        },
        "item": {
          "id": "311ae87c-9291-4e93-aca8-6edfd5e36545",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c6cd5729-b970-41b9-a0d0-b74858950537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9048c9-94d3-4d74-a892-cd7eb9b7101d",
        "cursor": {
          "ref": "b9353dec-2a49-4031-9f33-e88caa9fabbb",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6c38ef9e-12fa-40c9-ad9b-7bc5bb141463"
        },
        "item": {
          "id": "fb9048c9-94d3-4d74-a892-cd7eb9b7101d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29807189-4bba-4639-ab79-5e8f907140b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec406d7-5c91-47b5-b7cf-2bd18911a35e",
        "cursor": {
          "ref": "d6ab3d02-a769-4aa5-a8ad-77ea99525c45",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7fb0387-644d-4b30-b864-ae075cc61084"
        },
        "item": {
          "id": "fec406d7-5c91-47b5-b7cf-2bd18911a35e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "26b350ce-7908-41b8-8df8-b74bbce5d5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43047007-ffff-4a89-8aeb-623df61bae68",
        "cursor": {
          "ref": "08e7e35e-1ad0-49be-b856-b10e834d876c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ff42e17a-f720-4953-b020-2097f7b89130"
        },
        "item": {
          "id": "43047007-ffff-4a89-8aeb-623df61bae68",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "44c76cb4-4103-4e65-b380-2177b9a52901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eb5f1b-0eea-480b-8e13-8f2b2380c414",
        "cursor": {
          "ref": "01df22f0-34b3-4ab9-8cf1-ba2f517752bd",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "04627377-48ca-463b-a3a1-33f74c32aa1b"
        },
        "item": {
          "id": "d5eb5f1b-0eea-480b-8e13-8f2b2380c414",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eb58ffe9-12f0-4a33-a329-b60d0a8b846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac6d14c-64d5-429c-94e1-c0b6b23eea6f",
        "cursor": {
          "ref": "6a1c2663-77d2-4307-a623-8613b8e1fa01",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "93bcdda0-e37b-42f0-8157-ed35ce6c5dce"
        },
        "item": {
          "id": "4ac6d14c-64d5-429c-94e1-c0b6b23eea6f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "18137483-67c1-4e63-9e97-5c7db02cd152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a19d89-9ffb-456d-b23f-d25ddd0bc541",
        "cursor": {
          "ref": "96fd9340-3ed6-4389-a27f-1d30f4a82443",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c9c1cdb0-f255-410a-9b4b-b3cef4815aef"
        },
        "item": {
          "id": "16a19d89-9ffb-456d-b23f-d25ddd0bc541",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3c2fa51b-bb0e-4f04-897b-c859180376da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037786e6-165d-4d86-b570-49c27e54753c",
        "cursor": {
          "ref": "8d85cc97-7d5d-4883-9052-9c125d115cc3",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "00d462ab-007d-48a1-a882-b0d4dee170ce"
        },
        "item": {
          "id": "037786e6-165d-4d86-b570-49c27e54753c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "daadeb14-9024-494f-b178-ba8a12a67363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f276184-1274-48ec-bc34-2144a8983db2",
        "cursor": {
          "ref": "3f953556-3f47-4629-94b9-c6d22f8a44d3",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7b089941-0204-4dd2-a830-0e1df085c6bb"
        },
        "item": {
          "id": "6f276184-1274-48ec-bc34-2144a8983db2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47795188-efbd-44b5-82f3-40c2c97e44c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6118a602-9de1-4592-891e-42606b2c6d03",
        "cursor": {
          "ref": "3300572e-8f5b-46f4-a84d-41af3b06db3a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a2485e3c-4bb1-4508-a921-9e314923226c"
        },
        "item": {
          "id": "6118a602-9de1-4592-891e-42606b2c6d03",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "65dad27f-2cd0-480c-bb26-006338d0ed89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f8972e-632e-43d1-9ca8-5d1cb2ff834b",
        "cursor": {
          "ref": "d2a08068-d704-4c11-bd84-191f1f7d04a5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7a53d669-18dd-4155-9fe8-2efe70089f3c"
        },
        "item": {
          "id": "d9f8972e-632e-43d1-9ca8-5d1cb2ff834b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d051998d-42fd-4f02-8ff5-da91120da58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b45062-4d62-4dda-8516-4081ba2634db",
        "cursor": {
          "ref": "1ee34ab1-2924-4537-a4ab-491a6bc75ca9",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8c73fa86-4f74-44da-9c64-9a5921c06660"
        },
        "item": {
          "id": "24b45062-4d62-4dda-8516-4081ba2634db",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f48de88-1a70-4304-93f8-5c9bb66a2f78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3f3040-b914-4114-8c0a-a56b61ef2d79",
        "cursor": {
          "ref": "20107c2c-3380-4dd7-aae2-a521205aa4fa",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ad808604-2642-42e0-a72f-30d39c235aff"
        },
        "item": {
          "id": "4b3f3040-b914-4114-8c0a-a56b61ef2d79",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "54eef383-c7e6-4b67-9ef3-dffbacbca04c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 568,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db7281b-69da-4cc1-8977-c2cd15d6224e",
        "cursor": {
          "ref": "02a06a02-e026-4ea8-a9ec-a2f6a8c7ef4c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b96b1e1d-c334-42c8-ace8-659013a63a86"
        },
        "item": {
          "id": "4db7281b-69da-4cc1-8977-c2cd15d6224e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7bda248-a3b6-4034-b4bd-018dc6bbaea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db7281b-69da-4cc1-8977-c2cd15d6224e",
        "cursor": {
          "ref": "02a06a02-e026-4ea8-a9ec-a2f6a8c7ef4c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b96b1e1d-c334-42c8-ace8-659013a63a86"
        },
        "item": {
          "id": "4db7281b-69da-4cc1-8977-c2cd15d6224e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7bda248-a3b6-4034-b4bd-018dc6bbaea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06df2b11-0283-40ba-8b62-9c66232bd641",
        "cursor": {
          "ref": "4939018b-09f7-4f83-8e73-88380542817f",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a0336b40-6cc3-426b-9004-b32c731717d2"
        },
        "item": {
          "id": "06df2b11-0283-40ba-8b62-9c66232bd641",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6a323213-f9d8-405c-8971-cca7a8f4b617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b882481-cafe-4126-aacc-d421f2434aad",
        "cursor": {
          "ref": "f699220e-1641-40f8-94cb-dc0925ce351e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "de37c772-61d4-4974-b6d3-11c3a1cf32d8"
        },
        "item": {
          "id": "9b882481-cafe-4126-aacc-d421f2434aad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "666f208f-bdbe-40f9-961e-3450cbd801f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f119712-f3d4-4c4a-acf0-192db23c83bd",
        "cursor": {
          "ref": "9607944c-ea7c-4f8b-ad7b-a1db9777f82c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f8a08804-5e88-464d-ba1e-73b8c83bb79b"
        },
        "item": {
          "id": "5f119712-f3d4-4c4a-acf0-192db23c83bd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "61ba6648-1807-4aa1-ad34-f60732e3bf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a577cecf-a84d-4d57-bcad-85855641950d",
        "cursor": {
          "ref": "7fe9ec91-5ddd-4d28-9ada-e9b0df0b9b4f",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c4708388-3660-4b8e-bc02-2aad243f2081"
        },
        "item": {
          "id": "a577cecf-a84d-4d57-bcad-85855641950d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "533524f7-916e-4a12-a6a2-f00605e03663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66901549-db49-4a17-96f5-7acdfd9b61f0",
        "cursor": {
          "ref": "d213868b-7922-4076-9408-644941180bc9",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5ac5652f-33f0-4581-8c2c-6349fa7c7ab7"
        },
        "item": {
          "id": "66901549-db49-4a17-96f5-7acdfd9b61f0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8f4cde15-7864-49b3-9f17-341796045202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29774cfd-ab64-4b8a-b711-444bb63cecc3",
        "cursor": {
          "ref": "ee700c22-e4c7-4f61-ad40-aa428c29b552",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eb4be5e3-cfa5-42c6-a38c-e82640d3deee"
        },
        "item": {
          "id": "29774cfd-ab64-4b8a-b711-444bb63cecc3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eb134eb2-c28b-48a7-8ffe-8b6b5edf68c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5f396e-7497-4cb5-8876-0d947d158c5e",
        "cursor": {
          "ref": "9e4c093c-04bc-4cc5-8a8b-37dd99c7a275",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eda8dbb3-4dc9-460f-b22b-ba4bedd5f4b5"
        },
        "item": {
          "id": "0d5f396e-7497-4cb5-8876-0d947d158c5e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dada2bae-8a8a-495e-9e0d-f56a07610971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a567724d-89a1-4395-a857-3302335e1371",
        "cursor": {
          "ref": "9261b5f7-83e0-47db-a9db-492f27524ab9",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ff6234fd-e604-43a7-bff5-51ae984fa670"
        },
        "item": {
          "id": "a567724d-89a1-4395-a857-3302335e1371",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0d1a09d9-a017-431b-b1bd-59d4f1883ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420f33cd-919c-4738-b3ac-14f98d9ede29",
        "cursor": {
          "ref": "a97402f7-dbab-44bd-a3c7-8e622f8da307",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e5cae894-5a01-4d51-b2fb-d8e07f3359d8"
        },
        "item": {
          "id": "420f33cd-919c-4738-b3ac-14f98d9ede29",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "79d41652-6b64-4d3b-ab33-90ffb80e1277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78957408-72e4-41b3-adc1-b8b8be9b1fac",
        "cursor": {
          "ref": "6d251fa1-37af-4910-bdd0-0148bbf84765",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4180ebcc-1bbd-4939-b2dd-de9f7da8378e"
        },
        "item": {
          "id": "78957408-72e4-41b3-adc1-b8b8be9b1fac",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3d08898e-d09c-4c2e-8f23-1ac35a47f210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0003ff-1b8e-4492-8372-5921ce76bcd9",
        "cursor": {
          "ref": "b341149f-d601-4ee2-8174-4b64795405cb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "59f4097c-5157-40e3-8b3a-800c5ffe1dfe"
        },
        "item": {
          "id": "0c0003ff-1b8e-4492-8372-5921ce76bcd9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0ef469d7-51cf-40ab-897d-1e3a146d07da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a217f9f-75db-4d5e-9388-1d55598abe60",
        "cursor": {
          "ref": "01b7154f-2039-44f8-b1ba-08be31b60a8c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "523e53cb-111e-4339-9484-dc5a714b1007"
        },
        "item": {
          "id": "5a217f9f-75db-4d5e-9388-1d55598abe60",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "308318e5-5d9b-4058-b015-e6f2bb94a705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a468992-315d-4b30-a859-0fe2d08cf502",
        "cursor": {
          "ref": "6556a6ed-6dcc-4000-a660-e03cf30a4a98",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "355a24e6-8461-4e43-a2d8-9f04f8542ac5"
        },
        "item": {
          "id": "7a468992-315d-4b30-a859-0fe2d08cf502",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "64b09ddf-af5a-4ac1-89d3-1636ef7b8553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2270b83c-27b3-4136-8b2d-fad0c6ee2f98",
        "cursor": {
          "ref": "1d25959d-f221-43fe-8392-721473f92db9",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "56c57179-198e-4ca3-b5a8-a4bea44b68aa"
        },
        "item": {
          "id": "2270b83c-27b3-4136-8b2d-fad0c6ee2f98",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d074d6fb-4c77-48b5-a428-fb17cd0fa199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e5c638-fc88-4b26-940b-95cfa19bb062",
        "cursor": {
          "ref": "5afc7ed5-e51d-45b4-af8f-138fa2a5c96d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2975ee29-6034-4eff-90c3-6995b71a3222"
        },
        "item": {
          "id": "97e5c638-fc88-4b26-940b-95cfa19bb062",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8d831210-2f8b-4a8f-8d54-210a191e4b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070fc2d0-bb1e-46c0-b0b6-8225b9b5f7aa",
        "cursor": {
          "ref": "00ae7e6c-5d5d-49e0-b717-f6ebec908898",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fb42cad1-e8f7-4296-b855-763cec24c60d"
        },
        "item": {
          "id": "070fc2d0-bb1e-46c0-b0b6-8225b9b5f7aa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "38ad188f-ec56-4b42-b88f-acb9ac0ca7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9aed3d-cbce-4bb7-adc7-3dac252297db",
        "cursor": {
          "ref": "6489ed9f-9fd1-4155-a8e8-69793bf28b87",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "39e52d49-88da-4970-97a7-3b718bf486a0"
        },
        "item": {
          "id": "4a9aed3d-cbce-4bb7-adc7-3dac252297db",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9095fd1d-c2e9-4d3e-a155-3c3e19c50fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f6fdea-d19c-4632-b676-627ca1dac340",
        "cursor": {
          "ref": "27346a41-51ac-4172-bf40-c42d67ce8a3a",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "785de66c-1cef-44d7-9a9b-95673671c175"
        },
        "item": {
          "id": "75f6fdea-d19c-4632-b676-627ca1dac340",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0df99a1a-eb71-4bb1-ac54-581b8a0a1c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5899be63-286b-42a1-b25c-721a73f1cec0",
        "cursor": {
          "ref": "9d7121df-d8bd-45b2-9b86-18032cc73504",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "55fc426f-d973-48ff-b013-1f862b252933"
        },
        "item": {
          "id": "5899be63-286b-42a1-b25c-721a73f1cec0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8a41cee1-d999-4f40-828e-908e455e08c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e60f45d-c4ca-4539-8d89-49f93d0aa56e",
        "cursor": {
          "ref": "6750e542-3ff2-4ac3-9080-6da22675c0b6",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f49b7b63-e453-4827-a8c3-e8dc03f04099"
        },
        "item": {
          "id": "3e60f45d-c4ca-4539-8d89-49f93d0aa56e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "41e1379f-da82-4a81-9bbd-7aef749cfffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5806d561-ae92-48c4-b39c-1607949f3501",
        "cursor": {
          "ref": "ab25b2f3-2677-48e6-8084-6bad4cc4167c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1d3a7993-66f9-4a09-baa3-1a091c243f61"
        },
        "item": {
          "id": "5806d561-ae92-48c4-b39c-1607949f3501",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ac65b3c0-f3a7-4e0a-97cd-e886b46f7689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf4b832-54d1-421d-b33d-92acfe19a960",
        "cursor": {
          "ref": "e92d067c-fb71-4965-9e86-e0b3b5efc8d0",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "84bbdbe9-3fdb-4b7c-9f2c-227247707977"
        },
        "item": {
          "id": "bcf4b832-54d1-421d-b33d-92acfe19a960",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0ead72e2-9b69-4e0d-9895-3702fb1930bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e666ebc-f0ee-404e-8ab2-2d184fa7726a",
        "cursor": {
          "ref": "8c072bac-d293-4951-8019-e3cc01a5c46c",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e013be21-a074-463e-9ef1-c81fe96f9fd4"
        },
        "item": {
          "id": "7e666ebc-f0ee-404e-8ab2-2d184fa7726a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "da17a3f4-1a6d-4a20-ada9-a74f01013351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e1f481-7699-4a32-968c-cd710a9d173b",
        "cursor": {
          "ref": "be052e94-7ce7-4dd0-8a3a-afeafe96a24c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7ae896d5-faa7-4573-8ad4-e4e2c62c0904"
        },
        "item": {
          "id": "a8e1f481-7699-4a32-968c-cd710a9d173b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "08b91777-6e9f-4d44-88ea-a1b766d8700b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f18e471-db10-4ccb-a50e-214889767188",
        "cursor": {
          "ref": "02041a4c-e01d-4066-918b-7460c9c4be5e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4eda975c-fe3d-47c0-97d4-018847802061"
        },
        "item": {
          "id": "0f18e471-db10-4ccb-a50e-214889767188",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1f1b2a65-7ae7-4881-916a-4dc8f8ba5b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398e4983-04f1-4fbb-b72d-99a26f51f525",
        "cursor": {
          "ref": "df9a4e1e-0041-4e88-a50e-be0caf0cbfdb",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6eab093f-7eb4-437b-95bd-03e1f64a8c4b"
        },
        "item": {
          "id": "398e4983-04f1-4fbb-b72d-99a26f51f525",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ab10fba0-56fa-49d0-9dba-696dd6a329b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699d1594-0219-4669-af2a-109f8474f532",
        "cursor": {
          "ref": "6eec76ce-2e33-4f13-9a4a-57fa375ada39",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6c95a27c-79fb-4936-b754-49410acc581e"
        },
        "item": {
          "id": "699d1594-0219-4669-af2a-109f8474f532",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "85596e7e-ee9d-4dc4-ab88-caa7508dbc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edc4d48-f1ad-423d-85ad-269e5c801ffb",
        "cursor": {
          "ref": "ef8f6d78-5d55-4a78-9185-5dad4866e252",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d12599bf-a465-461f-9992-4dede3355492"
        },
        "item": {
          "id": "0edc4d48-f1ad-423d-85ad-269e5c801ffb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7fe9bf91-f95d-4be9-90d8-e6558fec220c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0a9d99-3664-42e5-bf16-3559473d9b37",
        "cursor": {
          "ref": "df20d261-369b-448a-9cc7-6dd99401c5b9",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c488e12e-a182-4594-908a-38e7a671585a"
        },
        "item": {
          "id": "ca0a9d99-3664-42e5-bf16-3559473d9b37",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "65e3ee89-4a30-45aa-8ef7-be8db4530e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01aa761-a9db-4c15-990b-d15ffd9b34ef",
        "cursor": {
          "ref": "3c0d3cef-70e8-40ea-9388-cd032adea3aa",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "68d10e54-d289-4f19-8816-9d895970a4e3"
        },
        "item": {
          "id": "e01aa761-a9db-4c15-990b-d15ffd9b34ef",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f4bdd8a2-69f2-4c29-9560-ee6f20232b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758ce5dd-a6c5-4806-8722-e0646edbba88",
        "cursor": {
          "ref": "b0dfef3c-6cbc-4b3d-9fbd-58ba863561b4",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "191dbdac-4716-49f2-b53e-becb1bfa2cb8"
        },
        "item": {
          "id": "758ce5dd-a6c5-4806-8722-e0646edbba88",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c45e7358-9061-4ce8-b986-0d07675d8b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f44b096-6d95-4e09-9c88-88c2f5164993",
        "cursor": {
          "ref": "b5a06251-2911-43a0-8778-02816e1ac8da",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "daa43748-87b5-4359-b9fa-30fea780f6c6"
        },
        "item": {
          "id": "2f44b096-6d95-4e09-9c88-88c2f5164993",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ebe3f72e-ff6e-4e54-a4cc-5372ca3790ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233bab08-187a-48ba-940c-82e546f66df3",
        "cursor": {
          "ref": "4b9c3916-ef20-4ef1-b57c-c1ba39aec1ef",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "844d207d-fc01-4d43-9547-e22510f46916"
        },
        "item": {
          "id": "233bab08-187a-48ba-940c-82e546f66df3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a5c35c72-82a8-44ab-9221-b4b04b0012d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208de724-5d0b-45e2-82b6-f4f432dcc066",
        "cursor": {
          "ref": "7265c870-1200-4848-ac32-2f5d5ee0a9eb",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "290111a7-b042-45d2-ace6-f358cd3b3445"
        },
        "item": {
          "id": "208de724-5d0b-45e2-82b6-f4f432dcc066",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "18690c52-b097-479c-8d61-1dbcb02d9a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708a0c52-a13a-4e7a-9a69-0fc795c4b5cc",
        "cursor": {
          "ref": "8e78721a-5523-41f2-982a-ac4cf940ffcb",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f9511e26-6165-49b2-8e4a-79660133961b"
        },
        "item": {
          "id": "708a0c52-a13a-4e7a-9a69-0fc795c4b5cc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "11ac8611-7a4d-44ea-858c-4df05c2f34b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635b6a1c-f849-4969-9c15-a7aaecba9dca",
        "cursor": {
          "ref": "69362290-6fac-4e79-ac0b-829fd8d2f735",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "520c9e2a-49f9-4773-91ef-23bfa9266475"
        },
        "item": {
          "id": "635b6a1c-f849-4969-9c15-a7aaecba9dca",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "566c5568-cb45-4d17-bc89-8d0571e8ee97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d844812-e28b-4789-a9ea-d033c178fc93",
        "cursor": {
          "ref": "b4b46f76-afe1-4c6b-9766-6823d18ed674",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b50a170b-5ce6-499e-9164-a9cd6e8ea190"
        },
        "item": {
          "id": "7d844812-e28b-4789-a9ea-d033c178fc93",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e36a3208-fb51-4767-8e4b-e24b3a9a447b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba603018-206a-4239-920b-21953c61e59d",
        "cursor": {
          "ref": "89959296-3265-4552-85bd-107ff7a72176",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c73997ad-3363-4ace-9448-f3bafb7fa725"
        },
        "item": {
          "id": "ba603018-206a-4239-920b-21953c61e59d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0b22c160-4834-4da6-81de-2a7ba1e51239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977c82bf-0ca9-4102-b3f0-9fa9296f3efa",
        "cursor": {
          "ref": "5b9deacf-188f-4f27-8fa5-2f72a7185bd3",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e446ef83-266b-498f-9967-9c2ce1b73cb7"
        },
        "item": {
          "id": "977c82bf-0ca9-4102-b3f0-9fa9296f3efa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "58ae2683-3674-456b-b40b-5e0ef9330d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc93a91-0392-4e0c-8785-3f717d98b728",
        "cursor": {
          "ref": "3a160508-c0bb-409f-a317-124010b0aeb7",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4fc1524a-36e2-494f-9651-c520803827ef"
        },
        "item": {
          "id": "2fc93a91-0392-4e0c-8785-3f717d98b728",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d93b4933-1c3b-4d1f-ac35-2ea394da01c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8b569f-7b31-4d78-b518-8a09b5c9904b",
        "cursor": {
          "ref": "6eea6dc3-c63c-41cc-8c72-5cc9a1667939",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ff0fdc02-2219-4316-9a53-e40e6c6b5c02"
        },
        "item": {
          "id": "2b8b569f-7b31-4d78-b518-8a09b5c9904b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "224179fa-0b94-4c4c-ab74-acd0578c5bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa7e260-9ea9-410f-9b0a-e22f38216402",
        "cursor": {
          "ref": "de1141ef-4092-448e-b2f8-f5e5db3aebc0",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a9e979f9-370c-4439-9d93-b160769e507c"
        },
        "item": {
          "id": "dfa7e260-9ea9-410f-9b0a-e22f38216402",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bf1832c7-ff49-4355-a699-aa46af2e02ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da4f633-9a9c-445f-b8d3-30454aba5e37",
        "cursor": {
          "ref": "306caa95-a2f4-4dc6-9be1-d4dc10708409",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "022ed47c-ff17-49fd-9372-ca1249e5b396"
        },
        "item": {
          "id": "9da4f633-9a9c-445f-b8d3-30454aba5e37",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7cc9feeb-77e4-42e3-8d54-2a3705c61304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0981dd-2c3c-46cd-affb-2a9b1d05b81d",
        "cursor": {
          "ref": "78d0de38-b702-4e26-bba5-d8f97fb88d12",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4a0b2f40-e6c4-4608-93aa-75ae868c322e"
        },
        "item": {
          "id": "7a0981dd-2c3c-46cd-affb-2a9b1d05b81d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ed83e9dc-6318-4d0b-a600-4c256c48f6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47874b3c-c3f4-4db8-835b-bb315d2c4afc",
        "cursor": {
          "ref": "d3cfbe92-8425-4497-976e-40992fc27439",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "afa5745d-4415-426a-bf5d-0ca38245cf02"
        },
        "item": {
          "id": "47874b3c-c3f4-4db8-835b-bb315d2c4afc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "35083859-5a87-4fc8-834d-d88111f746c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be4f305-8a19-46c3-867f-e97530c7d8db",
        "cursor": {
          "ref": "83fd864c-bf9c-4509-8451-b70a829d444c",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1674f625-0e43-4131-a923-2ca60be204ae"
        },
        "item": {
          "id": "4be4f305-8a19-46c3-867f-e97530c7d8db",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2ac74104-3d3b-46be-8016-b7b55821a83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3917f839-1b1f-4995-9c70-3ffbf176a5b0",
        "cursor": {
          "ref": "5154cd19-87c1-44b6-afb3-831ecea3cb9f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "28b0feb6-b731-4b7e-83b8-6ed6ea0bc9ff"
        },
        "item": {
          "id": "3917f839-1b1f-4995-9c70-3ffbf176a5b0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "96f4b91c-1292-4648-9e16-8b6217055687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ddbaad-c8f4-47e7-afb2-5a06ce1029df",
        "cursor": {
          "ref": "1cdbf77c-d082-4488-9068-65b0e9991ac4",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fe7c2805-5ee3-4d1c-a0c0-d27f4559a7c3"
        },
        "item": {
          "id": "a9ddbaad-c8f4-47e7-afb2-5a06ce1029df",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d00acce9-4add-4a3a-8e6b-cc8f4fcf8b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780dec14-61cc-4e44-8d91-74d0f1452600",
        "cursor": {
          "ref": "fa8a94be-dab3-4b65-b258-89610d48c91c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9cad5196-42f2-4d31-b508-755764c8c53a"
        },
        "item": {
          "id": "780dec14-61cc-4e44-8d91-74d0f1452600",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "178154c5-09c0-4a72-b619-9e81b8c514c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7357aa3b-8088-485e-af11-d519992a84e7",
        "cursor": {
          "ref": "83e3a8b6-7da8-4e3b-9ac7-a42aafc064d3",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "da2b1e1d-102b-498a-8a1c-cb4765ac4882"
        },
        "item": {
          "id": "7357aa3b-8088-485e-af11-d519992a84e7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5a95fa69-6303-48d6-8639-44553c1cb786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da5df75-eccc-4778-97ff-cdf1a5dfb9f3",
        "cursor": {
          "ref": "583b4fbf-10e2-4e91-9240-891a2a6c2b6e",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3fd70809-0d0a-4ffa-abfa-980715568580"
        },
        "item": {
          "id": "8da5df75-eccc-4778-97ff-cdf1a5dfb9f3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "78646b6e-d14f-4254-9056-e07b21ebd168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9da5279-2f34-4bfa-834b-207003decfd2",
        "cursor": {
          "ref": "4e8bcdc1-b531-4f47-b90d-fea2974c4daa",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f1c7a925-e392-4b6a-a993-9a00076aeef5"
        },
        "item": {
          "id": "f9da5279-2f34-4bfa-834b-207003decfd2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fae49103-4eff-4d40-87f1-ee255e889ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa7deb4-0c61-40bd-8864-31cb94de38ad",
        "cursor": {
          "ref": "7d9e32c8-96ce-4ab8-816c-87f60bdf972f",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "57d008d6-a4ce-44f5-a44f-98f5bc0303be"
        },
        "item": {
          "id": "0aa7deb4-0c61-40bd-8864-31cb94de38ad",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3da90e12-c6c8-4cd6-8d08-1bda820305d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a6de1-44f1-4387-b432-fb253d79431b",
        "cursor": {
          "ref": "e3294c1b-3ba1-4de2-b509-586592226d1a",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9ded597e-412f-441a-8dbe-40b8d4c83bbb"
        },
        "item": {
          "id": "cc6a6de1-44f1-4387-b432-fb253d79431b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7813a091-1623-4eb2-ada5-b8d349fa9457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbc92f3-3c62-41ea-a63e-260684a159b7",
        "cursor": {
          "ref": "44f16cd7-888b-47b7-8d56-dd7f11ab4717",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f01b803d-fb4f-4cb8-9f4f-2764c0042435"
        },
        "item": {
          "id": "4cbc92f3-3c62-41ea-a63e-260684a159b7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "396e9341-2971-4462-a585-a2e94c9bb440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f37897-1255-4c8b-adf7-7de30301545e",
        "cursor": {
          "ref": "e39bb342-dea1-4d15-8ffe-b341c5525a1c",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "76259317-4dd1-4ddc-8d01-0dd783576393"
        },
        "item": {
          "id": "f9f37897-1255-4c8b-adf7-7de30301545e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "18fff216-1d99-4a38-89ba-b7cd5318d020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1a26ab-3e6e-4bf7-bfc8-a745d8f434f9",
        "cursor": {
          "ref": "4f5928bb-99e8-423f-a22f-88e3e6de9d39",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5490900b-1468-4061-b675-ef13f4585104"
        },
        "item": {
          "id": "ce1a26ab-3e6e-4bf7-bfc8-a745d8f434f9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "55c1bfd1-0ffe-4213-b087-d60cfd62f028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ccdfcf-c81d-41c2-bba0-899988914b10",
        "cursor": {
          "ref": "9e1e4786-a110-4291-b8bb-9d3294b806e1",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "be725399-85d4-48ff-9e6c-9807ae1c1cd1"
        },
        "item": {
          "id": "d6ccdfcf-c81d-41c2-bba0-899988914b10",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2a1dfa32-33eb-4168-8f3e-52b6b93c1732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b544cea4-30f7-4251-b0de-01623eb50bb3",
        "cursor": {
          "ref": "4fa8f1f9-ce39-4a68-bd78-5c0c814d83f0",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a01c3978-7af4-42d8-964a-1a459dbe4fae"
        },
        "item": {
          "id": "b544cea4-30f7-4251-b0de-01623eb50bb3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7564070d-fde4-4dce-b347-011cc8aaf90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6147ab-2ea4-458d-a237-d98389b1af7e",
        "cursor": {
          "ref": "989fb3e6-dc2e-4d31-851b-055804a5a524",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aa0b9fd5-915f-464a-9041-7de5fc2232f9"
        },
        "item": {
          "id": "0c6147ab-2ea4-458d-a237-d98389b1af7e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "db6b8e2e-34ac-43fb-bf2f-ca47ccf98fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71391680-842c-4e66-b62d-3e88eef0a8e5",
        "cursor": {
          "ref": "fe44bba2-c89b-41ff-8377-1629fcb51388",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a9fe30b5-cc9c-49d1-ad9b-4922fc6ea2ce"
        },
        "item": {
          "id": "71391680-842c-4e66-b62d-3e88eef0a8e5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8e71226f-ce95-4e6f-9aad-f369003f843e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef768a5a-2f70-495f-b332-55b39431653e",
        "cursor": {
          "ref": "33b75e59-d8ac-4bfc-a6d1-7a696c7db214",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f69fcd4a-4e63-4873-b0a7-04521bbe3cfa"
        },
        "item": {
          "id": "ef768a5a-2f70-495f-b332-55b39431653e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "87e8c169-abab-4452-aa2d-ff5d5fe94bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627000bc-7115-4ede-b72f-9eab84d0612c",
        "cursor": {
          "ref": "1eeca402-6ae4-44ab-b6cc-e91be0f238b1",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "81456323-157e-4ec9-af7c-8eac3dd4d013"
        },
        "item": {
          "id": "627000bc-7115-4ede-b72f-9eab84d0612c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e16ff387-e53c-4f50-b02c-552529c84eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90dd755-d3a2-44bb-a3dd-d9cf42a5a3be",
        "cursor": {
          "ref": "585c20f1-72a8-48d6-8dea-2accd1bca0e3",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "30051a5c-ad7a-4f10-8c01-ee34468bcfd8"
        },
        "item": {
          "id": "d90dd755-d3a2-44bb-a3dd-d9cf42a5a3be",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4bd486c2-88f9-4f9c-91ca-8cec622ba595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bad9d6-8368-484a-9b52-83d4ce97af1a",
        "cursor": {
          "ref": "ac616be8-e69a-400a-a457-59a29f56ce42",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9f413dea-4885-4c1b-afae-d1cd0a172043"
        },
        "item": {
          "id": "45bad9d6-8368-484a-9b52-83d4ce97af1a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4d2b1134-3650-496e-9a77-b5861b5dc055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90549559-807d-4cee-b5a3-02fe0bd4ed06",
        "cursor": {
          "ref": "d1b95eee-03ff-4e61-a547-41f147a8627b",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cb9e0eff-df95-419a-b4fb-49d681b0f52e"
        },
        "item": {
          "id": "90549559-807d-4cee-b5a3-02fe0bd4ed06",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "795f5d72-4216-499c-b7c5-0621fefe2a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c1bcb-77dc-4b1a-956c-a47988271b1f",
        "cursor": {
          "ref": "77244780-a11b-4931-b088-2bdff49c13ab",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d61ef448-cfc7-4629-a7d6-3b2606612da9"
        },
        "item": {
          "id": "ec4c1bcb-77dc-4b1a-956c-a47988271b1f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4958b034-18f3-4e7a-b23f-7207381f06be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692cec1d-479d-4898-8a78-755d0d9c6c8e",
        "cursor": {
          "ref": "647b8053-a28d-4ce4-bade-061172db56f2",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "287219ca-15f3-4233-aff2-489a4ead9375"
        },
        "item": {
          "id": "692cec1d-479d-4898-8a78-755d0d9c6c8e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9225831f-601e-4e4e-ae0d-bd87bb6e0e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d3f3ac-0248-4637-8ca2-9aca3925da14",
        "cursor": {
          "ref": "3da8b959-08e6-4339-88f8-625e39d84169",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a522476b-f3e3-43d0-a0bc-7f87fb273295"
        },
        "item": {
          "id": "e7d3f3ac-0248-4637-8ca2-9aca3925da14",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "507fef6d-aa83-436d-a54b-e1baa2c3840c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac344c4c-6c1d-4bb9-a976-cb3af90dba93",
        "cursor": {
          "ref": "48a0224b-0071-4740-85f7-7bde718f9b27",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "87594339-e43b-4ab7-9fb6-e03d33b4857b"
        },
        "item": {
          "id": "ac344c4c-6c1d-4bb9-a976-cb3af90dba93",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7ab1c3cb-5da6-4e43-8b69-009edd9a5137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3100f010-2fc9-4bf8-bb2c-7f5841f2f614",
        "cursor": {
          "ref": "bd4df828-05de-4f88-9b10-0ade503d71a2",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "32f86f42-da9e-4074-b4dd-58fb5a15006a"
        },
        "item": {
          "id": "3100f010-2fc9-4bf8-bb2c-7f5841f2f614",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1edee90a-9317-484f-8280-0b3dda556fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec005376-4ddf-45b8-8616-e9e371aa3d7f",
        "cursor": {
          "ref": "a125a68f-f18d-4a24-bd4c-b08bbde50dec",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8cb34c39-d3e7-4f0f-8942-2cac9fde94f3"
        },
        "item": {
          "id": "ec005376-4ddf-45b8-8616-e9e371aa3d7f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4bd9a0fd-aab1-49e2-814e-5b2d799164cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99c43a7-bec8-4d53-8f06-1009575ab91e",
        "cursor": {
          "ref": "da53780d-5fd7-49a0-b997-29220e99a5d4",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "01cc0db0-d54e-4eb0-bc98-335575eb6272"
        },
        "item": {
          "id": "b99c43a7-bec8-4d53-8f06-1009575ab91e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7a5b7766-62b9-4dbb-8286-8acb79012e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05505d8c-8814-4040-a806-a04502cf5414",
        "cursor": {
          "ref": "5c5257f4-06ee-4255-907c-c68d90df5109",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d70dbf5d-81e6-4425-b614-729ae1d81495"
        },
        "item": {
          "id": "05505d8c-8814-4040-a806-a04502cf5414",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "63aae3ec-0180-4281-9648-8eca74845b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9e74bd-f669-4dc3-8c9b-56de663a4708",
        "cursor": {
          "ref": "416cc45c-d5d6-4011-b3db-b16e7afd2e0a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "78c7a510-1e60-4ff3-ac24-339d1a7f6b5f"
        },
        "item": {
          "id": "6e9e74bd-f669-4dc3-8c9b-56de663a4708",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "98c36356-28b5-4983-94cd-bf35cc7c753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02928f16-7d87-4312-8bbf-96148b7a9977",
        "cursor": {
          "ref": "baef68ef-0bbe-4a2b-bf39-5e88044e3ff2",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "af03857d-72bc-4020-88b1-991b311ec177"
        },
        "item": {
          "id": "02928f16-7d87-4312-8bbf-96148b7a9977",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "94932396-4847-442e-b82b-eb192b2ef48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd3a602-0b15-4b86-aaab-33133e0b2ecf",
        "cursor": {
          "ref": "c5a203ef-a9e9-44b2-883d-47dc03b48ab5",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f70f7287-07ea-47ef-aeb3-9e018c3d28c0"
        },
        "item": {
          "id": "9bd3a602-0b15-4b86-aaab-33133e0b2ecf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "84e3b1b7-d5c5-4af5-bd55-83a1373a948c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc1d16c-2f56-4c11-9a4d-44d89636a1e0",
        "cursor": {
          "ref": "2ea78f15-7a80-4587-8767-3b1e2a5c417c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e446ead3-e7f3-4031-9552-c231029cf8c7"
        },
        "item": {
          "id": "dbc1d16c-2f56-4c11-9a4d-44d89636a1e0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ec6fe87b-2e6a-4915-90dc-b3e3cb232536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5fe0ef-6f89-46cd-92c4-f3ba059065e5",
        "cursor": {
          "ref": "b38f81d9-a6d5-4c97-980e-fa1e4374febf",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6a081e79-67b8-4af0-bd23-c5e37be35912"
        },
        "item": {
          "id": "de5fe0ef-6f89-46cd-92c4-f3ba059065e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9ce98efd-4d22-4774-a01a-449d2cbdd943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a8172d-da4e-4e4b-9022-472082a2c7c1",
        "cursor": {
          "ref": "7830252d-5e51-456c-8869-c619bfeecd7e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "46df7e0c-ddf0-4ac2-a3cb-8ead33f3f111"
        },
        "item": {
          "id": "83a8172d-da4e-4e4b-9022-472082a2c7c1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "45f9c289-42b7-4dff-9a7b-63b64543418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2684e90-ae98-45f0-a3f2-58311279e4cd",
        "cursor": {
          "ref": "a7ed8c38-a261-4895-b394-b2f01aaf06dc",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5d502dac-ea08-460b-9dcc-a31fca882d54"
        },
        "item": {
          "id": "e2684e90-ae98-45f0-a3f2-58311279e4cd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f4c0119f-b274-4732-b58b-056407879700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c402b22-8744-4f1c-a740-578d1d281fa3",
        "cursor": {
          "ref": "b57226b5-20d6-42c0-be6e-c5b414006fac",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7f439f74-2c7d-472e-9b26-d361687bc6f6"
        },
        "item": {
          "id": "9c402b22-8744-4f1c-a740-578d1d281fa3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "eae8e27b-ec37-4d50-aac7-060aa56bfe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f002f7-2855-4704-a549-2a0af464690d",
        "cursor": {
          "ref": "2e87e6d2-7a01-4a54-a5f8-35c053c7ab7b",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "154ce816-b1a9-40b9-8b88-3053119f87d0"
        },
        "item": {
          "id": "c8f002f7-2855-4704-a549-2a0af464690d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "65a223bc-0042-4c83-b003-4722ade0dbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e992a5a-7161-4db5-a1f9-06d72fe9da7d",
        "cursor": {
          "ref": "28d00f6b-43f7-4de3-9db7-665ce7766cd4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4d1ca8d5-6297-40f6-8d7c-cf67b1263269"
        },
        "item": {
          "id": "7e992a5a-7161-4db5-a1f9-06d72fe9da7d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "985144f8-e8f2-4f00-900a-5338f056e4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a951dd28-f641-4e89-a3ab-6a5deffa2c94",
        "cursor": {
          "ref": "05f835b5-12fd-43d4-8c1e-51bcb45fd1b3",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2c983eef-cf77-4637-8519-2594c9e8f1f8"
        },
        "item": {
          "id": "a951dd28-f641-4e89-a3ab-6a5deffa2c94",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f002317a-f380-415b-9925-1f0ff182352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dce09e2-6ca4-4b93-8e94-490795944490",
        "cursor": {
          "ref": "b892e650-c211-464a-93c9-6a5feedd57d0",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "29aa2afe-2835-49bc-9393-8a9147283345"
        },
        "item": {
          "id": "8dce09e2-6ca4-4b93-8e94-490795944490",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8bcc6230-6db3-48cd-a044-4a7519d1367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6726322-59a4-420c-acb1-1d6dd0e46445",
        "cursor": {
          "ref": "cfb1ec0d-a2f5-4ba8-b286-3b3f4423972d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6bcab599-6bbb-4fe1-85cf-ce4e4cd4ef91"
        },
        "item": {
          "id": "f6726322-59a4-420c-acb1-1d6dd0e46445",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bbbdba94-efec-47de-9f2a-eea7639eedf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e52dbaf-ba76-4c65-ad96-4ab4409b847e",
        "cursor": {
          "ref": "13c4f36e-897d-49e9-81e7-b18e4f8687f0",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f9e51303-fd1c-4399-85f7-383da8a6f9a8"
        },
        "item": {
          "id": "1e52dbaf-ba76-4c65-ad96-4ab4409b847e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "94398e99-8cbd-4203-b65a-04faa69ab938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e196e382-654e-4165-8520-ebc4e5bb188e",
        "cursor": {
          "ref": "e91d06d6-bf53-4fd6-9051-7dcf76e35b6a",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3ea4cbcb-0e3c-430b-8dd1-9fb8b559cc22"
        },
        "item": {
          "id": "e196e382-654e-4165-8520-ebc4e5bb188e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "390f57bf-c71a-414e-9f9b-3b4581d6f276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba48726-7439-4b02-880e-1352b9eb2951",
        "cursor": {
          "ref": "c87f6375-8e8d-492c-a762-163c4f1052a8",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "10f89f93-c609-4d07-b819-89be4c6d4375"
        },
        "item": {
          "id": "2ba48726-7439-4b02-880e-1352b9eb2951",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "859ec081-6a5f-4034-9271-07fbe09f7a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168c8209-6060-43b6-83e9-0137b2a1da11",
        "cursor": {
          "ref": "f15bd86f-35d2-4574-8296-ec290e545dc6",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0b77aac6-80a0-42e4-910f-986e322e26dc"
        },
        "item": {
          "id": "168c8209-6060-43b6-83e9-0137b2a1da11",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5a76ecdf-0b3c-4f89-bf17-12c306052850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aca1f58-184f-4116-8d09-9c57bc6d6841",
        "cursor": {
          "ref": "907063a5-2922-4f29-96b3-2c31324debb3",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cbeb92d7-fdfe-4e16-9cb8-bf8c480bcde6"
        },
        "item": {
          "id": "8aca1f58-184f-4116-8d09-9c57bc6d6841",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "123948e6-8f52-4d1a-9894-2b505172eec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b84bde-fe02-49f8-a79d-e56d217fd635",
        "cursor": {
          "ref": "bb6b45fb-0437-4bd3-8f28-75cfa3ca920a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "52b775de-d435-4c58-868f-c91b71cb0d13"
        },
        "item": {
          "id": "34b84bde-fe02-49f8-a79d-e56d217fd635",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ec530803-7f8f-4d8a-8987-0f072993cac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac58adf-f545-4d6a-80b0-f5666e440190",
        "cursor": {
          "ref": "d1fde2c2-da6c-4b57-b80d-9e572a2e7a9c",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d606ee2f-2feb-4179-910f-239a7a698f72"
        },
        "item": {
          "id": "aac58adf-f545-4d6a-80b0-f5666e440190",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3b7fe8f9-e7bf-466b-a42a-a6e8e35d7723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f9612c-4b4e-4bf9-acc7-93b7d319e7f4",
        "cursor": {
          "ref": "da149d21-0ba9-440b-9a85-8caee31dd261",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be7a4bcd-69af-4cec-8efb-17a6e652219c"
        },
        "item": {
          "id": "24f9612c-4b4e-4bf9-acc7-93b7d319e7f4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9ebbf0a0-3b36-43b6-9e37-c4738c94b07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015d769d-3d33-491a-b8e4-16940961d5fe",
        "cursor": {
          "ref": "c5439f77-8d36-44cf-aa63-d0c9c59d7a8e",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f3ec2f99-629b-4f84-8ff7-75caefb6e554"
        },
        "item": {
          "id": "015d769d-3d33-491a-b8e4-16940961d5fe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "22b61d28-ca75-4bd2-9917-e6fff98fdefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d59ebfc-96d4-4290-874f-1da7b21e57a4",
        "cursor": {
          "ref": "5c737c19-9414-4d7a-965d-651b304904d6",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b718596d-546f-4764-8d3b-9859de4dd577"
        },
        "item": {
          "id": "4d59ebfc-96d4-4290-874f-1da7b21e57a4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e2ce1e1b-b7f2-46de-a081-a0b550111e4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37619091-a5cb-499f-841e-e5a1271dcb7f",
        "cursor": {
          "ref": "6f4d7605-2d9a-4154-a98c-8fe689d67552",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "831accad-9cdb-45d0-bf06-e27addb80ee6"
        },
        "item": {
          "id": "37619091-a5cb-499f-841e-e5a1271dcb7f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "00314ec2-21e9-4e37-9f57-d9eecea63583",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 378,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc451e9-e140-4d10-9956-942300373da2",
        "cursor": {
          "ref": "0af1a8bf-ad95-46fc-9c0b-63c63dabf36f",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c96e69d8-f8d6-4172-b141-2fe7686621d7"
        },
        "item": {
          "id": "0fc451e9-e140-4d10-9956-942300373da2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f655044a-aabf-4d28-9a02-6128307340f0",
          "status": "OK",
          "code": 200,
          "responseTime": 488,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64e3e8a-a3b3-4a26-9233-cdfe56da3fcf",
        "cursor": {
          "ref": "09625081-9637-487a-a805-c149a661c7fd",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "56a29842-69e3-4133-b729-26f1befa4086"
        },
        "item": {
          "id": "d64e3e8a-a3b3-4a26-9233-cdfe56da3fcf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "85536efe-87ff-4dfb-aa3d-174f3fae8e61",
          "status": "OK",
          "code": 200,
          "responseTime": 1973,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5143ae-35ae-4626-b7ae-b21d918d7c6b",
        "cursor": {
          "ref": "a7900f80-087b-455f-aabf-fd4ba2fb8b7f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "30290319-f0d1-4f59-9f84-68af84511417"
        },
        "item": {
          "id": "5d5143ae-35ae-4626-b7ae-b21d918d7c6b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bcc2c0ad-dc16-420a-a852-d76705004dce",
          "status": "OK",
          "code": 200,
          "responseTime": 2091,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa9549a-f167-416a-baf2-cdf1374e98b9",
        "cursor": {
          "ref": "d412d4cf-a491-42eb-a757-a2f9aa6a4edc",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "63912e8e-8ce9-467a-97bb-2679feaf2751"
        },
        "item": {
          "id": "5fa9549a-f167-416a-baf2-cdf1374e98b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b354ef1e-82f0-49f7-b349-7c4409cce86e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa9549a-f167-416a-baf2-cdf1374e98b9",
        "cursor": {
          "ref": "d412d4cf-a491-42eb-a757-a2f9aa6a4edc",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "63912e8e-8ce9-467a-97bb-2679feaf2751"
        },
        "item": {
          "id": "5fa9549a-f167-416a-baf2-cdf1374e98b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b354ef1e-82f0-49f7-b349-7c4409cce86e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa9549a-f167-416a-baf2-cdf1374e98b9",
        "cursor": {
          "ref": "d412d4cf-a491-42eb-a757-a2f9aa6a4edc",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "63912e8e-8ce9-467a-97bb-2679feaf2751"
        },
        "item": {
          "id": "5fa9549a-f167-416a-baf2-cdf1374e98b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b354ef1e-82f0-49f7-b349-7c4409cce86e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431bdca6-19db-491a-9e64-e332e647beee",
        "cursor": {
          "ref": "49a05609-3687-4c69-8571-86cdd0b81dfa",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0cd76159-45a8-41f2-948d-0046bb09d1ed"
        },
        "item": {
          "id": "431bdca6-19db-491a-9e64-e332e647beee",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "26531a36-a8c1-40ad-83a3-016b37c8e274",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 374,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc4653a-71bc-4490-9b3f-bddb0ab248a2",
        "cursor": {
          "ref": "c1ac8115-6067-4758-880a-7c6213d4cd01",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68ff229a-5992-411c-9be6-02ef1d796cda"
        },
        "item": {
          "id": "9dc4653a-71bc-4490-9b3f-bddb0ab248a2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ee1611fd-464d-4465-a178-88bab6bf59b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc4653a-71bc-4490-9b3f-bddb0ab248a2",
        "cursor": {
          "ref": "c1ac8115-6067-4758-880a-7c6213d4cd01",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68ff229a-5992-411c-9be6-02ef1d796cda"
        },
        "item": {
          "id": "9dc4653a-71bc-4490-9b3f-bddb0ab248a2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ee1611fd-464d-4465-a178-88bab6bf59b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd4d961-7310-444d-ac68-d65602f5ad65",
        "cursor": {
          "ref": "fb2133bf-6379-4faf-88a0-6bf514405963",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "21a2d598-c37a-4669-a693-3b89275e7225"
        },
        "item": {
          "id": "0dd4d961-7310-444d-ac68-d65602f5ad65",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1638b44b-3927-4cef-9246-6bde28e746fd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 582,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200fbe16-26c1-4625-a211-be1909766ad2",
        "cursor": {
          "ref": "382affd8-0b5e-45d1-a0f6-9b8523bd4694",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "23b66c2b-6085-45d4-b5a5-dfd0b9c3fb60"
        },
        "item": {
          "id": "200fbe16-26c1-4625-a211-be1909766ad2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ddf526a3-e9a2-4188-b0eb-5c751ce43637",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200fbe16-26c1-4625-a211-be1909766ad2",
        "cursor": {
          "ref": "382affd8-0b5e-45d1-a0f6-9b8523bd4694",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "23b66c2b-6085-45d4-b5a5-dfd0b9c3fb60"
        },
        "item": {
          "id": "200fbe16-26c1-4625-a211-be1909766ad2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ddf526a3-e9a2-4188-b0eb-5c751ce43637",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53012a5d-491b-4b77-a67c-c9ef962367e3",
        "cursor": {
          "ref": "619c8f29-da40-4fb2-b396-1b8ff9115f94",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2224897b-dc92-4aa6-9fe7-59142cc02f1c"
        },
        "item": {
          "id": "53012a5d-491b-4b77-a67c-c9ef962367e3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4ff78f47-6088-4956-b493-3442d98179d6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 965,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}