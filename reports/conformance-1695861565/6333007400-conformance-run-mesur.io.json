{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b4119a60-5c58-4316-9a4b-9bc7a0f5037d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "62180a65-62b1-4c24-86e9-4111b96d701a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9fbe68c4-70a0-40e7-9bd2-76022aa38e63",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9ea98e07-1a8a-4a0f-ae73-a6f8c1e45e62"
                }
              }
            ]
          },
          {
            "id": "ed83e2dd-1d1b-47d7-95fe-98eb1734bacd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1be382b0-b687-4f60-ad98-e70b64d794a0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "465d3b54-9bee-44e1-bb17-9682ae063625"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c7746dd3-b9b6-4f8f-af55-445ae20a8698",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d5e2dbe9-a74e-435a-93a9-97915734a473",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f66b9792-1a60-418f-b88a-43abb4eda23f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12706069-5f64-4bc0-8fa2-f4f7ce389769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67e5f702-e823-4ebb-a8dc-45f188ce0f03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45f1e98f-f7b8-4b62-8667-2d4ab1281e85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bba69206-8230-4b12-9f23-bd2afe7bd7e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1639438-4404-4c5f-a355-dac5f5530646",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6809edd-6f65-4863-a63e-dcd2a5d86e47"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ead3ce8-9326-4596-905f-0dd28b8d4f72",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4006318a-4a2c-4f59-b553-14348d2a8338"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6559695-8dcb-4aa0-a503-a9c35c03b345",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbfbdbf0-4a3a-455e-bde7-e80f3d9b9a44"
            }
          }
        ]
      },
      {
        "id": "b8dc2fcb-abad-44c3-b51a-f9adf0c8c021",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "96c875a8-8ec1-41ba-ac10-99d76917fb4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a06cd6b-e09c-468b-b11f-4c5e49e3e03a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da8196f1-2ccc-4917-b9f3-207288eb4a76",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492db337-9362-4aac-b19a-671bb132ead1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04425905-0abf-4182-8a79-73cf07e40d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daa12e6-628a-4015-b3f5-6cc3f5edd32f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f44ccc-1d69-432e-ada3-af3c01e57327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "017cedb2-b931-4fcb-bb03-5b82c5936dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5900630f-8b57-4691-a13c-5c2c5d007e9e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a29370-1e54-4108-aa82-d37a71bf6969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de95569a-d70d-454d-865b-736520141ace"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89b840fb-f8ba-4a28-aeab-e37f6e58f545",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb6dfb9e-2871-45f9-b3e7-9ab28f96d60d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5414166e-7fd7-46e8-8d69-6d5b6373347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f10380fa-91ab-4b60-b879-7af1321016e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c8db52-839b-407e-bc30-6b23039b9bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a3f8dc-3566-426a-889f-022586f84e7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "58933f88-56fd-41e6-ac91-93dcfdc0c2dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f021de00-c37a-47c1-945f-2ed2b854477f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0038b3e6-f19b-4a7f-9c97-301c8d842389",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3129938d-8256-4261-95b4-41a6ff8ff097"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8bd7186-325d-453a-8403-8106594503a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a6bcae42-b67a-4fc4-9b7e-ef74f10987b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "070d00a6-31fd-489b-8521-1735c3c86726",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58d1c4df-97be-4933-bf4a-c1a11f2dbe6f"
            }
          }
        ]
      },
      {
        "id": "bcf83381-7858-4660-918a-10215501c8f9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e932346-d11c-44b5-ac4d-36169f028521",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01262926-e148-40c7-a474-91246e9a7cde",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "254017d6-0309-4492-a147-f5958cb2e544",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af908caa-0342-4107-a17c-a864d9a89af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d4d923-26aa-49e7-affc-fe931786cbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b49291-3e9a-4f92-bf3f-d8f1b384d0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4922a018-aadd-4fd8-9715-0aaef6f8fb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1731581f-74c3-43bf-a182-be903bcc3f8b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b08994a-332c-4909-bd19-0f7978b25ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70779f99-20b1-481f-9825-bce592c2e45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072985b7-270c-475a-bfae-70b300725862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a4d2474-fbc8-4ccc-8630-0796b482c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de06dac4-be23-49d5-baca-85aa076a7f4a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323341ef-b36c-4a43-92ee-2f2ef8a87795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594039f9-e965-43f1-aa7d-c6c3881375e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af41f1f6-564d-46bb-95af-c4ccd6c757b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aee2b0bf-c9c3-4b3f-b76d-3e3be637b631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5082e4c2-e9a8-41b0-96a4-941d346a3912",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40156a3b-93db-4e67-9df9-dd5b59cee175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67030b1a-5c1a-4b1c-8051-d0890c7d2365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af92a56f-3488-43dc-a4ac-ed802a7f5eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2255f6e-510e-4b25-8db3-a455e3f7af64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11fade2-7333-4dd1-a89e-bfc816a98cae",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dd60b3-3f4b-4108-a979-7dbe59e31982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a6a3e0-867e-4b1e-be06-9b90ef7f63ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f598a063-1087-44dd-b30c-2c7baca5ffcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ddf051a-543e-4760-8106-1e3c642c7880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe08757-290b-41a4-8327-9751c7b2319a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6957177-2c0b-464c-b7e5-b73d19cbfb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb8b7c0-7e6e-4da9-843a-df64eadc14c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a2398d-1d05-44f8-b267-2dff99d7b2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad8ef6a-6faf-4023-bc21-422d38681e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29147477-7fb4-406a-bc79-0df63316bd15",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa65e91f-0226-4a87-9039-2007a9e417de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87b3906-8997-495c-9b57-d043a3414690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8717ae68-ef65-42a5-8e25-ea05baf16348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889fc5f4-6f04-40cd-aca2-5426dd4d0cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7a4548-a7e9-4efa-94ac-7257806342e9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39defe8-121d-45d0-96ee-e93acb7cddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8ede45-f06c-4bc8-86f3-690163e5f13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67e09aa-f6f3-4968-a4ea-2fe8aaf1a22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8b3ff74-bb55-469e-ba8f-bda01ed87d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c2c0c4-7b34-429d-8127-a1b1d60de96e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ca9c68-b674-486b-93de-7fc7298ef3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b4b9a6-ae21-43f6-940c-eceaf097a30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d735193c-25d6-4fc3-8086-6c96ea651a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb2dbe63-35c1-474c-9974-71a822894d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42b0a55-8c52-43b9-b1e4-403f39c36a72",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4259c2-f6f9-4b4b-bb57-01bbe6e0a5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbaa908-1733-4d61-a1a6-f569f4eaf960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd940121-73e5-4908-b885-461ad5833fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f1eb48f-01c1-42f4-ac0d-18bfecd34d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a0f547-97ee-4d9c-ba40-eb03fe451d59",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2a8884-0ec7-42d1-a12c-9855066c7356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8065be2b-db1f-47dc-a053-add8192510d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd517f49-372d-4071-a013-5fea05540a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a6f71ee-cd5d-439d-af91-587b7a92106d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab939e3-83f1-41e1-96b5-a493c392eed7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c0c95d-cd95-4900-807a-4110f0fbcaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6159bfb4-8910-4ebf-a5c9-bd0e9b963d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f309fe6-38d7-432e-87f2-ae33102cfd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42ae462c-266b-426c-8e4f-2304eb3334ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcef001-1606-452f-9409-a379798de41d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb5d4c4-1fbc-43ed-9dd5-2ec59b3b2736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e9e1c7-872f-4679-b740-47b575a53908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ed47b8-d59f-423b-b8f5-7e7b756dc371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2500a227-4c07-4147-b928-6968a32693a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14405c1b-818e-4e5a-bf8d-f2cb1f000851",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106e4e58-66af-4c58-aa45-0429a0e64145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dba001c-544b-41a7-8419-f37c1a56d718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81202268-4d1a-4d10-9c1f-8c9bac5f2b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e4ea2a5-0968-4d99-ac94-0d8e30c90007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f45c14a-1f0c-4c6e-bd35-b123a6956ded",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02027439-25f7-4576-b6a3-ff7ebcb9556d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051eeda6-18f9-49cf-b250-df9b238b7a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7402ae4b-c9b1-4973-9c40-87a4f74e9b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c418d8b-a27e-4aa2-8db5-943d2562fd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521b92bc-3ae8-4caa-9b18-12f0bc35c551",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77782994-aaba-4bbe-b4d6-048e4f8796e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a04d23-6161-4852-8a6c-ad7cb9cf492d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0b1165-ea4e-48f7-a159-e8208877097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43b7a612-c8e3-43e1-9378-c24d90c8def2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d091f0f2-1973-4552-bb7d-8e38d394899e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f3a66f-24c1-4fe5-b7a6-f49924140892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebd9149-8b87-4aae-a5da-e78924392c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b89d904-6844-481e-836a-9f7d51590d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc8a857d-992c-4b54-b7e4-2fc8772d75b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe804515-89f3-4077-b584-4d878610dc30",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36747fdd-70f1-4512-a579-e39a85aefe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda8bef0-a4e7-409d-9ec6-497935b1535b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001beeee-8cfc-42e4-a35f-a6137aea273a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c464dc15-62ec-495a-9670-dc4e934279a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e068e1-01bb-44b8-95c3-bd88ecb3ff45",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708457d7-0c28-4560-8778-206b3d1c4562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444af33c-9dc8-47d9-903b-3fa175f4e9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f37a542-ac16-4b80-abf2-114417d4e496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb7f081-027c-482c-a1c5-e55a32529bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e023326b-e18d-4933-9cdf-82044a7b9cb1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf502a39-0ccc-44b4-9216-c0e0a3ed4c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f47d98c-7855-4772-a578-a60ce2d4d9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92683329-77d2-4132-bee3-fa740e20c1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85bcbb27-b286-4401-ae67-1a9bea9be7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffed0243-cf6b-4b2c-8688-9f63d259d43f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abf5531-4c1f-48f5-b161-298573b939f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3429114d-028a-489b-b238-64c9f984be23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc9698d-a9b9-4580-9694-7607bd0eb650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c90f62-87aa-4793-b51a-45888e249b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f789c494-bad5-41a4-8dad-9611cbb7b02f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0316db-d6ec-4916-afbb-1a184d4703e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9237dc6c-2137-44be-a7e0-1236b3122a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc849b7-b462-4628-8ed2-40762247e28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00e179e3-4432-4669-b96c-e11c7c4eef3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16361be-f0f0-453e-8b9a-48f24febddf0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ff892c-1ed7-41b9-8047-21517b925c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756bb04b-247a-4541-bc69-c018bdd63015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4dbba1-182f-4a1f-93d0-d1c9f122b011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fea7896-6ff9-46f9-92ae-cf638253f28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ad2cc4-efb5-4a49-bfd1-ecfdd225e6af",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4159752-b8c6-44b9-82b7-2836212fc553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6017d822-bef0-49f7-bd41-f6f17c30d70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0705cdf1-73ae-4727-a269-004e78fa50ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b31cd02-0fb0-424a-b32b-a5a6525de391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c50fdc-9ada-44e7-94da-d71d80f2508b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b7984d-a27d-4dc9-8e6f-49283a8d4a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9af429e-f86e-4b08-bcfd-93595dc4bc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8413df-8ab1-453f-99de-fceca1ca86ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1ee346-82c3-4df7-8f9a-b0b1daf127c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d58fc5-d88a-4f95-bde5-2ce4466dc7bd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb7f345-0e29-45d9-82d5-86fa35e9fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c1f963-361c-4338-aca0-ab41cf576cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095e9501-fadc-4861-bcdb-bf135600b73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59752108-3635-43a5-a0e1-ac9e2b93944c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc254af6-a9b0-42ba-b808-fbd2f9e06b0d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f68c3a-87dd-49fd-b9ed-491fd299f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f80d39-8737-42d3-87f8-91af65162aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e771a7-e529-4a98-896e-5fd9ea15fd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f243f27a-9ae5-4ede-bfb6-0002aaddd8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ccf389-7724-4f15-a9d2-b1f7aa5a794e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61967935-e94c-4746-b4b1-bdc6799d34bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091bb32e-f3fd-4342-839b-3f40f05702ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ababff-51a5-435d-b542-9453433e0f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3160c041-509b-47f3-a832-3c4e42c7dc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f86e22-546f-4bd0-b4e1-3a72f2c6f84c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f28ceb-0697-46e2-84e2-dc94027620c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7751e9-f1cf-45b7-8281-9b7b67e308c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede96960-9bd8-4fc5-8cdd-26dfc4bf92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d9fe45-2133-4b03-b812-a9955f35eed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a786a2c-eadb-467e-ab14-831a819b1b8c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317092a7-c384-4b0e-8047-b9959393ac9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d867f71-5317-4966-8000-83333e7e845c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fd124a-e7e5-4822-83b0-57f7f6ec28f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e6825a-5031-4fd2-bc94-342a8e071d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e5aeee-a61b-4a09-9534-ea647f8a31bb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0784409-8bdd-42f4-ae01-616c63123e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc709779-d973-4bde-83e7-c0d3b7a442b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fd5660-45f2-48db-aa5a-8f0ebfd0538b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ff1a91-952f-46b0-9739-836e716e26f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5997f52-daf3-41f5-8d68-d6b02bbac1fa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed98f0b4-4920-4714-92d6-81aac4b2bd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f168712-4cd6-48df-8552-30faaa010889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08a2e88-eadc-4285-a939-9548a84df2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bafb6e3e-9ef5-4a73-a489-6bf5a0875fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adf29c0-f4aa-4923-b67b-32b0a9c87424",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2ccb1e-2725-4a24-b7f5-9870370b1a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de63de2b-10a9-44cb-bfc6-280637992b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5374d1de-36e9-494f-89a2-00cf9d189954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "847300c9-85be-4d52-a653-de0a07569975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0660d05b-b7dc-4478-85ac-c3e0f24c9fb0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1126424-fa63-468c-a170-03bae93868d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d4c97f-b2eb-4a6d-a67e-fbc5dd8a1e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497084d1-6f3e-42ca-ba88-0892010da755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd7592b-3864-437a-acfc-637aa88812a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af389c3-1845-42f4-80e3-b518f5eba69d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c42be91-e277-4769-b63e-7603a8a0949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f8665a-a690-4b32-9d01-6e216d5999c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defd472e-0060-4f5f-9002-8603b399d296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd9f4fd-4483-4b08-be95-f5c144490a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9ebbe-5ae5-41f1-9a08-6364b88c9523",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2616b394-f68e-4343-966f-0d48a9caa568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6453f5ad-ca63-4a2e-a578-8ec9c29377ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f42889-345d-49ef-aabd-40ac8e4e577c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb77e2c6-4d26-45ea-b2c3-a47bd33c7002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15586244-0cec-486c-ba28-489b426fd152",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df063b77-8a18-4023-bd7a-20d877b07051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29ad437-0147-47de-bc17-400f2fc12a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c4a494-a464-4edc-b7cd-5a7e1607ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8599ab5a-d35d-4631-a295-ffa6a641cdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2466c2d9-e489-481b-abf0-e7d9e474b486",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e447439-eaf6-46d2-809d-4dd034251d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f544ee2f-fa04-4ba9-ba8a-c7eb6b501dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7b9151-c377-490b-af39-0e322a7a2ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9782147-1299-4e71-a478-bdbbac2e759c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a04eab-2495-4878-9515-b39232235f21",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103e56cb-47ee-4718-9cbe-1d2bc79878f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0e6919-39c0-4b2a-bf8a-83802d0069be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4467c037-16d3-475a-aa67-06602e944a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3aa1f0-a350-4063-9bdb-c30ca3262c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717da6d3-1b20-4848-ac41-d5415b2a475b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7c3c10-415d-4bc4-8bd7-01006fa9b142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f4b93d-0ea6-4bfa-8d60-9c710ef21da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67b8fbf-e145-438d-955f-f249d67a0faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a495028-0e5a-4c08-ae74-9cbb835b9e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742210ab-e33e-4eb9-9548-b1feb8217ed3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838d9288-e83f-464f-872e-4cd7fe9990e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ee0cc4-bf0c-4d01-b2c6-04da28532e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dae1bb-fdec-4649-b101-b2242eb2ed53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "46f30324-ae8a-4937-80d0-6ea036c41abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af525535-2f00-435c-b928-3f5c81a8bc80",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cd5b31-33fd-46da-a39a-ee8d69d37656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ca7c6b-b09d-4669-8388-e7349e44a508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289a7485-d2ba-40b8-aef6-69be4ee0e983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3c579db9-1fb9-47cb-9e2d-98d00af9fd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88514ad6-5a76-413e-b500-8df5210eb0d8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d89cdc-688f-4d61-b77d-176eb96570dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dc4d49-5554-44b2-911b-6d811e840435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9791157-31b1-4da3-863c-ead702b8de32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d00357c6-475e-420d-b0c0-73920e2ee109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574061b0-7fce-4889-bcc3-a85afaa1d3c4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cbb29b-f875-4266-9aec-702a9c2520bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88120f30-29e5-4f05-89b0-63c91c2e5844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7f686f-e240-466d-9afa-e24778867059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcbbbdf-1348-4056-8ded-82c5607292e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265b5af2-a5ce-4752-a907-f084ddc8268e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f22166-0b69-4ae8-be5e-db3cfb84bbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfaaf24-d56d-4411-b08a-25eb590c9c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cabd76-b8a2-40d1-abb7-64d9502635a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6ca2da-fefe-4bdd-bd23-334527a96277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361188d0-537d-44df-a52c-c31fd061a735",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6bd5af-a58f-4de2-bf33-ac30ce8d45f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dd6d07-7edd-4766-abcb-30ef3e10deb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf563bcf-1b26-4270-b06e-38babd78e6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad234468-be01-497f-b38e-2d4d3e1650b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9494d96c-e021-4b09-83cc-58ddfaf4e4f8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92898be6-9b0a-4255-a9fc-cb948d14b1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61edad53-fc10-4d57-ab7e-b50fb0f8f811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e01ed8a-2bec-4c49-ae1c-186c2db26cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc28bde-80a7-497b-9015-122ecdf93280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb919bd-daf4-4627-ac05-02d7a5461a36",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc408fcf-9628-4798-8c6d-763937173507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8458362-029c-434a-9a62-b52a4f0a4523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0432ac0e-98f4-4e5e-b13f-6c2c43d5a23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fffc30-70b1-4e39-a659-b8e8a3e0fd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a68aadc-ff01-416e-bbea-7d6e6401d525",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104c20ce-cb75-45bf-911f-a802901e1c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60265e9-a001-430e-8ffe-f0c3ebc107be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee7d72d-c50f-4c52-81e0-0b998191a3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7910b3d6-2159-48ad-9636-cdebb686121e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d1d53b-2023-4df6-8366-f2cbf3cd1cdb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c927de4e-33c7-4b1a-9eb2-1da38854618a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcd283e-d291-4a47-9112-9cbfa3b04cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cef884-9b4f-443c-bff6-c30c30735b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5a672c-140a-419d-ba84-2396afbc7d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e84b86-0e03-43de-a71a-d2f7afcf6c32",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af6ba49-b474-4471-9787-09a571ed1e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4de7f5-de4e-4996-aecb-e431ef794376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce7792b-0b9a-44b9-8f9c-2c4ce0db3080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "acacd3ce-5873-4b3c-914f-3eaacff92280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c613048e-dcbd-4474-bb0c-a8eaf712fbff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e2ef4f-4008-456c-bfca-8ed127103484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad03891c-bc11-4b34-bc54-1038e84ad03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84c3c96-3f69-443f-9780-286a2c1d9704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "959c20b6-089a-4858-8d5d-a02e73150a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b10a8d-833f-4ec1-bac5-d0ca0079fdba",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addfc43f-101d-4ef9-86b4-7ee4d5baa94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505c5710-8d31-4dbd-bff3-b9d83c60c217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8e6a4-b131-4767-8ba1-444f6a61b8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1749e6a0-0689-4869-8abb-f8119f6476b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a5edfe-e1fc-44da-b7c2-aae4d4d33f13",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbbd6b8-ebb2-4566-9ffb-d765acea647a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5edfcd-747e-48c7-99d1-8c7e53ebf3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0303e6bf-f058-4f6c-8bc9-6c17832e70fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a3e90c-2cab-4f91-9210-c2efc6f903c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c64807-258a-4d6d-91fe-5d8ac8cac501",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c481f26-96da-474b-8da4-28d1793ac5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28a294f-f02a-4b0b-b4c5-c3a10da8fa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd99c13-0e9e-4ae3-accd-afd05107df47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23f96225-f1ef-4fff-956e-f8c7441b1681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cebd1f2-bb31-4ed4-a011-50750186156d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2980a3b7-7f64-40c1-ad4f-c98ce30a6376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff7fbc1-1581-4282-a43c-4cc98cec1313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eb3ab6-d9e6-45d7-87ee-c4fb96e2a989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ec715a-95e9-45da-ae9e-d1f78dc74248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5a6db3-b7c7-472b-99f2-1391d7873003",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4480245-de47-4431-a3c8-b2d24fb899d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cf334e-1255-4308-91e1-331c5746b0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962aa81e-dc4b-4ee2-b9a3-49139cae9e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c65acdb0-c2ba-4656-a4b0-985caca10ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353c73df-1e32-4246-a30f-2013af93de96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d4aff7-50d6-4a1d-9b67-1dd6f017b5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced0b325-a917-4ae7-95ce-8b2584926f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3859b409-7ac7-43b4-b52a-0c9d46d57b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "decbcccb-e3b4-4736-abff-9aa136090a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e229425e-e394-4b4c-836c-393946e64c9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7810b4e3-2af2-49df-ac8f-656af553acd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d26a03b-a465-45e7-8364-129d6c711d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928f4140-7dad-4b00-a62f-224e682a2bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6591d4-d209-4e5a-b482-f94482da649f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb83b43-6988-49f1-b65f-58f692bddc26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8366c501-b262-4b65-9c01-6828ea232db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22077fe-7b04-4568-a983-fb3f3b0c4f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4194df4-8d0b-47d1-b454-cb20225c56aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f24a8e7e-4926-4ad6-a432-6688e4e15c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eefb38d-33bd-4723-adaf-b77d36f68d6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ddce77-d384-4894-9ef0-f75069f5ad56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd676de-3176-4696-bceb-cb9163339038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcdb344-019d-415f-a06c-6118ebf0217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97938bca-f314-49ef-938c-6a0b5a5aa14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcde5274-3ad4-46b9-afb0-05d38b0f9e28",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bafe531-1874-4b7d-ad9a-b1048b841742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b870a23-119e-4c52-a0a3-49aae91df2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400def74-4a9e-48bf-96a0-587e817800f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef95a4a4-1fa2-4825-b27e-1ac78edc7e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ac522f-022d-42a1-98a3-cdb10f7343b6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71991c03-89cd-4c48-aa22-83485a5d1a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e042b1-5d7b-465f-b8c2-c6beeba7a969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a7e04b-445f-4c84-95e7-e542318d9c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "54429554-2e80-4ca0-bb8b-cd88978717f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16461b0f-9e17-42f4-b786-43cceae8bd1f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2fb8be-d9d4-496b-bec4-8137abe4e263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633d76a2-2c94-4a2d-b44f-ca078123a7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ed0c64-a75f-43cb-bc91-c886deb40cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d96e43-4207-4581-a06f-c09af0fc94fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a599d7-c4d3-48d7-9913-ae8a019364aa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1113ecb-f3ea-4eee-9e99-fb351ab60853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e44d4ae-564b-43ff-8991-08ab81d4237d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ab1def-bcc1-4f04-8b48-423adf9b1f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9932b6-4324-490e-afe7-d202b91cb54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0292c4e8-5b0d-4084-9f3e-e87fc05deae2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2783b4-4161-4399-9ab3-e134d42b85da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae86dd6-7f75-4e2f-b9df-78f7ddca1219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea84843-dc75-474e-a5cc-7296ad27a460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfeb64f0-48a0-48f5-a9a2-f12e72988813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf4514e-4934-437a-aac6-1b8e39581faf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a675000-e5a5-47ee-b9f8-fbc24b547c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b37903-6954-4e17-b592-b775970ad84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85ce6ef-a63f-4001-bcd2-5408386c06e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e870bfe7-ad74-4952-9538-57f0dae48ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a16dcb5-166b-402c-a1d4-61a2e5a8ebe4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05df3c06-730d-4c19-96ea-a2a7181003cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdb88c4-cc0e-45b7-b473-f51d2c4f10df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d88ac28-5dfb-4ed7-871c-3bdc907f3783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5f2236-2805-4633-be66-140589b6d454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9e0bfc-aeae-4c92-b77c-8d00229bc43c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d70acee-6036-484a-a517-ba35c9ce53b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e8d7c2-92e1-4d2a-a496-a8a508d2ee15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14f7f24-c179-49b7-86a2-c8764daae877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b790fdb1-4632-4944-997f-333cfed32f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deacb6f5-87ae-4961-99f3-9dac2c02ed4d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd672b0d-a0d8-4752-a02b-9d2b04fb021b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d3d2c9-7b13-47f2-9a9f-b98025132538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac5621b-a0ab-40aa-820a-13dad39ca393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff47e61b-c690-4e03-88ab-6bfb2cfe8305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da23f8be-e5ad-4733-aa44-2bded0565705",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef16a17-ce26-4f9f-859f-6491bc460fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc548801-ec87-479c-8b3a-12855a1812a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1949e4eb-cda6-4348-b365-c49e8dec77d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc0cb57-f196-436d-86a4-9a55beb14778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aa8eef-2275-4870-ac72-dcbb361f38f5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b3652e-0efd-4cd5-b6e6-5f905c647588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fd72c8-2d32-44e5-ad6a-5192a736854e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5183b3a-fa7d-4e9d-8c63-09b3b2709816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5038f695-c428-4419-b8d3-1f4b63786dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc186bd-5c77-4cd7-8ca9-3cd97bf2321b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a9f379-b51b-4d61-bcc9-4a1c8017c762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1172bde8-3992-47d2-ad83-1dfd708cc93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ff3d52-6878-496c-9f9d-4a4fc4ba6055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b128cb1-0164-4f43-b1b9-89ff59ff2a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caea7d35-a8dd-49a3-b27e-6a81029c54a2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dc8133-3561-4b43-b303-63d53f603994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc440de-2cd7-4a15-9d45-184c0d09474e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979803e2-bc3a-4ed4-8fc2-352234593046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0770c0-19f8-46fe-972a-4e2af438a4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50920291-815c-49a2-9de8-e847fced6292",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729f7b98-d280-47c3-a622-a2f19fa4e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d774fe05-a7eb-4ae4-832b-a693c6f56b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fa7af0-0ae1-4628-a13a-103adcd2637c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "181824c5-9827-4b31-900e-59934cb0fd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281ed6a6-0020-4d43-91b8-e003c6b87f78",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ade7f-32eb-4f22-a05b-6f79b3b8393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8736cd22-f8df-4cfc-8622-0ca381c87fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92db3545-bc2a-4184-bc30-6a7aeeea82c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7198001-b052-4fb9-add9-fd1f37343655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab060d6-da19-4573-afcd-c3a3344defbc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da1f70b-0ee8-4a7a-bcb3-7b178bb91209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92717aa-8a24-49f9-b1fe-014b17f63fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73af314-08d4-4ead-a0d6-e29ccbbe88dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6c52ab-84b6-4d5c-8c37-14d441ca8901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93240a3d-2f81-4a7d-9d9d-6bccb9733af5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eb979a-2448-4c1b-bc2c-1dcdf808a2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cb069e-5e8e-4465-b959-52f8510f5948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40066030-31fe-48db-9434-9c266ba31b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5573d3-7584-4322-a474-bfeeb17da5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3a98e3-faa2-4293-95ae-7ec789f309f4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9fcd08-5b51-4814-ae03-1d823d77a832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c8ea5f-a689-4858-82d2-2deee8a658e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e2d6e1-98c6-471b-97d1-111d5d9a8f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b64d51-846c-454e-a06f-5fb1bf2710dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2522d4a2-1ff8-4580-aa6d-598c1d573a77",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851f46f9-ecca-4370-8d8b-63fab4c0da7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acf9047-5e82-425c-8a13-e2f02dbe8d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8566aa-f1fd-4894-97fa-ba3e5792837b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d689747-f7bc-42ad-bd98-eeca9ec30065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c92f79-70f1-4242-beee-3b417afe5eeb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ddf4d2-a356-40e8-835b-9f00d6f33d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996e2749-4900-4508-943c-fa7d0c8032ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31840a02-bd4f-4ec8-9b08-82f47ea00487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cde7802-c5b2-4fee-a33e-8ae29c657dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a838ebd4-3297-4081-b28d-0917f7e3f064",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116dde8c-d10f-41ec-b576-45f507327475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e583ef-ec24-496c-9123-ed35102c009d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a58149-877a-4a89-b5c5-723ea5e3576f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05fc1ccd-e81a-4daa-8c7d-e4f392d4afc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7972cfb6-45bf-4ea9-9090-796754119c66",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1944d538-52b2-47a6-8c69-b3984dc91ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbba16b-766a-48b5-808e-3ced45e63a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f6b090-2366-4239-8b9e-870d7dcf1c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7445ff2e-735c-4f42-b50d-eca12c957a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bebc5e8-a543-4dbc-9962-2b95043f9256",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87af7b15-c494-405f-81d9-68b6c2d55b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e95f61c-e07d-4af8-90e0-1c9e2660cc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5569ef-99d3-4c22-9749-7fd1c804a7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f58d2b-d5d5-4fc7-ab3c-ea24f3ba429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943d87fe-dcf3-4d4b-a01d-d3049b7dd09d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f3f749-3db6-453b-b0a4-c6ac8b70e341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6b1056-8fe0-4fe4-91a5-ec3e4f3bd246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac74804d-da9c-497a-9dbd-adc99783d59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "989557b7-d9a7-4cc9-bd8d-a65b15e54519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e93fd0c-e6e2-4791-8f1a-11ed69a4a006",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b7f2b0-9274-4084-9e02-428e70e2c009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a06233-e6ee-46da-b201-de4194405666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51a1e36-fe2c-454f-9260-90473150d3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e11302-49c6-4062-a364-1194c1c87fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de548df2-6e44-4a66-b7c5-4e39ef410e28",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f00d4c4-a36c-478b-9483-8084ab5d297c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a049a6-9a00-49e0-b193-cc7b6032135b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d2832d-fcb7-4c5a-a8a7-defb655a2439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c75055ad-db8f-4e2d-ba05-c043d55875a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4704920-2893-4918-94bf-6583b9292083",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90384be-80c2-4601-a1fb-92fd125773c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fb7da7-ffce-49b3-9a04-c1f6a7e3a481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76a9a7f-9614-4af6-9934-80c9ceededbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ada2004e-405b-4bad-adb2-d41a4a7743bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2b35fa-1a00-4689-8791-31e7162cbe74",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1e4d70-6594-4d34-9bce-47d7ef54d757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bde8655-dc16-459f-b21d-536bc7dcf515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a58d1dc-1e5e-4198-b1d0-68ea4e408fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "745b9468-ebf5-4420-a1b0-e1d3bda8839f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac42c5bf-2cc3-47ac-abe7-adf5862bb960",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5952cd71-6749-4509-92a7-d1b8a95edb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc833d83-e5fd-4d4c-a316-4c2305a62a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cec84f-cf40-4ef9-a609-c708f48ec4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2bec148-733d-41d0-a20f-cfe194bc1f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e782bb-ecef-4ee7-820c-2573c79fcff5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed0f2b7-0234-4625-a359-e875fade30b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b558acd-952b-41cd-895b-731069471569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa22cbb-f7b4-46b0-9cac-150bce5ac515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e230400-ee80-4977-a515-3872c60c9b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e74b01a-15c9-4733-b4e2-b11276ffc711",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed04b113-6483-4891-bab1-b2b1e54a0b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4bfc5929-f216-4ecc-9e7f-9a6c83c2ac90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9942acb-8fa8-44f4-8f04-cbbfed3c3b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b99977fe-86ad-424e-a0c2-30ab2f88538c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f472bf2-8fdb-442f-a35c-79c901f5765d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91af99a5-13c9-4be7-bc32-3e6a1db3e497",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a078422-e6d4-4aee-a619-a94ac0494eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec559ddd-acfd-41d6-ac64-28b1ab8e3c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339f5e79-6608-4d1f-8f18-fd3bd9c9343e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaae47f7-144f-401e-9567-b0d0511652ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1db553fe-e286-4270-a83f-88cf6616e075",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eaa1623-665b-4a91-8ce4-c93b6438e091"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4b61a49-8a56-48be-844a-aa62e5d72a19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d52cad4a-1d1b-421e-b467-c03d39fc8c30"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d08b0610-0539-4b26-8a0c-1b584ca3620f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbe2f949-9716-4b5a-921d-111920345961"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "34be91dc-73a4-4053-afdd-0bac1d6335dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "079a7546-5bd8-43a4-88a6-f3e6c536ffcd"
                }
              }
            ]
          },
          {
            "id": "2905e2f7-59fe-4a1d-9c07-1baeb14debc2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fab130f7-dd24-40d7-afb5-6072146ae611",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51dd8270-1544-4134-a971-9b61ce1f6d76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4c079d8-bc07-48b8-9cfa-89e4bf75b63f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0db4f9f-125a-4fe1-9839-3d79be7a0a49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "580db638-867d-4c92-82d0-8bc111d79a03"
                    }
                  }
                ]
              },
              {
                "id": "27bb7dda-22b3-4e5c-85af-593e97de4d85",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e23cf0a-0a00-440e-a2f4-cf3b59db2333",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2d228db-29db-43bf-8709-7859045ec5a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26338662-df8f-4d8e-b51e-3cd6280ee550",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aafd35dc-de3d-4d57-8194-6e1bf6b91fa5"
                    }
                  }
                ]
              },
              {
                "id": "d4012d75-68f5-4f1e-b93f-e0b42b4ff2f1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acf77ac1-b268-49a9-b850-272fd76daaf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d37dd418-1f75-4927-9ab3-fcd5bf1d71aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9890ee6a-dfb8-4ebe-995c-3dd5ae94184c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0535649e-b495-49c2-b569-b04bdf302de8"
                    }
                  }
                ]
              },
              {
                "id": "98dbbed2-82d8-4789-b520-dd8308a4d180",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84e713de-bf44-45cd-b508-8a33a8c26864",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c22d5aee-d3a2-499e-93ea-17aae07ee22e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79f68bc3-cb03-41ad-87c4-11a53d4d5fa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "aaab0a34-0619-41d6-9450-cdabd667e654"
                    }
                  }
                ]
              },
              {
                "id": "61464460-1b84-4635-ba2a-d8e0f9cc5653",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8756d04b-0955-47be-9073-b7afddfa002b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd5c0464-2820-46c1-b16e-9c4683f661a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edd215ed-9d38-4344-bfd5-8125be764208",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d823f87f-8318-4fa8-a5fe-4de5f744caa4"
                    }
                  }
                ]
              },
              {
                "id": "535fe52a-5cc6-44f3-986b-b232c201fb0f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e0441c1-4ef1-4557-ba1d-71a087d9f0d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "655b0f8c-c5e2-4cab-80b0-426d35bc9340"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a54d6879-50d8-4090-a6aa-a217c5b1f788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0095a068-9341-4945-841b-385a1d67e17f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc2ab865-7017-4c2f-a822-d1b81c78d271",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36301049-8a90-49ce-a62c-d47349e114e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4472fa6-f626-436b-8f31-990989b1ec6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfa48ed9-5513-465f-8d03-c31571005a1f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "becce586-b143-4157-951d-21d8b98d2934",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8b6409f2-f323-4f78-9674-87057a2d8402"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "380b3185-1159-4941-97ff-ea1cd37a35f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9cfcd82-0be0-470d-8e1a-00fb34cfdcae"
            }
          }
        ]
      },
      {
        "id": "d2082f24-8fe0-4f41-bc29-b9bd32b68ffe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "769254dd-d8e5-4d46-af93-e6b3a9a0c5e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b547bde3-3437-4321-8f6e-7c1d7c5e069b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2f619b74-0209-4956-bd55-dda514400d06",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35d381f-a08a-4e64-8557-3129f652813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6094523-3325-4bf6-a00f-ce04299bfa32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9152ec7e-af08-49a7-b7d8-7056ddaed541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a754e9af-f7d6-44fc-9abc-c0fe72a5013c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0da9f9-5146-41ca-a3c6-eb128bcf64cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451b0c97-01cc-4f51-a3ed-89419c8520b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34622c02-0cb3-441a-a741-bdcb36ff47e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bc88fd-ecae-41a8-b64c-5299b4084d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeae6a80-3fd1-4335-b243-344e101e656e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f7a75a-804e-421b-a3a8-ae6f32f9af5f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3426e4b5-5dc6-4dcf-bbcb-fab1248ec772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4557c3cc-208d-42d0-be65-406353a8c315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac81bf6-722e-4b65-9983-778af3734214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6aee45-b7c0-4c70-80f9-184ece96fcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaa58f6-b84a-4f9b-8dac-85e6f9f5e5f2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c64832b-9777-4e07-9720-608aa74d19d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b6487b-ef3b-4ac5-97ef-b5617e24e145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7954ace3-70f7-4c97-8854-dfcdf2b5b8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "979f18de-13c6-4623-b5f6-57e96ec41855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c2326c-8a47-4235-8967-d02673d998b4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34af8d0-d6ba-4b0d-81fd-b8724130b5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ce9c8c-7eb2-4b34-b2f7-9750c1449188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21baf5e-19e9-462b-a071-013bd44130cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b37a2b0-ca41-4c9b-be34-d248d5545513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07e2342-ba04-4cc2-922e-ca4fcb5b3d58",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807d9ef0-e244-4cdf-98e3-5a6c93d6a79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82223956-ccfb-417f-b760-c249a28bcb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e671cf3b-d39b-4973-b669-ec2894dba699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6213506a-cba7-4393-aafd-8ef1cef06d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967ba581-f959-4e0a-865a-ec7ddd746873",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798737f7-ac96-47bc-b8c1-5072827960d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1096b0-76ce-43f7-90d4-efe63f459dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94e567e-9c55-4c11-aa32-8de60206f210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0158a23d-c049-4e47-839a-98863b5af8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726e473e-104e-48d3-a2f4-fa993b826c06",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01fc2d9-f647-4d2c-ab82-563b1396b18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6da5d55-52ed-4b2c-aa31-e8531b450d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ad344a-da0f-457c-882c-ca1d39757410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa1f4da-1f10-4eab-98d6-8cae062cc12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c598038-75b6-4092-8d0f-28b809ca11f8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37536a4f-25e6-4330-b910-3b4bd76841b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753d85e9-20ab-499a-be06-7b90430f6c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b129d8d5-3228-484f-b240-0821327fa9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a581fea6-2172-4233-99e6-c0e3e577b039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a323c32d-ae12-4362-a9fb-9ce7615a37af",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dfc130-8289-4f57-9ae3-7f4066ec43b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cff797-657b-4539-83aa-4b0da948d061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038fa8f0-7142-417d-9f81-83ce3f8b780e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f772a6f-524b-40b9-af04-9e89501a9658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd3ade0-34f4-4c63-b86a-506422440f39",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab461a3-10f8-400e-807b-97d9f04d5146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ca38ca-c13a-4a60-a248-be085e03826f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03179fa5-cc94-41ed-877e-8b69c859df7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc110afb-b26d-419f-8588-b176e51ba94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154b34e7-f3f8-44d5-bc0e-fd493771bc68",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a0f7a2-9f65-47e5-a4dc-27d79f3272d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f927e225-95fd-411c-963d-28ba9b82322a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aeac442-219f-4898-9908-bc479ae8453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4749d6-b5ca-4d69-a0ff-c5ad2d44d2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a1a983-ce82-4b4a-ab5c-773756fe30da",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3613199-6e54-4b40-b53f-515b33eb6718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424f0f56-afeb-4dbe-aedd-a0afc609ad69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba82dd56-f2e0-49a0-bd30-7639d055f0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73caf219-2325-4272-9bc3-e37402329c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcfe0fd-165a-4867-819a-b793d42a1db3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fc97eb-cb84-4a7c-a202-2e99bebf074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82962f9-bc28-4015-a271-fe8f7ca73d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032427e6-67f4-4540-a9fd-ec08f3c30796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63c078e-5240-4675-9383-930490766fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32811522-eed4-49bf-af9b-0f09e59ceca1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a6de8c-9e93-4bf2-9d30-649cbec2bf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f25ec3-3179-41ce-bb15-f99894b1af3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df45bbd-9cd1-4ba3-a1b8-dfac8a232c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41e5805-017d-4614-a3a9-154e8ef5eea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9e5ac8-875e-46a6-ac62-cfc2fa3296a6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e0aae4-8ac1-4a9d-a9a5-c2b35f223623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b576a26-b28c-48a6-a97d-6cb8d2d80a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba66670-321a-4b0b-943d-47f5cd87d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "77219c61-8323-4fe8-b0c8-35cf13773cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c70f93-9e0a-43b8-b7dd-0c7118554e5b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75effe0-99ee-4928-a04e-f09c2bb69c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d316a64-3c07-4290-ac11-6123c70ff5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d74541-9c1f-4998-a50c-19ccf620dea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b097521-8ae1-48c9-9c5a-ddaf810b57a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29deced-0ae3-4dbb-a046-a523741eb95a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59c9948-3a47-4932-bab2-0cc9d7e84551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8078e44e-5d01-4d9d-83ba-0c541088ce79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3c9648-7d83-41f3-b5e2-494235644f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07806114-e3f1-481e-b41f-29a8efab7c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2055ca0-56eb-42e9-83a2-86302326176a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030ee251-1341-4b2b-be21-a415a34c0245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179a8683-4a9b-471f-b8e6-3b7e45277a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6029e4d8-6c62-465b-a522-9f6d330a703c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ed483a-11a5-4367-bc8f-1b37072bc0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af462185-cf63-42d2-96fe-30063ddb12e7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49922da4-ae42-4b95-887f-354354f2dafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5cc020-27f0-436e-ac40-882cad6aaad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4bc1bc-65b7-4b9e-bf57-cfb6b58b7a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eed19af-5611-46e7-85cc-2d8ec573830e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73170c56-3077-4a6f-987a-715dff4cd3cc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d0f5ee-fcb2-4802-b598-38095ea6f154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debffbfe-f874-431a-b881-77dbc1b6784a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c29fd9d-e3f2-47ec-9752-c48b8deca13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30637d62-bc27-40e4-9f5c-cbc47fa0c6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6af615-d5cc-40f6-8913-b878643c1cbd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1b19ed-20a0-4817-afbc-48b22827df02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1742580e-6625-43a1-80d4-039f7042570f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7951fc-03b3-4a67-8daf-2a3d93b280fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdcd9d3-bb8c-4831-b723-7ece3fcfbb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876b3cd2-98d7-44d4-abae-9e1a559ed0eb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276cfe49-f021-40a4-ada4-354378b502e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8625af1a-908a-48ac-aa4d-03cbadd99aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62478b76-c25d-49b3-8b8a-ad9125c1b82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23025b98-151e-462c-bde9-b44c086b3c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dd2727-2404-4a9a-9061-74382a1ef20f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0283a3-4ac3-4e35-9304-b1c16f8f65dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a002ea4-ac4f-4dba-a088-ee31d22a4643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5ebb63-625c-41e0-aef3-63c817323665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9006c6d6-e1ed-4b29-ada3-d93fbeb71535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706bc7eb-d924-4885-a382-01973b792362",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b610558-3af7-4661-8c21-a463d5281288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501ee4d8-0ef7-4a1f-9ec8-925ac30b387a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e969dd-4efd-47db-96bb-1ff474351193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5133fb3-9ff9-40a8-aff7-0a9bd79f7d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b72452-e45f-4efd-8e1b-b662237cad61",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2503e147-7284-4f8f-8195-532d83368a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd4f0a4-7cfe-42e9-91d8-4014c16a25d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda8e6e6-86b5-4743-bddf-7c55674e9444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb0e6c7-f177-4264-9f78-0cb89e4b54c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c481b3-ec29-470a-912c-f73a9d243aee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c9dc56-cd25-4aaa-b28e-0f9cbdaa4ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc64e83-d947-45e0-b8d3-d739df9b91e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f3658a-a8b8-4090-8a0c-d8255ddeb95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f655ab-d34e-4031-8dc2-ea3db181e02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837faaa7-6983-4cc1-8a6f-fc5c3cd1ad8b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26797e8c-d236-491d-b157-e35f029a6681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2f0527-38bd-4d45-8164-adc273fed68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e561f14-97ed-4834-9229-1496efa7e3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "895acaa9-e1e9-4013-8a00-25c19721c984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad6da83-8ff3-4271-a0b6-6fda53ae26ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048a26d0-27d6-4f7d-87a1-74aa30ba2a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669a9cd1-0854-4f3b-a2d9-d8357edce2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5a702e-5c34-497e-9e7c-418ca6becde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "487aa91e-b6cc-4f38-ae19-637f8383afe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb752902-0047-46a3-b21d-744b38b2f7ae",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56ca38e-b945-475e-8307-f168bc1eff04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e93f99-53db-411b-bb33-bf82c99b9210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2253e4f7-a54e-4b03-8e3b-08ded8fdf2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "939e1448-a7a1-4b79-b964-5afe0353ad62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a404a66c-b030-4ba5-9b7c-f1071d25a83c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f0a4ad-af86-419b-b9fa-465c64d28da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64031631-1fc6-4e86-afa0-fa3367ac6cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a156fd-23de-4305-a94d-2d56d099ae44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f31e65ec-0e2e-4dea-888e-2fbadf699413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c16699-6550-42ad-a687-807263bea5d3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eb6e8a-9f16-496c-9cd8-4378082082eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7e9e08-2627-4166-a4a5-84fce9779ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab64fb2f-12c1-43ea-bf81-0c253ad1f647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf88a4e4-5f4a-4f8a-94c0-041d5dbeebee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ecd324ad-79b0-4fdc-b3d3-068e4e09dbfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3eea11d7-df53-4296-a94d-4ce6abfbf5fe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b428cbd-2025-4d29-8ed2-16c9f0e0a774",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ade718f6-4408-4043-8680-f5ce107e616c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dc3489-cbed-44a4-953a-ab3131a10f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84136a19-982a-4496-aa1d-a3d182fcba7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81a6cadf-516b-4b94-99bd-a4268ed2b1c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7496757f-f60c-454f-a6e8-535b4e1e12c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b01d9e12-fd79-42cd-b1fe-7c828d8e7eef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a312ed6c-ee0b-4bd7-b98c-41b47d32ef5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11618469-81d5-42b8-94b5-f903540fa7aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d13074e-19b7-4990-be79-cd04423a7f8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43048942-11f6-4048-b6f9-19a902e3a7b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a4b62a5-8662-4f51-a140-55fb1b117baf"
            }
          }
        ]
      },
      {
        "id": "8f022b9e-5c8f-49af-8085-008eade17db1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c287c445-7652-4f41-86b1-3d7222c2ca1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bc1de0b-ef01-4f23-9c53-02ea8a058d8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2847cff5-bae8-4bef-a19f-3576d89ec0ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1e446d-2e7f-4fce-83b5-997121d4a1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a86d13-fdbe-4da9-982a-663e9ddd8d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eea889f-0c4b-4515-bf53-57aa2b608951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a823fba-1c72-4e08-bcaf-d1055bc14de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b1a384-35c0-4bc7-bacf-b474c6726b77",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7395f413-a1dd-4992-a209-75b0a6ccdad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9993f527-5db5-49b9-a0bf-c9f402ca0b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b80ce17-44ac-4129-8081-b19196d19d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed53536-5b09-48f4-ae95-42cf918b2398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b579d8e8-e8db-4191-8d11-5807fe813ee2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bd4e7b-3f1a-485b-9d8e-3550f7a6f8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c949d25-6a72-4d1e-985e-265cbf5933e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c790a95e-36ec-47d2-9a5b-f29f862d4eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2727eb88-c5dc-46b2-b769-b9505c13fad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44a2c9d-c663-462e-92f9-f5c89f77e344",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c931e8-307e-49b0-9184-f7403e2a392e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5446ef37-7deb-4be6-8f80-be8d442ae3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b469e10-9e15-4486-9d09-d17589452b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3fa6e7-c47b-40ee-9e87-2d383816c1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d7db41-64ce-41f5-afb2-ab7834e9f5bf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e40ec7-3892-4df7-9501-0526f36f2749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899355f4-5a84-43d5-8b5d-9bf341572268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe2ddab-7701-4874-a164-82dc12339448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65d0ec31-12b6-4654-9242-3ffba5fde811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fe94a9-8cef-4fa9-bed9-921e42c6e1d7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c66946-655a-4b6e-8005-576f423f8e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593831e0-b4ee-41b1-bf65-37ed920f7aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef647a23-90c9-4c64-a36d-0f540e110288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6784a93a-202c-41b8-8a80-f05ef0f613de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d403e436-eca8-4682-835e-fd9ba942686c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5043285b-888e-451f-bf03-294094c2d937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633f192e-2272-4fe0-a02b-d5c1bc8f50cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9707a256-6c7b-4731-9a77-e9701a0b22ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f41174cc-d217-4226-97fc-2c87f99abbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfe80dc-9771-4dad-846d-e9930291c1c3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f10c29-afec-43f1-b650-1ab70611bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3013f0cd-f669-4b4d-9196-4f7d64348ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d593c2c-4da4-412d-b3f8-22b6d4eee69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b63d6bd-0ef8-48e6-815a-4ed3614850ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3249ec0-4cd8-49c7-91c6-0efa18e73d22",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3fe580-0953-40d4-9001-ad9b0f67e5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09979d12-2e8a-43a7-9a90-b62e410c0ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8555f21-e34d-4ecc-ade0-3963da22ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2b746d-197b-43a1-a9dd-5fa0f3733455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66edd60-11b9-4ecb-82b8-6ca6b0c017c3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf1d14b-15cd-4b3f-9206-f83bbd5853e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd87876-7751-46cc-a885-45b87ee4d069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006bb033-8464-4091-84c9-f9a2f07a49b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d3a7da-5a19-4617-82b4-f92dbee5ab4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d05235-92a1-472d-b06a-50c141324a20",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de5748e-1822-46fa-9f60-74f04504d765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5203f9be-3a97-4685-bcf3-8cca030e963e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c353353c-c212-4959-89f6-61b70d2ca89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "86e2441c-0aa8-4e0d-bfaf-a7a46f2761bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8ed7fd-bcc7-422f-a046-398e5d82accb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4215defc-effd-4691-949b-effc6abf0efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a5a94c-0d98-4d62-a8ad-02eef61c01f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d939989-2f04-4050-a07c-e4d3f5ee1512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16628634-5bcd-4fb6-ae36-b2ebd367cfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2148a513-ad23-4efb-bd8c-a27db6a478c0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa55ab54-91a5-49dd-ac42-d1fe81053a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a95244-7bb4-42a6-8cf4-14a1aa801c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d626def-c0ee-41cb-91aa-8e92a5bcccbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f27207-1730-46c3-a565-5e54515d2efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37318b9a-ecc2-4c1d-a098-157f5553d7a1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31042ed1-eba9-406b-bdc5-bfdb6ea0d733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f60e10-531f-4798-bfe5-79343e4225b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422116fc-a91e-45fb-acc4-c43d5d97247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "730fb25d-615a-41a3-b596-719bf9b87708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c78501-2efd-4fd1-8bde-b8f84c895059",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13616182-a059-49f2-9490-607c92256dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f384158e-b37b-41d4-8c83-f120dd80ca66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f0b722-f376-4d34-a664-aa3748b8816e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e55703-38db-4a36-905d-4bc2817fee8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f340f1-9b43-4d3f-b50c-e058687349a6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4d665c-542a-4626-8505-5ca8a46ed6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fdbd24-6450-4028-ba35-f9b60ce7caba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c22e842-855f-406d-a715-8f277af298b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95db3d7-87d8-44f9-9dbd-8363fb823af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed6da99-a893-471b-8ee9-ff11b1cdce61",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e33c5ed-6bed-40f9-a647-25bea18c6eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01095987-d4ed-4165-bf68-da985265eea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fdbacf-afc8-4aa3-8f50-5ef9c0cb873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea098e9d-a9cb-4df6-842e-4a7cdcf6611f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdf1358-4ef7-40e6-9699-6f23e596b07d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a608334d-f344-4063-aef8-8e8f236977cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b96961-e9c6-4887-a750-e1c20d98a658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acefcca-f340-4d0b-8fba-ebe2d55d4821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2187f21-9391-496e-8082-2a42a2f0a5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f7ec95-5f35-4287-89d3-7dd7a7a0c72a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03d9764-824f-424c-aaf9-0e8dc66d1678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cde25a-4eab-4a84-be10-daf13ace2519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4d4b18-43c1-4093-ab14-ba00399f9b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf47ecd-b371-47ef-b33f-4fba1e2bf1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f034a1-3d86-4548-a59f-2f58e9768ff6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3694a9a9-8f17-460d-9c47-11cb1e8a2830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d98f1d-131f-4d1b-87e0-2ff1446c291a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235a54dc-6e3f-4521-9c13-27bb0e853b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "946f974e-b97d-4934-939d-27c00c8ab103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443e9734-099c-42ff-a1f9-56d6b731286d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7106ba96-9522-4167-85bc-02dfdf67dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fab8f6d-fa85-4fff-a45b-e4433bf63ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d5dcdc-0f04-4ae2-9da0-c6eff5d97351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1abc1f60-1e38-434b-af3a-d9cafbee56c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c9310a-ffc8-41b0-8fc1-009652aa8019",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c6c3ab-fe6f-4144-8c78-db93f14b9556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476f5518-f01a-4992-96e9-df17b7b04acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bcdddf-e4dc-465e-898a-67ebd9def120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d412f8c9-aeea-495c-90c4-9857821017db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f42714-e648-4130-abf2-5c154746bd6d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a03aa5-a1f4-4b99-9622-14a2e31bda5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dc4a8c-4a0b-45fd-ad42-ed2f9d5dfee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17926248-ba05-4a38-9bc2-a3cc7ea0a654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e747afe8-b3aa-43b7-894b-74912cdde661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4551ec07-7882-4fc5-9cd1-91aed7fe1343",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d530703-c79f-4828-9a59-08a43f9e3890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2e207d-a9fb-4b82-b413-16defd982951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3a6c1d-2374-4085-9e2a-45d33e902040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26cf25e5-6e90-4004-bf29-8d046b8772b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6732064e-1470-49fe-b2be-8db89a77d2fc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5471b50b-7b34-42ee-9cba-6dbbadcf7fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c0a69d-4c85-445a-b760-8e2a421425b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faadebc-1f56-41ba-8331-696c05a42267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a85d5e-1961-4cea-b9b1-aff66d03f44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aa68c3-4b31-4dcf-a815-720d5a1a6ba4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bc9bce-d083-4211-8f9d-c78995a30af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf8084f-91d5-40c8-9f3d-b92bd2563c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d401065-7a4c-4a19-89a7-653e17ededb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0720a9d-bc69-4289-8b31-c26bfca02d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606a0bbb-0cc4-4595-935a-972d52f53aa9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66222c5-6a03-4c62-a611-f0f27139c5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eeb06c5-f476-43ae-b270-4739aab22263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3972a0-59de-43ce-bee9-8abe198832f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b36339e4-38f9-49b0-aad5-78796b74bde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c279b5-c800-4d91-baff-9852caf55da4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afea010-819b-4980-8ea8-a3b01a4138c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39a729b-b1cd-46af-b169-8dcb6ee9248b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749870de-2ebb-4c71-b438-e58ba9cd95e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd496b3b-450d-41d1-9fec-5fdbdba97c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e502b1f-899d-477d-aed3-88e8d367fbb0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561a3039-bd0b-4648-be1e-e320ad2f945d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf0894e-310e-4d72-8214-6c2274fd356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6004ee3c-1ca0-4ba5-90ae-8a7d743551fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "925dcc07-ebc9-4fdd-9a7c-1fc6d801995e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ba43b3-7d6d-498c-8a64-274c4eccb7b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4333e0e-e2ae-4b49-a05a-b839351de15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da90373-6d9b-4efa-9a41-c43a993de212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73af1eaf-8f36-4f66-96cc-b231aee6d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6c1d6e-336b-4453-88b8-eee744997248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9eb047-0373-447c-a49f-3453fd2aa3e1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e93c25-5201-41c0-b6c7-dc0b8fa60d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a0324f-38ec-41e1-92b2-7691c668665b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52a9055-2893-4c83-a583-698e8cfba6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c0c63d-918c-4fda-8778-a96061895a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b81707-26ec-4082-b67e-ceee6125d1fc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af9458a-99f0-4f58-a9cb-26e745b99594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12850e1-8f5f-463d-8982-5914b130dc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd76799-ca0a-4ef4-98fa-1b6a24e44a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5374fe71-a498-4ef8-81cc-8180834030ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1189dba5-0653-4a2f-9469-5be229afa275",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475bb5eb-10cf-4dce-aa65-81c38e307b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304cc6b1-9227-4a89-9815-a4f35b8c1a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f74867b-860f-4c98-b99a-f54f993fb9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e446a1a-089f-40c1-bbe4-04b417deac81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe48bf83-c1aa-4b59-abe1-02d36cc57e72",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f2fb01-d0aa-4b45-817a-175efd259b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5941bea-4e73-4d37-8816-fd3b0b283ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd65e89a-bf9a-45eb-92a2-3c456e1bb691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15ceb0e-a994-4512-ac24-a9a5134d924f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62164ffb-5727-49dd-bb60-9006b1d0c1cb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329c92a9-d0a9-46b1-9f61-59fe184b5c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0696498-6eef-43ac-97ca-84407482b2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364cd4ee-8414-4528-97e3-82bab11f53e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ad9791-eab6-4e65-a1d8-02921c356a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86daaa07-3687-41b0-b6a0-eb5ce619ca54",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea6ea34-d665-4bc7-8718-eb4b0ca40094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0502acc-962e-4542-a686-99088c58ead7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df05baf3-7ec3-4f51-8c11-9e4d6a515b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6263b7-cc75-4413-a856-8fed24283336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5742c301-aa6d-4670-acd9-afa3dda4331c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea5f0c1-907f-45dd-abf3-f7302c0ffc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15af5b0f-549b-411d-9600-2d4d4ab39e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0291adc-ffe2-4d30-b471-6676c46c5bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a694d8ff-463d-4c6d-8db2-2703d527178c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c264227-45a2-4e8b-8cd0-e1caf7bd94d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a82bb55b-138c-4f9f-8a23-3ef2735de184",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad52901-6fe4-4590-a614-547c0bc31c72",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e045969f-8a52-47b0-ad7a-2983693939f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaefba3-ed28-499f-a317-2b5af6484b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e489aef-2963-4a60-8525-40e6bf153e2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4cc4e40-71a2-4c2b-b448-4d1b34a80688",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2916dc4-e3ac-4659-a95a-cc43a5acf625"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20359efb-3450-439f-8079-b15296179dd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31b3f71d-6f42-4abb-b9b2-9016312fbf23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e0556aa-1247-4a46-bb18-aa36f93e76b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21e058c2-168e-47be-9dce-0227d8494bf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7784878-6a81-48eb-b6de-b14b94778b2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "deffbf68-bb58-423e-9a19-7a6cadd99c81"
            }
          }
        ]
      },
      {
        "id": "992571f4-64d0-4b4f-91ab-f41b42b6cadf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "350a447a-db83-4526-8d7c-f0642467e007",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd86184c-849f-42cc-ba4e-e2d36e158b4c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03eb65c4-2a8c-4302-9eb9-08b5b5468037",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fb156d-d096-421b-b372-43ef99854436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c664b6-1262-482d-a9f4-306854469a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a01ab76-e930-4379-bec3-e78b9156eb5a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f912de47-3cd4-4997-b748-abeaba4088f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a23743-3ab4-4570-b364-d447ce8d5137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc0f82a-b656-4d3d-8fd9-f5302e954526",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ce9604-661e-4ade-8e8a-05d9173a0b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a2a391-058a-4f8a-b5b1-763cdea398bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52dc47a9-89a8-459d-8de8-ff7b18eca590",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3b05c4-78dd-42c4-a6d7-6f5b2d9c3021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec91302-57ff-43c0-ba74-912ad0945bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5433a387-399e-4a22-9ba0-c8342d162940",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a833dc9d-a255-4dd7-b6cc-0094aa8a7eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94c374f-fc1b-4835-a2d8-be58eb7d3929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f621fffd-43e7-4c31-9c27-830c561b2f88",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5513568e-0eb2-43ad-9b7f-2176247a2c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382fafe0-87da-4bd7-8535-8664afbda4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc40e97-a0b9-4d40-b948-66569c862784",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c97cd7d-3574-46d4-9c2f-59baf5796eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a70d00-1777-4e9f-a70c-df9b6f0798c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2882223-23a6-45ee-ae1d-7f2608ec9992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c00d08-bad2-45a3-bf5b-7de787e303c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b84b907-9442-4759-940c-51d06149281b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326a6a5e-f3d6-45b3-ba61-0840c96398ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a590be-3046-4435-b56e-a8a9a3d4f66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0007e3d-9099-43bd-b8f7-f2f0ac192bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd3f47a-7c75-422f-a845-925a04a575bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0330e3a-4d16-4f0e-b9c7-2c965e7e6dc3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca47df9b-4ffe-4383-9b5f-c6d66f266c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06243058-bdb4-4061-be0a-283a78ef922c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c08f45-b265-4492-9450-040d868dd5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00c5c57-7e11-4756-a88a-b8d99959502d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec174a9b-f146-48d4-a06e-362733afbfd9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cb8161-1ad8-4a42-99c3-3d80ffb19621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07381db8-8b96-472e-8084-7bfb4c982d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9fe011-4709-40e1-9d05-4aaa3e6e24c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd35acd-e188-42fa-b3ed-79cea38a6ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e676bd-97e9-4421-bbbc-f0f2ae4d5793",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0197f714-bfdf-46f1-b01b-c28031cc4201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9b60c6-9632-4ce2-b8ac-665fd26c313a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380c4110-4c4b-4c9e-be8d-8c306af57a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a62e13-4972-4a7e-8961-d5ef513493bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f103f09-158b-4305-b906-4133638e0a96",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc9cebd-19c2-40d8-9d18-45cd3922b571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1eb167-d4ba-48e0-98a0-9b202c0bdeae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae32d503-2f33-4b74-a1fd-75318839795e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b0e022-fcfb-4e9f-83bb-f631e8a74217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5099759-cef1-42b3-a3fe-8f1c0573002c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871ff785-4d8c-4463-911b-7c2fcf92e306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483b96f8-1650-4e7f-b741-52df7663266c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da212f7-3cb9-4d9e-85e3-073f7ac298d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fa0e40-75b6-4473-8a4f-d9f3d2dbb7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6369ad26-7a62-42c6-bfdd-38f802e795d1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8674836-0eb9-43c6-80d8-09d01582dd34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f634a311-d480-4014-b22a-40f53c4b768b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd311539-d57e-49b2-a46b-fed4380a53bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de39a1ba-c0fd-4095-92c6-b21369dd1c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ed1475-4ac3-4404-8f11-19fd08965e1d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce63d9d-1858-44af-bf68-7decca767d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bce6b50-1e8a-4b93-910f-562a648a44f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffdb4a3-5eeb-47d8-aece-27c0aa3f652a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc5691a-a975-4d66-8f6d-b7cb739ead0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6ceaa4-1a22-4f88-a3da-a50bdeb8315f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f816bd-c206-4513-bb1f-fd2a04c9f52d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1934d6d4-f9bc-4939-89c6-3fd9d9c6efe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c98efd2-d29e-4060-8964-43f83886f4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1e9302-5443-4190-ac2b-f1ec181eec66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e963ed-5916-436e-831b-1b6051d896e4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b49f2f-3457-47be-a173-6d29c7374403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59674ecf-5a02-49f0-b4d3-df794086b529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e050d63-f28b-4680-8f07-72170e995a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac67816d-2568-4d30-a4ac-411a7f6f6416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f81a83-f549-4a0c-bbfd-fb14299d59fd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ea332a-9434-44f2-b900-1b9d6809ad1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bd5644-ecf0-4a62-bf71-ecfede715fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cb5c95-917d-425e-84f6-3ef023464e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b677b6bb-b427-4f47-ac74-7799d69fa8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf81dbb-be97-403c-a174-4334187ecb8b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22656757-7d3c-4128-a34c-62951584c76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7603f0-be54-4692-8af7-b485d9ca48df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ccb6b1-856d-420c-8f4d-2e32efa6d2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec183641-b2e3-4f0b-a259-ac8004c7a192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5af848-d1c8-4132-a85c-df07918e34da",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901160da-388e-406e-bb6c-4af8b2a9209c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b50a6c0-2706-4c19-b1e4-7725aa9868ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b58ef0-cfc4-483c-bedc-aa75a4e0baad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6ce083-fdfa-4d5b-b06a-16f922db1795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1547ca-e370-4533-b870-bd95a64c9cb7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3467f99c-b4ed-483b-b148-fc1934ccd295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcf1079-7275-4da6-9633-4299a710542b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a069305-08e6-4571-8ecb-7470f1e64f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9386e05-a103-452f-b59b-57cae15b09c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89146a1-e05b-4be9-b53e-d7165af9e33f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3395cd7-cc5d-4034-9d54-c548357b6150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3cf6f4-39d0-4da4-92f4-ec6a2bedbb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fe79a8-6943-4d7e-bdd2-0892ae5be0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9170ba-98e6-4827-be71-ee1600c07fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98212a7c-8cee-4274-9881-9e41f4ec0718",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912ffedf-b2b0-4208-8c60-d591a8be6076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b042c2d-a989-437f-a234-238f2994cc40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2907e863-5566-4410-ab55-d5e57c909b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3601b46-139e-4cdd-9232-27795fae4384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b34c278-2720-4f08-aa3c-5b2924e9eb8a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4084ac5e-73a0-4066-900a-1e4bae55a03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10e65100-0c9a-42e1-83c6-1da7780f5bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ceb0c7a-95c6-4f6b-9c5a-fb97cfacbb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b65942-6aa0-4afa-98ea-653b598274f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4091bfcf-6fa1-42be-8f6a-559dc445b34e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b06c835-cb09-4fe7-9621-ab35462634fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f41a65f-b970-4fda-b1aa-a4622a4bdca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab235d7-7c08-4213-90d4-3d5ff8c6a3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15fc14c0-7243-4f87-a663-115d2672ddec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254ff16a-b3dd-4787-bf7a-0b51d441c0d2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2097abfb-16db-4f7f-accb-4f53f1e09cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "083c8a37-c778-4eb0-af91-a72cac777686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f44fa4a-21e2-478d-8963-dafe9adc2b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd2308c-21af-497d-b0d8-02fbb892d73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5021b1-da9b-4939-9189-63ca5a0082a4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91abc06b-7a97-44ac-8430-15086cfbc597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582eb280-aeaf-4cb5-a044-96c6e7c51ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc5a893-b171-4804-974d-398f9b1de1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814b762c-e3f5-474f-a9ac-581d1a640982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fea254c-0e73-489d-9f68-0f32e5968ee0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2021f1df-2829-4e3b-a278-27f2d515c315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d5a29e-70bd-420b-8c5c-182ca88fa841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bdc1a1-49a9-4da5-9717-b1447bc9fea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d40833-5103-4d83-8229-5f2c940ec932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba79ea0c-3e9b-43db-a21b-d205578aeed4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32f301d-2eb9-4f15-92ae-cae28c47c533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9dcbd2d-f520-4dec-8acd-d2c596bfd007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516df1fb-78fc-47e9-bc1c-b9b2ed371ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586f879a-f06f-408d-b92a-b468fb1ac843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0707ab5b-65d9-4d46-bdf4-636ec5899813",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4952d76f-d214-4bb7-8dc6-c22e6cb5ee0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e6c636-ba5c-4742-8562-c8fdeffbf26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61172529-001f-4659-8dd1-4cc5b128db0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee33161a-b676-4cbb-82b0-27af5c56c9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f22983c-808c-4c2a-99ec-1cccbf83914a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7ad9d9-4141-4d72-8480-fc90ac6621c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376f4897-3263-41fd-a10d-db81554fc3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c03ead-b742-42cd-aeef-637f30cd3eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c68a9b-81c2-43ab-9feb-6860e66da574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfcaa05-cf58-4f1a-b01d-11084051dec3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98a1b31-ba15-4eae-a9e9-799c51242d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd2e8fc-e9a5-4cc7-a472-c1657c2c1cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b52252-33ec-4439-adfe-eb8ee661f328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d99a42a-e6c2-409a-8d5b-9670fa8e72d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1ba005-8f0f-40dc-a277-f8f6f0813c52",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc739011-3433-430e-8252-08e0ab815cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31abcd55-5bb9-4790-8bc8-c0aea48d401c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3f7272-1e0a-4b99-98bb-ad1b93feb8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff51d137-fbbd-40f9-ba61-c2e14ffe91c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e026d3fb-1891-412c-bc47-9c1a34048e1e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f3f748-2c6a-4ecf-9c9e-1e10aca007fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf8c772-5865-47dd-8846-5e8791292459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5b5874-78a0-4972-85cc-7a00dc44be82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ade58e8-fa24-428e-bdfc-d917199f07c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f2256d-8b73-4ca2-8309-27799dd97072",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a2e45b-7f1a-457b-96ab-a7af6fc444e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d03e111-fbee-4981-be80-c204b4091f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96f05ef-10ce-4ee1-bb36-de4a966226ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27062cbc-3317-48bb-a019-fe41bfa2e4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5af9d0-967f-43bc-b5fe-ddbd428ca6f0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4599d049-7359-4738-aeaa-2260e8633b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbfbc04-2cda-4cc2-8cbd-2a685c28839b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9023c3-747b-4f34-9b37-a47cfe93560e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acfdfd2-ed03-4a0c-9e96-e076c80d786a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65430d34-4fb6-466e-b922-06f9681249ac",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f6ef84-117d-4d7b-968c-293fee4e04ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc579c6-43d3-41d2-9b54-3ffd5c246b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3dc460-227f-4cfd-ae20-a85b47a147b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8a1c40-fbcd-49cf-ae7d-23f3ce62457b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d583e6a9-65ad-4287-bf45-1f1311b0f047",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cc0f84-9fdc-4e03-a582-0dd6e0973993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79fab5b-c566-4014-b634-4f3ecd46e2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fcf3c3-741d-4fc7-997f-074f445ac67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bdb508-37f5-4cd1-b72a-99c2c21e5b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a68c80-250c-45ea-9a80-be082061cf6a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37eeb50-ad6e-4b6f-be1d-c30e862c07ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260b2220-8cb5-4b88-8058-3492aba5304e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209ccd77-f2d3-425f-b1d4-f1ff651ab18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14919dd-7702-4c8f-a68a-2c0e24840f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba0ab7d-09d4-42f3-a856-bdaafe645afc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449626c8-4291-429e-9d22-c9c5c17df34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5901f0cb-52e0-401e-9c1b-ff721742c206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f9649a-6550-4c65-93f2-491deeaae3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e9db35-b47c-469b-be55-53049c8864cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd3128e-c614-4ade-a909-2e02fd4383f0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2662566b-911d-4b0c-ae1c-170c24b86a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4b6b24-91d9-4ace-b2f6-35a8d08ba16b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fae35c-d3df-4f8f-a4d6-2e50d1460b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c054a551-71ae-46f8-9ed2-5f1a54051cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01a8264-0edb-46a4-8bf3-448c71ed9627",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269fb259-79a2-4ba0-817c-4bbe64ed5b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3cbfba2-4947-4fd1-bf6c-0e9730aee23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16aa21ee-256b-4fe7-a6b1-f8df58b1b396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ce1214-defd-4e9e-a72e-333c79188fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe37d50-f99a-4423-96fc-6cae06f75ab4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6926ad-8e37-4926-bcc6-9cbe1404c059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7351f592-0864-4fbd-8fde-daf788f44e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5713f460-0a15-4cbe-a598-1b923e31c06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae07245a-e478-4490-b524-6a347f60cae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac0c89f-c1c1-40df-9c84-5314c2b94f28",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d192bcfe-276b-4806-944c-9769b880a416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ee4bed-208e-47a0-a92d-165ad52d321a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138a0f9f-e4be-4a11-a318-3e20557190d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7228a951-0af0-4ae6-886b-9fd593140efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5efb5b7-4564-4f22-afac-29541384edd1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e4074a-87ae-44e3-9b8c-e7143fa98a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f17eae-c6ae-4454-9cba-53526c3d17c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089bfdbc-c57d-4ad8-bf04-b4c6183dfa28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f519591-20ec-4d56-9b06-9dcbe512f828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d524c03f-27ce-48b5-b8d0-934b7711ace4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4214d7-928f-45f8-bb7d-242a38d10749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63a8e80-afbd-4c00-a0bd-c543fbcaec64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d418cc6c-9c1d-4d9e-b0e1-97bc7b39c92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15599574-7e1e-48a9-98f3-9b1f1c1e16ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3c041d-a57d-4cf6-8d67-f33a749ecc48",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40adb332-e432-47a7-91bf-07f5c5f79523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aba740-6494-4b7f-9825-a82650ba5d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2572205d-6bbf-4573-a948-3e74022ba11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b670b67d-c6e4-4ed1-9319-ccd553dd4dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962cf4b0-5a6d-4cf1-b42b-cfcb82b0711d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c688b76-e8c2-483e-bd48-48eb0662a65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e45317-9cb2-45f2-bdb1-a0a0dd505480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3932ddf7-87f9-410c-a403-c4f4f8687c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e5d0f9-b7d3-4837-a8b1-57a060f163fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e360872-8555-48ae-8138-9021aba30f6b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae470ef-5536-4d40-a087-70023d6ac380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a813ed-15d4-42f9-8c22-96167247e318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e87e46-f308-4fcc-be81-e8f0230a2c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5600f8c1-d076-43e5-82d0-892f5cb2c3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598198c2-c936-4f31-a36a-3f1e62002a8a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4998f399-66f6-4792-8317-287d02d80a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd33500-ad3a-4936-a3d3-8912939ad7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b357801c-f1a6-4a61-9fbe-21de8d2243f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27dd95f-015b-4400-9668-749400625ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b78748-f24a-4c39-b631-31aea4d7880f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156b43de-81b4-4bc1-8ae8-98d5ce4aa03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9397ed91-bf48-47d2-b3e1-88a33d5d1863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b6522e-1122-4dc6-830b-6880666645d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebcb276-72e8-457c-bf37-c08bbaae72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a388caee-9fbc-4189-aad3-8c86bbe302ff",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2316494-b42a-4b25-b115-0cdf84662b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd28c52-f8eb-4aaa-ae7f-9769041e03b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b9eed7-ccbe-416a-bf52-af7ebf13c02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4363da8-45db-44fb-a542-7c05dbfd8b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8ae83c-14c4-453e-a23c-76be757e8108",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295c419d-b2e0-4c7b-aecb-545890cb3b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a140767c-0d8d-4b53-8c5e-647ff0af8f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54f116d-65ad-4b81-89ca-2c4ab8cc55cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6212467-558d-4365-a6ef-4aec3e9d6e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81772359-58c7-4a9c-83ca-82eddc2db814",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4e9d25-4bb6-4921-b49c-dbd78ec93841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7253e9-99b4-4776-925e-1a20bc672595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef60d2cb-d96e-40a9-a35b-892cbe6666bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22986ce2-17ab-4f99-b05d-5a7fe16f8e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8647e675-9c5b-4a6d-aca4-5c12a1e48378",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28527201-a484-44ed-8c54-e7ef63c95d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d03f4f6-edac-4e72-8066-d290b4806317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d13054-f5d8-413f-b676-c13a02839d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abba81e-df69-428f-ac0f-7bbd01d5899a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cf8670-b4b4-461e-92e5-f13ae9a1d4a7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53addce2-56a4-4c41-a5cc-31d98bf62557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71a9fcc-18b9-4f17-9da2-4c440eb3e3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad49399-e6da-4c6e-b619-a8c09d666111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb17c89-92aa-4b8d-9e76-3b6105198705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d126ddfa-12b9-4d2d-bf68-b23b326f487a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be635cd-33ff-41b0-8e19-6052cf713d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc45a9c-98ab-4714-861f-d15279046a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf358a2-1bc7-46ef-ac5c-97e42dc9c8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fa39c1-bed3-4589-ac4e-ffa10d47693c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6a29bc-2657-41d1-a608-5facf6be50b9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f602ba52-c515-464b-983f-eaaea470663d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e877f1a6-f573-4211-b203-f6b40d16aac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82b6184-38eb-4c2c-b494-03cb9571c4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72d0954-fdc5-4a71-8718-c73f19897283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436f9e54-756e-4bcf-acd1-960733543c35",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d827b57a-050d-4e04-a3ad-44f221198418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cf6d35-3948-40ce-a741-bff9e70d66ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1790df6-3e03-4b3c-8f7e-c6d528830339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7eee52-c84f-4575-8a6a-824700a6b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdb682a-d45d-4cb4-a6c3-1b467fda0b27",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03479d5b-7bd3-4104-9496-803c9b59c15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859767f7-52a2-4276-bc88-e0ef26d6c52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16fafde-c838-4215-b442-4931c5f4342f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5718e2e0-4f74-47ae-b6bb-9e71d2f18da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a15be4-cc5a-4661-844c-0d5db4685eaf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671b92f3-901b-4278-bf71-641008e512a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ab636b-8fdb-45a2-bf4c-bb7aa8bf0967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15862a40-f931-40f7-bea0-2ff19353d8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c680cd4-e05f-4e8a-95e0-8aea8d6fd5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc41b9f4-3b48-4569-970f-e94b74dda2b4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdc0b03-5998-400b-a255-12b3e7af06fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d65087-df00-439e-b9c3-601f4a0397ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198b3536-735d-49e5-b187-93ff4523abdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbca6285-5da7-4e9c-9239-4a38cef98d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b1409c-00e3-43b9-9012-4a2148b5a2c2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd65aff-594b-41ba-9207-3653f19a43ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6131278f-f611-40cd-8a4d-1d74c18cc256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d2ce13-4f12-4fad-b210-94b29f2e506a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b01d34-3a07-4f69-a0c8-5032df5b1e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248d490a-4838-4f20-a430-91e60b127322",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffa24a7-f65d-4e54-af07-4b4257a91a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689db63b-84ba-462d-8305-628fd3df2672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ad444a-36ef-4f63-b505-2dbe1a608d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a86f154-7de1-4d6c-964c-7552f258065d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e5de34-fd9d-4541-9f35-bca50ec5b0e8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16071ace-e8bc-403a-9521-bcc7ed0eb673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b5439d-bf23-4f28-a8e2-54262144f4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e26d3d-2716-4eed-9e3c-de170c63a935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6b1aad-0230-4ac3-83be-007a3580a394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bc7053-a09c-416d-9a8f-13cdeea280cb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f83c39b-168b-431b-bc89-0509cbc969ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd1a0ff-96bb-445b-bad3-ab69e8f76303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189b4144-f2f4-454e-8d4a-2f607b858bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4806b6a8-d6fa-4db0-a573-75dc81183f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aaed58-922f-4ed7-b04a-36d5327de53b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab79732-f82c-4b63-a0e1-bc61e0b44d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2835c5f-cabb-47f2-a440-85e768e9c187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15922528-3a90-4d96-b1d5-4db311f54670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc4770b-d99c-4698-87ec-79a85c96af18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8118c270-d6a4-4745-96e7-4d72bd8ae0d2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9eeee7-42ad-4b92-8021-064c70e76fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a3ab6e-1ba2-4b5f-bd1f-419d8bd9ac6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b962c90b-e6aa-451a-bd91-c793a8b8123d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70364c34-61ef-42a9-8a14-e89c9b0e3822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe1adbe-3398-4049-b1b0-11aa439ad4fb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfbdd81-9a6b-409a-9e96-e8f9406c0dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c0a066-7ca1-4dc2-919d-2cbe2ab29ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bc2ac3-b4e2-431f-9be6-f973418a7e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d010a79-07d3-49e6-b20f-ead5c3f776c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691e59a1-25eb-4f4c-b1fe-f4b70c320e64",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637ba3df-b948-4446-9894-e3df0b8d0b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbbe0420-68ec-4fc1-88ce-ade0ce4f9978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dba4ce-58c6-4eb5-9231-2c4eedefc232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfa2bae-9b23-4c6a-9f2e-ecec8d3d4511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2907679e-0904-4055-a273-0f6af4c7506b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaf0cc5-53b1-42e6-8af1-923bdd500d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a3826c-fb31-4045-bc43-47ede6eb438a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3babc98e-4282-4123-bd83-c888413b65de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043e6fce-22b3-4b97-a062-0c9d949b5e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b80218b-f2db-452f-bc16-5464efecde5c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c829e1-ac0d-48aa-be4f-4c629034ef8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33016bd9-07b0-48f2-8b81-8dbf2607d674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338bdf4e-05c4-422c-bc9f-37828be1f259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c01188-1247-4eba-8f3f-2afea82885d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355d09e6-a1c5-4efc-ba78-2ff069880e53",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bc48c1-0556-4432-8839-2cbb79891f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f655587b-af3b-4e02-bb23-a688905e3d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caad2241-738f-4109-9e8b-9421242207cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84695ad-9421-4444-8c03-72c612035344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf5f22d-be97-4856-8d21-d4f399bb5559",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad5864d-ff9c-4e8d-a083-b8627c88f41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ba086e-2774-45d5-a896-b0056bb2ecc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f71cb30-f204-485b-8f17-d6be39a98a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff027e3-dcb6-4163-98ae-1737481a3a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59e6bad-033d-449a-9c04-36f4969b31fa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee78a9f-ae50-4ecd-9f04-71b84fda0c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ca2d09-36e9-430b-bdfe-32c9e73a783b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da34d7a-5db1-44de-8c4b-2f80c593bd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc494f74-a363-4a29-a662-0097f853a832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f0c791-b946-4511-8ee7-7f4ea8eef594",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d27e7e-5aa7-4027-a32d-d9201f4b8185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b668f82-2cd0-4fe8-8d38-a00324a87ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b5fa99-54ec-4c84-898a-e2a2f39d3eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af85714b-adb7-4018-83c7-9681f766296b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fd3c19-1872-4274-8300-a96098624f98",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd8aa8d-55ce-469c-b3bf-ab69f7b79474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316a5901-7bd0-4897-ad41-5d106badb45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad44bfc8-3a22-4603-9e7f-7d3c99fa220d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984af34b-4142-4535-b4e0-1502844a7214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73c8b62-ed06-4c8f-adf0-c89dddf217c3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a542db2f-3e83-4420-ac4e-2285d571537c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318396f1-e90d-41c2-879e-ad3676619a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b35554-afdb-4406-b48a-64692310a814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9d1ca9-b943-4418-9daf-72f022b663f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c80d1f2-e228-434d-8aa3-81f331001d7d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dc0e51-9cbe-453b-b8fa-06a8d5cd5aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3342549c-4a63-4856-8b84-56aa1d9885bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c471a0f-a32c-4622-b04e-de22a1df5265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cc4c4c-659c-4e05-9ac7-4ad2258b74e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9740414-109c-4722-aeb6-f11ba1325d29",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1879d534-cc51-4207-ab6d-6de05c39c297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acd3238a-2f07-4ab6-9166-1a3294ab9bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e41f16-08a2-427f-bfe1-b58de569899a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061af13a-a951-4468-bdb6-692a6e2c593d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61512ba8-b738-4a9f-834b-05710e1e5f58",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b656c3-4063-4734-9c2b-3c4a0e94c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92ae030-e09d-40b2-9fd8-911c66dd2952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c39ba99-6714-4b26-b1f4-196cd70c5c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a869406-4a12-434b-ab35-93f3789ae171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490e6a27-276c-4d13-941d-6aa67aa983bb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4d07ec-1535-41ab-ad7f-61a65fdf2ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea23af72-2f8a-4cdb-a897-0540b947b286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb171f64-f878-4c39-a7c0-745adde45b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356e6b33-51ea-459b-8e16-962bc0b2b0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9af1109-e778-4abf-bf4a-cd81b9868fea",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa24528e-adda-4912-80ec-202d372db494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff8fd73-d5b3-4801-82b1-e9775cc36d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b284add7-c683-4469-b2ba-ebb00b59e444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4908a6-d980-4147-b2d7-65d611199578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08747e43-7937-4618-8200-7881cb74aa48",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5d1438-4310-4355-be50-8f71a376cd52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d17c0b79-9ffe-467a-ac10-2705bdb6b605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d20fd9-dba9-4354-a60d-b2bb7ad7c9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d472f3-6f1d-42f1-8664-e47dcd0aec21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0b24cf-4ee1-4894-99ef-9cd54a568548",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e2b33c-cdf1-4fa0-92c3-f2fc0013b315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4cee76-d90d-48f9-84a9-bcc670bfd0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86d1c7b-bc78-4732-8d59-6e3600821236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1e8336-c464-4681-a279-8b0d6bd67860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3de0e4-93ff-42e1-9e46-97b6f88301c2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4983143d-7ff2-4b12-a0ff-2b9f4e28b4a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c485960e-0496-4f8f-a25a-e913f9ff4d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8bba79-10cb-4da7-a3ff-094c4043a3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac14841-20f6-4999-952c-0fab30e8aa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b609f4-e26a-4891-8548-76b11f5d3055",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d022a7-de5e-4670-bf6d-bb98de117998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0371a949-71aa-45d2-aca8-ce4b2c968615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b110b920-4c0d-4c69-b57d-337ba9e42a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debadc38-2bb6-4546-848b-e98ce6627d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78efff02-04ba-4a36-8d12-2b68e84a681d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a050854a-51b6-468b-83c2-7eb26585fa05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9a25453-81a2-49d9-b008-452e4bfae7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2852b9-4345-4aeb-a766-c606100dd88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9842fb71-2cc3-4947-abeb-da510dfbb920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2b9358-77f6-4969-97ef-718bfc26f961",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176a3e96-e4d4-4856-9823-1f139b855639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe33c76-1cce-4b4d-89c1-31a05a098181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bb7ac0-ca40-44e6-80c1-2ad63b289998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a42089-ecce-4910-8ff8-068890083b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf031c3a-17b5-4f91-83d6-f34ef1ac51c1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23911e41-4643-4c9d-ba32-e2a9f731b993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76341a5b-3824-471c-9854-2bfb7dc97004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d46dc7-168b-4454-89b2-3c288b212447",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6d5881-39f9-436b-9742-7588e2549f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f418c058-1fa6-4515-a436-44a95d993d83",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905b576e-fb23-4a20-a074-c447fe06c67c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce2a632-a05d-4cd9-ae16-c1dc7e7ed4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04f952d-a3fc-4a62-938e-0906f72c433e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059686fc-91f2-47c5-bfbb-4570a86912de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5115df7-a06c-4b95-aee1-f181b7f765e9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252405e4-b653-4723-bf02-52cdff76f4ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabef57c-9c40-4d90-a331-ad1a4fb8efc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c494831b-0581-448d-97c2-e2c675e4b246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513fc834-0f60-4bb9-8ade-9527f9700eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8c8317-8a34-4d53-8e6d-7deed6ae8f8a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c64beb5-c417-47a7-9ec8-38e7d6b95038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e59a8bd-e8cc-4f09-a5d6-695dd5329bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db97fdd3-a665-4858-82a0-c5a3542c92cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b017439b-be2b-4f51-8e23-ac7d5c484a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc9a986-1ba4-47f6-944b-34d4e0412650",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6d8e98-9bb5-4d96-9a69-21b3313ac821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2e1e1c-63f5-4e97-b571-f7003bc6ee44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2de60d0-82d2-4b2f-a058-f65b700440f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cefc3b-b0b5-4b15-aeb0-4f046c2cc5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967d90b4-006d-475b-8a1c-29484564c22e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8170da2-3630-4424-9415-05c1593e56e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256f9f5f-7722-42fa-8081-8018a26a3b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f212e0-4458-44e4-8e5e-ae56c2a1d6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370125c1-3040-49b8-8c7f-1b2b4562cf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14afde15-6604-4955-9bfa-1330fb600195",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790bcfc3-b345-4f0d-b2d9-7d54a4f6323f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "006ba2bf-bd5a-4c81-87a8-935b0f9533f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec45da37-0f8e-4728-82ec-e0696514cda7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc8c1da-6ca5-48dd-ae6c-293a55d0c446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf17b7b6-34ac-4b39-b610-cffcbf1d4068",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dc6aee-2e5e-44b9-b902-fe72307a284d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650d12c9-2a11-44ca-bf22-eab8c39676a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a138ba64-454e-48de-b408-d030e2e848cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097ffb35-e26d-4523-989d-bafb0ed8633e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2a6ae36-801b-40a5-b887-9db4abfc9231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "170795f3-6040-45db-bc14-7717d3c75b71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17df9d4a-ef37-487e-9c4f-cf728908968a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00dce781-ac14-4d77-a2af-4dbaf42bcf06"
                    }
                  }
                ]
              },
              {
                "id": "675dcc9a-ee9a-48f5-bd88-93fa17c24fca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84f3a856-912c-403d-872b-635ed33602ca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f02852-1175-436d-b28d-1db1c8a71d5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2583795a-8b60-4c25-ba29-3c6b73b11540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b7494-e475-4428-91b9-7181cbedfaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c16d2fc-6a78-4214-895d-820e10b60fb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c66396d7-df43-4eb2-859c-1ce569996ffb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b3c095-7635-4d3e-a04c-00f95efc47fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de04bc26-e8cf-402c-8ef8-4eb6f7153e89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c90ffcf-43a9-4d74-8da0-639390171c4f"
                    }
                  }
                ]
              },
              {
                "id": "68b5c833-bba2-4080-a616-cdf58940d386",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4ea70b1f-e25b-4438-9989-e4b7c5156ae4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d7638b-143d-4449-94ae-082e802210bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "15929905-3815-4144-903c-6b08794c9fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c968ba-2c7b-4d68-a2ed-edcd06c2c189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7e3f79-5f47-427b-9380-548d03e14b99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e9d8bd7-3aee-431b-8be2-6109eb4a4774",
            "name": "Positive Testing",
            "item": [
              {
                "id": "725f9d2b-9ebf-429b-b321-dcc9701356c6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0d20aae-5834-49d0-8150-73c451d3dc80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "361d91a1-97f4-4520-8690-295cb9b66a38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3e43325-4896-457a-a38d-aec1223f5d11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fda8e9a-c7a7-41c8-9bcd-0a30851c8a57"
                    }
                  }
                ]
              },
              {
                "id": "c164739a-e44b-4897-bcfd-73f2dc6ee5b6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbe8b310-3e66-43aa-ad68-921eb861ba2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bfeb909f-ff48-476c-b7b4-a8a9a14ab323"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a213f6d7-7e2f-4c0f-9deb-8c0786fd5afc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "303288bc-924b-4d5e-a371-1e118ae7a67c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b512f417-09ad-49f4-80b8-944f1c8835fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7f8ee32b-d41f-464f-9b00-a99b11c4fc36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff941cd6-5a2a-4aae-b90a-604f3f8b6243",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4d8fd5b-a065-4d93-8297-8a8c70320867"
            }
          }
        ]
      },
      {
        "id": "1901fcda-a7f8-4dd7-b05f-71397ddd5d80",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "60eb7754-9dbf-4b8f-acc1-81f69e2a6b31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acd3c8fc-1777-48e5-ba80-e57f39279f04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f349c4e3-b591-43e6-bdb3-f60ff0d06a19",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f64daa-086b-4289-abd5-1c7849abadb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8915499c-bc35-402d-95fd-925a6c2f58b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9324f99-ae8d-4049-837f-114b889033cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8092caf-323e-4ba5-b790-ba5c3d484842"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1ce8aee-9b5b-4a35-9c43-fdd259796d2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bce928b-33a3-4b34-8c29-d111adbdff9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e195cbf-d567-4858-a612-745aa0c0b15b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "768191e6-38d9-4836-91b0-e9df1c6eaf30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c61334bf-d410-4418-89df-35a1da5a9f2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "73009268-035f-41fe-9e2f-c820041354f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5677615-7a8e-4718-8c33-60a907ba999a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f9578d7-939c-41a5-adfb-a03875713902"
            }
          }
        ]
      },
      {
        "id": "c0d92727-634a-40fe-905a-091c969e6aac",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "773be05c-b1bc-483c-baff-01d5983ed403",
            "name": "Negative Testing",
            "item": [
              {
                "id": "300481bc-bd60-4303-9bf9-213beadd8df7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c823f1f-6656-4a28-8335-089007131076",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7c8db4-9ebc-49cf-8056-83db6dd9c55f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6f666ea-2d4e-450b-ac2b-7b5948fa0a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871cdbc7-318b-4b01-8776-dd717d95bcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b40fc1bf-c24a-4d66-beb2-8de88e0c16be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55a78769-b7a3-46cd-917f-94897309d59f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65c52d04-da94-4578-a5c0-bf59fd0d1043"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "532ae1d6-14d4-438a-8e8f-9d39b33d9f92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8fe0f19-a84c-4ea1-bc70-10303b9db73d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c81fc469-fba8-43e0-bcb8-929f7577061a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "071240cb-f537-4085-85e5-607645ceb957"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ec1821f-182d-4a77-9168-add6e5ada48f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2bbc499-5b44-4549-80fd-f09f9adaf21b"
            }
          }
        ]
      },
      {
        "id": "f5e46d47-3fc7-4d67-ae4a-538b24877f4e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "961d2026-da84-4e29-b0ed-02fbdbad541d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "664be633-6275-41ec-ad12-6c00ce410f1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0543d174-28a1-4e7c-92ae-cd1b73e20c0a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c74193-6eb6-41ea-94df-ed3d4c7fc273",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cabf23a-c28b-41a1-92a7-ebe0208af1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce0dfc-4ffb-4fe3-ad88-1bbc607a5f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57621b67-ef34-4e77-a252-40f43ef62dba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34c3e72f-a1db-4a0a-9dd7-8728168efe5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b4af2c-2eb6-4af8-89db-74fd83b16c43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c816bc6-c9cd-4b00-afd8-0da9320d5841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35c4084c-ffbc-4474-aafa-82dace62663f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c464ea4f-1d38-47db-9c7f-6984d638a09d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bff49a99-9828-4abc-be2a-c6a56d5ac7d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bfc263d-5e1f-4062-9d6b-1f100b28a85a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2973ee04-8d6b-4d19-b5aa-4eafe3ff420f"
            }
          }
        ]
      },
      {
        "id": "6c4ba043-24b3-41c8-b01c-5fdf7b669173",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74355e91-f07e-4335-b8ad-a6ea0ea63c18",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f9109fb-8a6c-408b-a58e-67d6fa06e49f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "457a697c-a7dc-4335-9d10-201fdf55904c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8c18c6d-d70a-483c-9cc8-f2bd0e0ed4aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c23e2db-af85-4246-ba17-5bb3a6f014b5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.169014084507026,
      "responseMin": 15,
      "responseMax": 299,
      "responseSd": 22.086727845366617,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695861199902,
      "completed": 1695861221587
    },
    "executions": [
      {
        "id": "62180a65-62b1-4c24-86e9-4111b96d701a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f86853f8-00c2-40ed-a910-c4ebe680f3b9",
          "httpRequestId": "ab45bcc4-994b-4a19-b76c-941e971b06c9"
        },
        "item": {
          "id": "62180a65-62b1-4c24-86e9-4111b96d701a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "644b4da5-b8aa-459d-ad57-8496c0b18918",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "ed83e2dd-1d1b-47d7-95fe-98eb1734bacd",
        "cursor": {
          "ref": "a66ecdd9-bde9-4103-b300-09dd903387d8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "22273db3-059d-44b8-8400-c8578bf77231"
        },
        "item": {
          "id": "ed83e2dd-1d1b-47d7-95fe-98eb1734bacd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "769351bc-d9c5-449c-91b5-75d16defa0f7",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "f66b9792-1a60-418f-b88a-43abb4eda23f",
        "cursor": {
          "ref": "3cf16f74-f13d-4aa9-b9bc-41b5659da66b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f766a617-f17e-44ff-b2f0-75389f3378c8"
        },
        "item": {
          "id": "f66b9792-1a60-418f-b88a-43abb4eda23f",
          "name": "did_json"
        },
        "response": {
          "id": "0a2e37a9-2afc-4b8b-bc6d-d56163b27b87",
          "status": "OK",
          "code": 200,
          "responseTime": 139,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8196f1-2ccc-4917-b9f3-207288eb4a76",
        "cursor": {
          "ref": "772579c6-a353-4613-b03d-d9be5b05fa1b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb850160-07df-4864-846e-5a6d614573f1"
        },
        "item": {
          "id": "da8196f1-2ccc-4917-b9f3-207288eb4a76",
          "name": "did:invalid"
        },
        "response": {
          "id": "196f3723-7317-4fc3-91bd-3660081f9a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8196f1-2ccc-4917-b9f3-207288eb4a76",
        "cursor": {
          "ref": "772579c6-a353-4613-b03d-d9be5b05fa1b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb850160-07df-4864-846e-5a6d614573f1"
        },
        "item": {
          "id": "da8196f1-2ccc-4917-b9f3-207288eb4a76",
          "name": "did:invalid"
        },
        "response": {
          "id": "196f3723-7317-4fc3-91bd-3660081f9a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daa12e6-628a-4015-b3f5-6cc3f5edd32f",
        "cursor": {
          "ref": "a2a08646-9cc6-4fef-94ef-5323c86e8db8",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a230cdbf-80a1-49f0-8950-6eef06ad1a41"
        },
        "item": {
          "id": "4daa12e6-628a-4015-b3f5-6cc3f5edd32f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "be71443d-8e1d-4481-93ea-24e27980496b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5900630f-8b57-4691-a13c-5c2c5d007e9e",
        "cursor": {
          "ref": "84c6671a-e22c-4a31-920b-5c057be78278",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "32473f85-6517-4185-adb6-c428524818ad"
        },
        "item": {
          "id": "5900630f-8b57-4691-a13c-5c2c5d007e9e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "efa81609-2595-4963-aa30-87a9a28dc5a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6dfb9e-2871-45f9-b3e7-9ab28f96d60d",
        "cursor": {
          "ref": "01cf4ad9-3e16-4e4c-a636-a32f08e25014",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "769ea84b-e43b-4392-bd5b-e26ec4bf970d"
        },
        "item": {
          "id": "bb6dfb9e-2871-45f9-b3e7-9ab28f96d60d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4775d947-f9bf-4fb7-8bc2-32040df0c665",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f021de00-c37a-47c1-945f-2ed2b854477f",
        "cursor": {
          "ref": "f8ef9c45-a77d-440f-b026-914c26369aca",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7f8befd5-8564-4b36-8579-feed9f1fdfbe"
        },
        "item": {
          "id": "f021de00-c37a-47c1-945f-2ed2b854477f",
          "name": "identifiers"
        },
        "response": {
          "id": "ddbf0dd0-bf8d-41aa-92e0-c7c3cb40d905",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254017d6-0309-4492-a147-f5958cb2e544",
        "cursor": {
          "ref": "726fd29d-7af8-4595-b367-c9aca1cbc1f3",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "de92187e-d83d-432e-b52c-16238f0b54a8"
        },
        "item": {
          "id": "254017d6-0309-4492-a147-f5958cb2e544",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1cf40f19-b847-422f-bf9f-04c9f3dd7687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1731581f-74c3-43bf-a182-be903bcc3f8b",
        "cursor": {
          "ref": "c81fb854-1e63-4882-903f-2325aec504d6",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2a03e742-93e2-4f55-ba07-1eda33a3778c"
        },
        "item": {
          "id": "1731581f-74c3-43bf-a182-be903bcc3f8b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "42ac9764-b7fc-4819-9655-19b0d8237161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de06dac4-be23-49d5-baca-85aa076a7f4a",
        "cursor": {
          "ref": "fc616618-4e69-41c3-96c9-f63f56523b94",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5dfaa49c-1da4-465b-82b1-347ef19ce680"
        },
        "item": {
          "id": "de06dac4-be23-49d5-baca-85aa076a7f4a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "47d70e4f-b613-455c-8f56-229b968aed69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5082e4c2-e9a8-41b0-96a4-941d346a3912",
        "cursor": {
          "ref": "91f9ea9e-ad17-47f0-983e-1a7c2d509b95",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "65034e4b-c0d4-4cb5-800c-879e6fc77770"
        },
        "item": {
          "id": "5082e4c2-e9a8-41b0-96a4-941d346a3912",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f651c91e-7525-4ea5-bc68-637fe4fd2b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11fade2-7333-4dd1-a89e-bfc816a98cae",
        "cursor": {
          "ref": "e3a4c470-191d-48aa-9f19-38205783539c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "59ce5346-4c46-4827-8078-a4a9b477f68c"
        },
        "item": {
          "id": "e11fade2-7333-4dd1-a89e-bfc816a98cae",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "400adaf6-186d-40ad-9814-a55db582e3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe08757-290b-41a4-8327-9751c7b2319a",
        "cursor": {
          "ref": "6de8eb9c-7345-41fb-8b6a-8a3774a7f226",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5f31ab67-0132-4cad-954b-a0036e21640a"
        },
        "item": {
          "id": "8fe08757-290b-41a4-8327-9751c7b2319a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8a4e9391-a680-4f70-876f-b2869171526e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29147477-7fb4-406a-bc79-0df63316bd15",
        "cursor": {
          "ref": "e1ce34d9-faff-426e-a821-9a25a478e776",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b628bfbc-64f5-4d0d-a1d0-2d0cb91ae8d5"
        },
        "item": {
          "id": "29147477-7fb4-406a-bc79-0df63316bd15",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e6120e50-d806-4a9d-b235-764f5d3b7f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7a4548-a7e9-4efa-94ac-7257806342e9",
        "cursor": {
          "ref": "6644f1d8-c47f-4f60-8958-258dc9d5372d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "937c2ed2-aa25-4b78-ad29-5ae4a3e8e683"
        },
        "item": {
          "id": "dd7a4548-a7e9-4efa-94ac-7257806342e9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a52413c8-35b5-49c1-9f0c-ad11394aefe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c2c0c4-7b34-429d-8127-a1b1d60de96e",
        "cursor": {
          "ref": "36b0fddb-5482-4f85-ad16-0d7e32204b0b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e39f1a79-3230-423a-8751-08c67dd05dd5"
        },
        "item": {
          "id": "83c2c0c4-7b34-429d-8127-a1b1d60de96e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "30353728-af24-4e1f-9cbd-18f13320b0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42b0a55-8c52-43b9-b1e4-403f39c36a72",
        "cursor": {
          "ref": "9d289d2d-2d9d-4e9a-813c-2d4981a50b34",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "89147edb-7901-427e-8395-a403db5090b9"
        },
        "item": {
          "id": "f42b0a55-8c52-43b9-b1e4-403f39c36a72",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cf3b00e1-8fae-4114-8a73-6de1edd2f860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a0f547-97ee-4d9c-ba40-eb03fe451d59",
        "cursor": {
          "ref": "aced98d0-229f-4cac-8e01-01450b5304b2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4bbd40e8-2a2c-4676-b249-8bd4239f39db"
        },
        "item": {
          "id": "a3a0f547-97ee-4d9c-ba40-eb03fe451d59",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ce660159-0684-463a-83ae-6a45163eb77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab939e3-83f1-41e1-96b5-a493c392eed7",
        "cursor": {
          "ref": "a4fcd6a0-9b65-4ee9-820c-a0539b49b3a4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "97300251-5664-46b6-889b-bd685309c124"
        },
        "item": {
          "id": "bab939e3-83f1-41e1-96b5-a493c392eed7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "43ce3dc5-c9a3-40a7-b5fe-f18617791881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcef001-1606-452f-9409-a379798de41d",
        "cursor": {
          "ref": "615c0fbc-763b-4d10-82da-fea10438bdac",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c7d91931-7832-48c2-9685-1500bccfb56f"
        },
        "item": {
          "id": "3bcef001-1606-452f-9409-a379798de41d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d52fcda4-b60e-410d-815c-0ee92b09d2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14405c1b-818e-4e5a-bf8d-f2cb1f000851",
        "cursor": {
          "ref": "bac63c35-91cd-4054-9817-aefc5fe43187",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cda07f22-45d0-4354-ba5c-7aad5749dc33"
        },
        "item": {
          "id": "14405c1b-818e-4e5a-bf8d-f2cb1f000851",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9169e121-80e4-43b6-9afb-3ff464599416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f45c14a-1f0c-4c6e-bd35-b123a6956ded",
        "cursor": {
          "ref": "d86589b1-38ef-45e7-ad81-9c2793e51808",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd9aa27f-884f-44e0-a7e8-da87834d3367"
        },
        "item": {
          "id": "9f45c14a-1f0c-4c6e-bd35-b123a6956ded",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e92f80de-d498-4060-975a-050c969d0dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521b92bc-3ae8-4caa-9b18-12f0bc35c551",
        "cursor": {
          "ref": "cb80b76d-13cf-4013-b7e6-48413511b935",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2b072beb-71b7-4d4e-86cf-744ced233e39"
        },
        "item": {
          "id": "521b92bc-3ae8-4caa-9b18-12f0bc35c551",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d22ec7b0-31df-4296-b2cf-0f81fda23632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d091f0f2-1973-4552-bb7d-8e38d394899e",
        "cursor": {
          "ref": "a2e350b4-1976-463f-ab65-f277ae847a0e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "58d9ac4d-442d-4bda-9944-280adbe4d4e6"
        },
        "item": {
          "id": "d091f0f2-1973-4552-bb7d-8e38d394899e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ea73ef74-1027-4dcb-9958-56797474477c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe804515-89f3-4077-b584-4d878610dc30",
        "cursor": {
          "ref": "57b14865-1b0c-4276-bdea-34a92cad39ad",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dccd7156-68b0-4b22-8d01-d838a343de66"
        },
        "item": {
          "id": "fe804515-89f3-4077-b584-4d878610dc30",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9c471448-08f0-40c2-ba55-d3b8161d3728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e068e1-01bb-44b8-95c3-bd88ecb3ff45",
        "cursor": {
          "ref": "0e4b4687-aa2c-4786-aa91-877735eebfc3",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1e594a51-72c3-465f-871a-e6b6ffc32c72"
        },
        "item": {
          "id": "d4e068e1-01bb-44b8-95c3-bd88ecb3ff45",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7bccb8d5-6fb7-4a3b-baea-e13673136278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e023326b-e18d-4933-9cdf-82044a7b9cb1",
        "cursor": {
          "ref": "b724757d-8faf-4e30-bc05-6fc7a73687a1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "76c0acd6-1f07-471e-9110-27d42cfca113"
        },
        "item": {
          "id": "e023326b-e18d-4933-9cdf-82044a7b9cb1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1ebff5ba-77a9-4d39-ad6a-ca27075fabb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffed0243-cf6b-4b2c-8688-9f63d259d43f",
        "cursor": {
          "ref": "9dd4ce9c-4feb-4900-acbf-c92f65e6dd3a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3f377c49-3c09-46cf-b299-8f243b273fa1"
        },
        "item": {
          "id": "ffed0243-cf6b-4b2c-8688-9f63d259d43f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e3b1a733-e1bf-44d5-a839-c57a6063480d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f789c494-bad5-41a4-8dad-9611cbb7b02f",
        "cursor": {
          "ref": "804d869a-97f3-4eda-9ffb-55bd8c0151ea",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "eeef66e6-bfbc-4400-bb60-3826297af85c"
        },
        "item": {
          "id": "f789c494-bad5-41a4-8dad-9611cbb7b02f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4f6ee673-3fd5-48e7-b3cc-51db5c3c8c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16361be-f0f0-453e-8b9a-48f24febddf0",
        "cursor": {
          "ref": "c6a6a243-e928-4656-96ec-f0eed84bb36a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c7c51e2f-8edf-4777-b460-2d8efccac55a"
        },
        "item": {
          "id": "f16361be-f0f0-453e-8b9a-48f24febddf0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d6b165f2-f55b-4132-89c6-9e6f99e72fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ad2cc4-efb5-4a49-bfd1-ecfdd225e6af",
        "cursor": {
          "ref": "b6a52a08-180b-4501-a6ec-3e55a7bb123d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2755e656-3118-4332-a98e-d7ec750fce3b"
        },
        "item": {
          "id": "e1ad2cc4-efb5-4a49-bfd1-ecfdd225e6af",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "88420e05-ef96-4442-a6b0-48ffeb384da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c50fdc-9ada-44e7-94da-d71d80f2508b",
        "cursor": {
          "ref": "11aec842-cb0d-4e3e-90f2-ec58a5e0e26b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f7308922-3037-4825-bbca-18b17d4b2ae9"
        },
        "item": {
          "id": "89c50fdc-9ada-44e7-94da-d71d80f2508b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f045825a-a5f0-4402-9f99-01bcf6931aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d58fc5-d88a-4f95-bde5-2ce4466dc7bd",
        "cursor": {
          "ref": "70174e2f-8830-41b3-86dd-bcf2b280d169",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1c23fc01-af1d-48b7-9cae-689dd7419fd8"
        },
        "item": {
          "id": "b2d58fc5-d88a-4f95-bde5-2ce4466dc7bd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "da12a64b-9337-4efe-a14f-383417dca70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc254af6-a9b0-42ba-b808-fbd2f9e06b0d",
        "cursor": {
          "ref": "e4da6ce2-f232-41f2-a83d-e4b03e961b49",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6582d0ec-ca47-4162-adf7-4bb3ae9fe185"
        },
        "item": {
          "id": "fc254af6-a9b0-42ba-b808-fbd2f9e06b0d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e80effe6-cbf6-414a-8ba7-1a7541af0982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ccf389-7724-4f15-a9d2-b1f7aa5a794e",
        "cursor": {
          "ref": "b97a83da-7ae3-4a72-a69a-e04fdf047771",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1b7f0e43-e51a-4086-891f-d3f94fe01304"
        },
        "item": {
          "id": "e8ccf389-7724-4f15-a9d2-b1f7aa5a794e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d10b7ec6-5b50-4c26-8c28-a6ca5cfd1a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f86e22-546f-4bd0-b4e1-3a72f2c6f84c",
        "cursor": {
          "ref": "1f026282-8eea-4358-9d4a-f685c8f71d5c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d0eeb26b-32ff-4970-84ee-eba9a150045b"
        },
        "item": {
          "id": "44f86e22-546f-4bd0-b4e1-3a72f2c6f84c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a1606bcc-f9c1-4197-bc55-01b885579a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a786a2c-eadb-467e-ab14-831a819b1b8c",
        "cursor": {
          "ref": "da83df13-519b-462d-8ae3-19325da44c45",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e75d4392-7cd9-4db9-b4c3-8c55bd3b8b68"
        },
        "item": {
          "id": "9a786a2c-eadb-467e-ab14-831a819b1b8c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f318d556-8508-42bf-ac7b-b12b5f7e4ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e5aeee-a61b-4a09-9534-ea647f8a31bb",
        "cursor": {
          "ref": "ed789b62-c403-40c8-ac4c-b32e0a7ae101",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1f8d0142-b78a-42f4-ac69-7d6f6bd481a0"
        },
        "item": {
          "id": "12e5aeee-a61b-4a09-9534-ea647f8a31bb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f0213bb1-f17e-4b09-9362-70f9fdedd308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5997f52-daf3-41f5-8d68-d6b02bbac1fa",
        "cursor": {
          "ref": "e45d6990-f24c-4e72-bc99-8212cdf98e90",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bfa8dff6-b31a-46c2-8799-c1dc48b34b40"
        },
        "item": {
          "id": "c5997f52-daf3-41f5-8d68-d6b02bbac1fa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d6773b3b-9e46-49c6-b907-71d412fd2526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adf29c0-f4aa-4923-b67b-32b0a9c87424",
        "cursor": {
          "ref": "8aa7eccd-7917-46ea-96e4-ac5050e0352e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e2476292-3a73-4bd4-b4d4-c732b9de7965"
        },
        "item": {
          "id": "3adf29c0-f4aa-4923-b67b-32b0a9c87424",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "52018994-5502-48df-b41e-278f186ded31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0660d05b-b7dc-4478-85ac-c3e0f24c9fb0",
        "cursor": {
          "ref": "c413303a-d8b0-4cd8-a144-744a28829177",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "03962835-3db7-4297-8e5c-40d43825fb4f"
        },
        "item": {
          "id": "0660d05b-b7dc-4478-85ac-c3e0f24c9fb0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2fcabcf3-8e6c-485b-a162-5304a4e0e888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af389c3-1845-42f4-80e3-b518f5eba69d",
        "cursor": {
          "ref": "e459f5af-f2ca-4e87-b120-44f4175279f5",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "53636a60-af9c-4073-b3b2-d206fc963eae"
        },
        "item": {
          "id": "1af389c3-1845-42f4-80e3-b518f5eba69d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eee0976b-723c-4d78-8e6d-5aa32bd081d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9ebbe-5ae5-41f1-9a08-6364b88c9523",
        "cursor": {
          "ref": "304ce281-9fff-4426-b0b3-9d52f21a61b8",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a1b97716-4d35-47bc-b494-dfe59275e2b8"
        },
        "item": {
          "id": "6cf9ebbe-5ae5-41f1-9a08-6364b88c9523",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e25e2ee6-b031-4f57-86f1-0d9a84fdc129",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15586244-0cec-486c-ba28-489b426fd152",
        "cursor": {
          "ref": "16352cb2-8fe6-4e0d-b13b-99258fe75921",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3c5986b6-30dd-4d89-9923-7cee19b98379"
        },
        "item": {
          "id": "15586244-0cec-486c-ba28-489b426fd152",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9a81242d-a090-434b-95d2-68e07deaf27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2466c2d9-e489-481b-abf0-e7d9e474b486",
        "cursor": {
          "ref": "19640faa-9321-44fe-885b-550056d0df14",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3c285414-e0bf-40d3-b273-a213190aaebd"
        },
        "item": {
          "id": "2466c2d9-e489-481b-abf0-e7d9e474b486",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "04f47fea-04bf-4266-afba-a422554d17b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a04eab-2495-4878-9515-b39232235f21",
        "cursor": {
          "ref": "89734ba7-76b0-4a12-a70f-f997a3ea2362",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ba3395ad-972a-45cf-8fc5-4578865fff75"
        },
        "item": {
          "id": "09a04eab-2495-4878-9515-b39232235f21",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f4d9fb63-a074-46e2-9113-7cda92df1064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717da6d3-1b20-4848-ac41-d5415b2a475b",
        "cursor": {
          "ref": "dfde3549-0627-4948-bdd0-5d5adea3e5be",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1d7a5d4c-ca4a-4b27-a294-b2a1df3532c5"
        },
        "item": {
          "id": "717da6d3-1b20-4848-ac41-d5415b2a475b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9a012ec7-42e0-4b70-8278-00e056b88d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742210ab-e33e-4eb9-9548-b1feb8217ed3",
        "cursor": {
          "ref": "fcee8c46-a89f-4ae5-ac87-bf88c231e4e9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f94e39de-ba00-449f-878c-65dbe9fe6f36"
        },
        "item": {
          "id": "742210ab-e33e-4eb9-9548-b1feb8217ed3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "85adc77e-b90d-4c28-b1c6-04ead68434bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af525535-2f00-435c-b928-3f5c81a8bc80",
        "cursor": {
          "ref": "48c4676b-fea0-426f-9af4-e6ffbf5c7f51",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "33a255dd-fee7-4c37-ac97-e6c338369524"
        },
        "item": {
          "id": "af525535-2f00-435c-b928-3f5c81a8bc80",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9b08327b-11c6-4fa1-9c29-6e8398a0cbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88514ad6-5a76-413e-b500-8df5210eb0d8",
        "cursor": {
          "ref": "3db29bdd-4195-411c-b299-6a0a5208883b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9b70cdde-2997-49e5-837b-fdae67732f4e"
        },
        "item": {
          "id": "88514ad6-5a76-413e-b500-8df5210eb0d8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4a41590f-c819-46b6-b15e-1df4aec3af76",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574061b0-7fce-4889-bcc3-a85afaa1d3c4",
        "cursor": {
          "ref": "2ae7bad6-545d-44e8-9feb-60d3d4094f3f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "83373539-7b23-441a-8f3a-2ef699b2cc3d"
        },
        "item": {
          "id": "574061b0-7fce-4889-bcc3-a85afaa1d3c4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0b0b7c97-87ad-46ac-bded-60ad6a72cb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265b5af2-a5ce-4752-a907-f084ddc8268e",
        "cursor": {
          "ref": "8638bec7-c35a-4099-b0f3-6ede23ea94cc",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f54abe9a-dce7-495c-8231-87b7fe0f882a"
        },
        "item": {
          "id": "265b5af2-a5ce-4752-a907-f084ddc8268e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d343d965-ab3f-4b2b-b474-8642c5acead7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361188d0-537d-44df-a52c-c31fd061a735",
        "cursor": {
          "ref": "6a84901e-165b-464e-a566-d86b7d9bcd75",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "607e966a-6e0a-4e7c-8f20-bca61db6381d"
        },
        "item": {
          "id": "361188d0-537d-44df-a52c-c31fd061a735",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2df59c91-75c6-4e09-812a-d87821bdcfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9494d96c-e021-4b09-83cc-58ddfaf4e4f8",
        "cursor": {
          "ref": "36db426a-b0fd-4f67-a94a-f423eb618463",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "45f58816-ef56-48ce-8f93-b27beba03e0d"
        },
        "item": {
          "id": "9494d96c-e021-4b09-83cc-58ddfaf4e4f8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "79e6cda3-2541-49d4-85e4-3295c450bb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb919bd-daf4-4627-ac05-02d7a5461a36",
        "cursor": {
          "ref": "cf97739b-7dc4-4467-bc92-7e7acfa7f49e",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3f5ab953-3829-48c6-a3c1-bbc8bc598552"
        },
        "item": {
          "id": "1cb919bd-daf4-4627-ac05-02d7a5461a36",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "185b3cbd-c2c3-4f4c-b11d-c83ac2cca2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a68aadc-ff01-416e-bbea-7d6e6401d525",
        "cursor": {
          "ref": "4cab9569-1de6-4509-b86d-2cceb4906b08",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "508173e2-7ab3-40f7-a891-679b7abadd35"
        },
        "item": {
          "id": "8a68aadc-ff01-416e-bbea-7d6e6401d525",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c61f8b89-29b8-484a-9f80-998f24cdee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d1d53b-2023-4df6-8366-f2cbf3cd1cdb",
        "cursor": {
          "ref": "ce25b3e5-fb08-4e44-874b-73c3894c299a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "75592c6d-710e-467f-b768-7c67d394a2f2"
        },
        "item": {
          "id": "20d1d53b-2023-4df6-8366-f2cbf3cd1cdb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b7bb2f6f-d186-44e5-8584-f7e9e4e5b305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e84b86-0e03-43de-a71a-d2f7afcf6c32",
        "cursor": {
          "ref": "82f7bcf4-f8d5-414b-827b-85c360818ef9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6d666f78-4482-4c2d-80e9-8dca29048fcc"
        },
        "item": {
          "id": "72e84b86-0e03-43de-a71a-d2f7afcf6c32",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cb61df78-42c4-4973-9beb-541032694a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c613048e-dcbd-4474-bb0c-a8eaf712fbff",
        "cursor": {
          "ref": "ac62f058-f586-4f9e-9436-83533ebf7463",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a97d8256-4fe5-43dc-86b3-de463e3dd0bc"
        },
        "item": {
          "id": "c613048e-dcbd-4474-bb0c-a8eaf712fbff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e2f64fa4-c2b1-48d2-a4e0-525a01451544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b10a8d-833f-4ec1-bac5-d0ca0079fdba",
        "cursor": {
          "ref": "0d12c436-7b2e-4b75-82f4-6a8d4d8dad9f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bd4de884-c34d-467b-a24a-f0984b3261d3"
        },
        "item": {
          "id": "61b10a8d-833f-4ec1-bac5-d0ca0079fdba",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "570f253d-0697-4f8e-8177-b9d0d94ca9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a5edfe-e1fc-44da-b7c2-aae4d4d33f13",
        "cursor": {
          "ref": "c0b44764-b89a-4d6b-9cec-2785c877ec07",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "32c52a1c-22c9-4042-bbfc-aa4e701c57d5"
        },
        "item": {
          "id": "d1a5edfe-e1fc-44da-b7c2-aae4d4d33f13",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "de5553a5-9303-4a05-bf3a-c69ee2197eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c64807-258a-4d6d-91fe-5d8ac8cac501",
        "cursor": {
          "ref": "45c707c2-7e35-446d-8d3f-3a9252a82008",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "91848f8d-8376-4718-a17c-14b29b57969e"
        },
        "item": {
          "id": "c3c64807-258a-4d6d-91fe-5d8ac8cac501",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7bd1a400-3c2b-4c11-9213-8a59262bd688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cebd1f2-bb31-4ed4-a011-50750186156d",
        "cursor": {
          "ref": "ea44c4ac-0eb0-4450-9486-458ae133fda5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b3d0de9a-c74f-45b5-a665-769bc218bf27"
        },
        "item": {
          "id": "7cebd1f2-bb31-4ed4-a011-50750186156d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "75e9d63e-b4f8-48f2-b2c8-3b1fe9711fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5a6db3-b7c7-472b-99f2-1391d7873003",
        "cursor": {
          "ref": "ae98664a-697c-42a7-b3c4-e46beae988d3",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6aa780c0-9f1b-43b3-9e43-e2dbbff35317"
        },
        "item": {
          "id": "2d5a6db3-b7c7-472b-99f2-1391d7873003",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "db32e3aa-5e05-4fa4-b5da-9727464a9ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353c73df-1e32-4246-a30f-2013af93de96",
        "cursor": {
          "ref": "cd94e608-ca8f-4615-b1b8-abc1bb76fcf2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f20177c4-24c4-47a7-ad79-027662e5761a"
        },
        "item": {
          "id": "353c73df-1e32-4246-a30f-2013af93de96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c7b729bf-087d-4bd4-8b70-d615a050369a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e229425e-e394-4b4c-836c-393946e64c9d",
        "cursor": {
          "ref": "885ca39e-84a6-4dec-ae9c-ed993f39e2c0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cafe029e-0a3b-4ebe-b3d3-40ce1dd04e8f"
        },
        "item": {
          "id": "e229425e-e394-4b4c-836c-393946e64c9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "152c16f3-36ca-4932-a822-1001f34b1c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb83b43-6988-49f1-b65f-58f692bddc26",
        "cursor": {
          "ref": "5c0b1322-2c64-4c4b-958a-9b49c06dc04d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8febb212-af02-46d9-9dde-9eb90e938b35"
        },
        "item": {
          "id": "8bb83b43-6988-49f1-b65f-58f692bddc26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f0b67d43-7955-4c17-aeb4-2e7de7c50332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eefb38d-33bd-4723-adaf-b77d36f68d6e",
        "cursor": {
          "ref": "1ac6c2f6-55e6-41c6-a56c-2a1638412480",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b94181bf-3e89-4a51-9552-06096c70590d"
        },
        "item": {
          "id": "3eefb38d-33bd-4723-adaf-b77d36f68d6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "de09205a-47f0-44a2-bd93-e5c5059a1052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcde5274-3ad4-46b9-afb0-05d38b0f9e28",
        "cursor": {
          "ref": "c4dbe749-411d-4d0c-86b5-e87521481c0e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cdd0eef2-0463-4ec1-8814-80d49b85683c"
        },
        "item": {
          "id": "bcde5274-3ad4-46b9-afb0-05d38b0f9e28",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "43e2d6ed-5a9a-4cc9-a15e-1cc5410ee121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ac522f-022d-42a1-98a3-cdb10f7343b6",
        "cursor": {
          "ref": "b1d76487-07ff-413f-b34b-9c6e8bd7625b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c31ed9c0-0390-42a5-a8cb-aeb01c4e183f"
        },
        "item": {
          "id": "18ac522f-022d-42a1-98a3-cdb10f7343b6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a712b638-1b8b-4c2c-9482-74175d5120e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16461b0f-9e17-42f4-b786-43cceae8bd1f",
        "cursor": {
          "ref": "11c9db49-f2fb-4a44-9551-acdec8c816ff",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5242f638-6aab-4f96-b87e-da9cbc155b48"
        },
        "item": {
          "id": "16461b0f-9e17-42f4-b786-43cceae8bd1f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7bca4571-6efc-465c-bc28-f1a20d85e33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a599d7-c4d3-48d7-9913-ae8a019364aa",
        "cursor": {
          "ref": "71a40daa-0937-4ffe-8add-1f700ce84e1c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "08514971-9666-47f4-945b-d5cecd8ed2cf"
        },
        "item": {
          "id": "74a599d7-c4d3-48d7-9913-ae8a019364aa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1a3ef034-03c9-4705-9b5b-f27e188c42a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0292c4e8-5b0d-4084-9f3e-e87fc05deae2",
        "cursor": {
          "ref": "4b1b7762-3e44-482c-a803-59d5c68856ca",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "efbd4860-dcbf-4aa1-8afc-9def033ff90e"
        },
        "item": {
          "id": "0292c4e8-5b0d-4084-9f3e-e87fc05deae2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "774a9c55-52de-4f91-bb01-815e5dfe60a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf4514e-4934-437a-aac6-1b8e39581faf",
        "cursor": {
          "ref": "1ac04132-1e9e-4798-b8df-92a42c60ce6b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a29698e2-ebb0-4039-ac33-dbd482431db6"
        },
        "item": {
          "id": "edf4514e-4934-437a-aac6-1b8e39581faf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ccc4ba8d-62c6-4573-8fbe-c3a2ca898159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a16dcb5-166b-402c-a1d4-61a2e5a8ebe4",
        "cursor": {
          "ref": "8f407753-0ac5-4e9d-8340-6fc993645450",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4cea9719-de96-4343-8435-a8cbf9a63746"
        },
        "item": {
          "id": "0a16dcb5-166b-402c-a1d4-61a2e5a8ebe4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7b722b7a-a6e5-448f-8633-96a27cffb56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9e0bfc-aeae-4c92-b77c-8d00229bc43c",
        "cursor": {
          "ref": "fafee364-6aa9-487f-8fa2-712e6416630d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd35fea5-9be0-4dfd-a9fe-1754bdd33277"
        },
        "item": {
          "id": "ee9e0bfc-aeae-4c92-b77c-8d00229bc43c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3d4096ee-42f0-4c7c-86a0-71ee56964706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deacb6f5-87ae-4961-99f3-9dac2c02ed4d",
        "cursor": {
          "ref": "05b45316-993c-4446-b7b2-16df3b3d0d70",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "24b537df-759f-48c3-a95b-7ec7f0d8ad92"
        },
        "item": {
          "id": "deacb6f5-87ae-4961-99f3-9dac2c02ed4d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "720edc05-d2b5-460b-a816-2b36f22bc76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da23f8be-e5ad-4733-aa44-2bded0565705",
        "cursor": {
          "ref": "4390d0bf-baea-4d94-b53d-8d7697976d1d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d0c03e4f-16fd-4302-86f6-369afcbc8e2b"
        },
        "item": {
          "id": "da23f8be-e5ad-4733-aa44-2bded0565705",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ab28c8ee-32fa-49fe-8a86-638813ff6e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aa8eef-2275-4870-ac72-dcbb361f38f5",
        "cursor": {
          "ref": "9e170d66-1a8c-424a-892e-069560c7ac44",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f1076c7a-5200-4c01-b8fc-de5d885fceaf"
        },
        "item": {
          "id": "68aa8eef-2275-4870-ac72-dcbb361f38f5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a3b12238-835b-4527-a5da-31363e14926d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc186bd-5c77-4cd7-8ca9-3cd97bf2321b",
        "cursor": {
          "ref": "167ab279-18e1-456b-a1d3-5a804d48f8eb",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7af2235a-2b67-4e91-bc03-8739bee9f953"
        },
        "item": {
          "id": "6dc186bd-5c77-4cd7-8ca9-3cd97bf2321b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bf101db6-ddfb-4337-9c62-54ba18436825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caea7d35-a8dd-49a3-b27e-6a81029c54a2",
        "cursor": {
          "ref": "97a8662a-5b88-4271-9678-bd141badb8fb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7f59ab83-c36b-4a58-9a90-db37c9811717"
        },
        "item": {
          "id": "caea7d35-a8dd-49a3-b27e-6a81029c54a2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "784229bd-cfdd-42c8-836c-8b3fb3dfbe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50920291-815c-49a2-9de8-e847fced6292",
        "cursor": {
          "ref": "5e60d837-656f-47bb-8f54-0ff3d7e70a3a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5af736e8-acd3-4f39-b581-09f960a6256d"
        },
        "item": {
          "id": "50920291-815c-49a2-9de8-e847fced6292",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d67cb6cd-cb8c-4b3f-b7e0-6b1b96cc5f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281ed6a6-0020-4d43-91b8-e003c6b87f78",
        "cursor": {
          "ref": "8b0c5a90-598c-4ffe-9b27-67e75c974c26",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "46ccb8ab-a197-4016-93e5-81259e8f9d23"
        },
        "item": {
          "id": "281ed6a6-0020-4d43-91b8-e003c6b87f78",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "350b057b-758f-42fb-b33b-5c1fa241d436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab060d6-da19-4573-afcd-c3a3344defbc",
        "cursor": {
          "ref": "ff4f15ee-775d-474f-b3c5-5be1bcbf2f92",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "909d6729-14ed-4106-8333-81201cda3501"
        },
        "item": {
          "id": "8ab060d6-da19-4573-afcd-c3a3344defbc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d0d26bca-27ae-4aab-9a59-acca203aba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93240a3d-2f81-4a7d-9d9d-6bccb9733af5",
        "cursor": {
          "ref": "cd9ff719-3800-49ab-9cc7-4fb79b734087",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ae6a63db-0e16-422e-be0a-ad72b555410c"
        },
        "item": {
          "id": "93240a3d-2f81-4a7d-9d9d-6bccb9733af5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2f4cb213-30c0-4d5b-8d46-7838c41f2887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3a98e3-faa2-4293-95ae-7ec789f309f4",
        "cursor": {
          "ref": "8aa59a29-b8f9-4973-8135-df22e7c7c171",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "199a90ea-c035-43d2-988a-9f3a6cde1618"
        },
        "item": {
          "id": "df3a98e3-faa2-4293-95ae-7ec789f309f4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2dd4a243-580a-47db-a61e-a089ea208144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2522d4a2-1ff8-4580-aa6d-598c1d573a77",
        "cursor": {
          "ref": "6dc4c803-0581-4002-b318-560c87157059",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bdffe047-cc46-499e-a20b-2593847a7cb5"
        },
        "item": {
          "id": "2522d4a2-1ff8-4580-aa6d-598c1d573a77",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "95345823-2b3d-4f73-8cea-ad679e116cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c92f79-70f1-4242-beee-3b417afe5eeb",
        "cursor": {
          "ref": "c73f799e-6599-42f0-815b-df389a5460fd",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dba4b907-0917-4893-8de4-b48216434267"
        },
        "item": {
          "id": "72c92f79-70f1-4242-beee-3b417afe5eeb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7e938816-66fd-4d32-9952-5e74e339bdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a838ebd4-3297-4081-b28d-0917f7e3f064",
        "cursor": {
          "ref": "c847eba3-44fd-4ec1-9c07-eeb5b45937fa",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e65459d5-2bac-49c5-bd72-3b36ae09150f"
        },
        "item": {
          "id": "a838ebd4-3297-4081-b28d-0917f7e3f064",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c4254ca3-0365-4f54-83da-467c79df9cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7972cfb6-45bf-4ea9-9090-796754119c66",
        "cursor": {
          "ref": "7d8f524c-1390-4e6b-acff-34bf840222ae",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "74748949-6a8e-404b-a57d-fae4503921a7"
        },
        "item": {
          "id": "7972cfb6-45bf-4ea9-9090-796754119c66",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c463ae1c-d950-4d60-807c-ff49642f12e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bebc5e8-a543-4dbc-9962-2b95043f9256",
        "cursor": {
          "ref": "3e9b5604-3eed-403c-85f6-3410c4996090",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0a9e6b23-9f34-43c6-8d20-22d75351c9e5"
        },
        "item": {
          "id": "0bebc5e8-a543-4dbc-9962-2b95043f9256",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2fb9ace1-cb94-45d5-9e8b-e2b1fb7a5dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943d87fe-dcf3-4d4b-a01d-d3049b7dd09d",
        "cursor": {
          "ref": "d293281d-b368-4128-993c-af564345f88d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "00d7d572-f183-4adb-b851-7728012c92ef"
        },
        "item": {
          "id": "943d87fe-dcf3-4d4b-a01d-d3049b7dd09d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "37e099f2-1441-4544-8631-4aea2a898617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e93fd0c-e6e2-4791-8f1a-11ed69a4a006",
        "cursor": {
          "ref": "03925537-a5b5-4a3d-8054-563c1c91f85e",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "616c2f0d-528a-4ab9-88fd-1390dc4e6d90"
        },
        "item": {
          "id": "5e93fd0c-e6e2-4791-8f1a-11ed69a4a006",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "90ae2043-ec7d-46e4-b87e-ccf7e9375192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de548df2-6e44-4a66-b7c5-4e39ef410e28",
        "cursor": {
          "ref": "a62c1653-1e3e-47fa-bc65-4cb86f33b6ba",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a52c6712-672a-4352-b489-af17689bb34e"
        },
        "item": {
          "id": "de548df2-6e44-4a66-b7c5-4e39ef410e28",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0719a35d-4796-44ed-8033-793e15f97791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4704920-2893-4918-94bf-6583b9292083",
        "cursor": {
          "ref": "2f3663cd-3fa7-432a-9516-701093798777",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6570240c-af54-4eaf-b075-59a0aea0451e"
        },
        "item": {
          "id": "e4704920-2893-4918-94bf-6583b9292083",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f8c0a865-d012-43da-b3b9-26d9e720d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2b35fa-1a00-4689-8791-31e7162cbe74",
        "cursor": {
          "ref": "75b7fcba-e059-4174-b9fe-fc4bc845c7b6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2083cffc-b019-402d-9681-df3d34877b99"
        },
        "item": {
          "id": "9c2b35fa-1a00-4689-8791-31e7162cbe74",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e8d8ac11-9d17-465d-a5ce-d13eacf9d48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac42c5bf-2cc3-47ac-abe7-adf5862bb960",
        "cursor": {
          "ref": "9ef3861d-0b80-4bed-acbb-904d24308474",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e1ecd303-65c4-464e-b0e8-ad137293ecef"
        },
        "item": {
          "id": "ac42c5bf-2cc3-47ac-abe7-adf5862bb960",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "80309084-c6d1-442a-ac2d-5c28a887b31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e782bb-ecef-4ee7-820c-2573c79fcff5",
        "cursor": {
          "ref": "52a25e9a-2688-4c71-ac57-e461ab750f20",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ea3d6a3a-49b7-40c7-b2da-9fd383588744"
        },
        "item": {
          "id": "54e782bb-ecef-4ee7-820c-2573c79fcff5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cf074a2d-531d-42c1-81bf-7ea9a52cc06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e74b01a-15c9-4733-b4e2-b11276ffc711",
        "cursor": {
          "ref": "fea06394-21e7-406f-b9d1-46974edf4b9b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3f294111-a0e7-45c9-a703-7edbcbbb5cd9"
        },
        "item": {
          "id": "5e74b01a-15c9-4733-b4e2-b11276ffc711",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9a4eeacb-fc8e-44d2-a1e2-5e3f958e404e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91af99a5-13c9-4be7-bc32-3e6a1db3e497",
        "cursor": {
          "ref": "802b9bcf-ec52-4dfb-ac39-2dbcdd737746",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "92ad4676-b434-42a1-80a0-f387cd4b5545"
        },
        "item": {
          "id": "91af99a5-13c9-4be7-bc32-3e6a1db3e497",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a1a01209-a804-4570-95e5-88954c6ef1f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab130f7-dd24-40d7-afb5-6072146ae611",
        "cursor": {
          "ref": "9f1c9696-558b-453b-a658-0926219df9ad",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2cab07ec-49cc-4449-b294-4a1656e56a59"
        },
        "item": {
          "id": "fab130f7-dd24-40d7-afb5-6072146ae611",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7478d273-a4a0-400d-8f85-03719d45cfd8",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bb7dda-22b3-4e5c-85af-593e97de4d85",
        "cursor": {
          "ref": "d2dc4bd4-63a6-41c8-b3da-85c02e326480",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "26fddeaf-e909-44e4-9955-a2d2ffe70d93"
        },
        "item": {
          "id": "27bb7dda-22b3-4e5c-85af-593e97de4d85",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "24962a1d-0052-4a68-821c-4d175c13dfb1",
          "status": "Created",
          "code": 201,
          "responseTime": 210,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4012d75-68f5-4f1e-b93f-e0b42b4ff2f1",
        "cursor": {
          "ref": "5d6bd04f-280c-4db1-9e4d-8458d0ffb5ff",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7098d32c-db5d-4197-8588-38401b02589d"
        },
        "item": {
          "id": "d4012d75-68f5-4f1e-b93f-e0b42b4ff2f1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4a45f87a-47f4-475f-af9c-e469e1fb8313",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dbbed2-82d8-4789-b520-dd8308a4d180",
        "cursor": {
          "ref": "583d46f8-3502-4f5e-a9ce-1ee82236f6d5",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "10cf857d-0b08-4cb6-ad20-28bb89490449"
        },
        "item": {
          "id": "98dbbed2-82d8-4789-b520-dd8308a4d180",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8a8db4e0-879e-4640-90a4-5c7ba09fb68f",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "61464460-1b84-4635-ba2a-d8e0f9cc5653",
        "cursor": {
          "ref": "98da6de6-146c-4311-abfc-99914d8637b6",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "47981ea1-9327-4953-9da1-b224d6646219"
        },
        "item": {
          "id": "61464460-1b84-4635-ba2a-d8e0f9cc5653",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4212c1f2-93c3-48e1-bf0c-66c39e0a7788",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "535fe52a-5cc6-44f3-986b-b232c201fb0f",
        "cursor": {
          "ref": "1f9d8f47-dcc2-4d25-b827-eaa57b12a02a",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0c98c24e-fbc8-4baa-bb13-d4287b581588"
        },
        "item": {
          "id": "535fe52a-5cc6-44f3-986b-b232c201fb0f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5e6aa654-9080-42bd-a5d3-b72a8bcb2d02",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f619b74-0209-4956-bd55-dda514400d06",
        "cursor": {
          "ref": "3569abcc-8766-47cb-9ed6-e1fcabc7885f",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "583b3626-157a-4734-a147-0a448adf9682"
        },
        "item": {
          "id": "2f619b74-0209-4956-bd55-dda514400d06",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "26586d49-0281-43b5-aa20-76bb6c344b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0da9f9-5146-41ca-a3c6-eb128bcf64cb",
        "cursor": {
          "ref": "c325ea2f-6d00-4021-b8fa-9f62af687108",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ced98de0-1461-49c0-928a-2e1f3d8ec771"
        },
        "item": {
          "id": "2e0da9f9-5146-41ca-a3c6-eb128bcf64cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "051afcc6-5290-4355-931c-8f63356c3b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f7a75a-804e-421b-a3a8-ae6f32f9af5f",
        "cursor": {
          "ref": "2a1065a2-d6ed-46cf-be4c-8b5a92e55212",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2226825f-2d6f-4804-9c15-2ef4fc0763ac"
        },
        "item": {
          "id": "f6f7a75a-804e-421b-a3a8-ae6f32f9af5f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8d570586-0a4a-4fd2-a88a-f2ce89f3592f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaa58f6-b84a-4f9b-8dac-85e6f9f5e5f2",
        "cursor": {
          "ref": "b37f2213-61bb-40fc-b24f-21c8cad789c5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f56af388-fb6d-435a-b3f5-030f63fadbf2"
        },
        "item": {
          "id": "abaa58f6-b84a-4f9b-8dac-85e6f9f5e5f2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "18996a3a-908a-439d-8b03-4ce55cbd8361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c2326c-8a47-4235-8967-d02673d998b4",
        "cursor": {
          "ref": "23986813-fb78-4624-95fb-b78e87e60198",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f52971ad-a2f7-4539-b183-952ba1e2d8c7"
        },
        "item": {
          "id": "d3c2326c-8a47-4235-8967-d02673d998b4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "42bb0062-c58f-47f4-84ee-2658ad786cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07e2342-ba04-4cc2-922e-ca4fcb5b3d58",
        "cursor": {
          "ref": "6a5c233e-89db-42d9-904a-8e9de7f5e7be",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fbb10383-9121-4f65-a7b9-e344c7a314ab"
        },
        "item": {
          "id": "f07e2342-ba04-4cc2-922e-ca4fcb5b3d58",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d4779fde-0ffd-4a90-bc2e-f28fb9018273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967ba581-f959-4e0a-865a-ec7ddd746873",
        "cursor": {
          "ref": "0b5362f1-8516-4d93-99e5-1cbb40533425",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0437ff05-370e-4de2-8f2a-05598c81dab3"
        },
        "item": {
          "id": "967ba581-f959-4e0a-865a-ec7ddd746873",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b1636252-802b-411f-9258-486efef70862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726e473e-104e-48d3-a2f4-fa993b826c06",
        "cursor": {
          "ref": "8db6b608-aaa5-4207-8594-4ac1d89b0c81",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dbe45b50-7d95-4f64-8394-d04b092b7ce1"
        },
        "item": {
          "id": "726e473e-104e-48d3-a2f4-fa993b826c06",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b1c720fc-6324-4d12-90a0-5f1ecbed2379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c598038-75b6-4092-8d0f-28b809ca11f8",
        "cursor": {
          "ref": "8945a218-55ea-45ab-8ac1-a11fe29ddd79",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9eeb1846-78d2-435b-bfb0-e19de79f08ff"
        },
        "item": {
          "id": "3c598038-75b6-4092-8d0f-28b809ca11f8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c7244c54-8d69-45bb-aafe-0e4d770aa505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a323c32d-ae12-4362-a9fb-9ce7615a37af",
        "cursor": {
          "ref": "8157954e-056b-4842-9157-6160fb4a73ca",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d8ca3613-a4e4-4f69-83a6-9aa7ef868895"
        },
        "item": {
          "id": "a323c32d-ae12-4362-a9fb-9ce7615a37af",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "15f78387-4b15-407a-983c-68b0bb855582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd3ade0-34f4-4c63-b86a-506422440f39",
        "cursor": {
          "ref": "a3148161-3214-4c65-a261-0751574f925e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5381508f-c6fb-48b5-bf7f-f811b4ec6e95"
        },
        "item": {
          "id": "8cd3ade0-34f4-4c63-b86a-506422440f39",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5d0789e7-09cf-405d-9b1d-c7a12457cd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154b34e7-f3f8-44d5-bc0e-fd493771bc68",
        "cursor": {
          "ref": "1016770a-2e35-4cd3-b8e6-e26526641390",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "89646860-a6a0-4cb6-bca1-261c932ed693"
        },
        "item": {
          "id": "154b34e7-f3f8-44d5-bc0e-fd493771bc68",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d769832-7f5a-45e1-b529-3d759cedc616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a1a983-ce82-4b4a-ab5c-773756fe30da",
        "cursor": {
          "ref": "be2ec123-1bbe-4eab-a4c0-3a603ce564e7",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c64f1bcd-d412-46d0-b674-ab21eac5dfc1"
        },
        "item": {
          "id": "d1a1a983-ce82-4b4a-ab5c-773756fe30da",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f1c34916-fb37-4bae-ae9d-bbf4e02805c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcfe0fd-165a-4867-819a-b793d42a1db3",
        "cursor": {
          "ref": "c9b2ecc6-effa-44ff-bdd9-c6e2d76a5fca",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ef935af0-59cc-4a04-97d7-f6000ffc665d"
        },
        "item": {
          "id": "8bcfe0fd-165a-4867-819a-b793d42a1db3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8499bc04-88f4-4722-9dcb-34e2ad4792f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32811522-eed4-49bf-af9b-0f09e59ceca1",
        "cursor": {
          "ref": "16746d11-dd93-4686-912a-7948c6c8ac72",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "798fff9b-c720-4573-bda1-f571c4611b48"
        },
        "item": {
          "id": "32811522-eed4-49bf-af9b-0f09e59ceca1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bf8d5bd2-f309-4775-b885-2790ed0b2139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9e5ac8-875e-46a6-ac62-cfc2fa3296a6",
        "cursor": {
          "ref": "f022ecde-40c7-457c-b0e3-454de614a11e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b3f56866-0adf-4176-b21f-ed53cd8d450e"
        },
        "item": {
          "id": "4a9e5ac8-875e-46a6-ac62-cfc2fa3296a6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "076cc55e-97ff-4026-965b-8a9743a796b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c70f93-9e0a-43b8-b7dd-0c7118554e5b",
        "cursor": {
          "ref": "5491d097-5858-432b-a530-b8d86d9cbaa9",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "70a099a7-56b9-44f3-adf5-321529fec2a1"
        },
        "item": {
          "id": "a7c70f93-9e0a-43b8-b7dd-0c7118554e5b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cc3eaed3-aa42-4fdc-a0f1-28227031ec97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29deced-0ae3-4dbb-a046-a523741eb95a",
        "cursor": {
          "ref": "32b70713-d997-4b8b-974c-124b7bffd175",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "39b8f9cd-0e9e-4bca-bda5-837684514d3c"
        },
        "item": {
          "id": "c29deced-0ae3-4dbb-a046-a523741eb95a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc2391c1-c078-4bc3-9a7c-3b9c245d53fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2055ca0-56eb-42e9-83a2-86302326176a",
        "cursor": {
          "ref": "acdbba72-e916-4914-a758-576a852a712a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bcfa54c4-0b7c-42fd-b275-792553184cd6"
        },
        "item": {
          "id": "e2055ca0-56eb-42e9-83a2-86302326176a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "391747cc-b9c2-4c32-945d-9d6314580312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af462185-cf63-42d2-96fe-30063ddb12e7",
        "cursor": {
          "ref": "11141bf0-d79b-4c0c-ba06-84bad7c18f62",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2bcb8cc1-8f8a-4fb4-8d1e-6b345ca73728"
        },
        "item": {
          "id": "af462185-cf63-42d2-96fe-30063ddb12e7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bc12d37b-6d3c-4261-a040-17c91890c1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73170c56-3077-4a6f-987a-715dff4cd3cc",
        "cursor": {
          "ref": "2c0a602b-7d98-4f46-89d4-31e5cf5529a9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1adcf60e-4292-4af7-bbbc-27bf1093f8f0"
        },
        "item": {
          "id": "73170c56-3077-4a6f-987a-715dff4cd3cc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c588ff8-3233-4687-b425-0fee7224ad6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6af615-d5cc-40f6-8913-b878643c1cbd",
        "cursor": {
          "ref": "c3ef52ac-2718-4fd6-b4ee-ecbc0c2d4f38",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f4a60b5e-dad3-4320-b528-23eff61551c5"
        },
        "item": {
          "id": "0d6af615-d5cc-40f6-8913-b878643c1cbd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e575d4af-124a-41e2-89c7-cb38986f4759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876b3cd2-98d7-44d4-abae-9e1a559ed0eb",
        "cursor": {
          "ref": "8e01fb54-e11f-441a-991f-24c18484c7f3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "af0a6e64-9218-47a6-b3cf-be08258e5564"
        },
        "item": {
          "id": "876b3cd2-98d7-44d4-abae-9e1a559ed0eb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a4f2bf1d-b1c1-417b-91f4-6f32e0667e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dd2727-2404-4a9a-9061-74382a1ef20f",
        "cursor": {
          "ref": "5c4f1d2c-8a5d-4ab1-ae9f-8651414ed899",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c2379ab7-52c6-4ec4-970c-a3024e9a83d3"
        },
        "item": {
          "id": "99dd2727-2404-4a9a-9061-74382a1ef20f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c0bacea9-f879-450b-bcaf-b7dc7451a5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706bc7eb-d924-4885-a382-01973b792362",
        "cursor": {
          "ref": "3ea92750-ea73-4b78-98f0-8f131fe6d159",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a2480fc8-34a4-4245-a6e2-2943708f2557"
        },
        "item": {
          "id": "706bc7eb-d924-4885-a382-01973b792362",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "663b2b38-f2ea-4ad3-97be-0ab534de6ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b72452-e45f-4efd-8e1b-b662237cad61",
        "cursor": {
          "ref": "b0b91e87-c10a-4262-9a98-18ed1e00277c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "30e7d9c7-8b0d-4cbf-86a5-6aa4c833e333"
        },
        "item": {
          "id": "a2b72452-e45f-4efd-8e1b-b662237cad61",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f1b8d439-6425-496c-9ccf-35cd48ccc789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c481b3-ec29-470a-912c-f73a9d243aee",
        "cursor": {
          "ref": "0bb6fc9c-d989-4fb8-bf46-53ae9035141a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eb49b37d-736c-419a-b0e3-7f9e4e2a2a0d"
        },
        "item": {
          "id": "04c481b3-ec29-470a-912c-f73a9d243aee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bba596af-6b43-4767-a0ef-7a790253ef40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837faaa7-6983-4cc1-8a6f-fc5c3cd1ad8b",
        "cursor": {
          "ref": "28a9a70c-92dc-4d6f-beca-7ad752e79a8e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d59be96e-41f3-444d-ac3d-041b03133583"
        },
        "item": {
          "id": "837faaa7-6983-4cc1-8a6f-fc5c3cd1ad8b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a4aab8b8-d26f-4d00-93a9-3b0fbbd252cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad6da83-8ff3-4271-a0b6-6fda53ae26ca",
        "cursor": {
          "ref": "a05083c7-1979-4801-ae69-38da7a226a67",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "983f1145-784c-4e0e-9167-6483b26c0314"
        },
        "item": {
          "id": "dad6da83-8ff3-4271-a0b6-6fda53ae26ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bac5e2ec-db89-4c00-b526-43aadd25aa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb752902-0047-46a3-b21d-744b38b2f7ae",
        "cursor": {
          "ref": "674bfa8c-2cdf-4f33-8678-b17682685e8a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8d13f557-ff0c-4a5a-8658-ca23fd6b2abd"
        },
        "item": {
          "id": "eb752902-0047-46a3-b21d-744b38b2f7ae",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8f1c92cd-c56c-47e0-a5d1-6e252022424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a404a66c-b030-4ba5-9b7c-f1071d25a83c",
        "cursor": {
          "ref": "4fa98c9c-4a76-400a-93e1-7472f2a4a9ef",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d331d2a9-01dc-4263-9434-4ae110c7d262"
        },
        "item": {
          "id": "a404a66c-b030-4ba5-9b7c-f1071d25a83c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "890b1cc4-6083-499c-8700-1c8b931ca8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c16699-6550-42ad-a687-807263bea5d3",
        "cursor": {
          "ref": "bae31a08-a957-43c0-b5fb-6b6844546189",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f9c80fb1-7b83-4813-8e37-f62eaf5eff47"
        },
        "item": {
          "id": "16c16699-6550-42ad-a687-807263bea5d3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a2356a15-aba6-4d8d-80c8-211a400918f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eea11d7-df53-4296-a94d-4ce6abfbf5fe",
        "cursor": {
          "ref": "54e005f4-6a97-42e4-aea8-0381df8de6a5",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fd76d5a0-2c86-4525-8451-496e370043f4"
        },
        "item": {
          "id": "3eea11d7-df53-4296-a94d-4ce6abfbf5fe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e48d6ac1-e804-4267-954a-cd7c73b6a174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2847cff5-bae8-4bef-a19f-3576d89ec0ae",
        "cursor": {
          "ref": "e96b46fb-9138-43ec-b8b9-1542099391de",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c9f6fb0a-b89b-48eb-a292-b225a85627a9"
        },
        "item": {
          "id": "2847cff5-bae8-4bef-a19f-3576d89ec0ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "919fd795-4cb1-402c-be54-40772671f06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b1a384-35c0-4bc7-bacf-b474c6726b77",
        "cursor": {
          "ref": "60001dea-c306-4085-9ce3-c610607831c0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7317a7ac-96bd-4b88-9427-5d004f684e9a"
        },
        "item": {
          "id": "50b1a384-35c0-4bc7-bacf-b474c6726b77",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f342a59-7912-4c72-ba3f-cd9c0ba1ee3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b579d8e8-e8db-4191-8d11-5807fe813ee2",
        "cursor": {
          "ref": "d60d424d-11dc-46e8-acd7-08c2eb691d69",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0ece8ad9-9505-452b-bcde-efccca0c1636"
        },
        "item": {
          "id": "b579d8e8-e8db-4191-8d11-5807fe813ee2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "304ef799-6463-43ad-ba68-4b8f985dddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44a2c9d-c663-462e-92f9-f5c89f77e344",
        "cursor": {
          "ref": "4e9e1e95-8572-4e57-93d2-8a0730feacfe",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b91f5cef-5ff1-46ec-b6be-e614ffbb853f"
        },
        "item": {
          "id": "b44a2c9d-c663-462e-92f9-f5c89f77e344",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2fc289ac-2a42-40dd-af7e-981ce07e3462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d7db41-64ce-41f5-afb2-ab7834e9f5bf",
        "cursor": {
          "ref": "782e64a8-2e9f-48e2-9502-6733ed20219c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f8b196c7-22a2-4b16-85ac-71d8787f5583"
        },
        "item": {
          "id": "b6d7db41-64ce-41f5-afb2-ab7834e9f5bf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e086589f-3e93-4f25-87ae-376802e6ebbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fe94a9-8cef-4fa9-bed9-921e42c6e1d7",
        "cursor": {
          "ref": "05131876-2856-49a4-97d2-5f72ffaf4d58",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5060c5a4-bd94-42f5-97a0-af5d2f50f279"
        },
        "item": {
          "id": "34fe94a9-8cef-4fa9-bed9-921e42c6e1d7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3c1bdeed-3174-446f-ab23-80c8280b89d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d403e436-eca8-4682-835e-fd9ba942686c",
        "cursor": {
          "ref": "0b866d4b-cb64-44da-a256-06015a0db5b9",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5ce97085-6417-47ad-9ba6-1b72e0163cad"
        },
        "item": {
          "id": "d403e436-eca8-4682-835e-fd9ba942686c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4d584c24-1732-4d6a-91e6-73de8dac7627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfe80dc-9771-4dad-846d-e9930291c1c3",
        "cursor": {
          "ref": "4e0d345d-1ba8-4836-b1c9-8a388c7dfd9c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a99577e8-bb1a-4505-a68c-3d9d94a86ddd"
        },
        "item": {
          "id": "3cfe80dc-9771-4dad-846d-e9930291c1c3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3e986ba3-79af-4ab0-a581-31331c8a1039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3249ec0-4cd8-49c7-91c6-0efa18e73d22",
        "cursor": {
          "ref": "4f548c6c-8804-4669-b7ad-5d70aef5b006",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "eea0b11f-1d8e-45c7-9efc-ef6e482f0949"
        },
        "item": {
          "id": "d3249ec0-4cd8-49c7-91c6-0efa18e73d22",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aceef063-e0ca-48d6-a3a7-c7b05956d627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66edd60-11b9-4ecb-82b8-6ca6b0c017c3",
        "cursor": {
          "ref": "3f61c8fd-132b-4bb7-8e4f-5453b1b0bb13",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3e6a6ff2-3eff-47d4-b7f6-1c1bc0c30227"
        },
        "item": {
          "id": "a66edd60-11b9-4ecb-82b8-6ca6b0c017c3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c55f20b5-e034-47b6-9375-0a2b1f941d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d05235-92a1-472d-b06a-50c141324a20",
        "cursor": {
          "ref": "dd1f3ad5-000f-4b3d-85c5-ce128133d32d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "03df9a74-622e-429f-a3f2-5f60373584bf"
        },
        "item": {
          "id": "d4d05235-92a1-472d-b06a-50c141324a20",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "12e49b4f-1343-454f-9795-6e73feae9341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8ed7fd-bcc7-422f-a046-398e5d82accb",
        "cursor": {
          "ref": "69b18c15-a315-4427-a203-417c9b7ae811",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "acf13f1d-d99b-434f-ab3f-2384b74cf748"
        },
        "item": {
          "id": "cf8ed7fd-bcc7-422f-a046-398e5d82accb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4cff691b-4b54-471d-838c-b2b086238c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2148a513-ad23-4efb-bd8c-a27db6a478c0",
        "cursor": {
          "ref": "6c0fc7e2-e3ea-4ca2-9413-a02a37fa6f32",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "139bdeef-a3b7-4b30-bc59-38ee39a9db93"
        },
        "item": {
          "id": "2148a513-ad23-4efb-bd8c-a27db6a478c0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9d223c0e-f505-4e8f-bdc5-0977c992224d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37318b9a-ecc2-4c1d-a098-157f5553d7a1",
        "cursor": {
          "ref": "5bd26dd0-2e6e-4a08-86e7-eb52ecbb39fb",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5b7d15c2-9ef9-4574-acfe-25098b09da19"
        },
        "item": {
          "id": "37318b9a-ecc2-4c1d-a098-157f5553d7a1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5e7415f6-4202-4482-a40e-b4b361f43391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c78501-2efd-4fd1-8bde-b8f84c895059",
        "cursor": {
          "ref": "117a95e0-85a5-45c6-80d6-ad0dbbbeffff",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bd672813-4faa-4279-a043-3ae020f4b4ca"
        },
        "item": {
          "id": "73c78501-2efd-4fd1-8bde-b8f84c895059",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7aaa0875-45f1-433e-a8c8-8a97215c7b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f340f1-9b43-4d3f-b50c-e058687349a6",
        "cursor": {
          "ref": "56751ed8-e47e-4523-8b18-3f6cc272f48f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1ac1c309-c471-44e7-b83b-cf04e6a71e18"
        },
        "item": {
          "id": "f6f340f1-9b43-4d3f-b50c-e058687349a6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e73e7d9b-853b-459d-b345-c61b45cefa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed6da99-a893-471b-8ee9-ff11b1cdce61",
        "cursor": {
          "ref": "e27c6c4f-0d84-44da-b8ee-18d0faa1decf",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "522a14cd-7be3-4a0a-8064-7ee95094999b"
        },
        "item": {
          "id": "eed6da99-a893-471b-8ee9-ff11b1cdce61",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "501f44a1-36ad-4971-8ca3-29412edf132b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdf1358-4ef7-40e6-9699-6f23e596b07d",
        "cursor": {
          "ref": "418baa23-cb0b-4ecb-876e-f4094089284a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e0b2d5d1-3e1e-4785-9f20-3bc6adb2497c"
        },
        "item": {
          "id": "9fdf1358-4ef7-40e6-9699-6f23e596b07d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "216d1013-aab8-4636-b777-b1a9f9249a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f7ec95-5f35-4287-89d3-7dd7a7a0c72a",
        "cursor": {
          "ref": "87907dd8-a4c8-498c-bbf6-62c1a04b345b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e9e0872a-b06f-4626-8686-c11ca66da5f5"
        },
        "item": {
          "id": "80f7ec95-5f35-4287-89d3-7dd7a7a0c72a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bbacab42-58f0-455e-8343-c7fa9cdcb1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f034a1-3d86-4548-a59f-2f58e9768ff6",
        "cursor": {
          "ref": "a2e35cbf-05fa-4dfa-b88a-86e8f8487622",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e4d7ee33-9722-4e0e-a8fe-f2d7f8ba0d7a"
        },
        "item": {
          "id": "65f034a1-3d86-4548-a59f-2f58e9768ff6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1e51a937-b172-4a1f-b75d-b13607bd0b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443e9734-099c-42ff-a1f9-56d6b731286d",
        "cursor": {
          "ref": "7b3fb488-29b0-410e-b8bb-ff8250526a55",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "05ce7642-e393-47b6-bca8-efa674bf8709"
        },
        "item": {
          "id": "443e9734-099c-42ff-a1f9-56d6b731286d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c3ca3503-1cf3-4ed7-9d15-dfb783be2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c9310a-ffc8-41b0-8fc1-009652aa8019",
        "cursor": {
          "ref": "05e7efaf-42c2-40b0-9baf-8f12d9f6ffaa",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e5006c5d-8b82-4c4b-b89d-4fef37890d58"
        },
        "item": {
          "id": "45c9310a-ffc8-41b0-8fc1-009652aa8019",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "54e5b26f-b130-4356-8db7-522ae8dc131f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f42714-e648-4130-abf2-5c154746bd6d",
        "cursor": {
          "ref": "4e350099-4567-4e6c-9fde-cce261a4aa59",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7d8c6cc3-9e7f-4d4e-8afc-172ffacbdb60"
        },
        "item": {
          "id": "c7f42714-e648-4130-abf2-5c154746bd6d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a0a4c743-d710-4e36-9754-66a6d808c42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4551ec07-7882-4fc5-9cd1-91aed7fe1343",
        "cursor": {
          "ref": "fe06cbb8-601d-4d59-aeff-2b7a18fce8a5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "16861725-dba3-4689-a05d-62361f932f8b"
        },
        "item": {
          "id": "4551ec07-7882-4fc5-9cd1-91aed7fe1343",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "11b5cdda-6fff-4dc3-9275-9c053d73282b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6732064e-1470-49fe-b2be-8db89a77d2fc",
        "cursor": {
          "ref": "5f2b88b6-b33a-4dcb-bb89-1db8ad0d73dd",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2e4b2ec4-c2ca-48ed-ba13-00e9f64e6745"
        },
        "item": {
          "id": "6732064e-1470-49fe-b2be-8db89a77d2fc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a67ef3e7-cc12-4129-992d-0a7db27dc578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aa68c3-4b31-4dcf-a815-720d5a1a6ba4",
        "cursor": {
          "ref": "0f532cbd-296a-4e54-a367-66f49c337690",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6d3f6133-8a92-4e85-9446-132befd4d2fd"
        },
        "item": {
          "id": "10aa68c3-4b31-4dcf-a815-720d5a1a6ba4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6c3f7c3a-e453-4209-9b70-5cbe91006592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606a0bbb-0cc4-4595-935a-972d52f53aa9",
        "cursor": {
          "ref": "2d10362c-b0ae-4846-b5f3-e6a96ee0f246",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "92c37975-39af-443e-8c21-b7df995e67a1"
        },
        "item": {
          "id": "606a0bbb-0cc4-4595-935a-972d52f53aa9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2f3789f8-41d4-4c9f-b509-77fe9d5b8d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c279b5-c800-4d91-baff-9852caf55da4",
        "cursor": {
          "ref": "d355a60b-5208-4faf-b228-74b21cec4757",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3d9de900-5e11-42ca-b846-006c84ea2d6e"
        },
        "item": {
          "id": "18c279b5-c800-4d91-baff-9852caf55da4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8b277044-ce85-49f1-a3f0-20911fda97dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e502b1f-899d-477d-aed3-88e8d367fbb0",
        "cursor": {
          "ref": "0f7083d3-76ac-4e7c-b77c-a12934bd8787",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9de4230a-12d7-423a-9144-700ceade56a9"
        },
        "item": {
          "id": "0e502b1f-899d-477d-aed3-88e8d367fbb0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9355e4db-c45f-408e-ac44-84ba93318e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ba43b3-7d6d-498c-8a64-274c4eccb7b7",
        "cursor": {
          "ref": "09b2a638-adce-44a7-9e7c-9a91bfd66bb3",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e05d5784-e46e-4f89-88af-e864956a2d24"
        },
        "item": {
          "id": "95ba43b3-7d6d-498c-8a64-274c4eccb7b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aafa624d-dc18-402a-9235-9358b527baa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9eb047-0373-447c-a49f-3453fd2aa3e1",
        "cursor": {
          "ref": "839750d0-8a71-4cf1-b4ee-1d6a15c23649",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "55cb3900-0c0a-47ff-9a64-f36fe82eefa2"
        },
        "item": {
          "id": "9d9eb047-0373-447c-a49f-3453fd2aa3e1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "673cf754-f483-4a2e-8076-62d9b6ed752c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b81707-26ec-4082-b67e-ceee6125d1fc",
        "cursor": {
          "ref": "f6c59960-d3db-4a97-857d-1fb88311b8d1",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d47c808f-1167-4c65-b5d9-9405d86ab95a"
        },
        "item": {
          "id": "c1b81707-26ec-4082-b67e-ceee6125d1fc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "002aaa87-8af5-47e7-9f88-c8c5ff19199e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1189dba5-0653-4a2f-9469-5be229afa275",
        "cursor": {
          "ref": "2bdea49f-8d95-4814-8082-f90f7873cb4c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9952c1a2-df8d-4daf-817e-9524dfcdf0b7"
        },
        "item": {
          "id": "1189dba5-0653-4a2f-9469-5be229afa275",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fb23b880-224f-4ff7-adce-bd0dff07302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe48bf83-c1aa-4b59-abe1-02d36cc57e72",
        "cursor": {
          "ref": "be84f988-497a-4261-b648-3694ab559eb7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f66d45d1-e5b5-4a1e-beb2-3f8b4fcffe68"
        },
        "item": {
          "id": "fe48bf83-c1aa-4b59-abe1-02d36cc57e72",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3c57dd04-2dd6-4ed7-a5d2-eef8517ac1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62164ffb-5727-49dd-bb60-9006b1d0c1cb",
        "cursor": {
          "ref": "509ff6d1-342b-4f89-a4ae-65455e5d5fd9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1199707c-887a-4b3e-8037-cea4719a4d73"
        },
        "item": {
          "id": "62164ffb-5727-49dd-bb60-9006b1d0c1cb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "736bc39e-1569-4c40-9a4b-816129f548f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86daaa07-3687-41b0-b6a0-eb5ce619ca54",
        "cursor": {
          "ref": "061ee117-79e6-4449-a11d-5e18d541aee3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "08de6d27-6541-42c9-bc12-a429436c092d"
        },
        "item": {
          "id": "86daaa07-3687-41b0-b6a0-eb5ce619ca54",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "aae37637-0e81-4036-b511-bf7c0ce57669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5742c301-aa6d-4670-acd9-afa3dda4331c",
        "cursor": {
          "ref": "deff24ed-5258-40f8-ad88-0e65735aad6d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "10e2b87f-ac11-4ef0-9141-59ef169cbb8b"
        },
        "item": {
          "id": "5742c301-aa6d-4670-acd9-afa3dda4331c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "feb38825-60fd-481a-a261-f7f1f89624cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82bb55b-138c-4f9f-8a23-3ef2735de184",
        "cursor": {
          "ref": "974b182c-585c-4a81-af4b-8efce7026027",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bd0b7217-868e-48ed-8a91-f87c0da4961d"
        },
        "item": {
          "id": "a82bb55b-138c-4f9f-8a23-3ef2735de184",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "63774b53-4fcd-4ce5-9c11-a41c1f2d3cda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eb65c4-2a8c-4302-9eb9-08b5b5468037",
        "cursor": {
          "ref": "1fbd848e-70c7-4234-b707-5c65eeb405cf",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f02adc2f-af2a-43d6-b040-f11a4a82aa73"
        },
        "item": {
          "id": "03eb65c4-2a8c-4302-9eb9-08b5b5468037",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7f6b3a2f-5cfc-4299-854b-7e0cbdccaee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a01ab76-e930-4379-bec3-e78b9156eb5a",
        "cursor": {
          "ref": "07c6f20e-aad5-4a40-a6ea-0b653286b51b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "12b11a52-fc2a-45f5-80b0-653f7b800796"
        },
        "item": {
          "id": "2a01ab76-e930-4379-bec3-e78b9156eb5a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3cdd9ccf-4b79-4dc0-9fa1-94255f578e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc0f82a-b656-4d3d-8fd9-f5302e954526",
        "cursor": {
          "ref": "8965934e-e3bf-4a1a-a294-03ac7e1015f9",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b462bf59-9e9f-4d78-b4e5-43ed1e38ab48"
        },
        "item": {
          "id": "8fc0f82a-b656-4d3d-8fd9-f5302e954526",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "39db6294-2e04-4be6-95a6-ff5ad3521fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dc47a9-89a8-459d-8de8-ff7b18eca590",
        "cursor": {
          "ref": "3bc61180-193c-4052-9d3c-d2c07af4b954",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "796ba8a8-8167-471e-9c83-5c3cc57273ef"
        },
        "item": {
          "id": "52dc47a9-89a8-459d-8de8-ff7b18eca590",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d7d65111-eaab-44f6-8942-b9da4cddd3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5433a387-399e-4a22-9ba0-c8342d162940",
        "cursor": {
          "ref": "40c33c47-3f7c-4f9b-b4dc-fa9406df9540",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aa06e9f7-a009-4e82-a158-55e4294d87ae"
        },
        "item": {
          "id": "5433a387-399e-4a22-9ba0-c8342d162940",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fb5117e3-b649-4bcb-82f5-a7dc03f2544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f621fffd-43e7-4c31-9c27-830c561b2f88",
        "cursor": {
          "ref": "e437e55e-8611-4cdf-979a-825cc1ffab69",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "67d4619f-d8c3-40de-a4ad-f0d02db942b9"
        },
        "item": {
          "id": "f621fffd-43e7-4c31-9c27-830c561b2f88",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "798aa4a1-4dac-4183-bc2c-66d93e2dfff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc40e97-a0b9-4d40-b948-66569c862784",
        "cursor": {
          "ref": "dab8c3eb-8d8b-4cee-9116-487498313f4d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "213d1266-622d-49e7-b10d-b26140714938"
        },
        "item": {
          "id": "7bc40e97-a0b9-4d40-b948-66569c862784",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5443df40-d417-4a60-8dfd-afda0c981c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b84b907-9442-4759-940c-51d06149281b",
        "cursor": {
          "ref": "6825920d-7651-4648-ae53-6dcf881abad8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cfad2a66-c8b9-4198-b69f-3773a72f3cfb"
        },
        "item": {
          "id": "5b84b907-9442-4759-940c-51d06149281b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "607618d8-9196-41ff-bce8-91bf02c7eb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0330e3a-4d16-4f0e-b9c7-2c965e7e6dc3",
        "cursor": {
          "ref": "422901f7-5950-427a-9e5a-4dcd70d652ea",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "db6da732-4fad-4457-8d42-2b4ac38c3071"
        },
        "item": {
          "id": "a0330e3a-4d16-4f0e-b9c7-2c965e7e6dc3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c293b2ec-e629-47e1-9ff7-c543d7e6ceb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec174a9b-f146-48d4-a06e-362733afbfd9",
        "cursor": {
          "ref": "aadcf164-4599-43a1-a9dd-8abcb211c81a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "49563904-9166-48bf-88bb-48fd2e7807c6"
        },
        "item": {
          "id": "ec174a9b-f146-48d4-a06e-362733afbfd9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "584a6630-3848-4585-8db5-dd03c12aad17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e676bd-97e9-4421-bbbc-f0f2ae4d5793",
        "cursor": {
          "ref": "7ec799d6-afad-4a15-a5b7-9b00d7e5cb2c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b392f2d9-6465-4e00-906b-1d459e43ccc1"
        },
        "item": {
          "id": "41e676bd-97e9-4421-bbbc-f0f2ae4d5793",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "24f7be3e-1ed5-4fe7-9d65-338489a7b46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f103f09-158b-4305-b906-4133638e0a96",
        "cursor": {
          "ref": "00ceb8c9-fb7b-474d-b2dd-b00e706b91e7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d8d7f149-dfcc-4f14-bd68-80b8697484ec"
        },
        "item": {
          "id": "0f103f09-158b-4305-b906-4133638e0a96",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "652263b3-cbbe-45ec-89fd-f90c3c8bbdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5099759-cef1-42b3-a3fe-8f1c0573002c",
        "cursor": {
          "ref": "872759bc-772a-4e36-a4de-5655e66113db",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "002de813-5f16-493e-a742-8e15e806e0c5"
        },
        "item": {
          "id": "a5099759-cef1-42b3-a3fe-8f1c0573002c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ca29ff29-e679-42c6-a6e6-117bec47a667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6369ad26-7a62-42c6-bfdd-38f802e795d1",
        "cursor": {
          "ref": "1df93032-c74d-47e1-ad57-16ec3bafeb9d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5b668f49-fe96-4980-8674-e8beef9525a7"
        },
        "item": {
          "id": "6369ad26-7a62-42c6-bfdd-38f802e795d1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6bdf82c1-1feb-4315-9fcb-42fcb92aa408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ed1475-4ac3-4404-8f11-19fd08965e1d",
        "cursor": {
          "ref": "563a3d7b-3e35-4a66-8d2d-d124b0c0afcf",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d1c85b34-a7a7-49d8-bd20-f7351ce8c70d"
        },
        "item": {
          "id": "20ed1475-4ac3-4404-8f11-19fd08965e1d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0c6740d6-c1c8-4a1e-a53a-4307b0776b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6ceaa4-1a22-4f88-a3da-a50bdeb8315f",
        "cursor": {
          "ref": "ac22b1fe-c251-4c1e-a98f-4e6110be9901",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ec14fb8a-e4db-48f0-aeb2-7087e0c6ef0e"
        },
        "item": {
          "id": "dd6ceaa4-1a22-4f88-a3da-a50bdeb8315f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f8f891f7-a27a-4803-84e0-cd623dc515d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e963ed-5916-436e-831b-1b6051d896e4",
        "cursor": {
          "ref": "ac9e92b1-e6c9-43c4-b8d6-521d8acecd9b",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1c90acba-a016-43ee-9da7-863982448b66"
        },
        "item": {
          "id": "24e963ed-5916-436e-831b-1b6051d896e4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6e80bb1a-386b-44f4-8b46-3ff38e656f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f81a83-f549-4a0c-bbfd-fb14299d59fd",
        "cursor": {
          "ref": "c1e65d26-c041-488b-badb-51bc4eb55055",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e86e06e9-0777-47ff-b7e3-302c6293a092"
        },
        "item": {
          "id": "74f81a83-f549-4a0c-bbfd-fb14299d59fd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "245cf973-7b98-4054-9a1d-29e58feae887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf81dbb-be97-403c-a174-4334187ecb8b",
        "cursor": {
          "ref": "ecf92932-c884-4798-9c80-2d91d5dc8a98",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "89c18ad9-d543-4376-baf7-770fbfea73e0"
        },
        "item": {
          "id": "fdf81dbb-be97-403c-a174-4334187ecb8b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e4a06a17-b36b-4c32-9da4-3ddd2bbec4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5af848-d1c8-4132-a85c-df07918e34da",
        "cursor": {
          "ref": "5bf7cee4-1348-4e7c-95bc-e71fe0067413",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "66e44e06-154b-4719-b5a6-3094e17d4585"
        },
        "item": {
          "id": "da5af848-d1c8-4132-a85c-df07918e34da",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a6752ab9-66d3-4bb8-bfe6-f04fcde9e571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1547ca-e370-4533-b870-bd95a64c9cb7",
        "cursor": {
          "ref": "15ba8d2d-de44-4075-ae18-3bdf5d789133",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "62b53815-eb86-43d7-ac1c-f156d10701bf"
        },
        "item": {
          "id": "6d1547ca-e370-4533-b870-bd95a64c9cb7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e98e61f1-0768-4fff-a2b2-e0d7f1a5b833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89146a1-e05b-4be9-b53e-d7165af9e33f",
        "cursor": {
          "ref": "8f9bf011-fa66-494c-bcd4-f748909d165c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8cb8a083-3589-4f21-9630-09a3736bba1c"
        },
        "item": {
          "id": "e89146a1-e05b-4be9-b53e-d7165af9e33f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "120fdb29-ab22-40ef-b7c8-bb84253628b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98212a7c-8cee-4274-9881-9e41f4ec0718",
        "cursor": {
          "ref": "651abf6d-18ad-456d-ba75-156e22d9a6a2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e595ed38-bee4-42cb-b2b7-8fb0be535729"
        },
        "item": {
          "id": "98212a7c-8cee-4274-9881-9e41f4ec0718",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "51483c81-a87d-4334-80c2-16fe742300f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b34c278-2720-4f08-aa3c-5b2924e9eb8a",
        "cursor": {
          "ref": "f7f4da88-1af7-4b7c-a3c5-d88d8aa4d03b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "103b47d4-d657-423b-926a-21a3f423881c"
        },
        "item": {
          "id": "3b34c278-2720-4f08-aa3c-5b2924e9eb8a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ef6a820a-df3c-4609-a2c7-e32ab0377680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4091bfcf-6fa1-42be-8f6a-559dc445b34e",
        "cursor": {
          "ref": "ba4396a3-eb1b-4476-a0e1-bf68144211b3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c39f60aa-c46d-4420-8e61-214f11b244c3"
        },
        "item": {
          "id": "4091bfcf-6fa1-42be-8f6a-559dc445b34e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9221c2f8-b16e-4732-a24a-ad792deb1108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254ff16a-b3dd-4787-bf7a-0b51d441c0d2",
        "cursor": {
          "ref": "efc049b2-0190-48f4-b326-a074589f75a1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "048f80f4-de95-4f67-84e1-92649f1add59"
        },
        "item": {
          "id": "254ff16a-b3dd-4787-bf7a-0b51d441c0d2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "15fc348d-8dff-40fa-b360-2e05787b9fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5021b1-da9b-4939-9189-63ca5a0082a4",
        "cursor": {
          "ref": "2c662d26-798f-4b7b-8b4d-1c95e138f75b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "04098537-c3a7-444b-aa6a-1a3280d801c1"
        },
        "item": {
          "id": "8a5021b1-da9b-4939-9189-63ca5a0082a4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0ad3fc87-ec6a-4c2a-bf64-54c6c3d8c62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fea254c-0e73-489d-9f68-0f32e5968ee0",
        "cursor": {
          "ref": "031e318b-ed07-4107-a5cb-162c54be4a9a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c2e7b52f-1cec-4737-9267-442a239a3401"
        },
        "item": {
          "id": "8fea254c-0e73-489d-9f68-0f32e5968ee0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9c48ec06-ecc0-4c1e-ab37-a1c111fec5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba79ea0c-3e9b-43db-a21b-d205578aeed4",
        "cursor": {
          "ref": "0172712d-c7e7-49b6-a91f-5424a3204215",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c59dba7a-2eb9-4b2c-8130-8a645cb7ac8d"
        },
        "item": {
          "id": "ba79ea0c-3e9b-43db-a21b-d205578aeed4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5330f85a-1a43-4c8c-a2c1-4c1b9e6c3853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0707ab5b-65d9-4d46-bdf4-636ec5899813",
        "cursor": {
          "ref": "0f3f5d7f-4ed6-40b9-bf12-16f8c28c326c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "af86ba82-b2f0-4e45-936e-19aa461ced28"
        },
        "item": {
          "id": "0707ab5b-65d9-4d46-bdf4-636ec5899813",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9f20f56d-fa56-4eb6-aa13-13c0f8f060cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f22983c-808c-4c2a-99ec-1cccbf83914a",
        "cursor": {
          "ref": "365b9bbe-1ff4-4ab8-aa22-5f879d98b799",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "62727d6e-2286-4d9b-a1ad-a6276b05db56"
        },
        "item": {
          "id": "6f22983c-808c-4c2a-99ec-1cccbf83914a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ae04d6fa-b28e-488b-951b-e1864d6b1ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfcaa05-cf58-4f1a-b01d-11084051dec3",
        "cursor": {
          "ref": "8b3bed65-ae12-49d1-a6fe-ed98258b61fe",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c52e666d-b1a7-484c-81bc-2eb145cee58e"
        },
        "item": {
          "id": "ebfcaa05-cf58-4f1a-b01d-11084051dec3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cfa5624a-8356-465d-9e25-b63926885757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1ba005-8f0f-40dc-a277-f8f6f0813c52",
        "cursor": {
          "ref": "8e4f63eb-b131-46b2-8732-652aae10ed65",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "74d80a4c-ad7b-4ccf-82ad-04e467c2a1c1"
        },
        "item": {
          "id": "6b1ba005-8f0f-40dc-a277-f8f6f0813c52",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cf2f5751-d9a7-48bb-9159-0f015260afa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e026d3fb-1891-412c-bc47-9c1a34048e1e",
        "cursor": {
          "ref": "9884601b-7d65-4db7-ad79-1dd294cba23c",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "76cc20a8-2872-4e89-ba0e-80e17666a77e"
        },
        "item": {
          "id": "e026d3fb-1891-412c-bc47-9c1a34048e1e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c1bdf8f3-32af-40b3-9171-732f9a7630c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f2256d-8b73-4ca2-8309-27799dd97072",
        "cursor": {
          "ref": "4851c7ab-24eb-4cdb-82ac-7981ff8df945",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c739c960-8d75-42d1-9440-fd3273e9776e"
        },
        "item": {
          "id": "c2f2256d-8b73-4ca2-8309-27799dd97072",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a885e658-662d-4d99-b5d5-f892f113569e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5af9d0-967f-43bc-b5fe-ddbd428ca6f0",
        "cursor": {
          "ref": "b4f73250-43c7-4d91-9cb3-dcd2614f8cf2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "10a7f6c2-8930-4b02-9bde-f7b96476a9c3"
        },
        "item": {
          "id": "2a5af9d0-967f-43bc-b5fe-ddbd428ca6f0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d227f0ad-e811-48b0-be00-aae5a1ccccdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65430d34-4fb6-466e-b922-06f9681249ac",
        "cursor": {
          "ref": "0696c272-8605-46b4-af39-d8975057603a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "284368b8-f1c1-474a-89e6-5bcac42d9bba"
        },
        "item": {
          "id": "65430d34-4fb6-466e-b922-06f9681249ac",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "42f84c38-2495-4643-9559-668a04e41514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d583e6a9-65ad-4287-bf45-1f1311b0f047",
        "cursor": {
          "ref": "17e5ed30-86c4-42e6-847a-2d344583b382",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02d60553-51c0-48a5-b0d4-c220d3e1ddb0"
        },
        "item": {
          "id": "d583e6a9-65ad-4287-bf45-1f1311b0f047",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "388c6d89-1a47-447b-87ce-a38d4509f59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a68c80-250c-45ea-9a80-be082061cf6a",
        "cursor": {
          "ref": "1e911ab9-d144-434b-b302-ccb5bcd5df57",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7dacdbcc-928a-4a47-8fed-c673beacee7f"
        },
        "item": {
          "id": "23a68c80-250c-45ea-9a80-be082061cf6a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "be019c20-d7b7-4b3e-a522-801bdc313019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba0ab7d-09d4-42f3-a856-bdaafe645afc",
        "cursor": {
          "ref": "89a7c866-8996-47d4-b415-b56a15082b6a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2391684f-1b96-4c4b-a894-a3abec577f81"
        },
        "item": {
          "id": "9ba0ab7d-09d4-42f3-a856-bdaafe645afc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "783741bd-fe2c-4555-a068-55d18d71c1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd3128e-c614-4ade-a909-2e02fd4383f0",
        "cursor": {
          "ref": "cf2099b1-544a-4b67-b07e-4d0c7e80d56a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "532ea25a-13dd-4ae3-b6aa-c45449f191ef"
        },
        "item": {
          "id": "bbd3128e-c614-4ade-a909-2e02fd4383f0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b83158bf-d853-44b5-a748-93345dc7fda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01a8264-0edb-46a4-8bf3-448c71ed9627",
        "cursor": {
          "ref": "2b9ed4c5-717d-438f-ad63-d05463aca533",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7ad8defb-66a5-43ea-b4ff-98e4af8bfea2"
        },
        "item": {
          "id": "f01a8264-0edb-46a4-8bf3-448c71ed9627",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5fe3bb8f-7516-48e5-a470-142d3d9a45f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe37d50-f99a-4423-96fc-6cae06f75ab4",
        "cursor": {
          "ref": "8ae4ce9f-6c77-4efe-9eb3-c6f62c6dec0c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "29e82b83-2cbd-46b1-9a2d-0cd86b0d4c38"
        },
        "item": {
          "id": "dfe37d50-f99a-4423-96fc-6cae06f75ab4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "70aa536b-4721-40e7-915b-aac6f584bb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac0c89f-c1c1-40df-9c84-5314c2b94f28",
        "cursor": {
          "ref": "794d3517-5922-4c57-87f3-84866c24cf29",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "21e53f86-57b6-484a-be97-414ea5243c5b"
        },
        "item": {
          "id": "5ac0c89f-c1c1-40df-9c84-5314c2b94f28",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "99a815e6-6b71-480b-b022-5dd83149110d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5efb5b7-4564-4f22-afac-29541384edd1",
        "cursor": {
          "ref": "3b0cd075-e06a-4f96-b2b9-326b4565c135",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7d90a1fb-8bf1-4219-9062-26633945e91b"
        },
        "item": {
          "id": "a5efb5b7-4564-4f22-afac-29541384edd1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "84206273-b682-4273-8a7a-c70b41750ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d524c03f-27ce-48b5-b8d0-934b7711ace4",
        "cursor": {
          "ref": "974b1b6f-043d-4c06-b622-747f09b8563a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "94daedfe-086a-401f-99c1-53f5d3768fc0"
        },
        "item": {
          "id": "d524c03f-27ce-48b5-b8d0-934b7711ace4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a0c59a16-7c00-4f46-8f73-e1f48c96d575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3c041d-a57d-4cf6-8d67-f33a749ecc48",
        "cursor": {
          "ref": "007a7304-68de-46c1-9281-47879fe491a5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "459c292d-94c5-45d2-a3d1-33f3d0543688"
        },
        "item": {
          "id": "db3c041d-a57d-4cf6-8d67-f33a749ecc48",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1ec72354-0bc2-4214-afd9-863e12d6f64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962cf4b0-5a6d-4cf1-b42b-cfcb82b0711d",
        "cursor": {
          "ref": "19082802-c894-41d1-85fd-f48de66ab9b6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ff7104ea-b50f-43eb-8ee2-6687d382135d"
        },
        "item": {
          "id": "962cf4b0-5a6d-4cf1-b42b-cfcb82b0711d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "93a2f00f-6b63-45ac-b214-fbc488d2142c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e360872-8555-48ae-8138-9021aba30f6b",
        "cursor": {
          "ref": "2b9288d0-a595-4156-83c0-d1953fde9648",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e0983cb4-af44-4dcb-8df6-d4f7ee09bd61"
        },
        "item": {
          "id": "7e360872-8555-48ae-8138-9021aba30f6b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e9fb470e-122a-4f4b-94fb-131943aef2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598198c2-c936-4f31-a36a-3f1e62002a8a",
        "cursor": {
          "ref": "82734bac-62c9-44a3-a7c4-4dc0bcff13bf",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f495a97c-b8a4-450b-9071-2e990a56086a"
        },
        "item": {
          "id": "598198c2-c936-4f31-a36a-3f1e62002a8a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "57e1ec71-a675-4a7f-b227-d43958d258b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b78748-f24a-4c39-b631-31aea4d7880f",
        "cursor": {
          "ref": "b7a6f9df-ffab-4983-ac85-7ba601036186",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "abb3cc57-33a0-4416-948a-7f315a4b816c"
        },
        "item": {
          "id": "89b78748-f24a-4c39-b631-31aea4d7880f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "193b3cfd-ba44-4c15-962a-b38728d6b06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a388caee-9fbc-4189-aad3-8c86bbe302ff",
        "cursor": {
          "ref": "60a6d53a-d586-4939-817e-781b8fae783c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "436408cb-f993-494d-bc90-47bd21ea7510"
        },
        "item": {
          "id": "a388caee-9fbc-4189-aad3-8c86bbe302ff",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "57087b53-64c8-40c1-a40b-af499906853a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8ae83c-14c4-453e-a23c-76be757e8108",
        "cursor": {
          "ref": "6b6b4b1b-15eb-4196-b6a9-2b4625b7e443",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1744fa79-341d-4176-a664-82b39d8e2e96"
        },
        "item": {
          "id": "ad8ae83c-14c4-453e-a23c-76be757e8108",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d9d88669-63d8-4cfc-946b-f5e5eb645cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81772359-58c7-4a9c-83ca-82eddc2db814",
        "cursor": {
          "ref": "31b57316-043e-425b-97fe-ccc089f1c657",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ec1fe936-719a-45cd-ac75-f363f56aba8a"
        },
        "item": {
          "id": "81772359-58c7-4a9c-83ca-82eddc2db814",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "49ed6a96-b7ac-428e-9f21-d94b4908dc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8647e675-9c5b-4a6d-aca4-5c12a1e48378",
        "cursor": {
          "ref": "c82b5c4f-01c6-4597-9046-a1874405da32",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d1444b84-ca05-4d88-b606-9c512a9873e2"
        },
        "item": {
          "id": "8647e675-9c5b-4a6d-aca4-5c12a1e48378",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7d350463-db87-4100-bf09-3eed774555e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cf8670-b4b4-461e-92e5-f13ae9a1d4a7",
        "cursor": {
          "ref": "e721a316-6a7f-47d2-a000-0d4c720e0162",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cb3957c9-4fb6-4105-ba09-5733f4e04f8e"
        },
        "item": {
          "id": "84cf8670-b4b4-461e-92e5-f13ae9a1d4a7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bbe779fc-7463-429c-866f-27efbae3be37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d126ddfa-12b9-4d2d-bf68-b23b326f487a",
        "cursor": {
          "ref": "651535e2-e7dd-414b-b5c1-96d2a50a54cb",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c2390a7e-60dc-431b-b8c9-6a02790e189d"
        },
        "item": {
          "id": "d126ddfa-12b9-4d2d-bf68-b23b326f487a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ffd0757c-8502-4388-b2cd-ae96750f5980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6a29bc-2657-41d1-a608-5facf6be50b9",
        "cursor": {
          "ref": "67518b42-1d4e-4618-83c9-f1567116fba6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "79324412-667b-4f1e-9bae-b9604c774244"
        },
        "item": {
          "id": "1e6a29bc-2657-41d1-a608-5facf6be50b9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "10f0455b-484b-4eeb-8888-1ed471f4532a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436f9e54-756e-4bcf-acd1-960733543c35",
        "cursor": {
          "ref": "f64aee0a-6d3d-4672-882c-76129b331dd1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fa785ab3-62ac-40d8-aa1f-b53d6edc5513"
        },
        "item": {
          "id": "436f9e54-756e-4bcf-acd1-960733543c35",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1e1801f8-b3ae-462d-9b58-17e5bd0e9f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdb682a-d45d-4cb4-a6c3-1b467fda0b27",
        "cursor": {
          "ref": "3ecd871f-abd1-4d28-a646-bb5d53ccc335",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1ca16777-2ca0-44f2-87f7-6b60342c3d16"
        },
        "item": {
          "id": "ffdb682a-d45d-4cb4-a6c3-1b467fda0b27",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9b6c8f27-c74c-4bb5-93af-37a1d9813de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a15be4-cc5a-4661-844c-0d5db4685eaf",
        "cursor": {
          "ref": "fe4fb4da-e5a4-44ab-991e-954fc1af275b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "11bb5a92-529b-4f2e-89a2-e7161216dcf5"
        },
        "item": {
          "id": "99a15be4-cc5a-4661-844c-0d5db4685eaf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "903f85eb-507a-449c-a752-84c3631e2af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc41b9f4-3b48-4569-970f-e94b74dda2b4",
        "cursor": {
          "ref": "846156f6-41ed-442d-b545-26aee57ce572",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2b1a4b8e-3697-450e-8346-a1a421b79dad"
        },
        "item": {
          "id": "dc41b9f4-3b48-4569-970f-e94b74dda2b4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aeefe82f-8295-42dd-8696-f618ed5cf7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b1409c-00e3-43b9-9012-4a2148b5a2c2",
        "cursor": {
          "ref": "1a0b0f5a-329b-4dab-8c26-5d6d8a1f8f09",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6b23cf7f-7648-4f7c-8f24-a2cf0609c604"
        },
        "item": {
          "id": "84b1409c-00e3-43b9-9012-4a2148b5a2c2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "28a8ea0c-35a3-473d-97af-7a96705398f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248d490a-4838-4f20-a430-91e60b127322",
        "cursor": {
          "ref": "d84887f2-d5ac-4201-b0c3-2a907cb76bfa",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dbcd1fbd-1e34-4ba8-bd9b-5f6a4df7cca2"
        },
        "item": {
          "id": "248d490a-4838-4f20-a430-91e60b127322",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4bb34b34-b1f6-4fe3-8eb8-7b7d4e6403d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e5de34-fd9d-4541-9f35-bca50ec5b0e8",
        "cursor": {
          "ref": "0c3a60d9-48a7-4b1c-bd1b-cc54b4a2f586",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8d7616d7-cc19-41c4-ac2c-220518a5e6e0"
        },
        "item": {
          "id": "b7e5de34-fd9d-4541-9f35-bca50ec5b0e8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c4b3f7f3-9dba-4807-9927-7d473acc180f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bc7053-a09c-416d-9a8f-13cdeea280cb",
        "cursor": {
          "ref": "582f3be3-9c41-447c-961d-924ee5f86480",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "85c9d978-5174-4177-aad0-af1cef97a9f7"
        },
        "item": {
          "id": "91bc7053-a09c-416d-9a8f-13cdeea280cb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "796605f6-986f-44ac-bfaa-cd607bd266a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aaed58-922f-4ed7-b04a-36d5327de53b",
        "cursor": {
          "ref": "76245e13-f81a-48ea-a70f-2e0cf20e47f6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8370dcc5-56a7-4680-96d7-cd2327e49192"
        },
        "item": {
          "id": "f9aaed58-922f-4ed7-b04a-36d5327de53b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a2b46e95-926c-48b3-8440-b26754180216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8118c270-d6a4-4745-96e7-4d72bd8ae0d2",
        "cursor": {
          "ref": "52ea8158-f376-4dc0-b6c1-c7b4e66399cd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ca3523cc-5084-46c3-851c-08ab3befca1d"
        },
        "item": {
          "id": "8118c270-d6a4-4745-96e7-4d72bd8ae0d2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "145edef0-1fe9-496c-bffb-0583d21ab662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe1adbe-3398-4049-b1b0-11aa439ad4fb",
        "cursor": {
          "ref": "abb956df-a2d6-4132-af7d-4e97625ff87a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "67382deb-a88c-41ef-a59e-dec9046eeb4d"
        },
        "item": {
          "id": "bfe1adbe-3398-4049-b1b0-11aa439ad4fb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a7f68a74-9a55-414b-9aec-3fe639377bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691e59a1-25eb-4f4c-b1fe-f4b70c320e64",
        "cursor": {
          "ref": "36e4e882-695e-42c7-9df9-d7e4a0f1bf11",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "329363f5-d46e-4b3f-8551-74926eb7623d"
        },
        "item": {
          "id": "691e59a1-25eb-4f4c-b1fe-f4b70c320e64",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c84cb7a7-1127-4b4e-acbb-015a0e5c9ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2907679e-0904-4055-a273-0f6af4c7506b",
        "cursor": {
          "ref": "c2dc80c6-b57f-4ea2-9508-7216557cf91d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "97689c57-36cd-48c2-81cf-873f8d3400a9"
        },
        "item": {
          "id": "2907679e-0904-4055-a273-0f6af4c7506b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "521f168d-60f9-4ee1-8166-73d9bdde292c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b80218b-f2db-452f-bc16-5464efecde5c",
        "cursor": {
          "ref": "06bc4d23-2c0e-44e2-935e-15f2af131d9e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "28596f09-6d93-4bf5-b860-4230982695ec"
        },
        "item": {
          "id": "9b80218b-f2db-452f-bc16-5464efecde5c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c378ed06-fa0f-4545-95da-6ccf641a0474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355d09e6-a1c5-4efc-ba78-2ff069880e53",
        "cursor": {
          "ref": "49df5af1-d18e-4082-bca7-525e9c757292",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8d019ca2-7806-482c-9dbc-1380d4663fdb"
        },
        "item": {
          "id": "355d09e6-a1c5-4efc-ba78-2ff069880e53",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "10bccc17-838a-4661-afc6-c56a512af0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf5f22d-be97-4856-8d21-d4f399bb5559",
        "cursor": {
          "ref": "f7de15fd-3f6a-4be1-aa72-71c088e76792",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c12a4fcb-1ca5-49e6-8152-68966dd1db1f"
        },
        "item": {
          "id": "ecf5f22d-be97-4856-8d21-d4f399bb5559",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ebf2c60b-2c5b-41c7-b75b-696a74db6fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59e6bad-033d-449a-9c04-36f4969b31fa",
        "cursor": {
          "ref": "f5326dae-7c6b-448c-924a-ca358ca2ac71",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ecdd9123-457d-495a-8a87-3ce4ac07fb72"
        },
        "item": {
          "id": "f59e6bad-033d-449a-9c04-36f4969b31fa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7ca82960-9af0-4230-97f4-076f023ee367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f0c791-b946-4511-8ee7-7f4ea8eef594",
        "cursor": {
          "ref": "d5be4926-f695-46d1-a304-cc3f9b13f343",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5721fc48-21cd-415d-802a-bddd4f07bbac"
        },
        "item": {
          "id": "42f0c791-b946-4511-8ee7-7f4ea8eef594",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "23774498-9193-4915-9c09-dd5dc809a18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fd3c19-1872-4274-8300-a96098624f98",
        "cursor": {
          "ref": "3e71b439-8a2b-4532-942e-3f31d2bad1db",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "11d51bbf-7384-44c8-8f0d-c4fbe79024a8"
        },
        "item": {
          "id": "a0fd3c19-1872-4274-8300-a96098624f98",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "24122a3a-0352-4af1-bf5b-9a0fa3635680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73c8b62-ed06-4c8f-adf0-c89dddf217c3",
        "cursor": {
          "ref": "d0675823-3c0e-4314-aecd-c519a14165f0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7d7d2525-85a2-45b5-940b-c0eeb7a48ceb"
        },
        "item": {
          "id": "a73c8b62-ed06-4c8f-adf0-c89dddf217c3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fc41a43e-54b7-4d72-972b-394162836840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c80d1f2-e228-434d-8aa3-81f331001d7d",
        "cursor": {
          "ref": "d68f41e7-7680-46d7-b4d7-8c887b2d0e33",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4984edba-2e42-45d7-95ff-2586fd9e14c6"
        },
        "item": {
          "id": "6c80d1f2-e228-434d-8aa3-81f331001d7d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2ba5b947-4ca8-40da-bddb-e46d6bfb727d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9740414-109c-4722-aeb6-f11ba1325d29",
        "cursor": {
          "ref": "369b30de-7a7e-4784-ab23-972db160df85",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fabf4aaf-fac2-40e1-b042-a2b7e6506bd3"
        },
        "item": {
          "id": "c9740414-109c-4722-aeb6-f11ba1325d29",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f6955c6a-a94d-40bd-96db-ceb811bac689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61512ba8-b738-4a9f-834b-05710e1e5f58",
        "cursor": {
          "ref": "5f0e51ad-8ccf-42b2-a779-5a8dbba5a4b3",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ec9d7105-4f46-405a-86e9-d450148316c8"
        },
        "item": {
          "id": "61512ba8-b738-4a9f-834b-05710e1e5f58",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9b0e5f73-76f2-4aab-95f5-6ddc0b89007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490e6a27-276c-4d13-941d-6aa67aa983bb",
        "cursor": {
          "ref": "5cc2bedb-033a-4774-958d-cc3f85263c08",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ca489c83-2e5d-4efe-84de-2cb603fdaeef"
        },
        "item": {
          "id": "490e6a27-276c-4d13-941d-6aa67aa983bb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dfa13295-2d97-4311-9c61-7b034c6072fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9af1109-e778-4abf-bf4a-cd81b9868fea",
        "cursor": {
          "ref": "d1d91c3e-bb9c-411c-bc7f-eca6e2cbcfee",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "65aa6dab-6a26-4503-895b-e50f9df2d6a8"
        },
        "item": {
          "id": "c9af1109-e778-4abf-bf4a-cd81b9868fea",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "98bfac28-ce75-4a33-baa3-1a00d5a16103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08747e43-7937-4618-8200-7881cb74aa48",
        "cursor": {
          "ref": "dcca05ed-bab7-4bc8-8dc1-1874fd4ce7cf",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bc59bf0b-ad64-494e-9cf7-e3d19e26eff8"
        },
        "item": {
          "id": "08747e43-7937-4618-8200-7881cb74aa48",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3d8bca65-1d29-4b4f-a9ee-64644c463839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0b24cf-4ee1-4894-99ef-9cd54a568548",
        "cursor": {
          "ref": "61886198-27f8-410c-a539-d988501d0e28",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c8e50f8f-c310-4e59-bc01-2d849eac1e6f"
        },
        "item": {
          "id": "9b0b24cf-4ee1-4894-99ef-9cd54a568548",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3922263c-0967-4e96-9c03-01ba5547d103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3de0e4-93ff-42e1-9e46-97b6f88301c2",
        "cursor": {
          "ref": "5973b542-3dc2-44c7-82a0-0f27540124e8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "773cc329-c736-4231-b5a9-8f071827a59f"
        },
        "item": {
          "id": "ba3de0e4-93ff-42e1-9e46-97b6f88301c2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "812cbf6b-2632-403c-9d35-561e1ab85165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b609f4-e26a-4891-8548-76b11f5d3055",
        "cursor": {
          "ref": "cc8e3abb-de99-49f3-8e30-f8cf17613e56",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "278537f7-2f6e-454d-864c-8f18ab665f75"
        },
        "item": {
          "id": "15b609f4-e26a-4891-8548-76b11f5d3055",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0cef809b-f5c4-42f0-b9ba-87eccfff679b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78efff02-04ba-4a36-8d12-2b68e84a681d",
        "cursor": {
          "ref": "ea3f1274-e08d-486e-9e67-5aeef903fc4e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0ae7d9f4-216e-4722-b232-5eb3d5711e9d"
        },
        "item": {
          "id": "78efff02-04ba-4a36-8d12-2b68e84a681d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "909c4de6-fb02-4158-9b63-e42c85e5d7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2b9358-77f6-4969-97ef-718bfc26f961",
        "cursor": {
          "ref": "e1022ec0-350a-4ba6-8044-d203d88fe6f8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2a1ad172-c06e-41a9-9dec-205582ef9056"
        },
        "item": {
          "id": "ed2b9358-77f6-4969-97ef-718bfc26f961",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "01a4b98f-39eb-4d54-a97a-73f3c92bd274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf031c3a-17b5-4f91-83d6-f34ef1ac51c1",
        "cursor": {
          "ref": "b0ff8de5-3913-4a78-8a6a-685c93efa247",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "14bac488-6a04-41a3-949d-540981595222"
        },
        "item": {
          "id": "bf031c3a-17b5-4f91-83d6-f34ef1ac51c1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "be52763c-8b29-449e-b241-4e1ccb61a755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f418c058-1fa6-4515-a436-44a95d993d83",
        "cursor": {
          "ref": "d67c7f55-f537-40e0-ada2-b8f4b28e6560",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "514c9e82-1b3e-454b-b7ee-f9dd5392e504"
        },
        "item": {
          "id": "f418c058-1fa6-4515-a436-44a95d993d83",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a7154474-ac7c-4f75-87a8-a4bf8eddf3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5115df7-a06c-4b95-aee1-f181b7f765e9",
        "cursor": {
          "ref": "fa4d746c-35cf-435d-be8b-69700b43924c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "53c62f76-5374-4922-909c-11059d5d7deb"
        },
        "item": {
          "id": "e5115df7-a06c-4b95-aee1-f181b7f765e9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e1f7370a-8f1b-4716-82b2-225dc13cd169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8c8317-8a34-4d53-8e6d-7deed6ae8f8a",
        "cursor": {
          "ref": "396b2a7b-d816-4884-a613-f19c944b46b4",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a66eb179-f402-404d-a66f-b4231595f898"
        },
        "item": {
          "id": "7e8c8317-8a34-4d53-8e6d-7deed6ae8f8a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "11d0309a-3390-4ecc-ae10-21dbbd9ba392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc9a986-1ba4-47f6-944b-34d4e0412650",
        "cursor": {
          "ref": "19aebc4b-0078-4be1-8e1b-2a9c8d1bf209",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "59039b45-66bd-4893-be00-4975d8bfc21d"
        },
        "item": {
          "id": "1dc9a986-1ba4-47f6-944b-34d4e0412650",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9388aa61-57bf-4b63-a04e-409312207a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967d90b4-006d-475b-8a1c-29484564c22e",
        "cursor": {
          "ref": "f56f8b05-5a09-4b98-8179-1918a83ae337",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9ace531e-b652-4a49-b701-56ee98213f45"
        },
        "item": {
          "id": "967d90b4-006d-475b-8a1c-29484564c22e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "559e94b5-0d7c-45d9-97c1-647648acde71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14afde15-6604-4955-9bfa-1330fb600195",
        "cursor": {
          "ref": "82109bd3-7ca6-4fb2-ba4c-8f9dfc9094a4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9c587768-95f9-4953-9fcd-f83e4bff72aa"
        },
        "item": {
          "id": "14afde15-6604-4955-9bfa-1330fb600195",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b9632c97-e8fd-4434-9339-8648469db105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf17b7b6-34ac-4b39-b610-cffcbf1d4068",
        "cursor": {
          "ref": "7ce2d2b2-9863-4453-abdd-b08ea259b95b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d8f2974d-137f-4d53-8a59-192ed23c1955"
        },
        "item": {
          "id": "cf17b7b6-34ac-4b39-b610-cffcbf1d4068",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "656035c5-9670-4e01-81d7-1f2df38fd698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f3a856-912c-403d-872b-635ed33602ca",
        "cursor": {
          "ref": "ec88a71c-1e4e-4f90-b543-7143aef5612c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "caf9273d-7f24-41cc-acf9-1d2d10f01815"
        },
        "item": {
          "id": "84f3a856-912c-403d-872b-635ed33602ca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "de28894a-cbe5-4e98-9972-3edd030662d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea70b1f-e25b-4438-9989-e4b7c5156ae4",
        "cursor": {
          "ref": "e2607b3a-d7d9-4f91-b499-459a45fbc98e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0997b424-8698-4d83-80db-d35d39f165db"
        },
        "item": {
          "id": "4ea70b1f-e25b-4438-9989-e4b7c5156ae4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "99b8d02f-1753-4684-a261-3109c8edb4b0",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "725f9d2b-9ebf-429b-b321-dcc9701356c6",
        "cursor": {
          "ref": "3019b80c-a771-42ac-8063-e49eb157cfbf",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6a3ee55d-a507-4fa5-a4c4-4db4d6bc0be0"
        },
        "item": {
          "id": "725f9d2b-9ebf-429b-b321-dcc9701356c6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1708830f-eed9-47f4-8069-4d7be64eeab9",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c164739a-e44b-4897-bcfd-73f2dc6ee5b6",
        "cursor": {
          "ref": "b11ee59e-95f2-4e4d-9433-6b2e204431cf",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "facc04e9-709d-45b1-8564-cfabd3955466"
        },
        "item": {
          "id": "c164739a-e44b-4897-bcfd-73f2dc6ee5b6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dc08e9e3-eff3-4474-946d-133fec0d7724",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f349c4e3-b591-43e6-bdb3-f60ff0d06a19",
        "cursor": {
          "ref": "32ffa93d-904f-435f-80ee-147c55951620",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a21004d7-4152-494c-9878-a760e019973a"
        },
        "item": {
          "id": "f349c4e3-b591-43e6-bdb3-f60ff0d06a19",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7042560a-bc78-43eb-bd56-789e82fdc511",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f349c4e3-b591-43e6-bdb3-f60ff0d06a19",
        "cursor": {
          "ref": "32ffa93d-904f-435f-80ee-147c55951620",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a21004d7-4152-494c-9878-a760e019973a"
        },
        "item": {
          "id": "f349c4e3-b591-43e6-bdb3-f60ff0d06a19",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7042560a-bc78-43eb-bd56-789e82fdc511",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c823f1f-6656-4a28-8335-089007131076",
        "cursor": {
          "ref": "d0fe0e69-3655-4f7f-8f40-50837bfbdf06",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "281bca9d-0e75-4249-a616-dd1505acdf11"
        },
        "item": {
          "id": "8c823f1f-6656-4a28-8335-089007131076",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bad3a6fb-20a1-45ea-bb50-cf7d49de79ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0543d174-28a1-4e7c-92ae-cd1b73e20c0a",
        "cursor": {
          "ref": "051bd64f-520f-4240-aaa4-a7de7870db48",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f4c06d96-2e49-42ba-91ce-02a411bbc504"
        },
        "item": {
          "id": "0543d174-28a1-4e7c-92ae-cd1b73e20c0a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f1e2b914-b199-4e0b-baf1-5079b87e38e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}